// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module getFRtoBR (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        cubiecube_0_ep_address0,
        cubiecube_0_ep_ce0,
        cubiecube_0_ep_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 48'd1;
parameter    ap_ST_fsm_state2 = 48'd2;
parameter    ap_ST_fsm_state3 = 48'd4;
parameter    ap_ST_fsm_state4 = 48'd8;
parameter    ap_ST_fsm_state5 = 48'd16;
parameter    ap_ST_fsm_state6 = 48'd32;
parameter    ap_ST_fsm_state7 = 48'd64;
parameter    ap_ST_fsm_state8 = 48'd128;
parameter    ap_ST_fsm_state9 = 48'd256;
parameter    ap_ST_fsm_state10 = 48'd512;
parameter    ap_ST_fsm_state11 = 48'd1024;
parameter    ap_ST_fsm_state12 = 48'd2048;
parameter    ap_ST_fsm_state13 = 48'd4096;
parameter    ap_ST_fsm_state14 = 48'd8192;
parameter    ap_ST_fsm_state15 = 48'd16384;
parameter    ap_ST_fsm_state16 = 48'd32768;
parameter    ap_ST_fsm_state17 = 48'd65536;
parameter    ap_ST_fsm_state18 = 48'd131072;
parameter    ap_ST_fsm_state19 = 48'd262144;
parameter    ap_ST_fsm_state20 = 48'd524288;
parameter    ap_ST_fsm_state21 = 48'd1048576;
parameter    ap_ST_fsm_state22 = 48'd2097152;
parameter    ap_ST_fsm_state23 = 48'd4194304;
parameter    ap_ST_fsm_state24 = 48'd8388608;
parameter    ap_ST_fsm_state25 = 48'd16777216;
parameter    ap_ST_fsm_state26 = 48'd33554432;
parameter    ap_ST_fsm_state27 = 48'd67108864;
parameter    ap_ST_fsm_state28 = 48'd134217728;
parameter    ap_ST_fsm_state29 = 48'd268435456;
parameter    ap_ST_fsm_state30 = 48'd536870912;
parameter    ap_ST_fsm_state31 = 48'd1073741824;
parameter    ap_ST_fsm_state32 = 48'd2147483648;
parameter    ap_ST_fsm_state33 = 48'd4294967296;
parameter    ap_ST_fsm_state34 = 48'd8589934592;
parameter    ap_ST_fsm_state35 = 48'd17179869184;
parameter    ap_ST_fsm_state36 = 48'd34359738368;
parameter    ap_ST_fsm_state37 = 48'd68719476736;
parameter    ap_ST_fsm_state38 = 48'd137438953472;
parameter    ap_ST_fsm_state39 = 48'd274877906944;
parameter    ap_ST_fsm_state40 = 48'd549755813888;
parameter    ap_ST_fsm_state41 = 48'd1099511627776;
parameter    ap_ST_fsm_state42 = 48'd2199023255552;
parameter    ap_ST_fsm_state43 = 48'd4398046511104;
parameter    ap_ST_fsm_state44 = 48'd8796093022208;
parameter    ap_ST_fsm_state45 = 48'd17592186044416;
parameter    ap_ST_fsm_state46 = 48'd35184372088832;
parameter    ap_ST_fsm_state47 = 48'd70368744177664;
parameter    ap_ST_fsm_state48 = 48'd140737488355328;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] cubiecube_0_ep_address0;
output   cubiecube_0_ep_ce0;
input  [3:0] cubiecube_0_ep_q0;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg cubiecube_0_ep_ce0;
reg[15:0] ap_return;

(* fsm_encoding = "none" *) reg   [47:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [1:0] p_sum_fu_347_p2;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_fu_462_p3;
reg   [3:0] edge4_0_2_reg_1136;
wire    ap_CS_fsm_state4;
wire   [0:0] tmp_173_fu_627_p2;
reg   [0:0] tmp_173_reg_1144;
wire   [31:0] n_assign_cast_fu_639_p1;
wire   [31:0] x_5_fu_643_p2;
reg   [31:0] x_5_reg_1153;
wire   [31:0] tmp_380_i_fu_689_p2;
reg   [31:0] tmp_380_i_reg_1161;
wire   [0:0] tmp_i_fu_649_p2;
wire   [31:0] s_fu_700_p2;
reg   [31:0] s_reg_1169;
wire    ap_CS_fsm_state5;
wire   [0:0] exitcond_i_fu_695_p2;
wire   [31:0] i_30_fu_706_p2;
reg   [31:0] i_30_reg_1174;
wire   [31:0] j_14_fu_717_p2;
reg   [31:0] j_14_reg_1179;
wire    ap_CS_fsm_state6;
wire   [31:0] grp_fu_712_p2;
wire    ap_CS_fsm_state41;
wire   [4:0] j_15_fu_756_p2;
wire    ap_CS_fsm_state42;
wire   [3:0] tmp_201_fu_768_p3;
reg   [3:0] tmp_201_reg_1200;
wire    ap_CS_fsm_state43;
wire   [0:0] tmp_198_fu_762_p2;
wire   [0:0] sel_tmp_i_fu_776_p2;
reg   [0:0] sel_tmp_i_reg_1205;
wire   [0:0] sel_tmp2_i_fu_782_p2;
reg   [0:0] sel_tmp2_i_reg_1211;
wire    ap_CS_fsm_state44;
wire   [31:0] k_4_fu_842_p2;
reg   [31:0] k_4_reg_1226;
wire   [2:0] tmp_203_fu_852_p2;
reg   [2:0] tmp_203_reg_1231;
wire   [0:0] tmp_202_fu_837_p2;
reg   [3:0] edge4_2_5_load_1_reg_1236;
wire    ap_CS_fsm_state45;
reg   [3:0] edge4_3_5_load_1_reg_1244;
wire   [1:0] i_31_fu_864_p2;
reg   [1:0] i_31_reg_1255;
wire   [0:0] write_flag_1_i_fu_870_p6;
reg   [0:0] write_flag_1_i_reg_1260;
wire   [0:0] exitcond_fu_858_p2;
wire   [3:0] arr_1_i_fu_950_p6;
wire    ap_CS_fsm_state46;
wire   [3:0] arr12_1_i_fu_964_p6;
wire   [31:0] tmp_204_fu_1013_p2;
reg   [31:0] tmp_204_reg_1275;
wire    ap_CS_fsm_state47;
wire   [1:0] j_12_fu_1019_p2;
reg   [1:0] j_12_reg_1280;
wire   [31:0] b_4_fu_1025_p2;
wire    ap_CS_fsm_state48;
reg   [1:0] p_rec_reg_157;
wire   [0:0] tmp_s_fu_395_p2;
reg  signed [4:0] j_reg_168;
reg   [31:0] j_i_reg_180;
reg  signed [31:0] i_i_reg_192;
reg  signed [31:0] s_i_reg_201;
reg   [31:0] p_0_i_reg_213;
reg   [1:0] indvars_iv_reg_225;
reg  signed [31:0] b_reg_237;
reg   [31:0] k_reg_249;
reg   [0:0] write_flag_i_reg_261;
reg   [3:0] arr4_i_reg_272;
reg   [3:0] arr_i_reg_282;
wire   [1:0] ap_phi_mux_i_i1_phi_fu_298_p4;
reg   [1:0] i_i1_reg_294;
reg   [3:0] arr_load_phi_i_reg_306;
wire   [63:0] tmp_197_fu_470_p1;
reg   [3:0] edge4_1_fu_92;
wire   [3:0] edge4_1_1_fu_353_p6;
reg   [3:0] edge4_2_fu_96;
wire   [3:0] edge4_2_1_fu_367_p6;
reg   [3:0] edge4_3_fu_100;
wire   [3:0] edge4_3_1_fu_381_p6;
reg   [3:0] edge4_3_1_40_fu_104;
wire   [1:0] tmp_315_t_fu_734_p2;
reg   [3:0] edge4_3_2_fu_108;
reg   [3:0] edge4_3_3_fu_112;
reg   [3:0] edge4_3_4_fu_116;
reg   [31:0] a_1_fu_120;
wire   [31:0] a_4_fu_723_p2;
reg   [31:0] x_fu_124;
reg   [3:0] temp_fu_128;
wire   [3:0] edge4_0_fu_922_p3;
reg   [3:0] edge4_1_5_fu_132;
wire   [3:0] edge4_1_43_fu_915_p3;
reg   [3:0] edge4_2_5_fu_136;
wire   [3:0] edge4_2_41_fu_894_p3;
wire   [3:0] arr2_1_i_fu_989_p6;
reg   [3:0] edge4_3_5_fu_140;
wire   [3:0] edge4_3_42_fu_908_p3;
wire   [3:0] arr3_1_i_fu_978_p6;
wire  signed [31:0] j_cast_fu_458_p1;
wire   [0:0] tmp_152_fu_501_p2;
wire   [0:0] tmp_151_fu_495_p2;
wire   [0:0] tmp_154_fu_513_p2;
wire   [0:0] tmp_153_fu_507_p2;
wire   [0:0] tmp_156_fu_525_p2;
wire   [0:0] tmp_155_fu_519_p2;
wire   [0:0] tmp_158_fu_537_p2;
wire   [0:0] tmp_157_fu_531_p2;
wire   [0:0] tmp_160_fu_549_p2;
wire   [0:0] tmp_159_fu_543_p2;
wire   [0:0] tmp_162_fu_561_p2;
wire   [0:0] tmp_161_fu_555_p2;
wire   [0:0] tmp_164_fu_573_p2;
wire   [0:0] tmp_163_fu_567_p2;
wire   [0:0] tmp_166_fu_585_p2;
wire   [0:0] tmp_165_fu_579_p2;
wire   [0:0] tmp_168_fu_597_p2;
wire   [0:0] tmp_167_fu_591_p2;
wire   [0:0] tmp_170_fu_609_p2;
wire   [0:0] tmp_169_fu_603_p2;
wire   [0:0] tmp_172_fu_621_p2;
wire   [0:0] tmp_171_fu_615_p2;
wire   [4:0] i_fu_633_p2;
wire   [2:0] p_lshr_f_i_cast_fu_655_p4;
wire   [31:0] tmp_i_cast_fu_665_p1;
wire   [0:0] tmp_379_i_fu_669_p2;
wire   [31:0] k_assign_4_fu_675_p2;
wire   [31:0] p_k_i_fu_681_p3;
wire   [1:0] tmp_178_fu_730_p1;
wire   [31:0] tmp_174_fu_788_p2;
wire   [31:0] tmp_175_fu_794_p2;
wire   [31:0] tmp_199_fu_800_p2;
wire   [15:0] tmp_177_fu_810_p1;
wire   [15:0] tmp_176_fu_806_p1;
wire   [3:0] edge4_load_phi_fu_823_p6;
wire   [2:0] j_1_cast1_fu_848_p1;
wire   [3:0] newSel3_fu_887_p3;
wire   [3:0] newSel9_fu_901_p3;
wire   [2:0] tmp_204_fu_1013_p0;
reg    grp_fu_712_ap_start;
wire    grp_fu_712_ap_done;
wire   [15:0] tmp_200_fu_814_p2;
reg   [15:0] ap_return_preg;
reg   [47:0] ap_NS_fsm;
wire   [31:0] tmp_204_fu_1013_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 48'd1;
#0 ap_return_preg = 16'd0;
end

solution_mux_42_4jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
solution_mux_42_4jbC_U24(
    .din0(edge4_1_fu_92),
    .din1(4'd0),
    .din2(edge4_1_fu_92),
    .din3(edge4_1_fu_92),
    .din4(p_sum_fu_347_p2),
    .dout(edge4_1_1_fu_353_p6)
);

solution_mux_42_4jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
solution_mux_42_4jbC_U25(
    .din0(edge4_2_fu_96),
    .din1(edge4_2_fu_96),
    .din2(4'd0),
    .din3(edge4_2_fu_96),
    .din4(p_sum_fu_347_p2),
    .dout(edge4_2_1_fu_367_p6)
);

solution_mux_42_4jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
solution_mux_42_4jbC_U26(
    .din0(4'd0),
    .din1(edge4_3_fu_100),
    .din2(edge4_3_fu_100),
    .din3(4'd0),
    .din4(p_sum_fu_347_p2),
    .dout(edge4_3_1_fu_381_p6)
);

solution_sdiv_32nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
solution_sdiv_32nkbM_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_712_ap_start),
    .done(grp_fu_712_ap_done),
    .din0(s_reg_1169),
    .din1(j_i_reg_180),
    .ce(1'b1),
    .dout(grp_fu_712_p2)
);

solution_mux_42_4jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
solution_mux_42_4jbC_U28(
    .din0(edge4_3_5_fu_140),
    .din1(edge4_1_5_fu_132),
    .din2(edge4_2_5_fu_136),
    .din3(edge4_3_5_fu_140),
    .din4(indvars_iv_reg_225),
    .dout(edge4_load_phi_fu_823_p6)
);

solution_mux_42_1lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
solution_mux_42_1lbW_U29(
    .din0(1'd1),
    .din1(write_flag_i_reg_261),
    .din2(write_flag_i_reg_261),
    .din3(write_flag_i_reg_261),
    .din4(i_i1_reg_294),
    .dout(write_flag_1_i_fu_870_p6)
);

solution_mux_42_4jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
solution_mux_42_4jbC_U30(
    .din0(arr_load_phi_i_reg_306),
    .din1(arr_i_reg_282),
    .din2(arr_i_reg_282),
    .din3(arr_i_reg_282),
    .din4(i_i1_reg_294),
    .dout(arr_1_i_fu_950_p6)
);

solution_mux_42_4jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
solution_mux_42_4jbC_U31(
    .din0(arr4_i_reg_272),
    .din1(arr_load_phi_i_reg_306),
    .din2(arr4_i_reg_272),
    .din3(arr4_i_reg_272),
    .din4(i_i1_reg_294),
    .dout(arr12_1_i_fu_964_p6)
);

solution_mux_42_4jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
solution_mux_42_4jbC_U32(
    .din0(edge4_3_5_load_1_reg_1244),
    .din1(edge4_3_5_load_1_reg_1244),
    .din2(edge4_3_5_load_1_reg_1244),
    .din3(arr_load_phi_i_reg_306),
    .din4(i_i1_reg_294),
    .dout(arr3_1_i_fu_978_p6)
);

solution_mux_42_4jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
solution_mux_42_4jbC_U33(
    .din0(edge4_2_5_load_1_reg_1236),
    .din1(edge4_2_5_load_1_reg_1236),
    .din2(arr_load_phi_i_reg_306),
    .din3(edge4_2_5_load_1_reg_1236),
    .din4(i_i1_reg_294),
    .dout(arr2_1_i_fu_989_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 16'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state43) & (tmp_198_fu_762_p2 == 1'd1))) begin
            ap_return_preg <= tmp_200_fu_814_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_173_reg_1144 == 1'd0) & (tmp_315_t_fu_734_p2 == 2'd3) & (1'b1 == ap_CS_fsm_state42)) | ((tmp_173_reg_1144 == 1'd0) & (tmp_315_t_fu_734_p2 == 2'd2) & (1'b1 == ap_CS_fsm_state42)) | ((tmp_173_reg_1144 == 1'd0) & (tmp_315_t_fu_734_p2 == 2'd1) & (1'b1 == ap_CS_fsm_state42)) | ((tmp_173_reg_1144 == 1'd0) & (tmp_315_t_fu_734_p2 == 2'd0) & (1'b1 == ap_CS_fsm_state42)))) begin
        a_1_fu_120 <= a_4_fu_723_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_395_p2 == 1'd1))) begin
        a_1_fu_120 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        arr4_i_reg_272 <= arr12_1_i_fu_964_p6;
    end else if (((tmp_202_fu_837_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
        arr4_i_reg_272 <= edge4_1_5_fu_132;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_858_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
        if ((ap_phi_mux_i_i1_phi_fu_298_p4 == 2'd0)) begin
            arr_load_phi_i_reg_306 <= arr4_i_reg_272;
        end else if ((~(ap_phi_mux_i_i1_phi_fu_298_p4 == 2'd0) & ~(ap_phi_mux_i_i1_phi_fu_298_p4 == 2'd1))) begin
            arr_load_phi_i_reg_306 <= edge4_3_5_fu_140;
        end else if ((ap_phi_mux_i_i1_phi_fu_298_p4 == 2'd1)) begin
            arr_load_phi_i_reg_306 <= edge4_2_5_fu_136;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_462_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        b_reg_237 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        b_reg_237 <= b_4_fu_1025_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (exitcond_fu_858_p2 == 1'd1))) begin
        edge4_1_5_fu_132 <= edge4_1_43_fu_915_p3;
    end else if (((tmp_fu_462_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        edge4_1_5_fu_132 <= edge4_3_2_fu_108;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        edge4_2_5_fu_136 <= arr2_1_i_fu_989_p6;
    end else if (((1'b1 == ap_CS_fsm_state45) & (exitcond_fu_858_p2 == 1'd1))) begin
        edge4_2_5_fu_136 <= edge4_2_41_fu_894_p3;
    end else if (((tmp_fu_462_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        edge4_2_5_fu_136 <= edge4_3_3_fu_112;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_173_reg_1144 == 1'd0) & (tmp_315_t_fu_734_p2 == 2'd0) & (1'b1 == ap_CS_fsm_state42))) begin
        edge4_3_1_40_fu_104 <= edge4_0_2_reg_1136;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_395_p2 == 1'd1))) begin
        edge4_3_1_40_fu_104 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_173_reg_1144 == 1'd0) & (tmp_315_t_fu_734_p2 == 2'd1) & (1'b1 == ap_CS_fsm_state42))) begin
        edge4_3_2_fu_108 <= edge4_0_2_reg_1136;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_395_p2 == 1'd1))) begin
        edge4_3_2_fu_108 <= edge4_1_1_fu_353_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_173_reg_1144 == 1'd0) & (tmp_315_t_fu_734_p2 == 2'd2) & (1'b1 == ap_CS_fsm_state42))) begin
        edge4_3_3_fu_112 <= edge4_0_2_reg_1136;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_395_p2 == 1'd1))) begin
        edge4_3_3_fu_112 <= edge4_2_1_fu_367_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_173_reg_1144 == 1'd0) & (tmp_315_t_fu_734_p2 == 2'd3) & (1'b1 == ap_CS_fsm_state42))) begin
        edge4_3_4_fu_116 <= edge4_0_2_reg_1136;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_395_p2 == 1'd1))) begin
        edge4_3_4_fu_116 <= edge4_3_1_fu_381_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        edge4_3_5_fu_140 <= arr3_1_i_fu_978_p6;
    end else if (((1'b1 == ap_CS_fsm_state45) & (exitcond_fu_858_p2 == 1'd1))) begin
        edge4_3_5_fu_140 <= edge4_3_42_fu_908_p3;
    end else if (((tmp_fu_462_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        edge4_3_5_fu_140 <= edge4_3_4_fu_116;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        i_i1_reg_294 <= i_31_reg_1255;
    end else if (((tmp_202_fu_837_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
        i_i1_reg_294 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        i_i_reg_192 <= i_30_reg_1174;
    end else if (((tmp_173_fu_627_p2 == 1'd0) & (tmp_i_fu_649_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        i_i_reg_192 <= n_assign_cast_fu_639_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_462_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        indvars_iv_reg_225 <= 2'd3;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        indvars_iv_reg_225 <= j_12_reg_1280;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        j_i_reg_180 <= j_14_reg_1179;
    end else if (((tmp_173_fu_627_p2 == 1'd0) & (tmp_i_fu_649_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        j_i_reg_180 <= 32'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_395_p2 == 1'd1))) begin
        j_reg_168 <= 5'd11;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        j_reg_168 <= j_15_fu_756_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (exitcond_fu_858_p2 == 1'd1))) begin
        k_reg_249 <= k_4_reg_1226;
    end else if (((tmp_198_fu_762_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
        k_reg_249 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond_i_fu_695_p2 == 1'd1))) begin
        p_0_i_reg_213 <= s_i_reg_201;
    end else if (((tmp_173_fu_627_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_i_fu_649_p2 == 1'd1))) begin
        p_0_i_reg_213 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_395_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_rec_reg_157 <= p_sum_fu_347_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_rec_reg_157 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        s_i_reg_201 <= grp_fu_712_p2;
    end else if (((tmp_173_fu_627_p2 == 1'd0) & (tmp_i_fu_649_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        s_i_reg_201 <= 32'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (exitcond_fu_858_p2 == 1'd1))) begin
        temp_fu_128 <= edge4_0_fu_922_p3;
    end else if (((tmp_fu_462_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        temp_fu_128 <= edge4_3_1_40_fu_104;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        write_flag_i_reg_261 <= write_flag_1_i_reg_1260;
    end else if (((tmp_202_fu_837_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
        write_flag_i_reg_261 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_173_reg_1144 == 1'd0) & (tmp_315_t_fu_734_p2 == 2'd3) & (1'b1 == ap_CS_fsm_state42)) | ((tmp_173_reg_1144 == 1'd0) & (tmp_315_t_fu_734_p2 == 2'd2) & (1'b1 == ap_CS_fsm_state42)) | ((tmp_173_reg_1144 == 1'd0) & (tmp_315_t_fu_734_p2 == 2'd1) & (1'b1 == ap_CS_fsm_state42)) | ((tmp_173_reg_1144 == 1'd0) & (tmp_315_t_fu_734_p2 == 2'd0) & (1'b1 == ap_CS_fsm_state42)))) begin
        x_fu_124 <= x_5_reg_1153;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_395_p2 == 1'd1))) begin
        x_fu_124 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        arr_i_reg_282 <= arr_1_i_fu_950_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        edge4_0_2_reg_1136 <= cubiecube_0_ep_q0;
        tmp_173_reg_1144 <= tmp_173_fu_627_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        edge4_1_fu_92 <= edge4_1_1_fu_353_p6;
        edge4_2_fu_96 <= edge4_2_1_fu_367_p6;
        edge4_3_fu_100 <= edge4_3_1_fu_381_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        edge4_2_5_load_1_reg_1236 <= edge4_2_5_fu_136;
        edge4_3_5_load_1_reg_1244 <= edge4_3_5_fu_140;
        i_31_reg_1255 <= i_31_fu_864_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_695_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        i_30_reg_1174 <= i_30_fu_706_p2;
        s_reg_1169 <= s_fu_700_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        j_12_reg_1280 <= j_12_fu_1019_p2;
        tmp_204_reg_1275 <= tmp_204_fu_1013_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_14_reg_1179 <= j_14_fu_717_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        k_4_reg_1226 <= k_4_fu_842_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_198_fu_762_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
        sel_tmp2_i_reg_1211 <= sel_tmp2_i_fu_782_p2;
        sel_tmp_i_reg_1205 <= sel_tmp_i_fu_776_p2;
        tmp_201_reg_1200[1 : 0] <= tmp_201_fu_768_p3[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) & (tmp_202_fu_837_p2 == 1'd1))) begin
        tmp_203_reg_1231 <= tmp_203_fu_852_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_173_fu_627_p2 == 1'd0) & (tmp_i_fu_649_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_380_i_reg_1161 <= tmp_380_i_fu_689_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_858_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
        write_flag_1_i_reg_1260 <= write_flag_1_i_fu_870_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_173_fu_627_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        x_5_reg_1153 <= x_5_fu_643_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state43) & (tmp_198_fu_762_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) & (tmp_198_fu_762_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) & (tmp_198_fu_762_p2 == 1'd1))) begin
        ap_return = tmp_200_fu_814_p2;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cubiecube_0_ep_ce0 = 1'b1;
    end else begin
        cubiecube_0_ep_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_712_ap_start = 1'b1;
    end else begin
        grp_fu_712_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_395_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((tmp_fu_462_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((tmp_173_fu_627_p2 == 1'd0) & (tmp_i_fu_649_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (exitcond_i_fu_695_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state43 : begin
            if (((1'b1 == ap_CS_fsm_state43) & (tmp_198_fu_762_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((tmp_202_fu_837_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state45 : begin
            if (((1'b1 == ap_CS_fsm_state45) & (exitcond_fu_858_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_4_fu_723_p2 = (p_0_i_reg_213 + a_1_fu_120);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_phi_mux_i_i1_phi_fu_298_p4 = i_i1_reg_294;

assign b_4_fu_1025_p2 = (k_reg_249 + tmp_204_reg_1275);

assign cubiecube_0_ep_address0 = tmp_197_fu_470_p1;

assign edge4_0_fu_922_p3 = ((write_flag_i_reg_261[0:0] === 1'b1) ? arr_i_reg_282 : temp_fu_128);

assign edge4_1_43_fu_915_p3 = ((sel_tmp2_i_reg_1211[0:0] === 1'b1) ? temp_fu_128 : arr4_i_reg_272);

assign edge4_2_41_fu_894_p3 = ((sel_tmp2_i_reg_1211[0:0] === 1'b1) ? edge4_2_5_fu_136 : newSel3_fu_887_p3);

assign edge4_3_42_fu_908_p3 = ((sel_tmp2_i_reg_1211[0:0] === 1'b1) ? edge4_3_5_fu_140 : newSel9_fu_901_p3);

assign exitcond_fu_858_p2 = ((i_i1_reg_294 == indvars_iv_reg_225) ? 1'b1 : 1'b0);

assign exitcond_i_fu_695_p2 = ((j_i_reg_180 == tmp_380_i_reg_1161) ? 1'b1 : 1'b0);

assign i_30_fu_706_p2 = ($signed(i_i_reg_192) + $signed(32'd4294967295));

assign i_31_fu_864_p2 = (i_i1_reg_294 + 2'd1);

assign i_fu_633_p2 = ($signed(5'd11) - $signed(j_reg_168));

assign j_12_fu_1019_p2 = ($signed(indvars_iv_reg_225) + $signed(2'd3));

assign j_14_fu_717_p2 = (j_i_reg_180 + 32'd1);

assign j_15_fu_756_p2 = ($signed(j_reg_168) + $signed(5'd31));

assign j_1_cast1_fu_848_p1 = indvars_iv_reg_225;

assign j_cast_fu_458_p1 = j_reg_168;

assign k_4_fu_842_p2 = (k_reg_249 + 32'd1);

assign k_assign_4_fu_675_p2 = (n_assign_cast_fu_639_p1 - x_5_fu_643_p2);

assign n_assign_cast_fu_639_p1 = i_fu_633_p2;

assign newSel3_fu_887_p3 = ((sel_tmp_i_reg_1205[0:0] === 1'b1) ? temp_fu_128 : edge4_2_5_fu_136);

assign newSel9_fu_901_p3 = ((sel_tmp_i_reg_1205[0:0] === 1'b1) ? edge4_3_5_fu_140 : temp_fu_128);

assign p_k_i_fu_681_p3 = ((tmp_379_i_fu_669_p2[0:0] === 1'b1) ? k_assign_4_fu_675_p2 : x_5_fu_643_p2);

assign p_lshr_f_i_cast_fu_655_p4 = {{i_fu_633_p2[3:1]}};

assign p_sum_fu_347_p2 = (p_rec_reg_157 + 2'd1);

assign s_fu_700_p2 = ($signed(s_i_reg_201) * $signed(i_i_reg_192));

assign sel_tmp2_i_fu_782_p2 = ((indvars_iv_reg_225 == 2'd1) ? 1'b1 : 1'b0);

assign sel_tmp_i_fu_776_p2 = ((indvars_iv_reg_225 == 2'd2) ? 1'b1 : 1'b0);

assign tmp_151_fu_495_p2 = ((cubiecube_0_ep_q0 == 4'd15) ? 1'b1 : 1'b0);

assign tmp_152_fu_501_p2 = ((cubiecube_0_ep_q0 == 4'd14) ? 1'b1 : 1'b0);

assign tmp_153_fu_507_p2 = (tmp_152_fu_501_p2 | tmp_151_fu_495_p2);

assign tmp_154_fu_513_p2 = ((cubiecube_0_ep_q0 == 4'd13) ? 1'b1 : 1'b0);

assign tmp_155_fu_519_p2 = (tmp_154_fu_513_p2 | tmp_153_fu_507_p2);

assign tmp_156_fu_525_p2 = ((cubiecube_0_ep_q0 == 4'd12) ? 1'b1 : 1'b0);

assign tmp_157_fu_531_p2 = (tmp_156_fu_525_p2 | tmp_155_fu_519_p2);

assign tmp_158_fu_537_p2 = ((cubiecube_0_ep_q0 == 4'd7) ? 1'b1 : 1'b0);

assign tmp_159_fu_543_p2 = (tmp_158_fu_537_p2 | tmp_157_fu_531_p2);

assign tmp_160_fu_549_p2 = ((cubiecube_0_ep_q0 == 4'd6) ? 1'b1 : 1'b0);

assign tmp_161_fu_555_p2 = (tmp_160_fu_549_p2 | tmp_159_fu_543_p2);

assign tmp_162_fu_561_p2 = ((cubiecube_0_ep_q0 == 4'd5) ? 1'b1 : 1'b0);

assign tmp_163_fu_567_p2 = (tmp_162_fu_561_p2 | tmp_161_fu_555_p2);

assign tmp_164_fu_573_p2 = ((cubiecube_0_ep_q0 == 4'd4) ? 1'b1 : 1'b0);

assign tmp_165_fu_579_p2 = (tmp_164_fu_573_p2 | tmp_163_fu_567_p2);

assign tmp_166_fu_585_p2 = ((cubiecube_0_ep_q0 == 4'd3) ? 1'b1 : 1'b0);

assign tmp_167_fu_591_p2 = (tmp_166_fu_585_p2 | tmp_165_fu_579_p2);

assign tmp_168_fu_597_p2 = ((cubiecube_0_ep_q0 == 4'd2) ? 1'b1 : 1'b0);

assign tmp_169_fu_603_p2 = (tmp_168_fu_597_p2 | tmp_167_fu_591_p2);

assign tmp_170_fu_609_p2 = ((cubiecube_0_ep_q0 == 4'd1) ? 1'b1 : 1'b0);

assign tmp_171_fu_615_p2 = (tmp_170_fu_609_p2 | tmp_169_fu_603_p2);

assign tmp_172_fu_621_p2 = ((cubiecube_0_ep_q0 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_173_fu_627_p2 = (tmp_172_fu_621_p2 | tmp_171_fu_615_p2);

assign tmp_174_fu_788_p2 = a_1_fu_120 << 32'd5;

assign tmp_175_fu_794_p2 = a_1_fu_120 << 32'd3;

assign tmp_176_fu_806_p1 = b_reg_237[15:0];

assign tmp_177_fu_810_p1 = tmp_199_fu_800_p2[15:0];

assign tmp_178_fu_730_p1 = x_fu_124[1:0];

assign tmp_197_fu_470_p1 = $unsigned(j_cast_fu_458_p1);

assign tmp_198_fu_762_p2 = ((indvars_iv_reg_225 == 2'd0) ? 1'b1 : 1'b0);

assign tmp_199_fu_800_p2 = (tmp_174_fu_788_p2 - tmp_175_fu_794_p2);

assign tmp_200_fu_814_p2 = (tmp_177_fu_810_p1 + tmp_176_fu_806_p1);

assign tmp_201_fu_768_p3 = {{2'd2}, {indvars_iv_reg_225}};

assign tmp_202_fu_837_p2 = ((edge4_load_phi_fu_823_p6 == tmp_201_reg_1200) ? 1'b1 : 1'b0);

assign tmp_203_fu_852_p2 = (j_1_cast1_fu_848_p1 + 3'd1);

assign tmp_204_fu_1013_p0 = tmp_204_fu_1013_p00;

assign tmp_204_fu_1013_p00 = tmp_203_reg_1231;

assign tmp_204_fu_1013_p2 = ($signed({{1'b0}, {tmp_204_fu_1013_p0}}) * $signed(b_reg_237));

assign tmp_315_t_fu_734_p2 = (tmp_178_fu_730_p1 ^ 2'd3);

assign tmp_379_i_fu_669_p2 = (($signed(tmp_i_cast_fu_665_p1) < $signed(x_5_fu_643_p2)) ? 1'b1 : 1'b0);

assign tmp_380_i_fu_689_p2 = (p_k_i_fu_681_p3 + 32'd1);

assign tmp_fu_462_p3 = j_reg_168[32'd4];

assign tmp_i_cast_fu_665_p1 = p_lshr_f_i_cast_fu_655_p4;

assign tmp_i_fu_649_p2 = (($signed(n_assign_cast_fu_639_p1) < $signed(x_5_fu_643_p2)) ? 1'b1 : 1'b0);

assign tmp_s_fu_395_p2 = ((p_rec_reg_157 == 2'd2) ? 1'b1 : 1'b0);

assign x_5_fu_643_p2 = (x_fu_124 + 32'd1);

always @ (posedge ap_clk) begin
    tmp_201_reg_1200[3:2] <= 2'b10;
end

endmodule //getFRtoBR
