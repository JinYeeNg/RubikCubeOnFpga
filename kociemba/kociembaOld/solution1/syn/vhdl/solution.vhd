-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity solution is
generic (
    C_M_AXI_CTRL_BUS_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_CTRL_BUS_ID_WIDTH : INTEGER := 1;
    C_M_AXI_CTRL_BUS_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_CTRL_BUS_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_CTRL_BUS_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_CTRL_BUS_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_CTRL_BUS_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_CTRL_BUS_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CTRL_BUS_ADDR_WIDTH : INTEGER := 8;
    C_S_AXI_CTRL_BUS_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_CTRL_BUS_USER_VALUE : INTEGER := 0;
    C_M_AXI_CTRL_BUS_PROT_VALUE : INTEGER := 0;
    C_M_AXI_CTRL_BUS_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_CTRL_BUS_AWVALID : OUT STD_LOGIC;
    m_axi_CTRL_BUS_AWREADY : IN STD_LOGIC;
    m_axi_CTRL_BUS_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    m_axi_CTRL_BUS_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_CTRL_BUS_ID_WIDTH-1 downto 0);
    m_axi_CTRL_BUS_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_CTRL_BUS_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_CTRL_BUS_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_CTRL_BUS_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_CTRL_BUS_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_CTRL_BUS_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_CTRL_BUS_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_CTRL_BUS_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_CTRL_BUS_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CTRL_BUS_AWUSER_WIDTH-1 downto 0);
    m_axi_CTRL_BUS_WVALID : OUT STD_LOGIC;
    m_axi_CTRL_BUS_WREADY : IN STD_LOGIC;
    m_axi_CTRL_BUS_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    m_axi_CTRL_BUS_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_CTRL_BUS_DATA_WIDTH/8-1 downto 0);
    m_axi_CTRL_BUS_WLAST : OUT STD_LOGIC;
    m_axi_CTRL_BUS_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_CTRL_BUS_ID_WIDTH-1 downto 0);
    m_axi_CTRL_BUS_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CTRL_BUS_WUSER_WIDTH-1 downto 0);
    m_axi_CTRL_BUS_ARVALID : OUT STD_LOGIC;
    m_axi_CTRL_BUS_ARREADY : IN STD_LOGIC;
    m_axi_CTRL_BUS_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    m_axi_CTRL_BUS_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_CTRL_BUS_ID_WIDTH-1 downto 0);
    m_axi_CTRL_BUS_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_CTRL_BUS_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_CTRL_BUS_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_CTRL_BUS_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_CTRL_BUS_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_CTRL_BUS_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_CTRL_BUS_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_CTRL_BUS_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_CTRL_BUS_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_CTRL_BUS_ARUSER_WIDTH-1 downto 0);
    m_axi_CTRL_BUS_RVALID : IN STD_LOGIC;
    m_axi_CTRL_BUS_RREADY : OUT STD_LOGIC;
    m_axi_CTRL_BUS_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    m_axi_CTRL_BUS_RLAST : IN STD_LOGIC;
    m_axi_CTRL_BUS_RID : IN STD_LOGIC_VECTOR (C_M_AXI_CTRL_BUS_ID_WIDTH-1 downto 0);
    m_axi_CTRL_BUS_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_CTRL_BUS_RUSER_WIDTH-1 downto 0);
    m_axi_CTRL_BUS_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_CTRL_BUS_BVALID : IN STD_LOGIC;
    m_axi_CTRL_BUS_BREADY : OUT STD_LOGIC;
    m_axi_CTRL_BUS_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_CTRL_BUS_BID : IN STD_LOGIC_VECTOR (C_M_AXI_CTRL_BUS_ID_WIDTH-1 downto 0);
    m_axi_CTRL_BUS_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_CTRL_BUS_BUSER_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CTRL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CTRL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of solution is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "solution,hls_ip_2018_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=12.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.500000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=9,HLS_SYN_DSP=35,HLS_SYN_FF=10687,HLS_SYN_LUT=19561,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (57 downto 0) := "0000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (57 downto 0) := "0000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (57 downto 0) := "0000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (57 downto 0) := "0000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (57 downto 0) := "0000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (57 downto 0) := "0000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (57 downto 0) := "0001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (57 downto 0) := "0010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (57 downto 0) := "0100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (57 downto 0) := "1000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_42 : STD_LOGIC_VECTOR (7 downto 0) := "01000010";
    constant ap_const_lv8_4C : STD_LOGIC_VECTOR (7 downto 0) := "01001100";
    constant ap_const_lv8_44 : STD_LOGIC_VECTOR (7 downto 0) := "01000100";
    constant ap_const_lv8_46 : STD_LOGIC_VECTOR (7 downto 0) := "01000110";
    constant ap_const_lv8_52 : STD_LOGIC_VECTOR (7 downto 0) := "01010010";
    constant ap_const_lv8_55 : STD_LOGIC_VECTOR (7 downto 0) := "01010101";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv6_A : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_36 : STD_LOGIC_VECTOR (5 downto 0) := "110110";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_FFFFFFFD : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111101";
    constant ap_const_lv32_FFFFFFFB : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111011";
    constant ap_const_lv34_15556 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000010101010101010110";
    constant ap_const_lv26_1B0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000110110000";
    constant ap_const_lv25_1EF : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000111101111";
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal facelets_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal facelets_ce0 : STD_LOGIC;
    signal facelets_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal maxDepth : STD_LOGIC_VECTOR (7 downto 0);
    signal unsolvable : STD_LOGIC_VECTOR (0 downto 0);
    signal unsolvable_ap_vld : STD_LOGIC;
    signal encode_length : STD_LOGIC_VECTOR (7 downto 0);
    signal encode_length_ap_vld : STD_LOGIC;
    signal twistMove2 : STD_LOGIC_VECTOR (31 downto 0);
    signal flipMove2 : STD_LOGIC_VECTOR (31 downto 0);
    signal FRtoBR_Move2 : STD_LOGIC_VECTOR (31 downto 0);
    signal URFtoDLF_Move2 : STD_LOGIC_VECTOR (31 downto 0);
    signal URtoDF_Move2 : STD_LOGIC_VECTOR (31 downto 0);
    signal URtoUL_Move2 : STD_LOGIC_VECTOR (31 downto 0);
    signal UBtoDF_Move2 : STD_LOGIC_VECTOR (31 downto 0);
    signal MergeURtoULandUBtoDF2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Slice_URFtoDLF_Parity_Prun2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Slice_URtoDF_Parity_Prun2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Slice_Twist_Prun2 : STD_LOGIC_VECTOR (31 downto 0);
    signal Slice_Flip_Prun2 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_f_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal res_f_0_ce0 : STD_LOGIC;
    signal res_f_0_we0 : STD_LOGIC;
    signal res_f_0_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal res_f_0_ce1 : STD_LOGIC;
    signal res_f_0_q1 : STD_LOGIC_VECTOR (2 downto 0);
    signal ccRet_cp_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal ccRet_cp_0_ce0 : STD_LOGIC;
    signal ccRet_cp_0_we0 : STD_LOGIC;
    signal ccRet_cp_0_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal ccRet_ep_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ccRet_ep_0_ce0 : STD_LOGIC;
    signal ccRet_ep_0_we0 : STD_LOGIC;
    signal ccRet_ep_0_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ccRet_co_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal ccRet_co_0_ce0 : STD_LOGIC;
    signal ccRet_co_0_we0 : STD_LOGIC;
    signal ccRet_co_0_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal ccRet_eo_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ccRet_eo_0_ce0 : STD_LOGIC;
    signal ccRet_eo_0_we0 : STD_LOGIC;
    signal ccRet_eo_0_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_twist_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal result_flip_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal result_parity_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal result_FRtoBR_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal result_URFtoDLF_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal result_URtoUL_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal result_UBtoDF_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal search_minDistPhase1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal search_minDistPhase1_ce0 : STD_LOGIC;
    signal search_minDistPhase1_we0 : STD_LOGIC;
    signal search_minDistPhase1_d0 : STD_LOGIC_VECTOR (5 downto 0);
    signal search_minDistPhase1_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal search_ax_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal search_ax_0_ce0 : STD_LOGIC;
    signal search_ax_0_we0 : STD_LOGIC;
    signal search_ax_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal search_ax_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal search_ax_0_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal search_ax_0_ce1 : STD_LOGIC;
    signal search_ax_0_we1 : STD_LOGIC;
    signal search_ax_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal search_ax_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal search_po_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal search_po_0_ce0 : STD_LOGIC;
    signal search_po_0_we0 : STD_LOGIC;
    signal search_po_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal search_po_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal search_flip_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal search_flip_0_ce0 : STD_LOGIC;
    signal search_flip_0_we0 : STD_LOGIC;
    signal search_flip_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal search_flip_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal search_twist_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal search_twist_0_ce0 : STD_LOGIC;
    signal search_twist_0_we0 : STD_LOGIC;
    signal search_twist_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal search_twist_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal search_slice_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal search_slice_0_ce0 : STD_LOGIC;
    signal search_slice_0_we0 : STD_LOGIC;
    signal search_slice_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal search_slice_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal search_parity_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal search_parity_0_ce0 : STD_LOGIC;
    signal search_parity_0_we0 : STD_LOGIC;
    signal search_parity_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal search_parity_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal search_URFtoDLF_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal search_URFtoDLF_0_ce0 : STD_LOGIC;
    signal search_URFtoDLF_0_we0 : STD_LOGIC;
    signal search_URFtoDLF_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal search_URFtoDLF_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal search_FRtoBR_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal search_FRtoBR_0_ce0 : STD_LOGIC;
    signal search_FRtoBR_0_we0 : STD_LOGIC;
    signal search_FRtoBR_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal search_FRtoBR_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal search_URtoUL_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal search_URtoUL_0_ce0 : STD_LOGIC;
    signal search_URtoUL_0_we0 : STD_LOGIC;
    signal search_URtoUL_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal search_URtoUL_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal search_UBtoDF_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal search_UBtoDF_0_ce0 : STD_LOGIC;
    signal search_UBtoDF_0_we0 : STD_LOGIC;
    signal search_UBtoDF_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal search_UBtoDF_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal CTRL_BUS_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal CTRL_BUS_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal CTRL_BUS_AWREADY : STD_LOGIC;
    signal CTRL_BUS_WREADY : STD_LOGIC;
    signal CTRL_BUS_ARVALID : STD_LOGIC;
    signal CTRL_BUS_ARREADY : STD_LOGIC;
    signal CTRL_BUS_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal CTRL_BUS_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal CTRL_BUS_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal CTRL_BUS_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal CTRL_BUS_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal CTRL_BUS_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal CTRL_BUS_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal CTRL_BUS_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal CTRL_BUS_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal CTRL_BUS_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal CTRL_BUS_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal CTRL_BUS_RVALID : STD_LOGIC;
    signal CTRL_BUS_RREADY : STD_LOGIC;
    signal CTRL_BUS_RDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal CTRL_BUS_RLAST : STD_LOGIC;
    signal CTRL_BUS_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal CTRL_BUS_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal CTRL_BUS_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal CTRL_BUS_BVALID : STD_LOGIC;
    signal CTRL_BUS_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal CTRL_BUS_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal CTRL_BUS_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_1139 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal reg_1144 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal reg_1148 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal grp_totalDepth_fu_1004_ap_idle : STD_LOGIC;
    signal grp_totalDepth_fu_1004_ap_ready : STD_LOGIC;
    signal grp_totalDepth_fu_1004_ap_done : STD_LOGIC;
    signal maxDepth_read_reg_2169 : STD_LOGIC_VECTOR (7 downto 0);
    signal Slice_Flip_Prun_reg_2174 : STD_LOGIC_VECTOR (30 downto 0);
    signal Slice_Twist_Prun_reg_2179 : STD_LOGIC_VECTOR (30 downto 0);
    signal Slice_URtoDF_Parity_s_reg_2184 : STD_LOGIC_VECTOR (30 downto 0);
    signal Slice_URFtoDLF_Parit_reg_2189 : STD_LOGIC_VECTOR (30 downto 0);
    signal MergeURtoULandUBtoDF_reg_2194 : STD_LOGIC_VECTOR (30 downto 0);
    signal UBtoDF_Move_reg_2199 : STD_LOGIC_VECTOR (30 downto 0);
    signal URtoUL_Move_reg_2204 : STD_LOGIC_VECTOR (30 downto 0);
    signal URtoDF_Move_reg_2209 : STD_LOGIC_VECTOR (30 downto 0);
    signal URFtoDLF_Move_reg_2214 : STD_LOGIC_VECTOR (30 downto 0);
    signal FRtoBR_Move_fu_1243_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal FRtoBR_Move_reg_2219 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_247_cast_fu_1253_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_247_cast_reg_2224 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_248_cast_fu_1267_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_248_cast_reg_2229 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_249_cast1_fu_1281_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_249_cast1_reg_2234 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_fu_1285_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_2239 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvarinc_fu_1289_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_14_fu_1312_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_14_reg_2255 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_149_fu_1318_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_149_reg_2260 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond2_fu_1306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_complete_phi_fu_904_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_153_reg_2312 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_156_reg_2322 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_159_reg_2332 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp8_fu_1390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp8_reg_2347 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_165_reg_2352 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_168_reg_2362 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal tmp_171_reg_2372 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal complete_1_fu_1446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal i_15_fu_1458_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_15_reg_2390 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal exitcond_fu_1452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_176_fu_1469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_176_reg_2400 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal i_5_fu_1475_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_5_reg_2404 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_185_fu_1492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_185_reg_2417 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_verify_fu_1040_ap_idle : STD_LOGIC;
    signal grp_verify_fu_1040_ap_ready : STD_LOGIC;
    signal grp_verify_fu_1040_ap_done : STD_LOGIC;
    signal tmp_215_fu_1516_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_215_reg_2436 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal tmp_218_reg_2441 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_232_reg_2447 : STD_LOGIC_VECTOR (12 downto 0);
    signal n_3_fu_1625_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_3_reg_2452 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_193_fu_1631_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_193_reg_2457 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_cond_fu_1658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_2468 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_196_fu_1664_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_196_reg_2472 : STD_LOGIC_VECTOR (63 downto 0);
    signal search_po_0_addr_reg_2477 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_fu_1687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_2487 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal search_ax_0_addr_1_reg_2491 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_199_fu_1693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_199_reg_2496 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_fu_1699_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_reg_2500 : STD_LOGIC_VECTOR (31 downto 0);
    signal search_ax_0_load_1_reg_2510 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal tmp_201_fu_1710_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_201_reg_2515 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_203_fu_1716_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal tmp_204_fu_1723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_204_reg_2530 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_205_fu_1749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_205_reg_2537 : STD_LOGIC_VECTOR (0 downto 0);
    signal search_ax_0_addr_4_reg_2544 : STD_LOGIC_VECTOR (4 downto 0);
    signal mv_fu_1814_p2 : STD_LOGIC_VECTOR (31 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of mv_fu_1814_p2 : signal is "no";
    signal mv_reg_2569 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal search_flip_0_load_reg_2576 : STD_LOGIC_VECTOR (15 downto 0);
    signal search_twist_0_load_reg_2582 : STD_LOGIC_VECTOR (15 downto 0);
    signal search_slice_0_load_reg_2588 : STD_LOGIC_VECTOR (15 downto 0);
    signal CTRL_BUS_addr_reg_2593 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal CTRL_BUS_addr_1_reg_2599 : STD_LOGIC_VECTOR (31 downto 0);
    signal CTRL_BUS_addr_2_reg_2605 : STD_LOGIC_VECTOR (31 downto 0);
    signal CTRL_BUS_addr_read_reg_2611 : STD_LOGIC_VECTOR (15 downto 0);
    signal CTRL_BUS_addr_1_read_reg_2617 : STD_LOGIC_VECTOR (15 downto 0);
    signal CTRL_BUS_addr_2_read_reg_2623 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_246_reg_2628 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_245_fu_1956_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_245_reg_2634 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal tmp_249_reg_2639 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_2153_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_221_reg_2644 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal grp_fu_2161_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_224_reg_2649 : STD_LOGIC_VECTOR (24 downto 0);
    signal search_minDistPhase1_3_reg_2654 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_getPruning_2_fu_1091_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_252_reg_2659 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal grp_getPruning_2_fu_1091_ap_idle : STD_LOGIC;
    signal grp_getPruning_2_fu_1091_ap_ready : STD_LOGIC;
    signal grp_getPruning_2_fu_1091_ap_done : STD_LOGIC;
    signal tmp_227_fu_2052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_227_reg_2665 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal grp_getPruning_1_fu_1099_ap_idle : STD_LOGIC;
    signal grp_getPruning_1_fu_1099_ap_ready : STD_LOGIC;
    signal grp_getPruning_1_fu_1099_ap_done : STD_LOGIC;
    signal tmp_229_fu_2064_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_229_reg_2669 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_231_fu_2076_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_231_reg_2673 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_totalDepth_fu_1004_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal s_2_reg_2677 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_254_fu_2082_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_254_reg_2683 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal count_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal count_ce0 : STD_LOGIC;
    signal count_we0 : STD_LOGIC;
    signal count_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal count_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_get_coordcube_fu_978_ap_start : STD_LOGIC;
    signal grp_get_coordcube_fu_978_ap_done : STD_LOGIC;
    signal grp_get_coordcube_fu_978_ap_idle : STD_LOGIC;
    signal grp_get_coordcube_fu_978_ap_ready : STD_LOGIC;
    signal grp_get_coordcube_fu_978_cubiecube_0_cp_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_get_coordcube_fu_978_cubiecube_0_cp_ce0 : STD_LOGIC;
    signal grp_get_coordcube_fu_978_cubiecube_0_co_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_get_coordcube_fu_978_cubiecube_0_co_ce0 : STD_LOGIC;
    signal grp_get_coordcube_fu_978_cubiecube_0_ep_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_get_coordcube_fu_978_cubiecube_0_ep_ce0 : STD_LOGIC;
    signal grp_get_coordcube_fu_978_cubiecube_0_eo_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_get_coordcube_fu_978_cubiecube_0_eo_ce0 : STD_LOGIC;
    signal grp_get_coordcube_fu_978_result_twist_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_get_coordcube_fu_978_result_twist_0_ap_vld : STD_LOGIC;
    signal grp_get_coordcube_fu_978_result_flip_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_get_coordcube_fu_978_result_flip_0_ap_vld : STD_LOGIC;
    signal grp_get_coordcube_fu_978_result_parity_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_get_coordcube_fu_978_result_parity_0_ap_vld : STD_LOGIC;
    signal grp_get_coordcube_fu_978_result_FRtoBR_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_get_coordcube_fu_978_result_FRtoBR_0_ap_vld : STD_LOGIC;
    signal grp_get_coordcube_fu_978_result_URFtoDLF_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_get_coordcube_fu_978_result_URFtoDLF_0_ap_vld : STD_LOGIC;
    signal grp_get_coordcube_fu_978_result_URtoUL_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_get_coordcube_fu_978_result_URtoUL_0_ap_vld : STD_LOGIC;
    signal grp_get_coordcube_fu_978_result_UBtoDF_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_get_coordcube_fu_978_result_UBtoDF_0_ap_vld : STD_LOGIC;
    signal grp_totalDepth_fu_1004_ap_start : STD_LOGIC;
    signal grp_totalDepth_fu_1004_search_0_ax_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_totalDepth_fu_1004_search_0_ax_ce0 : STD_LOGIC;
    signal grp_totalDepth_fu_1004_search_0_ax_we0 : STD_LOGIC;
    signal grp_totalDepth_fu_1004_search_0_ax_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_totalDepth_fu_1004_search_0_po_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_totalDepth_fu_1004_search_0_po_ce0 : STD_LOGIC;
    signal grp_totalDepth_fu_1004_search_0_po_we0 : STD_LOGIC;
    signal grp_totalDepth_fu_1004_search_0_po_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_totalDepth_fu_1004_search_0_parity_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_totalDepth_fu_1004_search_0_parity_ce0 : STD_LOGIC;
    signal grp_totalDepth_fu_1004_search_0_parity_we0 : STD_LOGIC;
    signal grp_totalDepth_fu_1004_search_0_parity_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_totalDepth_fu_1004_search_0_URFtoDLF_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_totalDepth_fu_1004_search_0_URFtoDLF_ce0 : STD_LOGIC;
    signal grp_totalDepth_fu_1004_search_0_URFtoDLF_we0 : STD_LOGIC;
    signal grp_totalDepth_fu_1004_search_0_URFtoDLF_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_totalDepth_fu_1004_search_0_FRtoBR_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_totalDepth_fu_1004_search_0_FRtoBR_ce0 : STD_LOGIC;
    signal grp_totalDepth_fu_1004_search_0_FRtoBR_we0 : STD_LOGIC;
    signal grp_totalDepth_fu_1004_search_0_FRtoBR_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_totalDepth_fu_1004_search_0_URtoUL_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_totalDepth_fu_1004_search_0_URtoUL_ce0 : STD_LOGIC;
    signal grp_totalDepth_fu_1004_search_0_URtoUL_we0 : STD_LOGIC;
    signal grp_totalDepth_fu_1004_search_0_URtoUL_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_totalDepth_fu_1004_search_0_UBtoDF_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_totalDepth_fu_1004_search_0_UBtoDF_ce0 : STD_LOGIC;
    signal grp_totalDepth_fu_1004_search_0_UBtoDF_we0 : STD_LOGIC;
    signal grp_totalDepth_fu_1004_search_0_UBtoDF_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_AWVALID : STD_LOGIC;
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_WVALID : STD_LOGIC;
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_WLAST : STD_LOGIC;
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARVALID : STD_LOGIC;
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_RREADY : STD_LOGIC;
    signal grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_BREADY : STD_LOGIC;
    signal grp_verify_fu_1040_ap_start : STD_LOGIC;
    signal grp_verify_fu_1040_cubiecube_0_cp_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_verify_fu_1040_cubiecube_0_cp_ce0 : STD_LOGIC;
    signal grp_verify_fu_1040_cubiecube_0_co_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_verify_fu_1040_cubiecube_0_co_ce0 : STD_LOGIC;
    signal grp_verify_fu_1040_cubiecube_0_ep_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_verify_fu_1040_cubiecube_0_ep_ce0 : STD_LOGIC;
    signal grp_verify_fu_1040_cubiecube_0_eo_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_verify_fu_1040_cubiecube_0_eo_ce0 : STD_LOGIC;
    signal grp_verify_fu_1040_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_toCubieCube_fu_1052_ap_start : STD_LOGIC;
    signal grp_toCubieCube_fu_1052_ap_done : STD_LOGIC;
    signal grp_toCubieCube_fu_1052_ap_idle : STD_LOGIC;
    signal grp_toCubieCube_fu_1052_ap_ready : STD_LOGIC;
    signal grp_toCubieCube_fu_1052_facecube_0_f_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_toCubieCube_fu_1052_facecube_0_f_ce0 : STD_LOGIC;
    signal grp_toCubieCube_fu_1052_facecube_0_f_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_toCubieCube_fu_1052_facecube_0_f_ce1 : STD_LOGIC;
    signal grp_toCubieCube_fu_1052_ccRet_cp_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_toCubieCube_fu_1052_ccRet_cp_0_ce0 : STD_LOGIC;
    signal grp_toCubieCube_fu_1052_ccRet_cp_0_we0 : STD_LOGIC;
    signal grp_toCubieCube_fu_1052_ccRet_cp_0_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_toCubieCube_fu_1052_ccRet_ep_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_toCubieCube_fu_1052_ccRet_ep_0_ce0 : STD_LOGIC;
    signal grp_toCubieCube_fu_1052_ccRet_ep_0_we0 : STD_LOGIC;
    signal grp_toCubieCube_fu_1052_ccRet_ep_0_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_toCubieCube_fu_1052_ccRet_co_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_toCubieCube_fu_1052_ccRet_co_0_ce0 : STD_LOGIC;
    signal grp_toCubieCube_fu_1052_ccRet_co_0_we0 : STD_LOGIC;
    signal grp_toCubieCube_fu_1052_ccRet_co_0_d0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_toCubieCube_fu_1052_ccRet_eo_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_toCubieCube_fu_1052_ccRet_eo_0_ce0 : STD_LOGIC;
    signal grp_toCubieCube_fu_1052_ccRet_eo_0_we0 : STD_LOGIC;
    signal grp_toCubieCube_fu_1052_ccRet_eo_0_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_solutionToString_fu_1080_ap_start : STD_LOGIC;
    signal grp_solutionToString_fu_1080_ap_done : STD_LOGIC;
    signal grp_solutionToString_fu_1080_ap_idle : STD_LOGIC;
    signal grp_solutionToString_fu_1080_ap_ready : STD_LOGIC;
    signal grp_solutionToString_fu_1080_search_0_ax_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_solutionToString_fu_1080_search_0_ax_ce0 : STD_LOGIC;
    signal grp_solutionToString_fu_1080_search_0_po_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_solutionToString_fu_1080_search_0_po_ce0 : STD_LOGIC;
    signal grp_solutionToString_fu_1080_encode_array_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_solutionToString_fu_1080_encode_array_ce0 : STD_LOGIC;
    signal grp_solutionToString_fu_1080_encode_array_we0 : STD_LOGIC;
    signal grp_solutionToString_fu_1080_encode_array_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_getPruning_2_fu_1091_ap_start : STD_LOGIC;
    signal grp_getPruning_2_fu_1091_m_axi_table_r_AWVALID : STD_LOGIC;
    signal grp_getPruning_2_fu_1091_m_axi_table_r_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_WVALID : STD_LOGIC;
    signal grp_getPruning_2_fu_1091_m_axi_table_r_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_WLAST : STD_LOGIC;
    signal grp_getPruning_2_fu_1091_m_axi_table_r_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_ARVALID : STD_LOGIC;
    signal grp_getPruning_2_fu_1091_m_axi_table_r_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getPruning_2_fu_1091_m_axi_table_r_RREADY : STD_LOGIC;
    signal grp_getPruning_2_fu_1091_m_axi_table_r_BREADY : STD_LOGIC;
    signal grp_getPruning_1_fu_1099_ap_start : STD_LOGIC;
    signal grp_getPruning_1_fu_1099_m_axi_table_r_AWVALID : STD_LOGIC;
    signal grp_getPruning_1_fu_1099_m_axi_table_r_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_WVALID : STD_LOGIC;
    signal grp_getPruning_1_fu_1099_m_axi_table_r_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_WLAST : STD_LOGIC;
    signal grp_getPruning_1_fu_1099_m_axi_table_r_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_ARVALID : STD_LOGIC;
    signal grp_getPruning_1_fu_1099_m_axi_table_r_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_getPruning_1_fu_1099_m_axi_table_r_RREADY : STD_LOGIC;
    signal grp_getPruning_1_fu_1099_m_axi_table_r_BREADY : STD_LOGIC;
    signal grp_getPruning_1_fu_1099_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_get_facecube_fromstr_fu_1107_ap_start : STD_LOGIC;
    signal grp_get_facecube_fromstr_fu_1107_ap_done : STD_LOGIC;
    signal grp_get_facecube_fromstr_fu_1107_ap_idle : STD_LOGIC;
    signal grp_get_facecube_fromstr_fu_1107_ap_ready : STD_LOGIC;
    signal grp_get_facecube_fromstr_fu_1107_cubeString_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_get_facecube_fromstr_fu_1107_cubeString_ce0 : STD_LOGIC;
    signal grp_get_facecube_fromstr_fu_1107_res_f_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_get_facecube_fromstr_fu_1107_res_f_0_ce0 : STD_LOGIC;
    signal grp_get_facecube_fromstr_fu_1107_res_f_0_we0 : STD_LOGIC;
    signal grp_get_facecube_fromstr_fu_1107_res_f_0_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal invdar_reg_878 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_148_fu_1300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_reg_889 : STD_LOGIC_VECTOR (2 downto 0);
    signal complete_reg_900 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_reg_912 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal i_2_reg_923 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal tmp_184_fu_1486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal busy_1_reg_934 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal busy_4_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal or_cond2_fu_2119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_202_reg_945 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond1_fu_1739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_busy_4_phi_fu_960_p10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal grp_get_coordcube_fu_978_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal grp_totalDepth_fu_1004_ap_start_reg : STD_LOGIC := '0';
    signal grp_verify_fu_1040_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal grp_toCubieCube_fu_1052_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_solutionToString_fu_1080_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal grp_getPruning_2_fu_1091_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal grp_getPruning_1_fu_1099_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal grp_get_facecube_fromstr_fu_1107_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal tmp_s_fu_1295_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_150_fu_1326_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_152_fu_1336_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_155_fu_1346_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_158_fu_1356_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_161_fu_1366_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_164_fu_1376_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_167_fu_1401_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_170_fu_1411_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_173_fu_1421_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_175_fu_1464_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_183_fu_1481_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_200_fu_1705_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_208_fu_1787_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_213_fu_1977_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_234_fu_2096_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal flipMove24_sum_cast_fu_1862_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal twistMove22_sum_cast_fu_1914_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal FRtoBR_Move26_sum_ca_fu_1935_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_CTRL_BUS_ARREADY : STD_LOGIC := '0';
    signal ap_sig_ioackin_CTRL_BUS_ARREADY : STD_LOGIC;
    signal depthPhase1_1_fu_380 : STD_LOGIC_VECTOR (31 downto 0);
    signal depthPhase1_fu_1754_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_1_fu_384 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_255_fu_2125_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1120_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_187_fu_1507_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_197_fu_1670_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_242_fu_1777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_186_fu_1550_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_188_fu_1590_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_219_fu_2023_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_189_fu_1602_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_190_fu_1611_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_191_fu_1620_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_262_cast_cast_fu_2047_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_198_fu_1257_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_211_fu_1271_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_fu_1285_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_151_fu_1331_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_154_fu_1341_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_157_fu_1351_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_160_fu_1361_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_163_fu_1371_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp10_fu_1385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp9_fu_1381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_166_fu_1396_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_169_fu_1406_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_172_fu_1416_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp13_fu_1430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp12_fu_1426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp11_fu_1435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_1441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_187_fu_1507_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_fu_2129_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_218_fu_1519_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal neg_mul_fu_1555_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_222_fu_1560_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_225_fu_1570_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_238_fu_1574_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_239_fu_1577_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal neg_ti_fu_1584_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal n_3_fu_1625_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal extLd_fu_1642_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_192_fu_1636_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal extLd_fu_1642_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_194_fu_1646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_195_fu_1652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_243_fu_1677_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_206_fu_1729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_207_fu_1734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_241_fu_1771_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_240_fu_1765_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_208_fu_1787_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_244_fu_1796_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_209_fu_1802_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp14_fu_1808_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl_fu_1820_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl8_fu_1831_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl27_cast_fu_1838_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl26_cast_fu_1827_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp15_fu_1842_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_210_fu_1847_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_211_cast_fu_1853_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal flipMove24_sum_fu_1857_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal p_shl9_fu_1872_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl10_fu_1883_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl29_cast_fu_1890_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl28_cast_fu_1879_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp16_fu_1894_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_214_fu_1899_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_215_cast_fu_1905_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal twistMove22_sum_fu_1909_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_2137_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_218_cast_fu_1927_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal FRtoBR_Move26_sum_fu_1930_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_246_fu_1945_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul1_fu_2145_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_212_fu_1971_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal neg_mul1_fu_1988_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_247_fu_1993_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_248_fu_2003_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_250_fu_2007_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_251_fu_2010_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal neg_ti1_fu_2017_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_226_fu_2035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in_fu_2040_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_228_fu_2058_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_230_fu_2070_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_233_fu_2090_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_234_fu_2096_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_236_fu_2107_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_235_fu_2101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_237_fu_2113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_fu_2129_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul1_fu_2145_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2153_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2153_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_254_cast_fu_2031_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_2161_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_2161_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_233_fu_2090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op535_call_state58 : BOOLEAN;
    signal ap_block_state58_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (57 downto 0);

    component get_coordcube IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        cubiecube_0_cp_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        cubiecube_0_cp_ce0 : OUT STD_LOGIC;
        cubiecube_0_cp_q0 : IN STD_LOGIC_VECTOR (2 downto 0);
        cubiecube_0_co_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        cubiecube_0_co_ce0 : OUT STD_LOGIC;
        cubiecube_0_co_q0 : IN STD_LOGIC_VECTOR (1 downto 0);
        cubiecube_0_ep_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        cubiecube_0_ep_ce0 : OUT STD_LOGIC;
        cubiecube_0_ep_q0 : IN STD_LOGIC_VECTOR (3 downto 0);
        cubiecube_0_eo_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        cubiecube_0_eo_ce0 : OUT STD_LOGIC;
        cubiecube_0_eo_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        result_twist_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        result_twist_0_ap_vld : OUT STD_LOGIC;
        result_flip_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        result_flip_0_ap_vld : OUT STD_LOGIC;
        result_parity_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        result_parity_0_ap_vld : OUT STD_LOGIC;
        result_FRtoBR_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        result_FRtoBR_0_ap_vld : OUT STD_LOGIC;
        result_URFtoDLF_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        result_URFtoDLF_0_ap_vld : OUT STD_LOGIC;
        result_URtoUL_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        result_URtoUL_0_ap_vld : OUT STD_LOGIC;
        result_UBtoDF_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        result_UBtoDF_0_ap_vld : OUT STD_LOGIC );
    end component;


    component totalDepth IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        search_0_ax_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        search_0_ax_ce0 : OUT STD_LOGIC;
        search_0_ax_we0 : OUT STD_LOGIC;
        search_0_ax_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        search_0_ax_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        search_0_po_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        search_0_po_ce0 : OUT STD_LOGIC;
        search_0_po_we0 : OUT STD_LOGIC;
        search_0_po_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        search_0_po_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        search_0_parity_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        search_0_parity_ce0 : OUT STD_LOGIC;
        search_0_parity_we0 : OUT STD_LOGIC;
        search_0_parity_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        search_0_parity_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        search_0_URFtoDLF_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        search_0_URFtoDLF_ce0 : OUT STD_LOGIC;
        search_0_URFtoDLF_we0 : OUT STD_LOGIC;
        search_0_URFtoDLF_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        search_0_URFtoDLF_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        search_0_FRtoBR_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        search_0_FRtoBR_ce0 : OUT STD_LOGIC;
        search_0_FRtoBR_we0 : OUT STD_LOGIC;
        search_0_FRtoBR_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        search_0_FRtoBR_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        search_0_URtoUL_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        search_0_URtoUL_ce0 : OUT STD_LOGIC;
        search_0_URtoUL_we0 : OUT STD_LOGIC;
        search_0_URtoUL_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        search_0_URtoUL_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        search_0_UBtoDF_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        search_0_UBtoDF_ce0 : OUT STD_LOGIC;
        search_0_UBtoDF_we0 : OUT STD_LOGIC;
        search_0_UBtoDF_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        search_0_UBtoDF_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        depthPhase1 : IN STD_LOGIC_VECTOR (31 downto 0);
        maxDepth : IN STD_LOGIC_VECTOR (7 downto 0);
        m_axi_FRtoBR_Move2_AWVALID : OUT STD_LOGIC;
        m_axi_FRtoBR_Move2_AWREADY : IN STD_LOGIC;
        m_axi_FRtoBR_Move2_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_FRtoBR_Move2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_FRtoBR_Move2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_FRtoBR_Move2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_FRtoBR_Move2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_FRtoBR_Move2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_FRtoBR_Move2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_FRtoBR_Move2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_FRtoBR_Move2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_FRtoBR_Move2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_FRtoBR_Move2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_FRtoBR_Move2_WVALID : OUT STD_LOGIC;
        m_axi_FRtoBR_Move2_WREADY : IN STD_LOGIC;
        m_axi_FRtoBR_Move2_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_FRtoBR_Move2_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_FRtoBR_Move2_WLAST : OUT STD_LOGIC;
        m_axi_FRtoBR_Move2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_FRtoBR_Move2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_FRtoBR_Move2_ARVALID : OUT STD_LOGIC;
        m_axi_FRtoBR_Move2_ARREADY : IN STD_LOGIC;
        m_axi_FRtoBR_Move2_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_FRtoBR_Move2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_FRtoBR_Move2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_FRtoBR_Move2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_FRtoBR_Move2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_FRtoBR_Move2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_FRtoBR_Move2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_FRtoBR_Move2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_FRtoBR_Move2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_FRtoBR_Move2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_FRtoBR_Move2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_FRtoBR_Move2_RVALID : IN STD_LOGIC;
        m_axi_FRtoBR_Move2_RREADY : OUT STD_LOGIC;
        m_axi_FRtoBR_Move2_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_FRtoBR_Move2_RLAST : IN STD_LOGIC;
        m_axi_FRtoBR_Move2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_FRtoBR_Move2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_FRtoBR_Move2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_FRtoBR_Move2_BVALID : IN STD_LOGIC;
        m_axi_FRtoBR_Move2_BREADY : OUT STD_LOGIC;
        m_axi_FRtoBR_Move2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_FRtoBR_Move2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_FRtoBR_Move2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        FRtoBR_Move2_offset : IN STD_LOGIC_VECTOR (30 downto 0);
        URFtoDLF_Move2_offset : IN STD_LOGIC_VECTOR (30 downto 0);
        URtoDF_Move2_offset : IN STD_LOGIC_VECTOR (30 downto 0);
        URtoUL_Move2_offset : IN STD_LOGIC_VECTOR (30 downto 0);
        UBtoDF_Move2_offset : IN STD_LOGIC_VECTOR (30 downto 0);
        MergeURtoULandUBtoDF2_offset : IN STD_LOGIC_VECTOR (30 downto 0);
        Slice_URFtoDLF_Parity_Prun2_offset : IN STD_LOGIC_VECTOR (30 downto 0);
        Slice_URtoDF_Parity_Prun2_offset : IN STD_LOGIC_VECTOR (30 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component verify IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        cubiecube_0_cp_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        cubiecube_0_cp_ce0 : OUT STD_LOGIC;
        cubiecube_0_cp_q0 : IN STD_LOGIC_VECTOR (2 downto 0);
        cubiecube_0_co_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        cubiecube_0_co_ce0 : OUT STD_LOGIC;
        cubiecube_0_co_q0 : IN STD_LOGIC_VECTOR (1 downto 0);
        cubiecube_0_ep_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        cubiecube_0_ep_ce0 : OUT STD_LOGIC;
        cubiecube_0_ep_q0 : IN STD_LOGIC_VECTOR (3 downto 0);
        cubiecube_0_eo_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        cubiecube_0_eo_ce0 : OUT STD_LOGIC;
        cubiecube_0_eo_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component toCubieCube IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        facecube_0_f_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        facecube_0_f_ce0 : OUT STD_LOGIC;
        facecube_0_f_q0 : IN STD_LOGIC_VECTOR (2 downto 0);
        facecube_0_f_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        facecube_0_f_ce1 : OUT STD_LOGIC;
        facecube_0_f_q1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ccRet_cp_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        ccRet_cp_0_ce0 : OUT STD_LOGIC;
        ccRet_cp_0_we0 : OUT STD_LOGIC;
        ccRet_cp_0_d0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        ccRet_ep_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ccRet_ep_0_ce0 : OUT STD_LOGIC;
        ccRet_ep_0_we0 : OUT STD_LOGIC;
        ccRet_ep_0_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ccRet_co_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        ccRet_co_0_ce0 : OUT STD_LOGIC;
        ccRet_co_0_we0 : OUT STD_LOGIC;
        ccRet_co_0_d0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        ccRet_eo_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        ccRet_eo_0_ce0 : OUT STD_LOGIC;
        ccRet_eo_0_we0 : OUT STD_LOGIC;
        ccRet_eo_0_d0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component solutionToString IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        search_0_ax_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        search_0_ax_ce0 : OUT STD_LOGIC;
        search_0_ax_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        search_0_po_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        search_0_po_ce0 : OUT STD_LOGIC;
        search_0_po_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        length_r : IN STD_LOGIC_VECTOR (31 downto 0);
        encode_array_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        encode_array_ce0 : OUT STD_LOGIC;
        encode_array_we0 : OUT STD_LOGIC;
        encode_array_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component getPruning_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_table_r_AWVALID : OUT STD_LOGIC;
        m_axi_table_r_AWREADY : IN STD_LOGIC;
        m_axi_table_r_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_table_r_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_table_r_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_table_r_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_table_r_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_table_r_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_table_r_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_table_r_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_table_r_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_table_r_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_table_r_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_table_r_WVALID : OUT STD_LOGIC;
        m_axi_table_r_WREADY : IN STD_LOGIC;
        m_axi_table_r_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_table_r_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_table_r_WLAST : OUT STD_LOGIC;
        m_axi_table_r_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_table_r_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_table_r_ARVALID : OUT STD_LOGIC;
        m_axi_table_r_ARREADY : IN STD_LOGIC;
        m_axi_table_r_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_table_r_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_table_r_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_table_r_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_table_r_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_table_r_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_table_r_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_table_r_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_table_r_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_table_r_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_table_r_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_table_r_RVALID : IN STD_LOGIC;
        m_axi_table_r_RREADY : OUT STD_LOGIC;
        m_axi_table_r_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_table_r_RLAST : IN STD_LOGIC;
        m_axi_table_r_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_table_r_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_table_r_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_table_r_BVALID : IN STD_LOGIC;
        m_axi_table_r_BREADY : OUT STD_LOGIC;
        m_axi_table_r_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_table_r_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_table_r_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        table_offset : IN STD_LOGIC_VECTOR (30 downto 0);
        index : IN STD_LOGIC_VECTOR (24 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component getPruning_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_table_r_AWVALID : OUT STD_LOGIC;
        m_axi_table_r_AWREADY : IN STD_LOGIC;
        m_axi_table_r_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_table_r_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_table_r_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_table_r_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_table_r_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_table_r_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_table_r_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_table_r_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_table_r_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_table_r_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_table_r_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_table_r_WVALID : OUT STD_LOGIC;
        m_axi_table_r_WREADY : IN STD_LOGIC;
        m_axi_table_r_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_table_r_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_table_r_WLAST : OUT STD_LOGIC;
        m_axi_table_r_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_table_r_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_table_r_ARVALID : OUT STD_LOGIC;
        m_axi_table_r_ARREADY : IN STD_LOGIC;
        m_axi_table_r_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_table_r_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_table_r_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_table_r_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_table_r_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_table_r_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_table_r_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_table_r_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_table_r_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_table_r_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_table_r_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_table_r_RVALID : IN STD_LOGIC;
        m_axi_table_r_RREADY : OUT STD_LOGIC;
        m_axi_table_r_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_table_r_RLAST : IN STD_LOGIC;
        m_axi_table_r_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_table_r_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_table_r_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_table_r_BVALID : IN STD_LOGIC;
        m_axi_table_r_BREADY : OUT STD_LOGIC;
        m_axi_table_r_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_table_r_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_table_r_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        table_offset : IN STD_LOGIC_VECTOR (30 downto 0);
        index : IN STD_LOGIC_VECTOR (24 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component get_facecube_fromstr IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        cubeString_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cubeString_ce0 : OUT STD_LOGIC;
        cubeString_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        res_f_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        res_f_0_ce0 : OUT STD_LOGIC;
        res_f_0_we0 : OUT STD_LOGIC;
        res_f_0_d0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component solution_mul_mul_Aem IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (33 downto 0) );
    end component;


    component solution_mac_mulaBew IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (25 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component solution_mac_mulaCeG IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (14 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component solution_res_f_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (2 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component solution_ccRet_cp_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (2 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component solution_ccRet_ep_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (3 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component solution_ccRet_co_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (1 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component solution_ccRet_eo_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component solution_search_mpcA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (5 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component solution_search_aqcK IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component solution_search_prcU IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component totalDepth_searchncg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component solution_count IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component solution_CTRL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        facelets_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        facelets_ce0 : IN STD_LOGIC;
        facelets_q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        maxDepth : OUT STD_LOGIC_VECTOR (7 downto 0);
        unsolvable : IN STD_LOGIC_VECTOR (0 downto 0);
        unsolvable_ap_vld : IN STD_LOGIC;
        encode_length : IN STD_LOGIC_VECTOR (7 downto 0);
        encode_length_ap_vld : IN STD_LOGIC;
        encode_array_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        encode_array_ce0 : IN STD_LOGIC;
        encode_array_we0 : IN STD_LOGIC;
        encode_array_d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        twistMove2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flipMove2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        FRtoBR_Move2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        URFtoDLF_Move2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        URtoDF_Move2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        URtoUL_Move2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        UBtoDF_Move2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        MergeURtoULandUBtoDF2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Slice_URFtoDLF_Parity_Prun2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Slice_URtoDF_Parity_Prun2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Slice_Twist_Prun2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Slice_Flip_Prun2 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component solution_CTRL_BUS_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    res_f_0_U : component solution_res_f_0
    generic map (
        DataWidth => 3,
        AddressRange => 54,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => res_f_0_address0,
        ce0 => res_f_0_ce0,
        we0 => res_f_0_we0,
        d0 => grp_get_facecube_fromstr_fu_1107_res_f_0_d0,
        q0 => res_f_0_q0,
        address1 => grp_toCubieCube_fu_1052_facecube_0_f_address1,
        ce1 => res_f_0_ce1,
        q1 => res_f_0_q1);

    ccRet_cp_0_U : component solution_ccRet_cp_0
    generic map (
        DataWidth => 3,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ccRet_cp_0_address0,
        ce0 => ccRet_cp_0_ce0,
        we0 => ccRet_cp_0_we0,
        d0 => grp_toCubieCube_fu_1052_ccRet_cp_0_d0,
        q0 => ccRet_cp_0_q0);

    ccRet_ep_0_U : component solution_ccRet_ep_0
    generic map (
        DataWidth => 4,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ccRet_ep_0_address0,
        ce0 => ccRet_ep_0_ce0,
        we0 => ccRet_ep_0_we0,
        d0 => grp_toCubieCube_fu_1052_ccRet_ep_0_d0,
        q0 => ccRet_ep_0_q0);

    ccRet_co_0_U : component solution_ccRet_co_0
    generic map (
        DataWidth => 2,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ccRet_co_0_address0,
        ce0 => ccRet_co_0_ce0,
        we0 => ccRet_co_0_we0,
        d0 => grp_toCubieCube_fu_1052_ccRet_co_0_d0,
        q0 => ccRet_co_0_q0);

    ccRet_eo_0_U : component solution_ccRet_eo_0
    generic map (
        DataWidth => 1,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ccRet_eo_0_address0,
        ce0 => ccRet_eo_0_ce0,
        we0 => ccRet_eo_0_we0,
        d0 => grp_toCubieCube_fu_1052_ccRet_eo_0_d0,
        q0 => ccRet_eo_0_q0);

    search_minDistPhase1_U : component solution_search_mpcA
    generic map (
        DataWidth => 6,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => search_minDistPhase1_address0,
        ce0 => search_minDistPhase1_ce0,
        we0 => search_minDistPhase1_we0,
        d0 => search_minDistPhase1_d0,
        q0 => search_minDistPhase1_q0);

    search_ax_0_U : component solution_search_aqcK
    generic map (
        DataWidth => 32,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => search_ax_0_address0,
        ce0 => search_ax_0_ce0,
        we0 => search_ax_0_we0,
        d0 => search_ax_0_d0,
        q0 => search_ax_0_q0,
        address1 => search_ax_0_address1,
        ce1 => search_ax_0_ce1,
        we1 => search_ax_0_we1,
        d1 => search_ax_0_d1,
        q1 => search_ax_0_q1);

    search_po_0_U : component solution_search_prcU
    generic map (
        DataWidth => 32,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => search_po_0_address0,
        ce0 => search_po_0_ce0,
        we0 => search_po_0_we0,
        d0 => search_po_0_d0,
        q0 => search_po_0_q0);

    search_flip_0_U : component totalDepth_searchncg
    generic map (
        DataWidth => 16,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => search_flip_0_address0,
        ce0 => search_flip_0_ce0,
        we0 => search_flip_0_we0,
        d0 => search_flip_0_d0,
        q0 => search_flip_0_q0);

    search_twist_0_U : component totalDepth_searchncg
    generic map (
        DataWidth => 16,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => search_twist_0_address0,
        ce0 => search_twist_0_ce0,
        we0 => search_twist_0_we0,
        d0 => search_twist_0_d0,
        q0 => search_twist_0_q0);

    search_slice_0_U : component totalDepth_searchncg
    generic map (
        DataWidth => 16,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => search_slice_0_address0,
        ce0 => search_slice_0_ce0,
        we0 => search_slice_0_we0,
        d0 => search_slice_0_d0,
        q0 => search_slice_0_q0);

    search_parity_0_U : component solution_search_prcU
    generic map (
        DataWidth => 32,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => search_parity_0_address0,
        ce0 => search_parity_0_ce0,
        we0 => search_parity_0_we0,
        d0 => search_parity_0_d0,
        q0 => search_parity_0_q0);

    search_URFtoDLF_0_U : component solution_search_prcU
    generic map (
        DataWidth => 32,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => search_URFtoDLF_0_address0,
        ce0 => search_URFtoDLF_0_ce0,
        we0 => search_URFtoDLF_0_we0,
        d0 => search_URFtoDLF_0_d0,
        q0 => search_URFtoDLF_0_q0);

    search_FRtoBR_0_U : component solution_search_prcU
    generic map (
        DataWidth => 32,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => search_FRtoBR_0_address0,
        ce0 => search_FRtoBR_0_ce0,
        we0 => search_FRtoBR_0_we0,
        d0 => search_FRtoBR_0_d0,
        q0 => search_FRtoBR_0_q0);

    search_URtoUL_0_U : component solution_search_prcU
    generic map (
        DataWidth => 32,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => search_URtoUL_0_address0,
        ce0 => search_URtoUL_0_ce0,
        we0 => search_URtoUL_0_we0,
        d0 => search_URtoUL_0_d0,
        q0 => search_URtoUL_0_q0);

    search_UBtoDF_0_U : component solution_search_prcU
    generic map (
        DataWidth => 32,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => search_UBtoDF_0_address0,
        ce0 => search_UBtoDF_0_ce0,
        we0 => search_UBtoDF_0_we0,
        d0 => search_UBtoDF_0_d0,
        q0 => search_UBtoDF_0_q0);

    solution_CTRL_BUS_s_axi_U : component solution_CTRL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_BUS_AWVALID,
        AWREADY => s_axi_CTRL_BUS_AWREADY,
        AWADDR => s_axi_CTRL_BUS_AWADDR,
        WVALID => s_axi_CTRL_BUS_WVALID,
        WREADY => s_axi_CTRL_BUS_WREADY,
        WDATA => s_axi_CTRL_BUS_WDATA,
        WSTRB => s_axi_CTRL_BUS_WSTRB,
        ARVALID => s_axi_CTRL_BUS_ARVALID,
        ARREADY => s_axi_CTRL_BUS_ARREADY,
        ARADDR => s_axi_CTRL_BUS_ARADDR,
        RVALID => s_axi_CTRL_BUS_RVALID,
        RREADY => s_axi_CTRL_BUS_RREADY,
        RDATA => s_axi_CTRL_BUS_RDATA,
        RRESP => s_axi_CTRL_BUS_RRESP,
        BVALID => s_axi_CTRL_BUS_BVALID,
        BREADY => s_axi_CTRL_BUS_BREADY,
        BRESP => s_axi_CTRL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        facelets_address0 => facelets_address0,
        facelets_ce0 => facelets_ce0,
        facelets_q0 => facelets_q0,
        maxDepth => maxDepth,
        unsolvable => unsolvable,
        unsolvable_ap_vld => unsolvable_ap_vld,
        encode_length => encode_length,
        encode_length_ap_vld => encode_length_ap_vld,
        encode_array_address0 => grp_solutionToString_fu_1080_encode_array_address0,
        encode_array_ce0 => grp_solutionToString_fu_1080_encode_array_ce0,
        encode_array_we0 => grp_solutionToString_fu_1080_encode_array_we0,
        encode_array_d0 => grp_solutionToString_fu_1080_encode_array_d0,
        twistMove2 => twistMove2,
        flipMove2 => flipMove2,
        FRtoBR_Move2 => FRtoBR_Move2,
        URFtoDLF_Move2 => URFtoDLF_Move2,
        URtoDF_Move2 => URtoDF_Move2,
        URtoUL_Move2 => URtoUL_Move2,
        UBtoDF_Move2 => UBtoDF_Move2,
        MergeURtoULandUBtoDF2 => MergeURtoULandUBtoDF2,
        Slice_URFtoDLF_Parity_Prun2 => Slice_URFtoDLF_Parity_Prun2,
        Slice_URtoDF_Parity_Prun2 => Slice_URtoDF_Parity_Prun2,
        Slice_Twist_Prun2 => Slice_Twist_Prun2,
        Slice_Flip_Prun2 => Slice_Flip_Prun2);

    solution_CTRL_BUS_m_axi_U : component solution_CTRL_BUS_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 16,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_CTRL_BUS_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_CTRL_BUS_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_CTRL_BUS_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_CTRL_BUS_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_CTRL_BUS_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_CTRL_BUS_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_CTRL_BUS_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_CTRL_BUS_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_CTRL_BUS_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_CTRL_BUS_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_CTRL_BUS_CACHE_VALUE)
    port map (
        AWVALID => m_axi_CTRL_BUS_AWVALID,
        AWREADY => m_axi_CTRL_BUS_AWREADY,
        AWADDR => m_axi_CTRL_BUS_AWADDR,
        AWID => m_axi_CTRL_BUS_AWID,
        AWLEN => m_axi_CTRL_BUS_AWLEN,
        AWSIZE => m_axi_CTRL_BUS_AWSIZE,
        AWBURST => m_axi_CTRL_BUS_AWBURST,
        AWLOCK => m_axi_CTRL_BUS_AWLOCK,
        AWCACHE => m_axi_CTRL_BUS_AWCACHE,
        AWPROT => m_axi_CTRL_BUS_AWPROT,
        AWQOS => m_axi_CTRL_BUS_AWQOS,
        AWREGION => m_axi_CTRL_BUS_AWREGION,
        AWUSER => m_axi_CTRL_BUS_AWUSER,
        WVALID => m_axi_CTRL_BUS_WVALID,
        WREADY => m_axi_CTRL_BUS_WREADY,
        WDATA => m_axi_CTRL_BUS_WDATA,
        WSTRB => m_axi_CTRL_BUS_WSTRB,
        WLAST => m_axi_CTRL_BUS_WLAST,
        WID => m_axi_CTRL_BUS_WID,
        WUSER => m_axi_CTRL_BUS_WUSER,
        ARVALID => m_axi_CTRL_BUS_ARVALID,
        ARREADY => m_axi_CTRL_BUS_ARREADY,
        ARADDR => m_axi_CTRL_BUS_ARADDR,
        ARID => m_axi_CTRL_BUS_ARID,
        ARLEN => m_axi_CTRL_BUS_ARLEN,
        ARSIZE => m_axi_CTRL_BUS_ARSIZE,
        ARBURST => m_axi_CTRL_BUS_ARBURST,
        ARLOCK => m_axi_CTRL_BUS_ARLOCK,
        ARCACHE => m_axi_CTRL_BUS_ARCACHE,
        ARPROT => m_axi_CTRL_BUS_ARPROT,
        ARQOS => m_axi_CTRL_BUS_ARQOS,
        ARREGION => m_axi_CTRL_BUS_ARREGION,
        ARUSER => m_axi_CTRL_BUS_ARUSER,
        RVALID => m_axi_CTRL_BUS_RVALID,
        RREADY => m_axi_CTRL_BUS_RREADY,
        RDATA => m_axi_CTRL_BUS_RDATA,
        RLAST => m_axi_CTRL_BUS_RLAST,
        RID => m_axi_CTRL_BUS_RID,
        RUSER => m_axi_CTRL_BUS_RUSER,
        RRESP => m_axi_CTRL_BUS_RRESP,
        BVALID => m_axi_CTRL_BUS_BVALID,
        BREADY => m_axi_CTRL_BUS_BREADY,
        BRESP => m_axi_CTRL_BUS_BRESP,
        BID => m_axi_CTRL_BUS_BID,
        BUSER => m_axi_CTRL_BUS_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => CTRL_BUS_ARVALID,
        I_ARREADY => CTRL_BUS_ARREADY,
        I_ARADDR => CTRL_BUS_ARADDR,
        I_ARID => CTRL_BUS_ARID,
        I_ARLEN => CTRL_BUS_ARLEN,
        I_ARSIZE => CTRL_BUS_ARSIZE,
        I_ARLOCK => CTRL_BUS_ARLOCK,
        I_ARCACHE => CTRL_BUS_ARCACHE,
        I_ARQOS => CTRL_BUS_ARQOS,
        I_ARPROT => CTRL_BUS_ARPROT,
        I_ARUSER => CTRL_BUS_ARUSER,
        I_ARBURST => CTRL_BUS_ARBURST,
        I_ARREGION => CTRL_BUS_ARREGION,
        I_RVALID => CTRL_BUS_RVALID,
        I_RREADY => CTRL_BUS_RREADY,
        I_RDATA => CTRL_BUS_RDATA,
        I_RID => CTRL_BUS_RID,
        I_RUSER => CTRL_BUS_RUSER,
        I_RRESP => CTRL_BUS_RRESP,
        I_RLAST => CTRL_BUS_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => CTRL_BUS_AWREADY,
        I_AWADDR => ap_const_lv32_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => CTRL_BUS_WREADY,
        I_WDATA => ap_const_lv16_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv2_0,
        I_BVALID => CTRL_BUS_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => CTRL_BUS_BRESP,
        I_BID => CTRL_BUS_BID,
        I_BUSER => CTRL_BUS_BUSER);

    count_U : component solution_count
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => count_address0,
        ce0 => count_ce0,
        we0 => count_we0,
        d0 => count_d0,
        q0 => count_q0);

    grp_get_coordcube_fu_978 : component get_coordcube
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_get_coordcube_fu_978_ap_start,
        ap_done => grp_get_coordcube_fu_978_ap_done,
        ap_idle => grp_get_coordcube_fu_978_ap_idle,
        ap_ready => grp_get_coordcube_fu_978_ap_ready,
        cubiecube_0_cp_address0 => grp_get_coordcube_fu_978_cubiecube_0_cp_address0,
        cubiecube_0_cp_ce0 => grp_get_coordcube_fu_978_cubiecube_0_cp_ce0,
        cubiecube_0_cp_q0 => ccRet_cp_0_q0,
        cubiecube_0_co_address0 => grp_get_coordcube_fu_978_cubiecube_0_co_address0,
        cubiecube_0_co_ce0 => grp_get_coordcube_fu_978_cubiecube_0_co_ce0,
        cubiecube_0_co_q0 => ccRet_co_0_q0,
        cubiecube_0_ep_address0 => grp_get_coordcube_fu_978_cubiecube_0_ep_address0,
        cubiecube_0_ep_ce0 => grp_get_coordcube_fu_978_cubiecube_0_ep_ce0,
        cubiecube_0_ep_q0 => ccRet_ep_0_q0,
        cubiecube_0_eo_address0 => grp_get_coordcube_fu_978_cubiecube_0_eo_address0,
        cubiecube_0_eo_ce0 => grp_get_coordcube_fu_978_cubiecube_0_eo_ce0,
        cubiecube_0_eo_q0 => ccRet_eo_0_q0,
        result_twist_0 => grp_get_coordcube_fu_978_result_twist_0,
        result_twist_0_ap_vld => grp_get_coordcube_fu_978_result_twist_0_ap_vld,
        result_flip_0 => grp_get_coordcube_fu_978_result_flip_0,
        result_flip_0_ap_vld => grp_get_coordcube_fu_978_result_flip_0_ap_vld,
        result_parity_0 => grp_get_coordcube_fu_978_result_parity_0,
        result_parity_0_ap_vld => grp_get_coordcube_fu_978_result_parity_0_ap_vld,
        result_FRtoBR_0 => grp_get_coordcube_fu_978_result_FRtoBR_0,
        result_FRtoBR_0_ap_vld => grp_get_coordcube_fu_978_result_FRtoBR_0_ap_vld,
        result_URFtoDLF_0 => grp_get_coordcube_fu_978_result_URFtoDLF_0,
        result_URFtoDLF_0_ap_vld => grp_get_coordcube_fu_978_result_URFtoDLF_0_ap_vld,
        result_URtoUL_0 => grp_get_coordcube_fu_978_result_URtoUL_0,
        result_URtoUL_0_ap_vld => grp_get_coordcube_fu_978_result_URtoUL_0_ap_vld,
        result_UBtoDF_0 => grp_get_coordcube_fu_978_result_UBtoDF_0,
        result_UBtoDF_0_ap_vld => grp_get_coordcube_fu_978_result_UBtoDF_0_ap_vld);

    grp_totalDepth_fu_1004 : component totalDepth
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_totalDepth_fu_1004_ap_start,
        ap_done => grp_totalDepth_fu_1004_ap_done,
        ap_idle => grp_totalDepth_fu_1004_ap_idle,
        ap_ready => grp_totalDepth_fu_1004_ap_ready,
        search_0_ax_address0 => grp_totalDepth_fu_1004_search_0_ax_address0,
        search_0_ax_ce0 => grp_totalDepth_fu_1004_search_0_ax_ce0,
        search_0_ax_we0 => grp_totalDepth_fu_1004_search_0_ax_we0,
        search_0_ax_d0 => grp_totalDepth_fu_1004_search_0_ax_d0,
        search_0_ax_q0 => search_ax_0_q0,
        search_0_po_address0 => grp_totalDepth_fu_1004_search_0_po_address0,
        search_0_po_ce0 => grp_totalDepth_fu_1004_search_0_po_ce0,
        search_0_po_we0 => grp_totalDepth_fu_1004_search_0_po_we0,
        search_0_po_d0 => grp_totalDepth_fu_1004_search_0_po_d0,
        search_0_po_q0 => search_po_0_q0,
        search_0_parity_address0 => grp_totalDepth_fu_1004_search_0_parity_address0,
        search_0_parity_ce0 => grp_totalDepth_fu_1004_search_0_parity_ce0,
        search_0_parity_we0 => grp_totalDepth_fu_1004_search_0_parity_we0,
        search_0_parity_d0 => grp_totalDepth_fu_1004_search_0_parity_d0,
        search_0_parity_q0 => search_parity_0_q0,
        search_0_URFtoDLF_address0 => grp_totalDepth_fu_1004_search_0_URFtoDLF_address0,
        search_0_URFtoDLF_ce0 => grp_totalDepth_fu_1004_search_0_URFtoDLF_ce0,
        search_0_URFtoDLF_we0 => grp_totalDepth_fu_1004_search_0_URFtoDLF_we0,
        search_0_URFtoDLF_d0 => grp_totalDepth_fu_1004_search_0_URFtoDLF_d0,
        search_0_URFtoDLF_q0 => search_URFtoDLF_0_q0,
        search_0_FRtoBR_address0 => grp_totalDepth_fu_1004_search_0_FRtoBR_address0,
        search_0_FRtoBR_ce0 => grp_totalDepth_fu_1004_search_0_FRtoBR_ce0,
        search_0_FRtoBR_we0 => grp_totalDepth_fu_1004_search_0_FRtoBR_we0,
        search_0_FRtoBR_d0 => grp_totalDepth_fu_1004_search_0_FRtoBR_d0,
        search_0_FRtoBR_q0 => search_FRtoBR_0_q0,
        search_0_URtoUL_address0 => grp_totalDepth_fu_1004_search_0_URtoUL_address0,
        search_0_URtoUL_ce0 => grp_totalDepth_fu_1004_search_0_URtoUL_ce0,
        search_0_URtoUL_we0 => grp_totalDepth_fu_1004_search_0_URtoUL_we0,
        search_0_URtoUL_d0 => grp_totalDepth_fu_1004_search_0_URtoUL_d0,
        search_0_URtoUL_q0 => search_URtoUL_0_q0,
        search_0_UBtoDF_address0 => grp_totalDepth_fu_1004_search_0_UBtoDF_address0,
        search_0_UBtoDF_ce0 => grp_totalDepth_fu_1004_search_0_UBtoDF_ce0,
        search_0_UBtoDF_we0 => grp_totalDepth_fu_1004_search_0_UBtoDF_we0,
        search_0_UBtoDF_d0 => grp_totalDepth_fu_1004_search_0_UBtoDF_d0,
        search_0_UBtoDF_q0 => search_UBtoDF_0_q0,
        depthPhase1 => reg_1148,
        maxDepth => maxDepth_read_reg_2169,
        m_axi_FRtoBR_Move2_AWVALID => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_AWVALID,
        m_axi_FRtoBR_Move2_AWREADY => ap_const_logic_0,
        m_axi_FRtoBR_Move2_AWADDR => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_AWADDR,
        m_axi_FRtoBR_Move2_AWID => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_AWID,
        m_axi_FRtoBR_Move2_AWLEN => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_AWLEN,
        m_axi_FRtoBR_Move2_AWSIZE => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_AWSIZE,
        m_axi_FRtoBR_Move2_AWBURST => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_AWBURST,
        m_axi_FRtoBR_Move2_AWLOCK => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_AWLOCK,
        m_axi_FRtoBR_Move2_AWCACHE => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_AWCACHE,
        m_axi_FRtoBR_Move2_AWPROT => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_AWPROT,
        m_axi_FRtoBR_Move2_AWQOS => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_AWQOS,
        m_axi_FRtoBR_Move2_AWREGION => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_AWREGION,
        m_axi_FRtoBR_Move2_AWUSER => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_AWUSER,
        m_axi_FRtoBR_Move2_WVALID => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_WVALID,
        m_axi_FRtoBR_Move2_WREADY => ap_const_logic_0,
        m_axi_FRtoBR_Move2_WDATA => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_WDATA,
        m_axi_FRtoBR_Move2_WSTRB => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_WSTRB,
        m_axi_FRtoBR_Move2_WLAST => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_WLAST,
        m_axi_FRtoBR_Move2_WID => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_WID,
        m_axi_FRtoBR_Move2_WUSER => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_WUSER,
        m_axi_FRtoBR_Move2_ARVALID => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARVALID,
        m_axi_FRtoBR_Move2_ARREADY => CTRL_BUS_ARREADY,
        m_axi_FRtoBR_Move2_ARADDR => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARADDR,
        m_axi_FRtoBR_Move2_ARID => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARID,
        m_axi_FRtoBR_Move2_ARLEN => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARLEN,
        m_axi_FRtoBR_Move2_ARSIZE => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARSIZE,
        m_axi_FRtoBR_Move2_ARBURST => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARBURST,
        m_axi_FRtoBR_Move2_ARLOCK => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARLOCK,
        m_axi_FRtoBR_Move2_ARCACHE => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARCACHE,
        m_axi_FRtoBR_Move2_ARPROT => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARPROT,
        m_axi_FRtoBR_Move2_ARQOS => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARQOS,
        m_axi_FRtoBR_Move2_ARREGION => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARREGION,
        m_axi_FRtoBR_Move2_ARUSER => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARUSER,
        m_axi_FRtoBR_Move2_RVALID => CTRL_BUS_RVALID,
        m_axi_FRtoBR_Move2_RREADY => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_RREADY,
        m_axi_FRtoBR_Move2_RDATA => CTRL_BUS_RDATA,
        m_axi_FRtoBR_Move2_RLAST => CTRL_BUS_RLAST,
        m_axi_FRtoBR_Move2_RID => CTRL_BUS_RID,
        m_axi_FRtoBR_Move2_RUSER => CTRL_BUS_RUSER,
        m_axi_FRtoBR_Move2_RRESP => CTRL_BUS_RRESP,
        m_axi_FRtoBR_Move2_BVALID => ap_const_logic_0,
        m_axi_FRtoBR_Move2_BREADY => grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_BREADY,
        m_axi_FRtoBR_Move2_BRESP => ap_const_lv2_0,
        m_axi_FRtoBR_Move2_BID => ap_const_lv1_0,
        m_axi_FRtoBR_Move2_BUSER => ap_const_lv1_0,
        FRtoBR_Move2_offset => FRtoBR_Move_reg_2219,
        URFtoDLF_Move2_offset => URFtoDLF_Move_reg_2214,
        URtoDF_Move2_offset => URtoDF_Move_reg_2209,
        URtoUL_Move2_offset => URtoUL_Move_reg_2204,
        UBtoDF_Move2_offset => UBtoDF_Move_reg_2199,
        MergeURtoULandUBtoDF2_offset => MergeURtoULandUBtoDF_reg_2194,
        Slice_URFtoDLF_Parity_Prun2_offset => Slice_URFtoDLF_Parit_reg_2189,
        Slice_URtoDF_Parity_Prun2_offset => Slice_URtoDF_Parity_s_reg_2184,
        ap_return => grp_totalDepth_fu_1004_ap_return);

    grp_verify_fu_1040 : component verify
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_verify_fu_1040_ap_start,
        ap_done => grp_verify_fu_1040_ap_done,
        ap_idle => grp_verify_fu_1040_ap_idle,
        ap_ready => grp_verify_fu_1040_ap_ready,
        cubiecube_0_cp_address0 => grp_verify_fu_1040_cubiecube_0_cp_address0,
        cubiecube_0_cp_ce0 => grp_verify_fu_1040_cubiecube_0_cp_ce0,
        cubiecube_0_cp_q0 => ccRet_cp_0_q0,
        cubiecube_0_co_address0 => grp_verify_fu_1040_cubiecube_0_co_address0,
        cubiecube_0_co_ce0 => grp_verify_fu_1040_cubiecube_0_co_ce0,
        cubiecube_0_co_q0 => ccRet_co_0_q0,
        cubiecube_0_ep_address0 => grp_verify_fu_1040_cubiecube_0_ep_address0,
        cubiecube_0_ep_ce0 => grp_verify_fu_1040_cubiecube_0_ep_ce0,
        cubiecube_0_ep_q0 => ccRet_ep_0_q0,
        cubiecube_0_eo_address0 => grp_verify_fu_1040_cubiecube_0_eo_address0,
        cubiecube_0_eo_ce0 => grp_verify_fu_1040_cubiecube_0_eo_ce0,
        cubiecube_0_eo_q0 => ccRet_eo_0_q0,
        ap_return => grp_verify_fu_1040_ap_return);

    grp_toCubieCube_fu_1052 : component toCubieCube
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_toCubieCube_fu_1052_ap_start,
        ap_done => grp_toCubieCube_fu_1052_ap_done,
        ap_idle => grp_toCubieCube_fu_1052_ap_idle,
        ap_ready => grp_toCubieCube_fu_1052_ap_ready,
        facecube_0_f_address0 => grp_toCubieCube_fu_1052_facecube_0_f_address0,
        facecube_0_f_ce0 => grp_toCubieCube_fu_1052_facecube_0_f_ce0,
        facecube_0_f_q0 => res_f_0_q0,
        facecube_0_f_address1 => grp_toCubieCube_fu_1052_facecube_0_f_address1,
        facecube_0_f_ce1 => grp_toCubieCube_fu_1052_facecube_0_f_ce1,
        facecube_0_f_q1 => res_f_0_q1,
        ccRet_cp_0_address0 => grp_toCubieCube_fu_1052_ccRet_cp_0_address0,
        ccRet_cp_0_ce0 => grp_toCubieCube_fu_1052_ccRet_cp_0_ce0,
        ccRet_cp_0_we0 => grp_toCubieCube_fu_1052_ccRet_cp_0_we0,
        ccRet_cp_0_d0 => grp_toCubieCube_fu_1052_ccRet_cp_0_d0,
        ccRet_ep_0_address0 => grp_toCubieCube_fu_1052_ccRet_ep_0_address0,
        ccRet_ep_0_ce0 => grp_toCubieCube_fu_1052_ccRet_ep_0_ce0,
        ccRet_ep_0_we0 => grp_toCubieCube_fu_1052_ccRet_ep_0_we0,
        ccRet_ep_0_d0 => grp_toCubieCube_fu_1052_ccRet_ep_0_d0,
        ccRet_co_0_address0 => grp_toCubieCube_fu_1052_ccRet_co_0_address0,
        ccRet_co_0_ce0 => grp_toCubieCube_fu_1052_ccRet_co_0_ce0,
        ccRet_co_0_we0 => grp_toCubieCube_fu_1052_ccRet_co_0_we0,
        ccRet_co_0_d0 => grp_toCubieCube_fu_1052_ccRet_co_0_d0,
        ccRet_eo_0_address0 => grp_toCubieCube_fu_1052_ccRet_eo_0_address0,
        ccRet_eo_0_ce0 => grp_toCubieCube_fu_1052_ccRet_eo_0_ce0,
        ccRet_eo_0_we0 => grp_toCubieCube_fu_1052_ccRet_eo_0_we0,
        ccRet_eo_0_d0 => grp_toCubieCube_fu_1052_ccRet_eo_0_d0);

    grp_solutionToString_fu_1080 : component solutionToString
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_solutionToString_fu_1080_ap_start,
        ap_done => grp_solutionToString_fu_1080_ap_done,
        ap_idle => grp_solutionToString_fu_1080_ap_idle,
        ap_ready => grp_solutionToString_fu_1080_ap_ready,
        search_0_ax_address0 => grp_solutionToString_fu_1080_search_0_ax_address0,
        search_0_ax_ce0 => grp_solutionToString_fu_1080_search_0_ax_ce0,
        search_0_ax_q0 => search_ax_0_q0,
        search_0_po_address0 => grp_solutionToString_fu_1080_search_0_po_address0,
        search_0_po_ce0 => grp_solutionToString_fu_1080_search_0_po_ce0,
        search_0_po_q0 => search_po_0_q0,
        length_r => s_2_reg_2677,
        encode_array_address0 => grp_solutionToString_fu_1080_encode_array_address0,
        encode_array_ce0 => grp_solutionToString_fu_1080_encode_array_ce0,
        encode_array_we0 => grp_solutionToString_fu_1080_encode_array_we0,
        encode_array_d0 => grp_solutionToString_fu_1080_encode_array_d0);

    grp_getPruning_2_fu_1091 : component getPruning_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_getPruning_2_fu_1091_ap_start,
        ap_done => grp_getPruning_2_fu_1091_ap_done,
        ap_idle => grp_getPruning_2_fu_1091_ap_idle,
        ap_ready => grp_getPruning_2_fu_1091_ap_ready,
        m_axi_table_r_AWVALID => grp_getPruning_2_fu_1091_m_axi_table_r_AWVALID,
        m_axi_table_r_AWREADY => ap_const_logic_0,
        m_axi_table_r_AWADDR => grp_getPruning_2_fu_1091_m_axi_table_r_AWADDR,
        m_axi_table_r_AWID => grp_getPruning_2_fu_1091_m_axi_table_r_AWID,
        m_axi_table_r_AWLEN => grp_getPruning_2_fu_1091_m_axi_table_r_AWLEN,
        m_axi_table_r_AWSIZE => grp_getPruning_2_fu_1091_m_axi_table_r_AWSIZE,
        m_axi_table_r_AWBURST => grp_getPruning_2_fu_1091_m_axi_table_r_AWBURST,
        m_axi_table_r_AWLOCK => grp_getPruning_2_fu_1091_m_axi_table_r_AWLOCK,
        m_axi_table_r_AWCACHE => grp_getPruning_2_fu_1091_m_axi_table_r_AWCACHE,
        m_axi_table_r_AWPROT => grp_getPruning_2_fu_1091_m_axi_table_r_AWPROT,
        m_axi_table_r_AWQOS => grp_getPruning_2_fu_1091_m_axi_table_r_AWQOS,
        m_axi_table_r_AWREGION => grp_getPruning_2_fu_1091_m_axi_table_r_AWREGION,
        m_axi_table_r_AWUSER => grp_getPruning_2_fu_1091_m_axi_table_r_AWUSER,
        m_axi_table_r_WVALID => grp_getPruning_2_fu_1091_m_axi_table_r_WVALID,
        m_axi_table_r_WREADY => ap_const_logic_0,
        m_axi_table_r_WDATA => grp_getPruning_2_fu_1091_m_axi_table_r_WDATA,
        m_axi_table_r_WSTRB => grp_getPruning_2_fu_1091_m_axi_table_r_WSTRB,
        m_axi_table_r_WLAST => grp_getPruning_2_fu_1091_m_axi_table_r_WLAST,
        m_axi_table_r_WID => grp_getPruning_2_fu_1091_m_axi_table_r_WID,
        m_axi_table_r_WUSER => grp_getPruning_2_fu_1091_m_axi_table_r_WUSER,
        m_axi_table_r_ARVALID => grp_getPruning_2_fu_1091_m_axi_table_r_ARVALID,
        m_axi_table_r_ARREADY => CTRL_BUS_ARREADY,
        m_axi_table_r_ARADDR => grp_getPruning_2_fu_1091_m_axi_table_r_ARADDR,
        m_axi_table_r_ARID => grp_getPruning_2_fu_1091_m_axi_table_r_ARID,
        m_axi_table_r_ARLEN => grp_getPruning_2_fu_1091_m_axi_table_r_ARLEN,
        m_axi_table_r_ARSIZE => grp_getPruning_2_fu_1091_m_axi_table_r_ARSIZE,
        m_axi_table_r_ARBURST => grp_getPruning_2_fu_1091_m_axi_table_r_ARBURST,
        m_axi_table_r_ARLOCK => grp_getPruning_2_fu_1091_m_axi_table_r_ARLOCK,
        m_axi_table_r_ARCACHE => grp_getPruning_2_fu_1091_m_axi_table_r_ARCACHE,
        m_axi_table_r_ARPROT => grp_getPruning_2_fu_1091_m_axi_table_r_ARPROT,
        m_axi_table_r_ARQOS => grp_getPruning_2_fu_1091_m_axi_table_r_ARQOS,
        m_axi_table_r_ARREGION => grp_getPruning_2_fu_1091_m_axi_table_r_ARREGION,
        m_axi_table_r_ARUSER => grp_getPruning_2_fu_1091_m_axi_table_r_ARUSER,
        m_axi_table_r_RVALID => CTRL_BUS_RVALID,
        m_axi_table_r_RREADY => grp_getPruning_2_fu_1091_m_axi_table_r_RREADY,
        m_axi_table_r_RDATA => CTRL_BUS_RDATA,
        m_axi_table_r_RLAST => CTRL_BUS_RLAST,
        m_axi_table_r_RID => CTRL_BUS_RID,
        m_axi_table_r_RUSER => CTRL_BUS_RUSER,
        m_axi_table_r_RRESP => CTRL_BUS_RRESP,
        m_axi_table_r_BVALID => ap_const_logic_0,
        m_axi_table_r_BREADY => grp_getPruning_2_fu_1091_m_axi_table_r_BREADY,
        m_axi_table_r_BRESP => ap_const_lv2_0,
        m_axi_table_r_BID => ap_const_lv1_0,
        m_axi_table_r_BUSER => ap_const_lv1_0,
        table_offset => Slice_Flip_Prun_reg_2174,
        index => tmp_221_reg_2644,
        ap_return => grp_getPruning_2_fu_1091_ap_return);

    grp_getPruning_1_fu_1099 : component getPruning_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_getPruning_1_fu_1099_ap_start,
        ap_done => grp_getPruning_1_fu_1099_ap_done,
        ap_idle => grp_getPruning_1_fu_1099_ap_idle,
        ap_ready => grp_getPruning_1_fu_1099_ap_ready,
        m_axi_table_r_AWVALID => grp_getPruning_1_fu_1099_m_axi_table_r_AWVALID,
        m_axi_table_r_AWREADY => ap_const_logic_0,
        m_axi_table_r_AWADDR => grp_getPruning_1_fu_1099_m_axi_table_r_AWADDR,
        m_axi_table_r_AWID => grp_getPruning_1_fu_1099_m_axi_table_r_AWID,
        m_axi_table_r_AWLEN => grp_getPruning_1_fu_1099_m_axi_table_r_AWLEN,
        m_axi_table_r_AWSIZE => grp_getPruning_1_fu_1099_m_axi_table_r_AWSIZE,
        m_axi_table_r_AWBURST => grp_getPruning_1_fu_1099_m_axi_table_r_AWBURST,
        m_axi_table_r_AWLOCK => grp_getPruning_1_fu_1099_m_axi_table_r_AWLOCK,
        m_axi_table_r_AWCACHE => grp_getPruning_1_fu_1099_m_axi_table_r_AWCACHE,
        m_axi_table_r_AWPROT => grp_getPruning_1_fu_1099_m_axi_table_r_AWPROT,
        m_axi_table_r_AWQOS => grp_getPruning_1_fu_1099_m_axi_table_r_AWQOS,
        m_axi_table_r_AWREGION => grp_getPruning_1_fu_1099_m_axi_table_r_AWREGION,
        m_axi_table_r_AWUSER => grp_getPruning_1_fu_1099_m_axi_table_r_AWUSER,
        m_axi_table_r_WVALID => grp_getPruning_1_fu_1099_m_axi_table_r_WVALID,
        m_axi_table_r_WREADY => ap_const_logic_0,
        m_axi_table_r_WDATA => grp_getPruning_1_fu_1099_m_axi_table_r_WDATA,
        m_axi_table_r_WSTRB => grp_getPruning_1_fu_1099_m_axi_table_r_WSTRB,
        m_axi_table_r_WLAST => grp_getPruning_1_fu_1099_m_axi_table_r_WLAST,
        m_axi_table_r_WID => grp_getPruning_1_fu_1099_m_axi_table_r_WID,
        m_axi_table_r_WUSER => grp_getPruning_1_fu_1099_m_axi_table_r_WUSER,
        m_axi_table_r_ARVALID => grp_getPruning_1_fu_1099_m_axi_table_r_ARVALID,
        m_axi_table_r_ARREADY => CTRL_BUS_ARREADY,
        m_axi_table_r_ARADDR => grp_getPruning_1_fu_1099_m_axi_table_r_ARADDR,
        m_axi_table_r_ARID => grp_getPruning_1_fu_1099_m_axi_table_r_ARID,
        m_axi_table_r_ARLEN => grp_getPruning_1_fu_1099_m_axi_table_r_ARLEN,
        m_axi_table_r_ARSIZE => grp_getPruning_1_fu_1099_m_axi_table_r_ARSIZE,
        m_axi_table_r_ARBURST => grp_getPruning_1_fu_1099_m_axi_table_r_ARBURST,
        m_axi_table_r_ARLOCK => grp_getPruning_1_fu_1099_m_axi_table_r_ARLOCK,
        m_axi_table_r_ARCACHE => grp_getPruning_1_fu_1099_m_axi_table_r_ARCACHE,
        m_axi_table_r_ARPROT => grp_getPruning_1_fu_1099_m_axi_table_r_ARPROT,
        m_axi_table_r_ARQOS => grp_getPruning_1_fu_1099_m_axi_table_r_ARQOS,
        m_axi_table_r_ARREGION => grp_getPruning_1_fu_1099_m_axi_table_r_ARREGION,
        m_axi_table_r_ARUSER => grp_getPruning_1_fu_1099_m_axi_table_r_ARUSER,
        m_axi_table_r_RVALID => CTRL_BUS_RVALID,
        m_axi_table_r_RREADY => grp_getPruning_1_fu_1099_m_axi_table_r_RREADY,
        m_axi_table_r_RDATA => CTRL_BUS_RDATA,
        m_axi_table_r_RLAST => CTRL_BUS_RLAST,
        m_axi_table_r_RID => CTRL_BUS_RID,
        m_axi_table_r_RUSER => CTRL_BUS_RUSER,
        m_axi_table_r_RRESP => CTRL_BUS_RRESP,
        m_axi_table_r_BVALID => ap_const_logic_0,
        m_axi_table_r_BREADY => grp_getPruning_1_fu_1099_m_axi_table_r_BREADY,
        m_axi_table_r_BRESP => ap_const_lv2_0,
        m_axi_table_r_BID => ap_const_lv1_0,
        m_axi_table_r_BUSER => ap_const_lv1_0,
        table_offset => Slice_Twist_Prun_reg_2179,
        index => tmp_224_reg_2649,
        ap_return => grp_getPruning_1_fu_1099_ap_return);

    grp_get_facecube_fromstr_fu_1107 : component get_facecube_fromstr
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_get_facecube_fromstr_fu_1107_ap_start,
        ap_done => grp_get_facecube_fromstr_fu_1107_ap_done,
        ap_idle => grp_get_facecube_fromstr_fu_1107_ap_idle,
        ap_ready => grp_get_facecube_fromstr_fu_1107_ap_ready,
        cubeString_address0 => grp_get_facecube_fromstr_fu_1107_cubeString_address0,
        cubeString_ce0 => grp_get_facecube_fromstr_fu_1107_cubeString_ce0,
        cubeString_q0 => facelets_q0,
        res_f_0_address0 => grp_get_facecube_fromstr_fu_1107_res_f_0_address0,
        res_f_0_ce0 => grp_get_facecube_fromstr_fu_1107_res_f_0_ce0,
        res_f_0_we0 => grp_get_facecube_fromstr_fu_1107_res_f_0_we0,
        res_f_0_d0 => grp_get_facecube_fromstr_fu_1107_res_f_0_d0);

    solution_mul_mul_Aem_U107 : component solution_mul_mul_Aem
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 16,
        dout_WIDTH => 34)
    port map (
        din0 => mul_fu_2129_p0,
        din1 => result_FRtoBR_0,
        dout => mul_fu_2129_p2);

    solution_mac_mulaBew_U108 : component solution_mac_mulaBew
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 26,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv26_1B0,
        din1 => search_slice_0_load_reg_2588,
        din2 => mv_reg_2569,
        dout => grp_fu_2137_p3);

    solution_mul_mul_Aem_U109 : component solution_mul_mul_Aem
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 16,
        dout_WIDTH => 34)
    port map (
        din0 => mul1_fu_2145_p0,
        din1 => CTRL_BUS_addr_2_read_reg_2623,
        dout => mul1_fu_2145_p2);

    solution_mac_mulaCeG_U110 : component solution_mac_mulaCeG
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 16,
        din2_WIDTH => 15,
        dout_WIDTH => 25)
    port map (
        din0 => grp_fu_2153_p0,
        din1 => CTRL_BUS_addr_read_reg_2611,
        din2 => grp_fu_2153_p2,
        dout => grp_fu_2153_p3);

    solution_mac_mulaCeG_U111 : component solution_mac_mulaCeG
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 16,
        din2_WIDTH => 15,
        dout_WIDTH => 25)
    port map (
        din0 => grp_fu_2161_p0,
        din1 => CTRL_BUS_addr_1_read_reg_2617,
        din2 => grp_fu_2161_p2,
        dout => grp_fu_2161_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ioackin_CTRL_BUS_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_CTRL_BUS_ARREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state39) and (ap_sig_ioackin_CTRL_BUS_ARREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state38) and (ap_sig_ioackin_CTRL_BUS_ARREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state37) and (ap_sig_ioackin_CTRL_BUS_ARREADY = ap_const_logic_1)))) then 
                    ap_reg_ioackin_CTRL_BUS_ARREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = CTRL_BUS_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state39)) or ((ap_const_logic_1 = CTRL_BUS_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((ap_const_logic_1 = CTRL_BUS_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state37)))) then 
                    ap_reg_ioackin_CTRL_BUS_ARREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_getPruning_1_fu_1099_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_getPruning_1_fu_1099_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                    grp_getPruning_1_fu_1099_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_getPruning_1_fu_1099_ap_ready = ap_const_logic_1)) then 
                    grp_getPruning_1_fu_1099_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_getPruning_2_fu_1091_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_getPruning_2_fu_1091_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
                    grp_getPruning_2_fu_1091_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_getPruning_2_fu_1091_ap_ready = ap_const_logic_1)) then 
                    grp_getPruning_2_fu_1091_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_get_coordcube_fu_978_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_get_coordcube_fu_978_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                    grp_get_coordcube_fu_978_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_get_coordcube_fu_978_ap_ready = ap_const_logic_1)) then 
                    grp_get_coordcube_fu_978_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_get_facecube_fromstr_fu_1107_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_get_facecube_fromstr_fu_1107_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_176_fu_1469_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                    grp_get_facecube_fromstr_fu_1107_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_get_facecube_fromstr_fu_1107_ap_ready = ap_const_logic_1)) then 
                    grp_get_facecube_fromstr_fu_1107_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_solutionToString_fu_1080_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_solutionToString_fu_1080_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
                    grp_solutionToString_fu_1080_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_solutionToString_fu_1080_ap_ready = ap_const_logic_1)) then 
                    grp_solutionToString_fu_1080_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_toCubieCube_fu_1052_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_toCubieCube_fu_1052_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                    grp_toCubieCube_fu_1052_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_toCubieCube_fu_1052_ap_ready = ap_const_logic_1)) then 
                    grp_toCubieCube_fu_1052_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_totalDepth_fu_1004_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_totalDepth_fu_1004_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_231_reg_2673 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then 
                    grp_totalDepth_fu_1004_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_totalDepth_fu_1004_ap_ready = ap_const_logic_1)) then 
                    grp_totalDepth_fu_1004_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_verify_fu_1040_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_verify_fu_1040_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                    grp_verify_fu_1040_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_verify_fu_1040_ap_ready = ap_const_logic_1)) then 
                    grp_verify_fu_1040_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    busy_1_reg_934_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state56) and ((tmp_254_reg_2683 = ap_const_lv1_1) or (tmp_229_reg_2669 = ap_const_lv1_1) or (or_cond2_fu_2119_p2 = ap_const_lv1_1) or (busy_4_reg_954 = ap_const_lv1_1) or (tmp_231_reg_2673 = ap_const_lv1_0) or (tmp_227_reg_2665 = ap_const_lv1_0)))) then 
                busy_1_reg_934 <= busy_4_reg_954;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                busy_1_reg_934 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    busy_4_reg_954_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_204_fu_1723_p2 = ap_const_lv1_1) and (tmp_199_reg_2496 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                busy_4_reg_954 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state33) or ((tmp_204_reg_2530 = ap_const_lv1_1) and (tmp_199_reg_2496 = ap_const_lv1_1) and (icmp_reg_2487 = ap_const_lv1_1) and (or_cond_reg_2468 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (((tmp_199_reg_2496 = ap_const_lv1_1) and (tmp_204_fu_1723_p2 = ap_const_lv1_0)) or ((tmp_204_fu_1723_p2 = ap_const_lv1_0) and (or_cond1_fu_1739_p2 = ap_const_lv1_0)))) or ((icmp_fu_1687_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29)))) then 
                busy_4_reg_954 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    complete_reg_900_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_148_fu_1300_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                complete_reg_900 <= ap_const_lv1_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                complete_reg_900 <= complete_1_fu_1446_p2;
            end if; 
        end if;
    end process;

    depthPhase1_1_fu_380_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_205_fu_1749_p2 = ap_const_lv1_1) and (tmp_204_fu_1723_p2 = ap_const_lv1_1) and (tmp_199_reg_2496 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                depthPhase1_1_fu_380 <= depthPhase1_fu_1754_p2;
            elsif (((grp_verify_fu_1040_ap_done = ap_const_logic_1) and (tmp_185_fu_1492_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                depthPhase1_1_fu_380 <= ap_const_lv32_1;
            end if; 
        end if;
    end process;

    i_1_reg_912_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_complete_phi_fu_904_p4 = ap_const_lv1_0) and (exitcond2_fu_1306_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_1_reg_912 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                i_1_reg_912 <= i_15_reg_2390;
            end if; 
        end if;
    end process;

    i_2_reg_923_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_1452_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                i_2_reg_923 <= ap_const_lv3_0;
            elsif (((tmp_184_fu_1486_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                i_2_reg_923 <= i_5_reg_2404;
            end if; 
        end if;
    end process;

    i_reg_889_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_148_fu_1300_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_reg_889 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                i_reg_889 <= i_14_reg_2255;
            end if; 
        end if;
    end process;

    invdar_reg_878_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_148_fu_1300_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                invdar_reg_878 <= indvarinc_fu_1289_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                invdar_reg_878 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    n_1_fu_384_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                n_1_fu_384 <= n_3_reg_2452;
            elsif (((tmp_204_fu_1723_p2 = ap_const_lv1_1) and (tmp_199_reg_2496 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                n_1_fu_384 <= n_reg_2500;
            elsif ((((tmp_205_fu_1749_p2 = ap_const_lv1_1) and (tmp_204_fu_1723_p2 = ap_const_lv1_1) and (tmp_199_reg_2496 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((grp_verify_fu_1040_ap_done = ap_const_logic_1) and (tmp_185_fu_1492_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
                n_1_fu_384 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    tmp_202_reg_945_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond1_fu_1739_p2 = ap_const_lv1_1) and (tmp_204_fu_1723_p2 = ap_const_lv1_0) and (tmp_199_reg_2496 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                tmp_202_reg_945 <= tmp_203_fu_1716_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                tmp_202_reg_945 <= search_ax_0_q1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = CTRL_BUS_RVALID) and (ap_const_logic_1 = ap_CS_fsm_state45))) then
                CTRL_BUS_addr_1_read_reg_2617 <= CTRL_BUS_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                CTRL_BUS_addr_1_reg_2599 <= twistMove22_sum_cast_fu_1914_p1(32 - 1 downto 0);
                CTRL_BUS_addr_2_reg_2605 <= FRtoBR_Move26_sum_ca_fu_1935_p1(32 - 1 downto 0);
                CTRL_BUS_addr_reg_2593 <= flipMove24_sum_cast_fu_1862_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = CTRL_BUS_RVALID) and (ap_const_logic_1 = ap_CS_fsm_state46))) then
                CTRL_BUS_addr_2_read_reg_2623 <= CTRL_BUS_RDATA;
                tmp_246_reg_2628 <= tmp_246_fu_1945_p1(15 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = CTRL_BUS_RVALID) and (ap_const_logic_1 = ap_CS_fsm_state44))) then
                CTRL_BUS_addr_read_reg_2611 <= CTRL_BUS_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                FRtoBR_Move_reg_2219 <= FRtoBR_Move2(31 downto 1);
                MergeURtoULandUBtoDF_reg_2194 <= MergeURtoULandUBtoDF2(31 downto 1);
                Slice_Flip_Prun_reg_2174 <= Slice_Flip_Prun2(31 downto 1);
                Slice_Twist_Prun_reg_2179 <= Slice_Twist_Prun2(31 downto 1);
                Slice_URFtoDLF_Parit_reg_2189 <= Slice_URFtoDLF_Parity_Prun2(31 downto 1);
                Slice_URtoDF_Parity_s_reg_2184 <= Slice_URtoDF_Parity_Prun2(31 downto 1);
                UBtoDF_Move_reg_2199 <= UBtoDF_Move2(31 downto 1);
                URFtoDLF_Move_reg_2214 <= URFtoDLF_Move2(31 downto 1);
                URtoDF_Move_reg_2209 <= URtoDF_Move2(31 downto 1);
                URtoUL_Move_reg_2204 <= URtoUL_Move2(31 downto 1);
                maxDepth_read_reg_2169 <= maxDepth;
                    tmp_247_cast_reg_2224(30 downto 0) <= tmp_247_cast_fu_1253_p1(30 downto 0);
                    tmp_248_cast_reg_2229(30 downto 0) <= tmp_248_cast_fu_1267_p1(30 downto 0);
                    tmp_249_cast1_reg_2234(30 downto 0) <= tmp_249_cast1_fu_1281_p1(30 downto 0);
                tmp_reg_2239 <= tmp_fu_1285_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                i_14_reg_2255 <= i_14_fu_1312_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                i_15_reg_2390 <= i_15_fu_1458_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                i_5_reg_2404 <= i_5_fu_1475_p2;
                tmp_176_reg_2400 <= tmp_176_fu_1469_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                icmp_reg_2487 <= icmp_fu_1687_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                mv_reg_2569 <= mv_fu_1814_p2;
                search_flip_0_load_reg_2576 <= search_flip_0_q0;
                search_slice_0_load_reg_2588 <= search_slice_0_q0;
                search_twist_0_load_reg_2582 <= search_twist_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                n_3_reg_2452 <= n_3_fu_1625_p2;
                tmp_193_reg_2457 <= tmp_193_fu_1631_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_fu_1687_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                n_reg_2500 <= n_fu_1699_p2;
                search_ax_0_addr_1_reg_2491 <= tmp_196_reg_2472(5 - 1 downto 0);
                tmp_199_reg_2496 <= tmp_199_fu_1693_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                or_cond_reg_2468 <= or_cond_fu_1658_p2;
                tmp_196_reg_2472 <= tmp_196_fu_1664_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state4))) then
                reg_1139 <= facelets_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state27))) then
                reg_1144 <= n_1_fu_384;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((grp_totalDepth_fu_1004_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state54)))) then
                reg_1148 <= depthPhase1_1_fu_380;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_get_coordcube_fu_978_result_FRtoBR_0_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                result_FRtoBR_0 <= grp_get_coordcube_fu_978_result_FRtoBR_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_get_coordcube_fu_978_result_UBtoDF_0_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                result_UBtoDF_0 <= grp_get_coordcube_fu_978_result_UBtoDF_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_get_coordcube_fu_978_result_URFtoDLF_0_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                result_URFtoDLF_0 <= grp_get_coordcube_fu_978_result_URFtoDLF_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_get_coordcube_fu_978_result_URtoUL_0_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                result_URtoUL_0 <= grp_get_coordcube_fu_978_result_URtoUL_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_get_coordcube_fu_978_result_flip_0_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                result_flip_0 <= grp_get_coordcube_fu_978_result_flip_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_get_coordcube_fu_978_result_parity_0_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                result_parity_0 <= grp_get_coordcube_fu_978_result_parity_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_get_coordcube_fu_978_result_twist_0_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                result_twist_0 <= grp_get_coordcube_fu_978_result_twist_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_totalDepth_fu_1004_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
                s_2_reg_2677 <= grp_totalDepth_fu_1004_ap_return;
                tmp_254_reg_2683 <= grp_totalDepth_fu_1004_ap_return(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                search_ax_0_addr_4_reg_2544 <= tmp_208_fu_1787_p1(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                search_ax_0_load_1_reg_2510 <= search_ax_0_q0;
                tmp_201_reg_2515 <= tmp_201_fu_1710_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state48)) then
                search_minDistPhase1_3_reg_2654 <= tmp_213_fu_1977_p1(5 - 1 downto 0);
                tmp_221_reg_2644 <= grp_fu_2153_p3;
                tmp_224_reg_2649 <= grp_fu_2161_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_fu_1658_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                search_po_0_addr_reg_2477 <= tmp_196_fu_1664_p1(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                tmp8_reg_2347 <= tmp8_fu_1390_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_fu_1306_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_149_reg_2260 <= tmp_149_fu_1318_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                tmp_153_reg_2312 <= grp_fu_1115_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                tmp_156_reg_2322 <= grp_fu_1115_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                tmp_159_reg_2332 <= grp_fu_1115_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                tmp_165_reg_2352 <= grp_fu_1115_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                tmp_168_reg_2362 <= grp_fu_1115_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                tmp_171_reg_2372 <= grp_fu_1115_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_verify_fu_1040_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                tmp_185_reg_2417 <= tmp_185_fu_1492_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then
                tmp_204_reg_2530 <= tmp_204_fu_1723_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_204_fu_1723_p2 = ap_const_lv1_1) and (tmp_199_reg_2496 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                tmp_205_reg_2537 <= tmp_205_fu_1749_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                tmp_215_reg_2436 <= tmp_215_fu_1516_p1;
                tmp_218_reg_2441 <= tmp_218_fu_1519_p1(15 downto 15);
                tmp_232_reg_2447 <= mul_fu_2129_p2(33 downto 21);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_getPruning_1_fu_1099_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then
                tmp_227_reg_2665 <= tmp_227_fu_2052_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_getPruning_1_fu_1099_ap_done = ap_const_logic_1) and (tmp_227_fu_2052_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then
                tmp_229_reg_2669 <= tmp_229_fu_2064_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_getPruning_1_fu_1099_ap_done = ap_const_logic_1) and (tmp_227_fu_2052_p2 = ap_const_lv1_1) and (tmp_229_fu_2064_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state52))) then
                tmp_231_reg_2673 <= tmp_231_fu_2076_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_246_reg_2628 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then
                tmp_245_reg_2634 <= tmp_245_fu_1956_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then
                tmp_249_reg_2639 <= mul1_fu_2145_p2(33 downto 21);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_getPruning_2_fu_1091_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state50))) then
                tmp_252_reg_2659 <= grp_getPruning_2_fu_1091_ap_return;
            end if;
        end if;
    end process;
    tmp_247_cast_reg_2224(32 downto 31) <= "00";
    tmp_248_cast_reg_2229(32 downto 31) <= "00";
    tmp_249_cast1_reg_2234(32 downto 31) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state37, ap_CS_fsm_state44, ap_CS_fsm_state38, ap_CS_fsm_state45, ap_CS_fsm_state39, ap_CS_fsm_state46, CTRL_BUS_RVALID, ap_CS_fsm_state28, ap_CS_fsm_state53, ap_CS_fsm_state54, grp_totalDepth_fu_1004_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state3, exitcond2_fu_1306_p2, ap_phi_mux_complete_phi_fu_904_p4, ap_CS_fsm_state13, exitcond_fu_1452_p2, tmp_176_fu_1469_p2, ap_CS_fsm_state16, tmp_185_fu_1492_p2, ap_CS_fsm_state22, grp_verify_fu_1040_ap_done, or_cond_fu_1658_p2, icmp_fu_1687_p2, ap_CS_fsm_state29, tmp_199_reg_2496, ap_CS_fsm_state31, tmp_204_fu_1723_p2, tmp_205_fu_1749_p2, ap_CS_fsm_state50, grp_getPruning_2_fu_1091_ap_done, tmp_227_fu_2052_p2, tmp_227_reg_2665, ap_CS_fsm_state52, grp_getPruning_1_fu_1099_ap_done, tmp_229_fu_2064_p2, tmp_229_reg_2669, tmp_231_reg_2673, tmp_254_fu_2082_p3, tmp_254_reg_2683, grp_get_coordcube_fu_978_ap_done, grp_toCubieCube_fu_1052_ap_done, grp_get_facecube_fromstr_fu_1107_ap_done, tmp_148_fu_1300_p2, ap_CS_fsm_state17, tmp_184_fu_1486_p2, busy_4_reg_954, ap_CS_fsm_state56, or_cond2_fu_2119_p2, or_cond1_fu_1739_p2, ap_phi_mux_busy_4_phi_fu_960_p10, ap_CS_fsm_state32, ap_CS_fsm_state24, ap_CS_fsm_state20, ap_CS_fsm_state58, ap_CS_fsm_state18, ap_sig_ioackin_CTRL_BUS_ARREADY, tmp_233_fu_2090_p2, ap_block_state58_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((tmp_148_fu_1300_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_phi_mux_complete_phi_fu_904_p4 = ap_const_lv1_0) and (exitcond2_fu_1306_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                elsif (((ap_phi_mux_complete_phi_fu_904_p4 = ap_const_lv1_1) and (exitcond2_fu_1306_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state58;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state13 => 
                if (((exitcond_fu_1452_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state16 => 
                if (((tmp_176_fu_1469_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                if (((tmp_184_fu_1486_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state58;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state18 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state18) and (grp_get_facecube_fromstr_fu_1107_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state20) and (grp_toCubieCube_fu_1052_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if (((grp_verify_fu_1040_ap_done = ap_const_logic_1) and (tmp_185_fu_1492_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state58;
                elsif (((grp_verify_fu_1040_ap_done = ap_const_logic_1) and (tmp_185_fu_1492_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((grp_get_coordcube_fu_978_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                if (((or_cond_fu_1658_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state29 => 
                if (((icmp_fu_1687_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                if (((tmp_204_fu_1723_p2 = ap_const_lv1_1) and (tmp_199_reg_2496 = ap_const_lv1_1) and (tmp_205_fu_1749_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state58;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state31) and (((tmp_205_fu_1749_p2 = ap_const_lv1_1) and (tmp_199_reg_2496 = ap_const_lv1_1)) or ((tmp_199_reg_2496 = ap_const_lv1_1) and (tmp_204_fu_1723_p2 = ap_const_lv1_0)) or ((tmp_204_fu_1723_p2 = ap_const_lv1_1) and (tmp_199_reg_2496 = ap_const_lv1_0)) or ((tmp_199_reg_2496 = ap_const_lv1_0) and (or_cond1_fu_1739_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                if (((ap_phi_mux_busy_4_phi_fu_960_p10 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state37) and (ap_sig_ioackin_CTRL_BUS_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state38 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state38) and (ap_sig_ioackin_CTRL_BUS_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state39 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state39) and (ap_sig_ioackin_CTRL_BUS_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                if (((ap_const_logic_1 = CTRL_BUS_RVALID) and (ap_const_logic_1 = ap_CS_fsm_state44))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state45 => 
                if (((ap_const_logic_1 = CTRL_BUS_RVALID) and (ap_const_logic_1 = ap_CS_fsm_state45))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_state45;
                end if;
            when ap_ST_fsm_state46 => 
                if (((ap_const_logic_1 = CTRL_BUS_RVALID) and (ap_const_logic_1 = ap_CS_fsm_state46))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_state46;
                end if;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                if (((grp_getPruning_2_fu_1091_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state50))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_state50;
                end if;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                if (((grp_getPruning_1_fu_1099_ap_done = ap_const_logic_1) and (tmp_227_fu_2052_p2 = ap_const_lv1_1) and (tmp_229_fu_2064_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state52))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                elsif (((grp_getPruning_1_fu_1099_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state52) and ((tmp_229_fu_2064_p2 = ap_const_lv1_1) or (tmp_227_fu_2052_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when ap_ST_fsm_state53 => 
                if (((tmp_231_reg_2673 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state53))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state54 => 
                if (((tmp_233_fu_2090_p2 = ap_const_lv1_1) and (tmp_254_fu_2082_p3 = ap_const_lv1_0) and (grp_totalDepth_fu_1004_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                elsif (((tmp_254_fu_2082_p3 = ap_const_lv1_0) and (tmp_233_fu_2090_p2 = ap_const_lv1_0) and (grp_totalDepth_fu_1004_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                elsif (((tmp_254_fu_2082_p3 = ap_const_lv1_1) and (grp_totalDepth_fu_1004_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state56) and ((tmp_254_reg_2683 = ap_const_lv1_1) or (tmp_229_reg_2669 = ap_const_lv1_1) or (or_cond2_fu_2119_p2 = ap_const_lv1_1) or (busy_4_reg_954 = ap_const_lv1_1) or (tmp_231_reg_2673 = ap_const_lv1_0) or (tmp_227_reg_2665 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state57;
                end if;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                if (((ap_const_boolean_0 = ap_block_state58_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state58))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    CTRL_BUS_ARADDR_assign_proc : process(ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state53, ap_CS_fsm_state54, CTRL_BUS_addr_reg_2593, CTRL_BUS_addr_1_reg_2599, CTRL_BUS_addr_2_reg_2605, ap_CS_fsm_state50, ap_CS_fsm_state52, tmp_231_reg_2673, grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARADDR, grp_getPruning_2_fu_1091_m_axi_table_r_ARADDR, grp_getPruning_1_fu_1099_m_axi_table_r_ARADDR, ap_CS_fsm_state49, ap_CS_fsm_state51, ap_reg_ioackin_CTRL_BUS_ARREADY)
    begin
        if (((ap_reg_ioackin_CTRL_BUS_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            CTRL_BUS_ARADDR <= CTRL_BUS_addr_2_reg_2605;
        elsif (((ap_reg_ioackin_CTRL_BUS_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state38))) then 
            CTRL_BUS_ARADDR <= CTRL_BUS_addr_1_reg_2599;
        elsif (((ap_reg_ioackin_CTRL_BUS_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            CTRL_BUS_ARADDR <= CTRL_BUS_addr_reg_2593;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51))) then 
            CTRL_BUS_ARADDR <= grp_getPruning_1_fu_1099_m_axi_table_r_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            CTRL_BUS_ARADDR <= grp_getPruning_2_fu_1091_m_axi_table_r_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or ((tmp_231_reg_2673 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53)))) then 
            CTRL_BUS_ARADDR <= grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARADDR;
        else 
            CTRL_BUS_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    CTRL_BUS_ARBURST_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state50, ap_CS_fsm_state52, tmp_231_reg_2673, grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARBURST, grp_getPruning_2_fu_1091_m_axi_table_r_ARBURST, grp_getPruning_1_fu_1099_m_axi_table_r_ARBURST, ap_CS_fsm_state49, ap_CS_fsm_state51)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51))) then 
            CTRL_BUS_ARBURST <= grp_getPruning_1_fu_1099_m_axi_table_r_ARBURST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            CTRL_BUS_ARBURST <= grp_getPruning_2_fu_1091_m_axi_table_r_ARBURST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or ((tmp_231_reg_2673 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53)))) then 
            CTRL_BUS_ARBURST <= grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARBURST;
        else 
            CTRL_BUS_ARBURST <= ap_const_lv2_0;
        end if; 
    end process;


    CTRL_BUS_ARCACHE_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state50, ap_CS_fsm_state52, tmp_231_reg_2673, grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARCACHE, grp_getPruning_2_fu_1091_m_axi_table_r_ARCACHE, grp_getPruning_1_fu_1099_m_axi_table_r_ARCACHE, ap_CS_fsm_state49, ap_CS_fsm_state51)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51))) then 
            CTRL_BUS_ARCACHE <= grp_getPruning_1_fu_1099_m_axi_table_r_ARCACHE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            CTRL_BUS_ARCACHE <= grp_getPruning_2_fu_1091_m_axi_table_r_ARCACHE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or ((tmp_231_reg_2673 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53)))) then 
            CTRL_BUS_ARCACHE <= grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARCACHE;
        else 
            CTRL_BUS_ARCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    CTRL_BUS_ARID_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state50, ap_CS_fsm_state52, tmp_231_reg_2673, grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARID, grp_getPruning_2_fu_1091_m_axi_table_r_ARID, grp_getPruning_1_fu_1099_m_axi_table_r_ARID, ap_CS_fsm_state49, ap_CS_fsm_state51)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51))) then 
            CTRL_BUS_ARID <= grp_getPruning_1_fu_1099_m_axi_table_r_ARID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            CTRL_BUS_ARID <= grp_getPruning_2_fu_1091_m_axi_table_r_ARID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or ((tmp_231_reg_2673 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53)))) then 
            CTRL_BUS_ARID <= grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARID;
        else 
            CTRL_BUS_ARID <= ap_const_lv1_0;
        end if; 
    end process;


    CTRL_BUS_ARLEN_assign_proc : process(ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state50, ap_CS_fsm_state52, tmp_231_reg_2673, grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARLEN, grp_getPruning_2_fu_1091_m_axi_table_r_ARLEN, grp_getPruning_1_fu_1099_m_axi_table_r_ARLEN, ap_CS_fsm_state49, ap_CS_fsm_state51, ap_reg_ioackin_CTRL_BUS_ARREADY)
    begin
        if ((((ap_reg_ioackin_CTRL_BUS_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state39)) or ((ap_reg_ioackin_CTRL_BUS_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((ap_reg_ioackin_CTRL_BUS_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state37)))) then 
            CTRL_BUS_ARLEN <= ap_const_lv32_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51))) then 
            CTRL_BUS_ARLEN <= grp_getPruning_1_fu_1099_m_axi_table_r_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            CTRL_BUS_ARLEN <= grp_getPruning_2_fu_1091_m_axi_table_r_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or ((tmp_231_reg_2673 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53)))) then 
            CTRL_BUS_ARLEN <= grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARLEN;
        else 
            CTRL_BUS_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    CTRL_BUS_ARLOCK_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state50, ap_CS_fsm_state52, tmp_231_reg_2673, grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARLOCK, grp_getPruning_2_fu_1091_m_axi_table_r_ARLOCK, grp_getPruning_1_fu_1099_m_axi_table_r_ARLOCK, ap_CS_fsm_state49, ap_CS_fsm_state51)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51))) then 
            CTRL_BUS_ARLOCK <= grp_getPruning_1_fu_1099_m_axi_table_r_ARLOCK;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            CTRL_BUS_ARLOCK <= grp_getPruning_2_fu_1091_m_axi_table_r_ARLOCK;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or ((tmp_231_reg_2673 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53)))) then 
            CTRL_BUS_ARLOCK <= grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARLOCK;
        else 
            CTRL_BUS_ARLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    CTRL_BUS_ARPROT_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state50, ap_CS_fsm_state52, tmp_231_reg_2673, grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARPROT, grp_getPruning_2_fu_1091_m_axi_table_r_ARPROT, grp_getPruning_1_fu_1099_m_axi_table_r_ARPROT, ap_CS_fsm_state49, ap_CS_fsm_state51)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51))) then 
            CTRL_BUS_ARPROT <= grp_getPruning_1_fu_1099_m_axi_table_r_ARPROT;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            CTRL_BUS_ARPROT <= grp_getPruning_2_fu_1091_m_axi_table_r_ARPROT;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or ((tmp_231_reg_2673 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53)))) then 
            CTRL_BUS_ARPROT <= grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARPROT;
        else 
            CTRL_BUS_ARPROT <= ap_const_lv3_0;
        end if; 
    end process;


    CTRL_BUS_ARQOS_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state50, ap_CS_fsm_state52, tmp_231_reg_2673, grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARQOS, grp_getPruning_2_fu_1091_m_axi_table_r_ARQOS, grp_getPruning_1_fu_1099_m_axi_table_r_ARQOS, ap_CS_fsm_state49, ap_CS_fsm_state51)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51))) then 
            CTRL_BUS_ARQOS <= grp_getPruning_1_fu_1099_m_axi_table_r_ARQOS;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            CTRL_BUS_ARQOS <= grp_getPruning_2_fu_1091_m_axi_table_r_ARQOS;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or ((tmp_231_reg_2673 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53)))) then 
            CTRL_BUS_ARQOS <= grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARQOS;
        else 
            CTRL_BUS_ARQOS <= ap_const_lv4_0;
        end if; 
    end process;


    CTRL_BUS_ARREGION_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state50, ap_CS_fsm_state52, tmp_231_reg_2673, grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARREGION, grp_getPruning_2_fu_1091_m_axi_table_r_ARREGION, grp_getPruning_1_fu_1099_m_axi_table_r_ARREGION, ap_CS_fsm_state49, ap_CS_fsm_state51)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51))) then 
            CTRL_BUS_ARREGION <= grp_getPruning_1_fu_1099_m_axi_table_r_ARREGION;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            CTRL_BUS_ARREGION <= grp_getPruning_2_fu_1091_m_axi_table_r_ARREGION;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or ((tmp_231_reg_2673 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53)))) then 
            CTRL_BUS_ARREGION <= grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARREGION;
        else 
            CTRL_BUS_ARREGION <= ap_const_lv4_0;
        end if; 
    end process;


    CTRL_BUS_ARSIZE_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state50, ap_CS_fsm_state52, tmp_231_reg_2673, grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARSIZE, grp_getPruning_2_fu_1091_m_axi_table_r_ARSIZE, grp_getPruning_1_fu_1099_m_axi_table_r_ARSIZE, ap_CS_fsm_state49, ap_CS_fsm_state51)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51))) then 
            CTRL_BUS_ARSIZE <= grp_getPruning_1_fu_1099_m_axi_table_r_ARSIZE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            CTRL_BUS_ARSIZE <= grp_getPruning_2_fu_1091_m_axi_table_r_ARSIZE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or ((tmp_231_reg_2673 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53)))) then 
            CTRL_BUS_ARSIZE <= grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARSIZE;
        else 
            CTRL_BUS_ARSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    CTRL_BUS_ARUSER_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state50, ap_CS_fsm_state52, tmp_231_reg_2673, grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARUSER, grp_getPruning_2_fu_1091_m_axi_table_r_ARUSER, grp_getPruning_1_fu_1099_m_axi_table_r_ARUSER, ap_CS_fsm_state49, ap_CS_fsm_state51)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51))) then 
            CTRL_BUS_ARUSER <= grp_getPruning_1_fu_1099_m_axi_table_r_ARUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            CTRL_BUS_ARUSER <= grp_getPruning_2_fu_1091_m_axi_table_r_ARUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or ((tmp_231_reg_2673 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53)))) then 
            CTRL_BUS_ARUSER <= grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARUSER;
        else 
            CTRL_BUS_ARUSER <= ap_const_lv1_0;
        end if; 
    end process;


    CTRL_BUS_ARVALID_assign_proc : process(ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state50, ap_CS_fsm_state52, tmp_231_reg_2673, grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARVALID, grp_getPruning_2_fu_1091_m_axi_table_r_ARVALID, grp_getPruning_1_fu_1099_m_axi_table_r_ARVALID, ap_CS_fsm_state49, ap_CS_fsm_state51, ap_reg_ioackin_CTRL_BUS_ARREADY)
    begin
        if ((((ap_reg_ioackin_CTRL_BUS_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state39)) or ((ap_reg_ioackin_CTRL_BUS_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((ap_reg_ioackin_CTRL_BUS_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state37)))) then 
            CTRL_BUS_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51))) then 
            CTRL_BUS_ARVALID <= grp_getPruning_1_fu_1099_m_axi_table_r_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            CTRL_BUS_ARVALID <= grp_getPruning_2_fu_1091_m_axi_table_r_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or ((tmp_231_reg_2673 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53)))) then 
            CTRL_BUS_ARVALID <= grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_ARVALID;
        else 
            CTRL_BUS_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    CTRL_BUS_RREADY_assign_proc : process(ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46, CTRL_BUS_RVALID, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state50, ap_CS_fsm_state52, tmp_231_reg_2673, grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_RREADY, grp_getPruning_2_fu_1091_m_axi_table_r_RREADY, grp_getPruning_1_fu_1099_m_axi_table_r_RREADY, ap_CS_fsm_state49, ap_CS_fsm_state51)
    begin
        if ((((ap_const_logic_1 = CTRL_BUS_RVALID) and (ap_const_logic_1 = ap_CS_fsm_state46)) or ((ap_const_logic_1 = CTRL_BUS_RVALID) and (ap_const_logic_1 = ap_CS_fsm_state45)) or ((ap_const_logic_1 = CTRL_BUS_RVALID) and (ap_const_logic_1 = ap_CS_fsm_state44)))) then 
            CTRL_BUS_RREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51))) then 
            CTRL_BUS_RREADY <= grp_getPruning_1_fu_1099_m_axi_table_r_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            CTRL_BUS_RREADY <= grp_getPruning_2_fu_1091_m_axi_table_r_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or ((tmp_231_reg_2673 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53)))) then 
            CTRL_BUS_RREADY <= grp_totalDepth_fu_1004_m_axi_FRtoBR_Move2_RREADY;
        else 
            CTRL_BUS_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    CTRL_BUS_blk_n_AR_assign_proc : process(m_axi_CTRL_BUS_ARREADY, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            CTRL_BUS_blk_n_AR <= m_axi_CTRL_BUS_ARREADY;
        else 
            CTRL_BUS_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    CTRL_BUS_blk_n_R_assign_proc : process(m_axi_CTRL_BUS_RVALID, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state46)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            CTRL_BUS_blk_n_R <= m_axi_CTRL_BUS_RVALID;
        else 
            CTRL_BUS_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

        FRtoBR_Move26_sum_ca_fu_1935_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(FRtoBR_Move26_sum_fu_1930_p2),64));

    FRtoBR_Move26_sum_fu_1930_p2 <= std_logic_vector(unsigned(tmp_247_cast_reg_2224) + unsigned(tmp_218_cast_fu_1927_p1));
    FRtoBR_Move_fu_1243_p4 <= FRtoBR_Move2(31 downto 1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state58_on_subcall_done_assign_proc : process(grp_solutionToString_fu_1080_ap_done, ap_predicate_op535_call_state58)
    begin
                ap_block_state58_on_subcall_done <= ((ap_predicate_op535_call_state58 = ap_const_boolean_1) and (grp_solutionToString_fu_1080_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state58, ap_block_state58_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state58_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state58))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_busy_4_phi_fu_960_p10_assign_proc : process(or_cond_reg_2468, icmp_reg_2487, tmp_199_reg_2496, tmp_204_reg_2530, busy_4_reg_954, ap_CS_fsm_state32)
    begin
        if (((tmp_204_reg_2530 = ap_const_lv1_1) and (tmp_199_reg_2496 = ap_const_lv1_1) and (icmp_reg_2487 = ap_const_lv1_1) and (or_cond_reg_2468 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            ap_phi_mux_busy_4_phi_fu_960_p10 <= ap_const_lv1_0;
        else 
            ap_phi_mux_busy_4_phi_fu_960_p10 <= busy_4_reg_954;
        end if; 
    end process;

    ap_phi_mux_complete_phi_fu_904_p4 <= complete_reg_900;

    ap_predicate_op535_call_state58_assign_proc : process(tmp_176_reg_2400, tmp_185_reg_2417, or_cond_reg_2468, icmp_reg_2487, tmp_199_reg_2496, tmp_204_reg_2530, tmp_205_reg_2537, complete_reg_900)
    begin
                ap_predicate_op535_call_state58 <= (((tmp_205_reg_2537 = ap_const_lv1_1) and (tmp_185_reg_2417 = ap_const_lv1_1) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0)) or ((tmp_185_reg_2417 = ap_const_lv1_1) and (tmp_204_reg_2530 = ap_const_lv1_0) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0)) or ((tmp_185_reg_2417 = ap_const_lv1_1) and (icmp_reg_2487 = ap_const_lv1_0) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0)) or ((or_cond_reg_2468 = ap_const_lv1_1) and (tmp_185_reg_2417 = ap_const_lv1_1) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0)) or ((tmp_185_reg_2417 = ap_const_lv1_1) and (tmp_199_reg_2496 = ap_const_lv1_0) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0)));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state58, ap_block_state58_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state58_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state58))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_ioackin_CTRL_BUS_ARREADY_assign_proc : process(CTRL_BUS_ARREADY, ap_reg_ioackin_CTRL_BUS_ARREADY)
    begin
        if ((ap_reg_ioackin_CTRL_BUS_ARREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_CTRL_BUS_ARREADY <= CTRL_BUS_ARREADY;
        else 
            ap_sig_ioackin_CTRL_BUS_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    ccRet_co_0_address0_assign_proc : process(ap_CS_fsm_state22, grp_get_coordcube_fu_978_cubiecube_0_co_address0, grp_verify_fu_1040_cubiecube_0_co_address0, grp_toCubieCube_fu_1052_ccRet_co_0_address0, ap_CS_fsm_state24, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ccRet_co_0_address0 <= grp_toCubieCube_fu_1052_ccRet_co_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            ccRet_co_0_address0 <= grp_verify_fu_1040_cubiecube_0_co_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            ccRet_co_0_address0 <= grp_get_coordcube_fu_978_cubiecube_0_co_address0;
        else 
            ccRet_co_0_address0 <= "XXX";
        end if; 
    end process;


    ccRet_co_0_ce0_assign_proc : process(ap_CS_fsm_state22, grp_get_coordcube_fu_978_cubiecube_0_co_ce0, grp_verify_fu_1040_cubiecube_0_co_ce0, grp_toCubieCube_fu_1052_ccRet_co_0_ce0, ap_CS_fsm_state24, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ccRet_co_0_ce0 <= grp_toCubieCube_fu_1052_ccRet_co_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            ccRet_co_0_ce0 <= grp_verify_fu_1040_cubiecube_0_co_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            ccRet_co_0_ce0 <= grp_get_coordcube_fu_978_cubiecube_0_co_ce0;
        else 
            ccRet_co_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ccRet_co_0_we0_assign_proc : process(grp_toCubieCube_fu_1052_ccRet_co_0_we0, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ccRet_co_0_we0 <= grp_toCubieCube_fu_1052_ccRet_co_0_we0;
        else 
            ccRet_co_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ccRet_cp_0_address0_assign_proc : process(ap_CS_fsm_state22, grp_get_coordcube_fu_978_cubiecube_0_cp_address0, grp_verify_fu_1040_cubiecube_0_cp_address0, grp_toCubieCube_fu_1052_ccRet_cp_0_address0, ap_CS_fsm_state24, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ccRet_cp_0_address0 <= grp_toCubieCube_fu_1052_ccRet_cp_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            ccRet_cp_0_address0 <= grp_verify_fu_1040_cubiecube_0_cp_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            ccRet_cp_0_address0 <= grp_get_coordcube_fu_978_cubiecube_0_cp_address0;
        else 
            ccRet_cp_0_address0 <= "XXX";
        end if; 
    end process;


    ccRet_cp_0_ce0_assign_proc : process(ap_CS_fsm_state22, grp_get_coordcube_fu_978_cubiecube_0_cp_ce0, grp_verify_fu_1040_cubiecube_0_cp_ce0, grp_toCubieCube_fu_1052_ccRet_cp_0_ce0, ap_CS_fsm_state24, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ccRet_cp_0_ce0 <= grp_toCubieCube_fu_1052_ccRet_cp_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            ccRet_cp_0_ce0 <= grp_verify_fu_1040_cubiecube_0_cp_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            ccRet_cp_0_ce0 <= grp_get_coordcube_fu_978_cubiecube_0_cp_ce0;
        else 
            ccRet_cp_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ccRet_cp_0_we0_assign_proc : process(grp_toCubieCube_fu_1052_ccRet_cp_0_we0, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ccRet_cp_0_we0 <= grp_toCubieCube_fu_1052_ccRet_cp_0_we0;
        else 
            ccRet_cp_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ccRet_eo_0_address0_assign_proc : process(ap_CS_fsm_state22, grp_get_coordcube_fu_978_cubiecube_0_eo_address0, grp_verify_fu_1040_cubiecube_0_eo_address0, grp_toCubieCube_fu_1052_ccRet_eo_0_address0, ap_CS_fsm_state24, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ccRet_eo_0_address0 <= grp_toCubieCube_fu_1052_ccRet_eo_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            ccRet_eo_0_address0 <= grp_verify_fu_1040_cubiecube_0_eo_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            ccRet_eo_0_address0 <= grp_get_coordcube_fu_978_cubiecube_0_eo_address0;
        else 
            ccRet_eo_0_address0 <= "XXXX";
        end if; 
    end process;


    ccRet_eo_0_ce0_assign_proc : process(ap_CS_fsm_state22, grp_get_coordcube_fu_978_cubiecube_0_eo_ce0, grp_verify_fu_1040_cubiecube_0_eo_ce0, grp_toCubieCube_fu_1052_ccRet_eo_0_ce0, ap_CS_fsm_state24, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ccRet_eo_0_ce0 <= grp_toCubieCube_fu_1052_ccRet_eo_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            ccRet_eo_0_ce0 <= grp_verify_fu_1040_cubiecube_0_eo_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            ccRet_eo_0_ce0 <= grp_get_coordcube_fu_978_cubiecube_0_eo_ce0;
        else 
            ccRet_eo_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ccRet_eo_0_we0_assign_proc : process(grp_toCubieCube_fu_1052_ccRet_eo_0_we0, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ccRet_eo_0_we0 <= grp_toCubieCube_fu_1052_ccRet_eo_0_we0;
        else 
            ccRet_eo_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ccRet_ep_0_address0_assign_proc : process(ap_CS_fsm_state22, grp_get_coordcube_fu_978_cubiecube_0_ep_address0, grp_verify_fu_1040_cubiecube_0_ep_address0, grp_toCubieCube_fu_1052_ccRet_ep_0_address0, ap_CS_fsm_state24, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ccRet_ep_0_address0 <= grp_toCubieCube_fu_1052_ccRet_ep_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            ccRet_ep_0_address0 <= grp_verify_fu_1040_cubiecube_0_ep_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            ccRet_ep_0_address0 <= grp_get_coordcube_fu_978_cubiecube_0_ep_address0;
        else 
            ccRet_ep_0_address0 <= "XXXX";
        end if; 
    end process;


    ccRet_ep_0_ce0_assign_proc : process(ap_CS_fsm_state22, grp_get_coordcube_fu_978_cubiecube_0_ep_ce0, grp_verify_fu_1040_cubiecube_0_ep_ce0, grp_toCubieCube_fu_1052_ccRet_ep_0_ce0, ap_CS_fsm_state24, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ccRet_ep_0_ce0 <= grp_toCubieCube_fu_1052_ccRet_ep_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            ccRet_ep_0_ce0 <= grp_verify_fu_1040_cubiecube_0_ep_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            ccRet_ep_0_ce0 <= grp_get_coordcube_fu_978_cubiecube_0_ep_ce0;
        else 
            ccRet_ep_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ccRet_ep_0_we0_assign_proc : process(grp_toCubieCube_fu_1052_ccRet_ep_0_we0, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            ccRet_ep_0_we0 <= grp_toCubieCube_fu_1052_ccRet_ep_0_we0;
        else 
            ccRet_ep_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    complete_1_fu_1446_p2 <= (tmp_17_fu_1441_p2 and complete_reg_900);

    count_address0_assign_proc : process(facelets_q0, reg_1139, ap_CS_fsm_state14, ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state15, tmp_s_fu_1295_p1, tmp_183_fu_1481_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            count_address0 <= tmp_183_fu_1481_p1(3 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state14) and (facelets_q0 = ap_const_lv8_55)) or ((reg_1139 = ap_const_lv8_55) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            count_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state14) and (facelets_q0 = ap_const_lv8_52)) or ((reg_1139 = ap_const_lv8_52) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            count_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state14) and (facelets_q0 = ap_const_lv8_46)) or ((reg_1139 = ap_const_lv8_46) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            count_address0 <= ap_const_lv64_2(3 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state14) and (facelets_q0 = ap_const_lv8_44)) or ((reg_1139 = ap_const_lv8_44) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            count_address0 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state14) and (facelets_q0 = ap_const_lv8_4C)) or ((reg_1139 = ap_const_lv8_4C) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            count_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state14) and (facelets_q0 = ap_const_lv8_42)) or ((reg_1139 = ap_const_lv8_42) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            count_address0 <= ap_const_lv64_5(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            count_address0 <= tmp_s_fu_1295_p1(3 - 1 downto 0);
        else 
            count_address0 <= "XXX";
        end if; 
    end process;


    count_ce0_assign_proc : process(facelets_q0, reg_1139, ap_CS_fsm_state14, ap_CS_fsm_state2, ap_CS_fsm_state16, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (facelets_q0 = ap_const_lv8_55)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (facelets_q0 = ap_const_lv8_52)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (facelets_q0 = ap_const_lv8_46)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (facelets_q0 = ap_const_lv8_44)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (facelets_q0 = ap_const_lv8_4C)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (facelets_q0 = ap_const_lv8_42)) or ((reg_1139 = ap_const_lv8_55) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((reg_1139 = ap_const_lv8_52) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((reg_1139 = ap_const_lv8_46) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((reg_1139 = ap_const_lv8_44) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((reg_1139 = ap_const_lv8_4C) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((reg_1139 = ap_const_lv8_42) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            count_ce0 <= ap_const_logic_1;
        else 
            count_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    count_d0_assign_proc : process(reg_1139, ap_CS_fsm_state2, ap_CS_fsm_state15, grp_fu_1120_p2)
    begin
        if ((((reg_1139 = ap_const_lv8_55) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((reg_1139 = ap_const_lv8_52) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((reg_1139 = ap_const_lv8_46) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((reg_1139 = ap_const_lv8_44) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((reg_1139 = ap_const_lv8_4C) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((reg_1139 = ap_const_lv8_42) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            count_d0 <= grp_fu_1120_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            count_d0 <= ap_const_lv32_0;
        else 
            count_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    count_we0_assign_proc : process(reg_1139, ap_CS_fsm_state2, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((reg_1139 = ap_const_lv8_55) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((reg_1139 = ap_const_lv8_52) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((reg_1139 = ap_const_lv8_46) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((reg_1139 = ap_const_lv8_44) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((reg_1139 = ap_const_lv8_4C) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((reg_1139 = ap_const_lv8_42) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            count_we0 <= ap_const_logic_1;
        else 
            count_we0 <= ap_const_logic_0;
        end if; 
    end process;

    depthPhase1_fu_1754_p2 <= std_logic_vector(unsigned(reg_1148) + unsigned(ap_const_lv32_1));

    encode_length_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state57, tmp_255_fu_2125_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            encode_length <= tmp_255_fu_2125_p1;
        elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            encode_length <= ap_const_lv8_0;
        else 
            encode_length <= "XXXXXXXX";
        end if; 
    end process;


    encode_length_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state57)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state57) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            encode_length_ap_vld <= ap_const_logic_1;
        else 
            encode_length_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    exitcond2_fu_1306_p2 <= "1" when (i_reg_889 = ap_const_lv3_6) else "0";
    exitcond_fu_1452_p2 <= "1" when (i_1_reg_912 = ap_const_lv6_36) else "0";
    extLd_fu_1642_p0 <= search_minDistPhase1_q0;
        extLd_fu_1642_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(extLd_fu_1642_p0),32));


    facelets_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, grp_get_facecube_fromstr_fu_1107_cubeString_address0, ap_CS_fsm_state18, tmp_150_fu_1326_p1, tmp_152_fu_1336_p1, tmp_155_fu_1346_p1, tmp_158_fu_1356_p1, tmp_161_fu_1366_p1, tmp_164_fu_1376_p1, tmp_167_fu_1401_p1, tmp_170_fu_1411_p1, tmp_173_fu_1421_p1, tmp_175_fu_1464_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            facelets_address0 <= tmp_175_fu_1464_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            facelets_address0 <= tmp_173_fu_1421_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            facelets_address0 <= tmp_170_fu_1411_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            facelets_address0 <= tmp_167_fu_1401_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            facelets_address0 <= tmp_164_fu_1376_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            facelets_address0 <= tmp_161_fu_1366_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            facelets_address0 <= tmp_158_fu_1356_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            facelets_address0 <= tmp_155_fu_1346_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            facelets_address0 <= tmp_152_fu_1336_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            facelets_address0 <= tmp_150_fu_1326_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            facelets_address0 <= grp_get_facecube_fromstr_fu_1107_cubeString_address0;
        else 
            facelets_address0 <= "XXXXXX";
        end if; 
    end process;


    facelets_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state13, grp_get_facecube_fromstr_fu_1107_cubeString_ce0, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            facelets_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            facelets_ce0 <= grp_get_facecube_fromstr_fu_1107_cubeString_ce0;
        else 
            facelets_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        flipMove24_sum_cast_fu_1862_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(flipMove24_sum_fu_1857_p2),64));

    flipMove24_sum_fu_1857_p2 <= std_logic_vector(unsigned(tmp_248_cast_reg_2229) + unsigned(tmp_211_cast_fu_1853_p1));
    grp_fu_1115_p2 <= "1" when (reg_1139 = facelets_q0) else "0";
    grp_fu_1120_p2 <= std_logic_vector(unsigned(count_q0) + unsigned(ap_const_lv32_1));
    grp_fu_2153_p0 <= ap_const_lv25_1EF(10 - 1 downto 0);
    grp_fu_2153_p2 <= tmp_254_cast_fu_2031_p1(15 - 1 downto 0);
    grp_fu_2161_p0 <= ap_const_lv25_1EF(10 - 1 downto 0);
    grp_fu_2161_p2 <= tmp_254_cast_fu_2031_p1(15 - 1 downto 0);
    grp_getPruning_1_fu_1099_ap_start <= grp_getPruning_1_fu_1099_ap_start_reg;
    grp_getPruning_2_fu_1091_ap_start <= grp_getPruning_2_fu_1091_ap_start_reg;
    grp_get_coordcube_fu_978_ap_start <= grp_get_coordcube_fu_978_ap_start_reg;
    grp_get_facecube_fromstr_fu_1107_ap_start <= grp_get_facecube_fromstr_fu_1107_ap_start_reg;
    grp_solutionToString_fu_1080_ap_start <= grp_solutionToString_fu_1080_ap_start_reg;
    grp_toCubieCube_fu_1052_ap_start <= grp_toCubieCube_fu_1052_ap_start_reg;
    grp_totalDepth_fu_1004_ap_start <= grp_totalDepth_fu_1004_ap_start_reg;
    grp_verify_fu_1040_ap_start <= grp_verify_fu_1040_ap_start_reg;
    i_14_fu_1312_p2 <= std_logic_vector(unsigned(i_reg_889) + unsigned(ap_const_lv3_1));
    i_15_fu_1458_p2 <= std_logic_vector(unsigned(i_1_reg_912) + unsigned(ap_const_lv6_1));
    i_5_fu_1475_p2 <= std_logic_vector(unsigned(i_2_reg_923) + unsigned(ap_const_lv3_1));
    icmp_fu_1687_p2 <= "1" when (signed(tmp_243_fu_1677_p4) > signed(ap_const_lv30_0)) else "0";
    indvarinc_fu_1289_p2 <= std_logic_vector(unsigned(invdar_reg_878) + unsigned(ap_const_lv3_1));
    mul1_fu_2145_p0 <= ap_const_lv34_15556(18 - 1 downto 0);
    mul_fu_2129_p0 <= ap_const_lv34_15556(18 - 1 downto 0);
    mv_fu_1814_p2 <= std_logic_vector(unsigned(search_po_0_q0) + unsigned(tmp14_fu_1808_p2));
    n_3_fu_1625_p0 <= n_1_fu_384;
    n_3_fu_1625_p2 <= std_logic_vector(signed(n_3_fu_1625_p0) + signed(ap_const_lv32_1));
    n_fu_1699_p2 <= std_logic_vector(signed(reg_1144) + signed(ap_const_lv32_FFFFFFFF));
    neg_mul1_fu_1988_p2 <= std_logic_vector(unsigned(ap_const_lv33_0) - unsigned(tmp_245_reg_2634));
    neg_mul_fu_1555_p2 <= std_logic_vector(unsigned(ap_const_lv33_0) - unsigned(tmp_215_reg_2436));
    neg_ti1_fu_2017_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_251_fu_2010_p3));
    neg_ti_fu_1584_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_239_fu_1577_p3));
    or_cond1_fu_1739_p2 <= (tmp_207_fu_1734_p2 or tmp_206_fu_1729_p2);
    or_cond2_fu_2119_p2 <= (tmp_237_fu_2113_p2 or tmp_235_fu_2101_p2);
    or_cond_fu_1658_p2 <= (tmp_195_fu_1652_p2 and tmp_194_fu_1646_p2);
    p_in_fu_2040_p3 <= 
        tmp_252_reg_2659 when (tmp_226_fu_2035_p2(0) = '1') else 
        grp_getPruning_1_fu_1099_ap_return;
    p_shl10_fu_1883_p3 <= (search_twist_0_load_reg_2582 & ap_const_lv1_0);
        p_shl26_cast_fu_1827_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl_fu_1820_p3),32));

        p_shl27_cast_fu_1838_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl8_fu_1831_p3),32));

        p_shl28_cast_fu_1879_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl9_fu_1872_p3),32));

        p_shl29_cast_fu_1890_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl10_fu_1883_p3),32));

    p_shl8_fu_1831_p3 <= (search_flip_0_load_reg_2576 & ap_const_lv1_0);
    p_shl9_fu_1872_p3 <= (search_twist_0_load_reg_2582 & ap_const_lv4_0);
    p_shl_fu_1820_p3 <= (search_flip_0_load_reg_2576 & ap_const_lv4_0);

    res_f_0_address0_assign_proc : process(grp_toCubieCube_fu_1052_facecube_0_f_address0, grp_get_facecube_fromstr_fu_1107_res_f_0_address0, ap_CS_fsm_state20, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            res_f_0_address0 <= grp_get_facecube_fromstr_fu_1107_res_f_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            res_f_0_address0 <= grp_toCubieCube_fu_1052_facecube_0_f_address0;
        else 
            res_f_0_address0 <= "XXXXXX";
        end if; 
    end process;


    res_f_0_ce0_assign_proc : process(grp_toCubieCube_fu_1052_facecube_0_f_ce0, grp_get_facecube_fromstr_fu_1107_res_f_0_ce0, ap_CS_fsm_state20, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            res_f_0_ce0 <= grp_get_facecube_fromstr_fu_1107_res_f_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            res_f_0_ce0 <= grp_toCubieCube_fu_1052_facecube_0_f_ce0;
        else 
            res_f_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    res_f_0_ce1_assign_proc : process(grp_toCubieCube_fu_1052_facecube_0_f_ce1, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            res_f_0_ce1 <= grp_toCubieCube_fu_1052_facecube_0_f_ce1;
        else 
            res_f_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    res_f_0_we0_assign_proc : process(grp_get_facecube_fromstr_fu_1107_res_f_0_we0, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            res_f_0_we0 <= grp_get_facecube_fromstr_fu_1107_res_f_0_we0;
        else 
            res_f_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    search_FRtoBR_0_address0_assign_proc : process(ap_CS_fsm_state54, ap_CS_fsm_state25, grp_totalDepth_fu_1004_search_0_FRtoBR_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            search_FRtoBR_0_address0 <= ap_const_lv5_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_FRtoBR_0_address0 <= grp_totalDepth_fu_1004_search_0_FRtoBR_address0;
        else 
            search_FRtoBR_0_address0 <= "XXXXX";
        end if; 
    end process;


    search_FRtoBR_0_ce0_assign_proc : process(ap_CS_fsm_state54, ap_CS_fsm_state25, grp_totalDepth_fu_1004_search_0_FRtoBR_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            search_FRtoBR_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_FRtoBR_0_ce0 <= grp_totalDepth_fu_1004_search_0_FRtoBR_ce0;
        else 
            search_FRtoBR_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    search_FRtoBR_0_d0_assign_proc : process(ap_CS_fsm_state54, ap_CS_fsm_state25, grp_totalDepth_fu_1004_search_0_FRtoBR_d0, tmp_187_fu_1507_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            search_FRtoBR_0_d0 <= tmp_187_fu_1507_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_FRtoBR_0_d0 <= grp_totalDepth_fu_1004_search_0_FRtoBR_d0;
        else 
            search_FRtoBR_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    search_FRtoBR_0_we0_assign_proc : process(ap_CS_fsm_state54, ap_CS_fsm_state25, grp_totalDepth_fu_1004_search_0_FRtoBR_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            search_FRtoBR_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_FRtoBR_0_we0 <= grp_totalDepth_fu_1004_search_0_FRtoBR_we0;
        else 
            search_FRtoBR_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    search_UBtoDF_0_address0_assign_proc : process(ap_CS_fsm_state54, grp_totalDepth_fu_1004_search_0_UBtoDF_address0, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_UBtoDF_0_address0 <= ap_const_lv5_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_UBtoDF_0_address0 <= grp_totalDepth_fu_1004_search_0_UBtoDF_address0;
        else 
            search_UBtoDF_0_address0 <= "XXXXX";
        end if; 
    end process;


    search_UBtoDF_0_ce0_assign_proc : process(ap_CS_fsm_state54, grp_totalDepth_fu_1004_search_0_UBtoDF_ce0, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_UBtoDF_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_UBtoDF_0_ce0 <= grp_totalDepth_fu_1004_search_0_UBtoDF_ce0;
        else 
            search_UBtoDF_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    search_UBtoDF_0_d0_assign_proc : process(ap_CS_fsm_state54, grp_totalDepth_fu_1004_search_0_UBtoDF_d0, ap_CS_fsm_state26, tmp_191_fu_1620_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_UBtoDF_0_d0 <= tmp_191_fu_1620_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_UBtoDF_0_d0 <= grp_totalDepth_fu_1004_search_0_UBtoDF_d0;
        else 
            search_UBtoDF_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    search_UBtoDF_0_we0_assign_proc : process(ap_CS_fsm_state54, grp_totalDepth_fu_1004_search_0_UBtoDF_we0, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_UBtoDF_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_UBtoDF_0_we0 <= grp_totalDepth_fu_1004_search_0_UBtoDF_we0;
        else 
            search_UBtoDF_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    search_URFtoDLF_0_address0_assign_proc : process(ap_CS_fsm_state54, grp_totalDepth_fu_1004_search_0_URFtoDLF_address0, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_URFtoDLF_0_address0 <= ap_const_lv5_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_URFtoDLF_0_address0 <= grp_totalDepth_fu_1004_search_0_URFtoDLF_address0;
        else 
            search_URFtoDLF_0_address0 <= "XXXXX";
        end if; 
    end process;


    search_URFtoDLF_0_ce0_assign_proc : process(ap_CS_fsm_state54, grp_totalDepth_fu_1004_search_0_URFtoDLF_ce0, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_URFtoDLF_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_URFtoDLF_0_ce0 <= grp_totalDepth_fu_1004_search_0_URFtoDLF_ce0;
        else 
            search_URFtoDLF_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    search_URFtoDLF_0_d0_assign_proc : process(ap_CS_fsm_state54, grp_totalDepth_fu_1004_search_0_URFtoDLF_d0, ap_CS_fsm_state26, tmp_189_fu_1602_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_URFtoDLF_0_d0 <= tmp_189_fu_1602_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_URFtoDLF_0_d0 <= grp_totalDepth_fu_1004_search_0_URFtoDLF_d0;
        else 
            search_URFtoDLF_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    search_URFtoDLF_0_we0_assign_proc : process(ap_CS_fsm_state54, grp_totalDepth_fu_1004_search_0_URFtoDLF_we0, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_URFtoDLF_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_URFtoDLF_0_we0 <= grp_totalDepth_fu_1004_search_0_URFtoDLF_we0;
        else 
            search_URFtoDLF_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    search_URtoUL_0_address0_assign_proc : process(ap_CS_fsm_state54, grp_totalDepth_fu_1004_search_0_URtoUL_address0, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_URtoUL_0_address0 <= ap_const_lv5_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_URtoUL_0_address0 <= grp_totalDepth_fu_1004_search_0_URtoUL_address0;
        else 
            search_URtoUL_0_address0 <= "XXXXX";
        end if; 
    end process;


    search_URtoUL_0_ce0_assign_proc : process(ap_CS_fsm_state54, grp_totalDepth_fu_1004_search_0_URtoUL_ce0, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_URtoUL_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_URtoUL_0_ce0 <= grp_totalDepth_fu_1004_search_0_URtoUL_ce0;
        else 
            search_URtoUL_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    search_URtoUL_0_d0_assign_proc : process(ap_CS_fsm_state54, grp_totalDepth_fu_1004_search_0_URtoUL_d0, ap_CS_fsm_state26, tmp_190_fu_1611_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_URtoUL_0_d0 <= tmp_190_fu_1611_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_URtoUL_0_d0 <= grp_totalDepth_fu_1004_search_0_URtoUL_d0;
        else 
            search_URtoUL_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    search_URtoUL_0_we0_assign_proc : process(ap_CS_fsm_state54, grp_totalDepth_fu_1004_search_0_URtoUL_we0, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_URtoUL_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_URtoUL_0_we0 <= grp_totalDepth_fu_1004_search_0_URtoUL_we0;
        else 
            search_URtoUL_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    search_ax_0_address0_assign_proc : process(ap_CS_fsm_state34, ap_CS_fsm_state28, ap_CS_fsm_state54, tmp_176_reg_2400, tmp_185_reg_2417, or_cond_reg_2468, tmp_196_fu_1664_p1, icmp_reg_2487, ap_CS_fsm_state29, tmp_199_reg_2496, tmp_204_reg_2530, tmp_205_reg_2537, search_ax_0_addr_4_reg_2544, ap_CS_fsm_state55, grp_totalDepth_fu_1004_search_0_ax_address0, grp_solutionToString_fu_1080_search_0_ax_address0, complete_reg_900, ap_CS_fsm_state26, ap_CS_fsm_state32, ap_CS_fsm_state58, tmp_200_fu_1705_p1, tmp_208_fu_1787_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            search_ax_0_address0 <= search_ax_0_addr_4_reg_2544;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            search_ax_0_address0 <= tmp_208_fu_1787_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            search_ax_0_address0 <= tmp_200_fu_1705_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            search_ax_0_address0 <= tmp_196_fu_1664_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            search_ax_0_address0 <= ap_const_lv5_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) and (((tmp_205_reg_2537 = ap_const_lv1_1) and (tmp_185_reg_2417 = ap_const_lv1_1) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0)) or ((tmp_185_reg_2417 = ap_const_lv1_1) and (tmp_204_reg_2530 = ap_const_lv1_0) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0)) or ((tmp_185_reg_2417 = ap_const_lv1_1) and (icmp_reg_2487 = ap_const_lv1_0) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0)) or ((or_cond_reg_2468 = ap_const_lv1_1) and (tmp_185_reg_2417 = ap_const_lv1_1) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0)) or ((tmp_185_reg_2417 = ap_const_lv1_1) and (tmp_199_reg_2496 = ap_const_lv1_0) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0))))) then 
            search_ax_0_address0 <= grp_solutionToString_fu_1080_search_0_ax_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_ax_0_address0 <= grp_totalDepth_fu_1004_search_0_ax_address0;
        else 
            search_ax_0_address0 <= "XXXXX";
        end if; 
    end process;


    search_ax_0_address1_assign_proc : process(tmp_193_reg_2457, tmp_196_reg_2472, ap_CS_fsm_state29, search_ax_0_addr_1_reg_2491, tmp_199_reg_2496, ap_CS_fsm_state31, tmp_204_fu_1723_p2, ap_CS_fsm_state55, or_cond1_fu_1739_p2, ap_CS_fsm_state33, tmp_234_fu_2096_p1, tmp_242_fu_1777_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            search_ax_0_address1 <= tmp_234_fu_2096_p1(5 - 1 downto 0);
        elsif ((((tmp_242_fu_1777_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((tmp_242_fu_1777_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            search_ax_0_address1 <= tmp_193_reg_2457(5 - 1 downto 0);
        elsif ((((tmp_204_fu_1723_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (((tmp_199_reg_2496 = ap_const_lv1_1) and (tmp_204_fu_1723_p2 = ap_const_lv1_0)) or ((tmp_204_fu_1723_p2 = ap_const_lv1_0) and (or_cond1_fu_1739_p2 = ap_const_lv1_0)))))) then 
            search_ax_0_address1 <= search_ax_0_addr_1_reg_2491;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            search_ax_0_address1 <= tmp_196_reg_2472(5 - 1 downto 0);
        else 
            search_ax_0_address1 <= "XXXXX";
        end if; 
    end process;


    search_ax_0_ce0_assign_proc : process(ap_CS_fsm_state34, ap_CS_fsm_state28, ap_CS_fsm_state54, tmp_176_reg_2400, tmp_185_reg_2417, or_cond_reg_2468, icmp_reg_2487, ap_CS_fsm_state29, tmp_199_reg_2496, tmp_204_reg_2530, tmp_205_reg_2537, ap_CS_fsm_state55, grp_totalDepth_fu_1004_search_0_ax_ce0, grp_solutionToString_fu_1080_search_0_ax_ce0, complete_reg_900, ap_CS_fsm_state26, ap_CS_fsm_state32, ap_CS_fsm_state58)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            search_ax_0_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) and (((tmp_205_reg_2537 = ap_const_lv1_1) and (tmp_185_reg_2417 = ap_const_lv1_1) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0)) or ((tmp_185_reg_2417 = ap_const_lv1_1) and (tmp_204_reg_2530 = ap_const_lv1_0) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0)) or ((tmp_185_reg_2417 = ap_const_lv1_1) and (icmp_reg_2487 = ap_const_lv1_0) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0)) or ((or_cond_reg_2468 = ap_const_lv1_1) and (tmp_185_reg_2417 = ap_const_lv1_1) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0)) or ((tmp_185_reg_2417 = ap_const_lv1_1) and (tmp_199_reg_2496 = ap_const_lv1_0) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0))))) then 
            search_ax_0_ce0 <= grp_solutionToString_fu_1080_search_0_ax_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_ax_0_ce0 <= grp_totalDepth_fu_1004_search_0_ax_ce0;
        else 
            search_ax_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    search_ax_0_ce1_assign_proc : process(ap_CS_fsm_state29, tmp_199_reg_2496, ap_CS_fsm_state31, tmp_204_fu_1723_p2, ap_CS_fsm_state55, or_cond1_fu_1739_p2, ap_CS_fsm_state33, tmp_242_fu_1777_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state29) or ((tmp_204_fu_1723_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (((tmp_199_reg_2496 = ap_const_lv1_1) and (tmp_204_fu_1723_p2 = ap_const_lv1_0)) or ((tmp_204_fu_1723_p2 = ap_const_lv1_0) and (or_cond1_fu_1739_p2 = ap_const_lv1_0)))) or ((tmp_242_fu_1777_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((tmp_242_fu_1777_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            search_ax_0_ce1 <= ap_const_logic_1;
        else 
            search_ax_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    search_ax_0_d0_assign_proc : process(ap_CS_fsm_state54, grp_totalDepth_fu_1004_search_0_ax_d0, ap_CS_fsm_state26, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            search_ax_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_ax_0_d0 <= grp_totalDepth_fu_1004_search_0_ax_d0;
        else 
            search_ax_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    search_ax_0_d1_assign_proc : process(tmp_199_reg_2496, tmp_203_fu_1716_p2, ap_CS_fsm_state31, tmp_204_fu_1723_p2, or_cond1_fu_1739_p2, ap_CS_fsm_state33, tmp_242_fu_1777_p2)
    begin
        if (((tmp_242_fu_1777_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            search_ax_0_d1 <= ap_const_lv32_1;
        elsif (((tmp_242_fu_1777_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            search_ax_0_d1 <= ap_const_lv32_0;
        elsif ((((tmp_204_fu_1723_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (((tmp_199_reg_2496 = ap_const_lv1_1) and (tmp_204_fu_1723_p2 = ap_const_lv1_0)) or ((tmp_204_fu_1723_p2 = ap_const_lv1_0) and (or_cond1_fu_1739_p2 = ap_const_lv1_0)))))) then 
            search_ax_0_d1 <= tmp_203_fu_1716_p2;
        else 
            search_ax_0_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    search_ax_0_we0_assign_proc : process(ap_CS_fsm_state54, or_cond_reg_2468, icmp_reg_2487, tmp_199_reg_2496, tmp_204_reg_2530, grp_totalDepth_fu_1004_search_0_ax_we0, ap_CS_fsm_state26, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or ((tmp_204_reg_2530 = ap_const_lv1_1) and (tmp_199_reg_2496 = ap_const_lv1_1) and (icmp_reg_2487 = ap_const_lv1_1) and (or_cond_reg_2468 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32)))) then 
            search_ax_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_ax_0_we0 <= grp_totalDepth_fu_1004_search_0_ax_we0;
        else 
            search_ax_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    search_ax_0_we1_assign_proc : process(tmp_199_reg_2496, ap_CS_fsm_state31, tmp_204_fu_1723_p2, or_cond1_fu_1739_p2, ap_CS_fsm_state33, tmp_242_fu_1777_p2)
    begin
        if ((((tmp_204_fu_1723_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((ap_const_logic_1 = ap_CS_fsm_state31) and (((tmp_199_reg_2496 = ap_const_lv1_1) and (tmp_204_fu_1723_p2 = ap_const_lv1_0)) or ((tmp_204_fu_1723_p2 = ap_const_lv1_0) and (or_cond1_fu_1739_p2 = ap_const_lv1_0)))) or ((tmp_242_fu_1777_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((tmp_242_fu_1777_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33)))) then 
            search_ax_0_we1 <= ap_const_logic_1;
        else 
            search_ax_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    search_flip_0_address0_assign_proc : process(ap_CS_fsm_state34, ap_CS_fsm_state48, ap_CS_fsm_state26, tmp_208_fu_1787_p1, tmp_213_fu_1977_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            search_flip_0_address0 <= tmp_213_fu_1977_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            search_flip_0_address0 <= tmp_208_fu_1787_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_flip_0_address0 <= ap_const_lv5_0;
        else 
            search_flip_0_address0 <= "XXXXX";
        end if; 
    end process;


    search_flip_0_ce0_assign_proc : process(ap_CS_fsm_state34, ap_CS_fsm_state48, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            search_flip_0_ce0 <= ap_const_logic_1;
        else 
            search_flip_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    search_flip_0_d0_assign_proc : process(result_flip_0, CTRL_BUS_addr_read_reg_2611, ap_CS_fsm_state48, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            search_flip_0_d0 <= CTRL_BUS_addr_read_reg_2611;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_flip_0_d0 <= result_flip_0;
        else 
            search_flip_0_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    search_flip_0_we0_assign_proc : process(ap_CS_fsm_state48, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            search_flip_0_we0 <= ap_const_logic_1;
        else 
            search_flip_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    search_minDistPhase1_address0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state53, tmp_193_fu_1631_p1, search_minDistPhase1_3_reg_2654, ap_CS_fsm_state52, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            search_minDistPhase1_address0 <= search_minDistPhase1_3_reg_2654;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            search_minDistPhase1_address0 <= tmp_193_fu_1631_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_minDistPhase1_address0 <= ap_const_lv5_1;
        else 
            search_minDistPhase1_address0 <= "XXXXX";
        end if; 
    end process;


    search_minDistPhase1_ce0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state53, ap_CS_fsm_state52, grp_getPruning_1_fu_1099_ap_done, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or ((grp_getPruning_1_fu_1099_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state52)))) then 
            search_minDistPhase1_ce0 <= ap_const_logic_1;
        else 
            search_minDistPhase1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    search_minDistPhase1_d0_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state52, ap_CS_fsm_state26, tmp_262_cast_cast_fu_2047_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            search_minDistPhase1_d0 <= ap_const_lv6_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            search_minDistPhase1_d0 <= tmp_262_cast_cast_fu_2047_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_minDistPhase1_d0 <= ap_const_lv6_1;
        else 
            search_minDistPhase1_d0 <= "XXXXXX";
        end if; 
    end process;


    search_minDistPhase1_we0_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state52, grp_getPruning_1_fu_1099_ap_done, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state26) or ((grp_getPruning_1_fu_1099_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state52)))) then 
            search_minDistPhase1_we0 <= ap_const_logic_1;
        else 
            search_minDistPhase1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    search_parity_0_address0_assign_proc : process(ap_CS_fsm_state54, grp_totalDepth_fu_1004_search_0_parity_address0, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_parity_0_address0 <= ap_const_lv5_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_parity_0_address0 <= grp_totalDepth_fu_1004_search_0_parity_address0;
        else 
            search_parity_0_address0 <= "XXXXX";
        end if; 
    end process;


    search_parity_0_ce0_assign_proc : process(ap_CS_fsm_state54, grp_totalDepth_fu_1004_search_0_parity_ce0, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_parity_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_parity_0_ce0 <= grp_totalDepth_fu_1004_search_0_parity_ce0;
        else 
            search_parity_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    search_parity_0_d0_assign_proc : process(ap_CS_fsm_state54, grp_totalDepth_fu_1004_search_0_parity_d0, ap_CS_fsm_state26, tmp_186_fu_1550_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_parity_0_d0 <= tmp_186_fu_1550_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_parity_0_d0 <= grp_totalDepth_fu_1004_search_0_parity_d0;
        else 
            search_parity_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    search_parity_0_we0_assign_proc : process(ap_CS_fsm_state54, grp_totalDepth_fu_1004_search_0_parity_we0, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_parity_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_parity_0_we0 <= grp_totalDepth_fu_1004_search_0_parity_we0;
        else 
            search_parity_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    search_po_0_address0_assign_proc : process(ap_CS_fsm_state34, ap_CS_fsm_state28, ap_CS_fsm_state54, tmp_176_reg_2400, tmp_185_reg_2417, tmp_193_reg_2457, or_cond_reg_2468, tmp_196_fu_1664_p1, search_po_0_addr_reg_2477, icmp_reg_2487, ap_CS_fsm_state29, tmp_199_reg_2496, ap_CS_fsm_state31, tmp_204_reg_2530, tmp_205_reg_2537, grp_totalDepth_fu_1004_search_0_po_address0, grp_solutionToString_fu_1080_search_0_po_address0, complete_reg_900, ap_CS_fsm_state26, ap_CS_fsm_state33, ap_CS_fsm_state32, ap_CS_fsm_state58, tmp_208_fu_1787_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            search_po_0_address0 <= tmp_208_fu_1787_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            search_po_0_address0 <= tmp_193_reg_2457(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            search_po_0_address0 <= search_po_0_addr_reg_2477;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            search_po_0_address0 <= tmp_196_fu_1664_p1(5 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            search_po_0_address0 <= ap_const_lv5_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) and (((tmp_205_reg_2537 = ap_const_lv1_1) and (tmp_185_reg_2417 = ap_const_lv1_1) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0)) or ((tmp_185_reg_2417 = ap_const_lv1_1) and (tmp_204_reg_2530 = ap_const_lv1_0) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0)) or ((tmp_185_reg_2417 = ap_const_lv1_1) and (icmp_reg_2487 = ap_const_lv1_0) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0)) or ((or_cond_reg_2468 = ap_const_lv1_1) and (tmp_185_reg_2417 = ap_const_lv1_1) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0)) or ((tmp_185_reg_2417 = ap_const_lv1_1) and (tmp_199_reg_2496 = ap_const_lv1_0) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0))))) then 
            search_po_0_address0 <= grp_solutionToString_fu_1080_search_0_po_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_po_0_address0 <= grp_totalDepth_fu_1004_search_0_po_address0;
        else 
            search_po_0_address0 <= "XXXXX";
        end if; 
    end process;


    search_po_0_ce0_assign_proc : process(ap_CS_fsm_state34, ap_CS_fsm_state28, ap_CS_fsm_state54, tmp_176_reg_2400, tmp_185_reg_2417, or_cond_reg_2468, icmp_reg_2487, ap_CS_fsm_state29, tmp_199_reg_2496, ap_CS_fsm_state31, tmp_204_reg_2530, tmp_205_reg_2537, grp_totalDepth_fu_1004_search_0_po_ce0, grp_solutionToString_fu_1080_search_0_po_ce0, complete_reg_900, ap_CS_fsm_state26, ap_CS_fsm_state33, ap_CS_fsm_state32, ap_CS_fsm_state58)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            search_po_0_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) and (((tmp_205_reg_2537 = ap_const_lv1_1) and (tmp_185_reg_2417 = ap_const_lv1_1) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0)) or ((tmp_185_reg_2417 = ap_const_lv1_1) and (tmp_204_reg_2530 = ap_const_lv1_0) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0)) or ((tmp_185_reg_2417 = ap_const_lv1_1) and (icmp_reg_2487 = ap_const_lv1_0) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0)) or ((or_cond_reg_2468 = ap_const_lv1_1) and (tmp_185_reg_2417 = ap_const_lv1_1) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0)) or ((tmp_185_reg_2417 = ap_const_lv1_1) and (tmp_199_reg_2496 = ap_const_lv1_0) and (tmp_176_reg_2400 = ap_const_lv1_0) and (complete_reg_900 = ap_const_lv1_0))))) then 
            search_po_0_ce0 <= grp_solutionToString_fu_1080_search_0_po_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_po_0_ce0 <= grp_totalDepth_fu_1004_search_0_po_ce0;
        else 
            search_po_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    search_po_0_d0_assign_proc : process(ap_CS_fsm_state54, ap_CS_fsm_state29, ap_CS_fsm_state31, grp_totalDepth_fu_1004_search_0_po_d0, ap_CS_fsm_state26, ap_CS_fsm_state33, ap_CS_fsm_state32, tmp_197_fu_1670_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state33))) then 
            search_po_0_d0 <= ap_const_lv32_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            search_po_0_d0 <= tmp_197_fu_1670_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_po_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_po_0_d0 <= grp_totalDepth_fu_1004_search_0_po_d0;
        else 
            search_po_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    search_po_0_we0_assign_proc : process(ap_CS_fsm_state54, or_cond_reg_2468, icmp_reg_2487, ap_CS_fsm_state29, tmp_199_reg_2496, ap_CS_fsm_state31, tmp_204_fu_1723_p2, tmp_204_reg_2530, grp_totalDepth_fu_1004_search_0_po_we0, ap_CS_fsm_state26, ap_CS_fsm_state33, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state26) or ((tmp_204_reg_2530 = ap_const_lv1_1) and (tmp_199_reg_2496 = ap_const_lv1_1) and (icmp_reg_2487 = ap_const_lv1_1) and (or_cond_reg_2468 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((tmp_204_fu_1723_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31)))) then 
            search_po_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            search_po_0_we0 <= grp_totalDepth_fu_1004_search_0_po_we0;
        else 
            search_po_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    search_slice_0_address0_assign_proc : process(ap_CS_fsm_state34, ap_CS_fsm_state48, ap_CS_fsm_state26, tmp_208_fu_1787_p1, tmp_213_fu_1977_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            search_slice_0_address0 <= tmp_213_fu_1977_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            search_slice_0_address0 <= tmp_208_fu_1787_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_slice_0_address0 <= ap_const_lv5_0;
        else 
            search_slice_0_address0 <= "XXXXX";
        end if; 
    end process;


    search_slice_0_ce0_assign_proc : process(ap_CS_fsm_state34, ap_CS_fsm_state48, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            search_slice_0_ce0 <= ap_const_logic_1;
        else 
            search_slice_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    search_slice_0_d0_assign_proc : process(ap_CS_fsm_state48, ap_CS_fsm_state26, tmp_188_fu_1590_p3, tmp_219_fu_2023_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            search_slice_0_d0 <= tmp_219_fu_2023_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_slice_0_d0 <= tmp_188_fu_1590_p3;
        else 
            search_slice_0_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    search_slice_0_we0_assign_proc : process(ap_CS_fsm_state48, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            search_slice_0_we0 <= ap_const_logic_1;
        else 
            search_slice_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    search_twist_0_address0_assign_proc : process(ap_CS_fsm_state34, ap_CS_fsm_state48, ap_CS_fsm_state26, tmp_208_fu_1787_p1, tmp_213_fu_1977_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            search_twist_0_address0 <= tmp_213_fu_1977_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            search_twist_0_address0 <= tmp_208_fu_1787_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_twist_0_address0 <= ap_const_lv5_0;
        else 
            search_twist_0_address0 <= "XXXXX";
        end if; 
    end process;


    search_twist_0_ce0_assign_proc : process(ap_CS_fsm_state34, ap_CS_fsm_state48, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            search_twist_0_ce0 <= ap_const_logic_1;
        else 
            search_twist_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    search_twist_0_d0_assign_proc : process(result_twist_0, CTRL_BUS_addr_1_read_reg_2617, ap_CS_fsm_state48, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            search_twist_0_d0 <= CTRL_BUS_addr_1_read_reg_2617;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            search_twist_0_d0 <= result_twist_0;
        else 
            search_twist_0_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    search_twist_0_we0_assign_proc : process(ap_CS_fsm_state48, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            search_twist_0_we0 <= ap_const_logic_1;
        else 
            search_twist_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp10_fu_1385_p2 <= (tmp_159_reg_2332 and grp_fu_1115_p2);
    tmp11_fu_1435_p2 <= (tmp13_fu_1430_p2 and tmp12_fu_1426_p2);
    tmp12_fu_1426_p2 <= (tmp_168_reg_2362 and tmp_165_reg_2352);
    tmp13_fu_1430_p2 <= (tmp_171_reg_2372 and grp_fu_1115_p2);
    tmp14_fu_1808_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(tmp_209_fu_1802_p2));
    tmp15_fu_1842_p2 <= std_logic_vector(unsigned(mv_reg_2569) + unsigned(p_shl27_cast_fu_1838_p1));
    tmp16_fu_1894_p2 <= std_logic_vector(unsigned(mv_reg_2569) + unsigned(p_shl29_cast_fu_1890_p1));
    tmp8_fu_1390_p2 <= (tmp9_fu_1381_p2 and tmp10_fu_1385_p2);
    tmp9_fu_1381_p2 <= (tmp_156_reg_2322 and tmp_153_reg_2312);
    tmp_148_fu_1300_p2 <= "1" when (invdar_reg_878 = ap_const_lv3_5) else "0";
    tmp_149_fu_1318_p3 <= (i_reg_889 & i_reg_889);
    tmp_150_fu_1326_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_149_fu_1318_p3),64));
    tmp_151_fu_1331_p2 <= std_logic_vector(unsigned(tmp_149_reg_2260) + unsigned(ap_const_lv6_1));
    tmp_152_fu_1336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_151_fu_1331_p2),64));
    tmp_154_fu_1341_p2 <= std_logic_vector(unsigned(tmp_149_reg_2260) + unsigned(ap_const_lv6_2));
    tmp_155_fu_1346_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_154_fu_1341_p2),64));
    tmp_157_fu_1351_p2 <= std_logic_vector(unsigned(tmp_149_reg_2260) + unsigned(ap_const_lv6_3));
    tmp_158_fu_1356_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_157_fu_1351_p2),64));
    tmp_160_fu_1361_p2 <= std_logic_vector(unsigned(tmp_149_reg_2260) + unsigned(ap_const_lv6_4));
    tmp_161_fu_1366_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_160_fu_1361_p2),64));
    tmp_163_fu_1371_p2 <= std_logic_vector(unsigned(tmp_149_reg_2260) + unsigned(ap_const_lv6_5));
    tmp_164_fu_1376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_163_fu_1371_p2),64));
    tmp_166_fu_1396_p2 <= std_logic_vector(unsigned(tmp_149_reg_2260) + unsigned(ap_const_lv6_6));
    tmp_167_fu_1401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_166_fu_1396_p2),64));
    tmp_169_fu_1406_p2 <= std_logic_vector(unsigned(tmp_149_reg_2260) + unsigned(ap_const_lv6_7));
    tmp_170_fu_1411_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_169_fu_1406_p2),64));
    tmp_172_fu_1416_p2 <= std_logic_vector(unsigned(tmp_149_reg_2260) + unsigned(ap_const_lv6_8));
    tmp_173_fu_1421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_172_fu_1416_p2),64));
    tmp_175_fu_1464_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_912),64));
    tmp_176_fu_1469_p2 <= "1" when (unsigned(i_2_reg_923) < unsigned(ap_const_lv3_6)) else "0";
    tmp_17_fu_1441_p2 <= (tmp8_reg_2347 and tmp11_fu_1435_p2);
    tmp_183_fu_1481_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_2_reg_923),64));
    tmp_184_fu_1486_p2 <= "1" when (count_q0 = ap_const_lv32_9) else "0";
    tmp_185_fu_1492_p2 <= "1" when (grp_verify_fu_1040_ap_return = ap_const_lv4_0) else "0";
        tmp_186_fu_1550_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(result_parity_0),32));

    tmp_187_fu_1507_p0 <= result_FRtoBR_0;
        tmp_187_fu_1507_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_187_fu_1507_p0),32));

    tmp_188_fu_1590_p3 <= 
        neg_ti_fu_1584_p2 when (tmp_218_reg_2441(0) = '1') else 
        tmp_238_fu_1574_p1;
        tmp_189_fu_1602_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(result_URFtoDLF_0),32));

        tmp_190_fu_1611_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(result_URtoUL_0),32));

        tmp_191_fu_1620_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(result_UBtoDF_0),32));

    tmp_192_fu_1636_p2 <= std_logic_vector(unsigned(depthPhase1_1_fu_380) - unsigned(reg_1144));
        tmp_193_fu_1631_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(n_3_fu_1625_p2),64));

    tmp_194_fu_1646_p2 <= "1" when (signed(tmp_192_fu_1636_p2) > signed(extLd_fu_1642_p1)) else "0";
    tmp_195_fu_1652_p2 <= (busy_1_reg_934 xor ap_const_lv1_1);
        tmp_196_fu_1664_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(reg_1144),64));

    tmp_197_fu_1670_p2 <= std_logic_vector(unsigned(search_po_0_q0) + unsigned(ap_const_lv32_1));
    tmp_198_fu_1257_p4 <= flipMove2(31 downto 1);
    tmp_199_fu_1693_p2 <= "1" when (reg_1144 = ap_const_lv32_0) else "0";
        tmp_200_fu_1705_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(n_fu_1699_p2),64));

    tmp_201_fu_1710_p2 <= std_logic_vector(unsigned(search_ax_0_q0) + unsigned(ap_const_lv32_FFFFFFFD));
    tmp_203_fu_1716_p2 <= std_logic_vector(unsigned(tmp_202_reg_945) + unsigned(ap_const_lv32_1));
    tmp_204_fu_1723_p2 <= "1" when (signed(tmp_203_fu_1716_p2) > signed(ap_const_lv32_5)) else "0";
    tmp_205_fu_1749_p2 <= "1" when (signed(reg_1148) < signed(tmp_reg_2239)) else "0";
    tmp_206_fu_1729_p2 <= "1" when (search_ax_0_load_1_reg_2510 = tmp_203_fu_1716_p2) else "0";
    tmp_207_fu_1734_p2 <= "1" when (tmp_201_reg_2515 = tmp_203_fu_1716_p2) else "0";
    tmp_208_fu_1787_p0 <= n_1_fu_384;
        tmp_208_fu_1787_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_208_fu_1787_p0),64));

    tmp_209_fu_1802_p2 <= std_logic_vector(unsigned(tmp_244_fu_1796_p2) - unsigned(search_ax_0_q0));
    tmp_210_fu_1847_p2 <= std_logic_vector(signed(p_shl26_cast_fu_1827_p1) + signed(tmp15_fu_1842_p2));
        tmp_211_cast_fu_1853_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_210_fu_1847_p2),33));

    tmp_211_fu_1271_p4 <= twistMove2(31 downto 1);
    tmp_212_fu_1971_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(reg_1144));
        tmp_213_fu_1977_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_212_fu_1971_p2),64));

    tmp_214_fu_1899_p2 <= std_logic_vector(signed(p_shl28_cast_fu_1879_p1) + signed(tmp16_fu_1894_p2));
        tmp_215_cast_fu_1905_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_214_fu_1899_p2),33));

    tmp_215_fu_1516_p1 <= mul_fu_2129_p2(33 - 1 downto 0);
        tmp_218_cast_fu_1927_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_2137_p3),33));

    tmp_218_fu_1519_p1 <= result_FRtoBR_0;
    tmp_219_fu_2023_p3 <= 
        neg_ti1_fu_2017_p2 when (tmp_246_reg_2628(0) = '1') else 
        tmp_250_fu_2007_p1;
    tmp_222_fu_1560_p4 <= neg_mul_fu_1555_p2(32 downto 21);
        tmp_225_fu_1570_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_222_fu_1560_p4),16));

    tmp_226_fu_2035_p2 <= "1" when (unsigned(tmp_252_reg_2659) > unsigned(grp_getPruning_1_fu_1099_ap_return)) else "0";
    tmp_227_fu_2052_p2 <= "1" when (p_in_fu_2040_p3 = ap_const_lv4_0) else "0";
    tmp_228_fu_2058_p2 <= std_logic_vector(unsigned(depthPhase1_1_fu_380) + unsigned(ap_const_lv32_FFFFFFFB));
    tmp_229_fu_2064_p2 <= "1" when (signed(reg_1144) < signed(tmp_228_fu_2058_p2)) else "0";
    tmp_230_fu_2070_p2 <= std_logic_vector(unsigned(depthPhase1_1_fu_380) + unsigned(ap_const_lv32_FFFFFFFF));
    tmp_231_fu_2076_p2 <= "1" when (reg_1144 = tmp_230_fu_2070_p2) else "0";
    tmp_233_fu_2090_p1 <= depthPhase1_1_fu_380;
    tmp_233_fu_2090_p2 <= "1" when (grp_totalDepth_fu_1004_ap_return = tmp_233_fu_2090_p1) else "0";
    tmp_234_fu_2096_p0 <= reg_1148;
        tmp_234_fu_2096_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_234_fu_2096_p0),64));

    tmp_235_fu_2101_p2 <= "1" when (search_ax_0_q0 = search_ax_0_q1) else "0";
    tmp_236_fu_2107_p2 <= std_logic_vector(unsigned(search_ax_0_q1) + unsigned(ap_const_lv32_3));
    tmp_237_fu_2113_p2 <= "1" when (search_ax_0_q0 = tmp_236_fu_2107_p2) else "0";
        tmp_238_fu_1574_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_232_reg_2447),16));

    tmp_239_fu_1577_p3 <= 
        tmp_225_fu_1570_p1 when (tmp_218_reg_2441(0) = '1') else 
        tmp_238_fu_1574_p1;
    tmp_240_fu_1765_p2 <= "1" when (search_ax_0_q0 = ap_const_lv32_3) else "0";
    tmp_241_fu_1771_p2 <= "1" when (search_ax_0_q0 = ap_const_lv32_0) else "0";
    tmp_242_fu_1777_p2 <= (tmp_241_fu_1771_p2 or tmp_240_fu_1765_p2);
    tmp_243_fu_1677_p4 <= tmp_197_fu_1670_p2(31 downto 2);
    tmp_244_fu_1796_p2 <= std_logic_vector(shift_left(unsigned(search_ax_0_q0),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    tmp_245_fu_1956_p1 <= mul1_fu_2145_p2(33 - 1 downto 0);
    tmp_246_fu_1945_p1 <= CTRL_BUS_RDATA;
    tmp_247_cast_fu_1253_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(FRtoBR_Move_fu_1243_p4),33));
    tmp_247_fu_1993_p4 <= neg_mul1_fu_1988_p2(32 downto 21);
    tmp_248_cast_fu_1267_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_198_fu_1257_p4),33));
        tmp_248_fu_2003_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_247_fu_1993_p4),16));

    tmp_249_cast1_fu_1281_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_211_fu_1271_p4),33));
        tmp_250_fu_2007_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_249_reg_2639),16));

    tmp_251_fu_2010_p3 <= 
        tmp_248_fu_2003_p1 when (tmp_246_reg_2628(0) = '1') else 
        tmp_250_fu_2007_p1;
        tmp_254_cast_fu_2031_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_219_fu_2023_p3),25));

    tmp_254_fu_2082_p3 <= grp_totalDepth_fu_1004_ap_return(31 downto 31);
    tmp_255_fu_2125_p1 <= s_2_reg_2677(8 - 1 downto 0);
    tmp_262_cast_cast_fu_2047_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_in_fu_2040_p3),6));
    tmp_fu_1285_p0 <= maxDepth;
        tmp_fu_1285_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_1285_p0),32));

    tmp_s_fu_1295_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(invdar_reg_878),64));
        twistMove22_sum_cast_fu_1914_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(twistMove22_sum_fu_1909_p2),64));

    twistMove22_sum_fu_1909_p2 <= std_logic_vector(unsigned(tmp_249_cast1_reg_2234) + unsigned(tmp_215_cast_fu_1905_p1));

    unsolvable_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_185_fu_1492_p2, ap_CS_fsm_state22, grp_verify_fu_1040_ap_done, tmp_199_reg_2496, ap_CS_fsm_state31, tmp_204_fu_1723_p2, tmp_205_fu_1749_p2, ap_CS_fsm_state17, tmp_184_fu_1486_p2)
    begin
        if ((((tmp_204_fu_1723_p2 = ap_const_lv1_1) and (tmp_199_reg_2496 = ap_const_lv1_1) and (tmp_205_fu_1749_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((grp_verify_fu_1040_ap_done = ap_const_logic_1) and (tmp_185_fu_1492_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((tmp_184_fu_1486_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            unsolvable <= ap_const_lv1_1;
        elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            unsolvable <= ap_const_lv1_0;
        else 
            unsolvable <= "X";
        end if; 
    end process;


    unsolvable_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_185_fu_1492_p2, ap_CS_fsm_state22, grp_verify_fu_1040_ap_done, tmp_199_reg_2496, ap_CS_fsm_state31, tmp_204_fu_1723_p2, tmp_205_fu_1749_p2, ap_CS_fsm_state17, tmp_184_fu_1486_p2)
    begin
        if ((((tmp_204_fu_1723_p2 = ap_const_lv1_1) and (tmp_199_reg_2496 = ap_const_lv1_1) and (tmp_205_fu_1749_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((grp_verify_fu_1040_ap_done = ap_const_logic_1) and (tmp_185_fu_1492_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((tmp_184_fu_1486_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            unsolvable_ap_vld <= ap_const_logic_1;
        else 
            unsolvable_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
