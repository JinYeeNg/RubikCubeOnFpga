// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "toCubieCube.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic toCubieCube::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic toCubieCube::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<19> toCubieCube::ap_ST_fsm_state1 = "1";
const sc_lv<19> toCubieCube::ap_ST_fsm_state2 = "10";
const sc_lv<19> toCubieCube::ap_ST_fsm_state3 = "100";
const sc_lv<19> toCubieCube::ap_ST_fsm_state4 = "1000";
const sc_lv<19> toCubieCube::ap_ST_fsm_state5 = "10000";
const sc_lv<19> toCubieCube::ap_ST_fsm_state6 = "100000";
const sc_lv<19> toCubieCube::ap_ST_fsm_state7 = "1000000";
const sc_lv<19> toCubieCube::ap_ST_fsm_state8 = "10000000";
const sc_lv<19> toCubieCube::ap_ST_fsm_state9 = "100000000";
const sc_lv<19> toCubieCube::ap_ST_fsm_state10 = "1000000000";
const sc_lv<19> toCubieCube::ap_ST_fsm_state11 = "10000000000";
const sc_lv<19> toCubieCube::ap_ST_fsm_state12 = "100000000000";
const sc_lv<19> toCubieCube::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<19> toCubieCube::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<19> toCubieCube::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<19> toCubieCube::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<19> toCubieCube::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<19> toCubieCube::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<19> toCubieCube::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<32> toCubieCube::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> toCubieCube::ap_const_lv32_8 = "1000";
const sc_lv<32> toCubieCube::ap_const_lv32_E = "1110";
const sc_lv<32> toCubieCube::ap_const_lv32_1 = "1";
const sc_lv<32> toCubieCube::ap_const_lv32_2 = "10";
const sc_lv<32> toCubieCube::ap_const_lv32_3 = "11";
const sc_lv<1> toCubieCube::ap_const_lv1_0 = "0";
const sc_lv<32> toCubieCube::ap_const_lv32_4 = "100";
const sc_lv<32> toCubieCube::ap_const_lv32_5 = "101";
const sc_lv<32> toCubieCube::ap_const_lv32_6 = "110";
const sc_lv<1> toCubieCube::ap_const_lv1_1 = "1";
const sc_lv<32> toCubieCube::ap_const_lv32_7 = "111";
const sc_lv<32> toCubieCube::ap_const_lv32_9 = "1001";
const sc_lv<32> toCubieCube::ap_const_lv32_A = "1010";
const sc_lv<32> toCubieCube::ap_const_lv32_C = "1100";
const sc_lv<32> toCubieCube::ap_const_lv32_D = "1101";
const sc_lv<32> toCubieCube::ap_const_lv32_F = "1111";
const sc_lv<32> toCubieCube::ap_const_lv32_10 = "10000";
const sc_lv<32> toCubieCube::ap_const_lv32_11 = "10001";
const sc_lv<4> toCubieCube::ap_const_lv4_0 = "0000";
const sc_lv<32> toCubieCube::ap_const_lv32_B = "1011";
const sc_lv<2> toCubieCube::ap_const_lv2_0 = "00";
const sc_lv<32> toCubieCube::ap_const_lv32_12 = "10010";
const sc_lv<3> toCubieCube::ap_const_lv3_0 = "000";
const sc_lv<4> toCubieCube::ap_const_lv4_8 = "1000";
const sc_lv<4> toCubieCube::ap_const_lv4_1 = "1";
const sc_lv<4> toCubieCube::ap_const_lv4_C = "1100";
const sc_lv<2> toCubieCube::ap_const_lv2_3 = "11";
const sc_lv<2> toCubieCube::ap_const_lv2_1 = "1";
const sc_lv<3> toCubieCube::ap_const_lv3_3 = "11";
const sc_lv<3> toCubieCube::ap_const_lv3_1 = "1";
const sc_lv<2> toCubieCube::ap_const_lv2_2 = "10";
const sc_lv<3> toCubieCube::ap_const_lv3_2 = "10";
const sc_lv<3> toCubieCube::ap_const_lv3_7 = "111";
const bool toCubieCube::ap_const_boolean_1 = true;

toCubieCube::toCubieCube(sc_module_name name) : sc_module(name), mVcdFile(0) {
    cornerFacelet_U = new toCubieCube_cornebkb("cornerFacelet_U");
    cornerFacelet_U->clk(ap_clk);
    cornerFacelet_U->reset(ap_rst);
    cornerFacelet_U->address0(cornerFacelet_address0);
    cornerFacelet_U->ce0(cornerFacelet_ce0);
    cornerFacelet_U->q0(cornerFacelet_q0);
    cornerFacelet_U->address1(cornerFacelet_address1);
    cornerFacelet_U->ce1(cornerFacelet_ce1);
    cornerFacelet_U->q1(cornerFacelet_q1);
    cornerColor_1_U = new toCubieCube_cornecud("cornerColor_1_U");
    cornerColor_1_U->clk(ap_clk);
    cornerColor_1_U->reset(ap_rst);
    cornerColor_1_U->address0(cornerColor_1_address0);
    cornerColor_1_U->ce0(cornerColor_1_ce0);
    cornerColor_1_U->q0(cornerColor_1_q0);
    cornerColor_2_U = new toCubieCube_cornedEe("cornerColor_2_U");
    cornerColor_2_U->clk(ap_clk);
    cornerColor_2_U->reset(ap_rst);
    cornerColor_2_U->address0(cornerColor_2_address0);
    cornerColor_2_U->ce0(cornerColor_2_ce0);
    cornerColor_2_U->q0(cornerColor_2_q0);
    edgeFacelet_0_U = new toCubieCube_edgeFeOg("edgeFacelet_0_U");
    edgeFacelet_0_U->clk(ap_clk);
    edgeFacelet_0_U->reset(ap_rst);
    edgeFacelet_0_U->address0(edgeFacelet_0_address0);
    edgeFacelet_0_U->ce0(edgeFacelet_0_ce0);
    edgeFacelet_0_U->q0(edgeFacelet_0_q0);
    edgeFacelet_1_U = new toCubieCube_edgeFfYi("edgeFacelet_1_U");
    edgeFacelet_1_U->clk(ap_clk);
    edgeFacelet_1_U->reset(ap_rst);
    edgeFacelet_1_U->address0(edgeFacelet_1_address0);
    edgeFacelet_1_U->ce0(edgeFacelet_1_ce0);
    edgeFacelet_1_U->q0(edgeFacelet_1_q0);
    edgeColor_0_U = new toCubieCube_edgeCg8j("edgeColor_0_U");
    edgeColor_0_U->clk(ap_clk);
    edgeColor_0_U->reset(ap_rst);
    edgeColor_0_U->address0(edgeColor_0_address0);
    edgeColor_0_U->ce0(edgeColor_0_ce0);
    edgeColor_0_U->q0(edgeColor_0_q0);
    edgeColor_1_U = new toCubieCube_edgeChbi("edgeColor_1_U");
    edgeColor_1_U->clk(ap_clk);
    edgeColor_1_U->reset(ap_rst);
    edgeColor_1_U->address0(edgeColor_1_address0);
    edgeColor_1_U->ce0(edgeColor_1_ce0);
    edgeColor_1_U->q0(edgeColor_1_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_690_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_690_p2 );

    SC_METHOD(thread_ccRet_co_0_address0);
    sensitive << ( tmp_120_reg_787 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ccRet_co_0_ce0);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ccRet_co_0_d0);
    sensitive << ( ori_1_reg_804 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ori_reg_367 );
    sensitive << ( tmp_156_fu_676_p2 );

    SC_METHOD(thread_ccRet_co_0_we0);
    sensitive << ( tmp_158_reg_843 );
    sensitive << ( tmp_143_reg_862 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_144_fu_665_p2 );

    SC_METHOD(thread_ccRet_cp_0_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_120_reg_787 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_fu_437_p1 );

    SC_METHOD(thread_ccRet_cp_0_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ccRet_cp_0_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_159_fu_671_p1 );

    SC_METHOD(thread_ccRet_cp_0_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_158_reg_843 );
    sensitive << ( tmp_143_reg_862 );
    sensitive << ( exitcond1_fu_425_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_144_fu_665_p2 );

    SC_METHOD(thread_ccRet_eo_0_addr_1_gep_fu_325_p3);
    sensitive << ( tmp_122_reg_882 );
    sensitive << ( tmp_127_reg_910 );
    sensitive << ( tmp_137_reg_935 );
    sensitive << ( tmp_139_reg_944 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( or_cond_fu_758_p2 );

    SC_METHOD(thread_ccRet_eo_0_address0);
    sensitive << ( tmp_122_reg_882 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ccRet_eo_0_addr_1_gep_fu_325_p3 );

    SC_METHOD(thread_ccRet_eo_0_ce0);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_ccRet_eo_0_d0);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_ccRet_eo_0_we0);
    sensitive << ( tmp_127_reg_910 );
    sensitive << ( tmp_137_reg_935 );
    sensitive << ( tmp_139_fu_741_p2 );
    sensitive << ( tmp_139_reg_944 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( or_cond_fu_758_p2 );

    SC_METHOD(thread_ccRet_ep_0_addr_2_gep_fu_317_p3);
    sensitive << ( tmp_122_reg_882 );
    sensitive << ( tmp_127_reg_910 );
    sensitive << ( tmp_137_reg_935 );
    sensitive << ( tmp_139_reg_944 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( or_cond_fu_758_p2 );

    SC_METHOD(thread_ccRet_ep_0_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_122_reg_882 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( tmp_s_fu_454_p1 );
    sensitive << ( ccRet_ep_0_addr_2_gep_fu_317_p3 );

    SC_METHOD(thread_ccRet_ep_0_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_ccRet_ep_0_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( j_1_reg_402 );

    SC_METHOD(thread_ccRet_ep_0_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_127_reg_910 );
    sensitive << ( tmp_137_reg_935 );
    sensitive << ( tmp_139_fu_741_p2 );
    sensitive << ( tmp_139_reg_944 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( exitcond9_fu_442_p2 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( or_cond_fu_758_p2 );

    SC_METHOD(thread_cornerColor_1_address0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_142_fu_654_p1 );

    SC_METHOD(thread_cornerColor_1_ce0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_cornerColor_2_address0);
    sensitive << ( tmp_142_reg_852 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_cornerColor_2_ce0);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_cornerFacelet_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_149_cast_fu_514_p1 );
    sensitive << ( tmp_152_cast_fu_585_p1 );

    SC_METHOD(thread_cornerFacelet_address1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_155_cast_fu_625_p1 );

    SC_METHOD(thread_cornerFacelet_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_cornerFacelet_ce1);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_edgeColor_0_address0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_136_fu_730_p1 );

    SC_METHOD(thread_edgeColor_0_ce0);
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_edgeColor_1_addr_1_gep_fu_287_p3);
    sensitive << ( tmp_136_reg_919 );
    sensitive << ( tmp_137_reg_935 );
    sensitive << ( tmp_139_fu_741_p2 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_edgeColor_1_address0);
    sensitive << ( tmp_136_reg_919 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( edgeColor_1_addr_1_gep_fu_287_p3 );

    SC_METHOD(thread_edgeColor_1_ce0);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_edgeFacelet_0_address0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_122_fu_702_p1 );

    SC_METHOD(thread_edgeFacelet_0_ce0);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_edgeFacelet_1_address0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_122_fu_702_p1 );

    SC_METHOD(thread_edgeFacelet_1_ce0);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_exitcond1_fu_425_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_334 );

    SC_METHOD(thread_exitcond8_fu_459_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_2_reg_356 );

    SC_METHOD(thread_exitcond9_fu_442_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_1_reg_345 );

    SC_METHOD(thread_exitcond_fu_690_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( i_3_reg_391 );

    SC_METHOD(thread_facecube_0_f_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_126_fu_519_p1 );
    sensitive << ( tmp_131_fu_630_p1 );
    sensitive << ( tmp_124_fu_713_p1 );

    SC_METHOD(thread_facecube_0_f_address1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_135_fu_635_p1 );
    sensitive << ( tmp_123_fu_708_p1 );

    SC_METHOD(thread_facecube_0_f_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_facecube_0_f_ce1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_i_10_fu_431_p2);
    sensitive << ( i_reg_334 );

    SC_METHOD(thread_i_11_fu_448_p2);
    sensitive << ( i_1_reg_345 );

    SC_METHOD(thread_i_12_fu_465_p2);
    sensitive << ( i_2_reg_356 );

    SC_METHOD(thread_i_4_fu_696_p2);
    sensitive << ( i_3_reg_391 );

    SC_METHOD(thread_j_2_fu_724_p2);
    sensitive << ( j_1_reg_402 );

    SC_METHOD(thread_j_3_fu_648_p2);
    sensitive << ( j_reg_379 );

    SC_METHOD(thread_or_cond_fu_758_p2);
    sensitive << ( tmp_141_reg_953 );
    sensitive << ( tmp_140_fu_752_p2 );

    SC_METHOD(thread_ori_1_fu_499_p2);
    sensitive << ( ori_reg_367 );

    SC_METHOD(thread_tmp_120_cast_fu_475_p1);
    sensitive << ( i_2_reg_356 );

    SC_METHOD(thread_tmp_120_fu_471_p1);
    sensitive << ( i_2_reg_356 );

    SC_METHOD(thread_tmp_121_fu_493_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ori_reg_367 );

    SC_METHOD(thread_tmp_122_fu_702_p1);
    sensitive << ( i_3_reg_391 );

    SC_METHOD(thread_tmp_123_fu_708_p1);
    sensitive << ( edgeFacelet_0_q0 );

    SC_METHOD(thread_tmp_124_fu_713_p1);
    sensitive << ( edgeFacelet_1_q0 );

    SC_METHOD(thread_tmp_125_cast_fu_505_p1);
    sensitive << ( ori_reg_367 );

    SC_METHOD(thread_tmp_126_fu_519_p1);
    sensitive << ( cornerFacelet_q0 );

    SC_METHOD(thread_tmp_127_fu_718_p2);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( j_1_reg_402 );

    SC_METHOD(thread_tmp_128_fu_546_p2);
    sensitive << ( tmp_148_cast_fu_542_p1 );

    SC_METHOD(thread_tmp_130_cast_fu_576_p1);
    sensitive << ( tmp_151_fu_568_p3 );

    SC_METHOD(thread_tmp_131_fu_630_p1);
    sensitive << ( cornerFacelet_q0 );

    SC_METHOD(thread_tmp_132_fu_590_p2);
    sensitive << ( tmp_148_cast_fu_542_p1 );

    SC_METHOD(thread_tmp_133_fu_524_p2);
    sensitive << ( facecube_0_f_q0 );
    sensitive << ( tmp_121_reg_800 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tmp_134_cast_fu_616_p1);
    sensitive << ( tmp_157_fu_608_p3 );

    SC_METHOD(thread_tmp_134_fu_530_p2);
    sensitive << ( facecube_0_f_q0 );
    sensitive << ( tmp_121_reg_800 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tmp_135_fu_635_p1);
    sensitive << ( cornerFacelet_q1 );

    SC_METHOD(thread_tmp_136_fu_730_p1);
    sensitive << ( j_1_reg_402 );

    SC_METHOD(thread_tmp_137_fu_735_p2);
    sensitive << ( edgeColor_0_q0 );
    sensitive << ( reg_415 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_tmp_138_fu_536_p2);
    sensitive << ( tmp_134_fu_530_p2 );
    sensitive << ( tmp_133_fu_524_p2 );

    SC_METHOD(thread_tmp_139_fu_741_p2);
    sensitive << ( edgeColor_1_q0 );
    sensitive << ( reg_420 );
    sensitive << ( tmp_137_reg_935 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_tmp_140_fu_752_p2);
    sensitive << ( edgeColor_1_q0 );
    sensitive << ( reg_415 );
    sensitive << ( tmp_127_reg_910 );
    sensitive << ( tmp_137_reg_935 );
    sensitive << ( tmp_139_reg_944 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_tmp_141_fu_747_p2);
    sensitive << ( reg_420 );
    sensitive << ( edgeColor_0_load_reg_930 );
    sensitive << ( tmp_137_reg_935 );
    sensitive << ( tmp_139_fu_741_p2 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_tmp_142_fu_654_p1);
    sensitive << ( j_reg_379 );

    SC_METHOD(thread_tmp_143_fu_659_p2);
    sensitive << ( cornerColor_1_q0 );
    sensitive << ( reg_415 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_tmp_144_fu_665_p2);
    sensitive << ( cornerColor_2_q0 );
    sensitive << ( reg_420 );
    sensitive << ( tmp_158_reg_843 );
    sensitive << ( tmp_143_reg_862 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_tmp_145_fu_479_p3);
    sensitive << ( i_2_reg_356 );

    SC_METHOD(thread_tmp_147_fu_487_p2);
    sensitive << ( tmp_145_fu_479_p3 );
    sensitive << ( tmp_120_cast_fu_475_p1 );

    SC_METHOD(thread_tmp_148_cast_fu_542_p1);
    sensitive << ( ori_reg_367 );

    SC_METHOD(thread_tmp_148_fu_509_p2);
    sensitive << ( tmp_147_reg_793 );
    sensitive << ( tmp_125_cast_fu_505_p1 );

    SC_METHOD(thread_tmp_149_cast_fu_514_p1);
    sensitive << ( tmp_148_fu_509_p2 );

    SC_METHOD(thread_tmp_149_fu_552_p2);
    sensitive << ( tmp_121_reg_800 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_138_fu_536_p2 );
    sensitive << ( tmp_128_fu_546_p2 );

    SC_METHOD(thread_tmp_150_fu_558_p2);
    sensitive << ( ori_reg_367 );

    SC_METHOD(thread_tmp_151_cast_fu_564_p1);
    sensitive << ( tmp_150_fu_558_p2 );

    SC_METHOD(thread_tmp_151_fu_568_p3);
    sensitive << ( tmp_128_fu_546_p2 );
    sensitive << ( tmp_149_fu_552_p2 );
    sensitive << ( tmp_151_cast_fu_564_p1 );

    SC_METHOD(thread_tmp_152_cast_fu_585_p1);
    sensitive << ( tmp_152_fu_580_p2 );

    SC_METHOD(thread_tmp_152_fu_580_p2);
    sensitive << ( tmp_147_reg_793 );
    sensitive << ( tmp_130_cast_fu_576_p1 );

    SC_METHOD(thread_tmp_153_fu_596_p2);
    sensitive << ( tmp_121_reg_800 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_138_fu_536_p2 );
    sensitive << ( tmp_132_fu_590_p2 );

    SC_METHOD(thread_tmp_154_fu_602_p2);
    sensitive << ( tmp_148_cast_fu_542_p1 );

    SC_METHOD(thread_tmp_155_cast_fu_625_p1);
    sensitive << ( tmp_155_fu_620_p2 );

    SC_METHOD(thread_tmp_155_fu_620_p2);
    sensitive << ( tmp_147_reg_793 );
    sensitive << ( tmp_134_cast_fu_616_p1 );

    SC_METHOD(thread_tmp_156_fu_676_p2);
    sensitive << ( tmp_158_reg_843 );
    sensitive << ( tmp_143_reg_862 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_144_fu_665_p2 );
    sensitive << ( ori_reg_367 );

    SC_METHOD(thread_tmp_157_fu_608_p3);
    sensitive << ( tmp_132_fu_590_p2 );
    sensitive << ( tmp_153_fu_596_p2 );
    sensitive << ( tmp_154_fu_602_p2 );

    SC_METHOD(thread_tmp_158_fu_640_p3);
    sensitive << ( j_reg_379 );

    SC_METHOD(thread_tmp_159_fu_671_p1);
    sensitive << ( j_reg_379 );

    SC_METHOD(thread_tmp_fu_437_p1);
    sensitive << ( i_reg_334 );

    SC_METHOD(thread_tmp_s_fu_454_p1);
    sensitive << ( i_1_reg_345 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond8_fu_459_p2 );
    sensitive << ( tmp_121_fu_493_p2 );
    sensitive << ( tmp_121_reg_800 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_138_fu_536_p2 );
    sensitive << ( tmp_158_fu_640_p3 );
    sensitive << ( tmp_158_reg_843 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_143_reg_862 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( exitcond_fu_690_p2 );
    sensitive << ( tmp_127_fu_718_p2 );
    sensitive << ( tmp_127_reg_910 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_137_reg_935 );
    sensitive << ( tmp_139_reg_944 );
    sensitive << ( exitcond1_fu_425_p2 );
    sensitive << ( exitcond9_fu_442_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_144_fu_665_p2 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( or_cond_fu_758_p2 );

    ap_CS_fsm = "0000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "toCubieCube_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, facecube_0_f_address0, "(port)facecube_0_f_address0");
    sc_trace(mVcdFile, facecube_0_f_ce0, "(port)facecube_0_f_ce0");
    sc_trace(mVcdFile, facecube_0_f_q0, "(port)facecube_0_f_q0");
    sc_trace(mVcdFile, facecube_0_f_address1, "(port)facecube_0_f_address1");
    sc_trace(mVcdFile, facecube_0_f_ce1, "(port)facecube_0_f_ce1");
    sc_trace(mVcdFile, facecube_0_f_q1, "(port)facecube_0_f_q1");
    sc_trace(mVcdFile, ccRet_cp_0_address0, "(port)ccRet_cp_0_address0");
    sc_trace(mVcdFile, ccRet_cp_0_ce0, "(port)ccRet_cp_0_ce0");
    sc_trace(mVcdFile, ccRet_cp_0_we0, "(port)ccRet_cp_0_we0");
    sc_trace(mVcdFile, ccRet_cp_0_d0, "(port)ccRet_cp_0_d0");
    sc_trace(mVcdFile, ccRet_ep_0_address0, "(port)ccRet_ep_0_address0");
    sc_trace(mVcdFile, ccRet_ep_0_ce0, "(port)ccRet_ep_0_ce0");
    sc_trace(mVcdFile, ccRet_ep_0_we0, "(port)ccRet_ep_0_we0");
    sc_trace(mVcdFile, ccRet_ep_0_d0, "(port)ccRet_ep_0_d0");
    sc_trace(mVcdFile, ccRet_co_0_address0, "(port)ccRet_co_0_address0");
    sc_trace(mVcdFile, ccRet_co_0_ce0, "(port)ccRet_co_0_ce0");
    sc_trace(mVcdFile, ccRet_co_0_we0, "(port)ccRet_co_0_we0");
    sc_trace(mVcdFile, ccRet_co_0_d0, "(port)ccRet_co_0_d0");
    sc_trace(mVcdFile, ccRet_eo_0_address0, "(port)ccRet_eo_0_address0");
    sc_trace(mVcdFile, ccRet_eo_0_ce0, "(port)ccRet_eo_0_ce0");
    sc_trace(mVcdFile, ccRet_eo_0_we0, "(port)ccRet_eo_0_we0");
    sc_trace(mVcdFile, ccRet_eo_0_d0, "(port)ccRet_eo_0_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, cornerFacelet_address0, "cornerFacelet_address0");
    sc_trace(mVcdFile, cornerFacelet_ce0, "cornerFacelet_ce0");
    sc_trace(mVcdFile, cornerFacelet_q0, "cornerFacelet_q0");
    sc_trace(mVcdFile, cornerFacelet_address1, "cornerFacelet_address1");
    sc_trace(mVcdFile, cornerFacelet_ce1, "cornerFacelet_ce1");
    sc_trace(mVcdFile, cornerFacelet_q1, "cornerFacelet_q1");
    sc_trace(mVcdFile, cornerColor_1_address0, "cornerColor_1_address0");
    sc_trace(mVcdFile, cornerColor_1_ce0, "cornerColor_1_ce0");
    sc_trace(mVcdFile, cornerColor_1_q0, "cornerColor_1_q0");
    sc_trace(mVcdFile, cornerColor_2_address0, "cornerColor_2_address0");
    sc_trace(mVcdFile, cornerColor_2_ce0, "cornerColor_2_ce0");
    sc_trace(mVcdFile, cornerColor_2_q0, "cornerColor_2_q0");
    sc_trace(mVcdFile, edgeFacelet_0_address0, "edgeFacelet_0_address0");
    sc_trace(mVcdFile, edgeFacelet_0_ce0, "edgeFacelet_0_ce0");
    sc_trace(mVcdFile, edgeFacelet_0_q0, "edgeFacelet_0_q0");
    sc_trace(mVcdFile, edgeFacelet_1_address0, "edgeFacelet_1_address0");
    sc_trace(mVcdFile, edgeFacelet_1_ce0, "edgeFacelet_1_ce0");
    sc_trace(mVcdFile, edgeFacelet_1_q0, "edgeFacelet_1_q0");
    sc_trace(mVcdFile, edgeColor_0_address0, "edgeColor_0_address0");
    sc_trace(mVcdFile, edgeColor_0_ce0, "edgeColor_0_ce0");
    sc_trace(mVcdFile, edgeColor_0_q0, "edgeColor_0_q0");
    sc_trace(mVcdFile, edgeColor_1_address0, "edgeColor_1_address0");
    sc_trace(mVcdFile, edgeColor_1_ce0, "edgeColor_1_ce0");
    sc_trace(mVcdFile, edgeColor_1_q0, "edgeColor_1_q0");
    sc_trace(mVcdFile, reg_415, "reg_415");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, reg_420, "reg_420");
    sc_trace(mVcdFile, i_10_fu_431_p2, "i_10_fu_431_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_11_fu_448_p2, "i_11_fu_448_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_12_fu_465_p2, "i_12_fu_465_p2");
    sc_trace(mVcdFile, i_12_reg_782, "i_12_reg_782");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_120_fu_471_p1, "tmp_120_fu_471_p1");
    sc_trace(mVcdFile, tmp_120_reg_787, "tmp_120_reg_787");
    sc_trace(mVcdFile, exitcond8_fu_459_p2, "exitcond8_fu_459_p2");
    sc_trace(mVcdFile, tmp_147_fu_487_p2, "tmp_147_fu_487_p2");
    sc_trace(mVcdFile, tmp_147_reg_793, "tmp_147_reg_793");
    sc_trace(mVcdFile, tmp_121_fu_493_p2, "tmp_121_fu_493_p2");
    sc_trace(mVcdFile, tmp_121_reg_800, "tmp_121_reg_800");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ori_1_fu_499_p2, "ori_1_fu_499_p2");
    sc_trace(mVcdFile, ori_1_reg_804, "ori_1_reg_804");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_138_fu_536_p2, "tmp_138_fu_536_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_158_fu_640_p3, "tmp_158_fu_640_p3");
    sc_trace(mVcdFile, tmp_158_reg_843, "tmp_158_reg_843");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, j_3_fu_648_p2, "j_3_fu_648_p2");
    sc_trace(mVcdFile, j_3_reg_847, "j_3_reg_847");
    sc_trace(mVcdFile, tmp_142_fu_654_p1, "tmp_142_fu_654_p1");
    sc_trace(mVcdFile, tmp_142_reg_852, "tmp_142_reg_852");
    sc_trace(mVcdFile, tmp_143_fu_659_p2, "tmp_143_fu_659_p2");
    sc_trace(mVcdFile, tmp_143_reg_862, "tmp_143_reg_862");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, i_4_fu_696_p2, "i_4_fu_696_p2");
    sc_trace(mVcdFile, i_4_reg_877, "i_4_reg_877");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, tmp_122_fu_702_p1, "tmp_122_fu_702_p1");
    sc_trace(mVcdFile, tmp_122_reg_882, "tmp_122_reg_882");
    sc_trace(mVcdFile, exitcond_fu_690_p2, "exitcond_fu_690_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, tmp_127_fu_718_p2, "tmp_127_fu_718_p2");
    sc_trace(mVcdFile, tmp_127_reg_910, "tmp_127_reg_910");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, j_2_fu_724_p2, "j_2_fu_724_p2");
    sc_trace(mVcdFile, j_2_reg_914, "j_2_reg_914");
    sc_trace(mVcdFile, tmp_136_fu_730_p1, "tmp_136_fu_730_p1");
    sc_trace(mVcdFile, tmp_136_reg_919, "tmp_136_reg_919");
    sc_trace(mVcdFile, edgeColor_0_load_reg_930, "edgeColor_0_load_reg_930");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, tmp_137_fu_735_p2, "tmp_137_fu_735_p2");
    sc_trace(mVcdFile, tmp_137_reg_935, "tmp_137_reg_935");
    sc_trace(mVcdFile, tmp_139_fu_741_p2, "tmp_139_fu_741_p2");
    sc_trace(mVcdFile, tmp_139_reg_944, "tmp_139_reg_944");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, edgeColor_1_addr_1_gep_fu_287_p3, "edgeColor_1_addr_1_gep_fu_287_p3");
    sc_trace(mVcdFile, tmp_141_fu_747_p2, "tmp_141_fu_747_p2");
    sc_trace(mVcdFile, tmp_141_reg_953, "tmp_141_reg_953");
    sc_trace(mVcdFile, i_reg_334, "i_reg_334");
    sc_trace(mVcdFile, exitcond1_fu_425_p2, "exitcond1_fu_425_p2");
    sc_trace(mVcdFile, i_1_reg_345, "i_1_reg_345");
    sc_trace(mVcdFile, exitcond9_fu_442_p2, "exitcond9_fu_442_p2");
    sc_trace(mVcdFile, i_2_reg_356, "i_2_reg_356");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_144_fu_665_p2, "tmp_144_fu_665_p2");
    sc_trace(mVcdFile, ori_reg_367, "ori_reg_367");
    sc_trace(mVcdFile, j_reg_379, "j_reg_379");
    sc_trace(mVcdFile, i_3_reg_391, "i_3_reg_391");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, or_cond_fu_758_p2, "or_cond_fu_758_p2");
    sc_trace(mVcdFile, j_1_reg_402, "j_1_reg_402");
    sc_trace(mVcdFile, tmp_fu_437_p1, "tmp_fu_437_p1");
    sc_trace(mVcdFile, tmp_s_fu_454_p1, "tmp_s_fu_454_p1");
    sc_trace(mVcdFile, tmp_149_cast_fu_514_p1, "tmp_149_cast_fu_514_p1");
    sc_trace(mVcdFile, tmp_126_fu_519_p1, "tmp_126_fu_519_p1");
    sc_trace(mVcdFile, tmp_152_cast_fu_585_p1, "tmp_152_cast_fu_585_p1");
    sc_trace(mVcdFile, tmp_155_cast_fu_625_p1, "tmp_155_cast_fu_625_p1");
    sc_trace(mVcdFile, tmp_131_fu_630_p1, "tmp_131_fu_630_p1");
    sc_trace(mVcdFile, tmp_135_fu_635_p1, "tmp_135_fu_635_p1");
    sc_trace(mVcdFile, tmp_123_fu_708_p1, "tmp_123_fu_708_p1");
    sc_trace(mVcdFile, tmp_124_fu_713_p1, "tmp_124_fu_713_p1");
    sc_trace(mVcdFile, ccRet_ep_0_addr_2_gep_fu_317_p3, "ccRet_ep_0_addr_2_gep_fu_317_p3");
    sc_trace(mVcdFile, ccRet_eo_0_addr_1_gep_fu_325_p3, "ccRet_eo_0_addr_1_gep_fu_325_p3");
    sc_trace(mVcdFile, tmp_159_fu_671_p1, "tmp_159_fu_671_p1");
    sc_trace(mVcdFile, tmp_145_fu_479_p3, "tmp_145_fu_479_p3");
    sc_trace(mVcdFile, tmp_120_cast_fu_475_p1, "tmp_120_cast_fu_475_p1");
    sc_trace(mVcdFile, tmp_125_cast_fu_505_p1, "tmp_125_cast_fu_505_p1");
    sc_trace(mVcdFile, tmp_148_fu_509_p2, "tmp_148_fu_509_p2");
    sc_trace(mVcdFile, tmp_134_fu_530_p2, "tmp_134_fu_530_p2");
    sc_trace(mVcdFile, tmp_133_fu_524_p2, "tmp_133_fu_524_p2");
    sc_trace(mVcdFile, tmp_148_cast_fu_542_p1, "tmp_148_cast_fu_542_p1");
    sc_trace(mVcdFile, tmp_128_fu_546_p2, "tmp_128_fu_546_p2");
    sc_trace(mVcdFile, tmp_150_fu_558_p2, "tmp_150_fu_558_p2");
    sc_trace(mVcdFile, tmp_149_fu_552_p2, "tmp_149_fu_552_p2");
    sc_trace(mVcdFile, tmp_151_cast_fu_564_p1, "tmp_151_cast_fu_564_p1");
    sc_trace(mVcdFile, tmp_151_fu_568_p3, "tmp_151_fu_568_p3");
    sc_trace(mVcdFile, tmp_130_cast_fu_576_p1, "tmp_130_cast_fu_576_p1");
    sc_trace(mVcdFile, tmp_152_fu_580_p2, "tmp_152_fu_580_p2");
    sc_trace(mVcdFile, tmp_132_fu_590_p2, "tmp_132_fu_590_p2");
    sc_trace(mVcdFile, tmp_153_fu_596_p2, "tmp_153_fu_596_p2");
    sc_trace(mVcdFile, tmp_154_fu_602_p2, "tmp_154_fu_602_p2");
    sc_trace(mVcdFile, tmp_157_fu_608_p3, "tmp_157_fu_608_p3");
    sc_trace(mVcdFile, tmp_134_cast_fu_616_p1, "tmp_134_cast_fu_616_p1");
    sc_trace(mVcdFile, tmp_155_fu_620_p2, "tmp_155_fu_620_p2");
    sc_trace(mVcdFile, tmp_156_fu_676_p2, "tmp_156_fu_676_p2");
    sc_trace(mVcdFile, tmp_140_fu_752_p2, "tmp_140_fu_752_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

toCubieCube::~toCubieCube() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete cornerFacelet_U;
    delete cornerColor_1_U;
    delete cornerColor_2_U;
    delete edgeFacelet_0_U;
    delete edgeFacelet_1_U;
    delete edgeColor_0_U;
    delete edgeColor_1_U;
}

void toCubieCube::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_425_p2.read(), ap_const_lv1_1))) {
        i_1_reg_345 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(exitcond9_fu_442_p2.read(), ap_const_lv1_0))) {
        i_1_reg_345 = i_11_fu_448_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond9_fu_442_p2.read(), ap_const_lv1_1))) {
        i_2_reg_356 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                (esl_seteq<1,1,1>(tmp_158_reg_843.read(), ap_const_lv1_1) || 
                 (esl_seteq<1,1,1>(tmp_144_fu_665_p2.read(), ap_const_lv1_1) && 
                  esl_seteq<1,1,1>(tmp_143_reg_862.read(), ap_const_lv1_1))))) {
        i_2_reg_356 = i_12_reg_782.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond8_fu_459_p2.read(), ap_const_lv1_1))) {
        i_3_reg_391 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                (esl_seteq<1,1,1>(or_cond_fu_758_p2.read(), ap_const_lv1_1) || 
                 esl_seteq<1,1,1>(tmp_127_reg_910.read(), ap_const_lv1_0) || 
                 (esl_seteq<1,1,1>(tmp_139_reg_944.read(), ap_const_lv1_1) && 
                  esl_seteq<1,1,1>(tmp_137_reg_935.read(), ap_const_lv1_1))))) {
        i_3_reg_391 = i_4_reg_877.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_425_p2.read(), ap_const_lv1_0))) {
        i_reg_334 = i_10_fu_431_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        i_reg_334 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
         ((esl_seteq<1,1,1>(tmp_127_reg_910.read(), ap_const_lv1_1) && 
           esl_seteq<1,1,1>(or_cond_fu_758_p2.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(tmp_139_reg_944.read(), ap_const_lv1_0)) || 
          (esl_seteq<1,1,1>(tmp_127_reg_910.read(), ap_const_lv1_1) && 
           esl_seteq<1,1,1>(or_cond_fu_758_p2.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(tmp_137_reg_935.read(), ap_const_lv1_0))))) {
        j_1_reg_402 = j_2_reg_914.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        j_1_reg_402 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         ((esl_seteq<1,1,1>(tmp_144_fu_665_p2.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(tmp_158_reg_843.read(), ap_const_lv1_0)) || 
          (esl_seteq<1,1,1>(tmp_143_reg_862.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(tmp_158_reg_843.read(), ap_const_lv1_0))))) {
        j_reg_379 = j_3_reg_847.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        j_reg_379 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(tmp_138_fu_536_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(tmp_121_reg_800.read(), ap_const_lv1_0))) {
        ori_reg_367 = ori_1_reg_804.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(exitcond8_fu_459_p2.read(), ap_const_lv1_0))) {
        ori_reg_367 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        reg_415 = facecube_0_f_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        reg_415 = facecube_0_f_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        reg_420 = facecube_0_f_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        reg_420 = facecube_0_f_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        edgeColor_0_load_reg_930 = edgeColor_0_q0.read();
        tmp_137_reg_935 = tmp_137_fu_735_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_12_reg_782 = i_12_fu_465_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        i_4_reg_877 = i_4_fu_696_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        j_2_reg_914 = j_2_fu_724_p2.read();
        tmp_127_reg_910 = tmp_127_fu_718_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        j_3_reg_847 = j_3_fu_648_p2.read();
        tmp_158_reg_843 = j_reg_379.read().range(3, 3);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ori_1_reg_804 = ori_1_fu_499_p2.read();
        tmp_121_reg_800 = tmp_121_fu_493_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond8_fu_459_p2.read(), ap_const_lv1_0))) {
        tmp_120_reg_787 = tmp_120_fu_471_p1.read();
        tmp_147_reg_793 = tmp_147_fu_487_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(exitcond_fu_690_p2.read(), ap_const_lv1_0))) {
        tmp_122_reg_882 = tmp_122_fu_702_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(tmp_127_fu_718_p2.read(), ap_const_lv1_1))) {
        tmp_136_reg_919 = tmp_136_fu_730_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && esl_seteq<1,1,1>(tmp_137_reg_935.read(), ap_const_lv1_1))) {
        tmp_139_reg_944 = tmp_139_fu_741_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && (esl_seteq<1,1,1>(tmp_137_reg_935.read(), ap_const_lv1_0) || 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_139_fu_741_p2.read())))) {
        tmp_141_reg_953 = tmp_141_fu_747_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(tmp_158_fu_640_p3.read(), ap_const_lv1_0))) {
        tmp_142_reg_852 = tmp_142_fu_654_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        tmp_143_reg_862 = tmp_143_fu_659_p2.read();
    }
}

void toCubieCube::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void toCubieCube::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void toCubieCube::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void toCubieCube::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void toCubieCube::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void toCubieCube::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void toCubieCube::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void toCubieCube::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void toCubieCube::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void toCubieCube::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void toCubieCube::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void toCubieCube::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void toCubieCube::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void toCubieCube::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void toCubieCube::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void toCubieCube::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void toCubieCube::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void toCubieCube::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void toCubieCube::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void toCubieCube::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_690_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void toCubieCube::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void toCubieCube::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_690_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void toCubieCube::thread_ccRet_co_0_address0() {
    ccRet_co_0_address0 =  (sc_lv<3>) (tmp_120_reg_787.read());
}

void toCubieCube::thread_ccRet_co_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ccRet_co_0_ce0 = ap_const_logic_1;
    } else {
        ccRet_co_0_ce0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_ccRet_co_0_d0() {
    ccRet_co_0_d0 = (!tmp_156_fu_676_p2.read()[0].is_01())? sc_lv<2>(): ((tmp_156_fu_676_p2.read()[0].to_bool())? ori_reg_367.read(): ori_1_reg_804.read());
}

void toCubieCube::thread_ccRet_co_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(tmp_143_reg_862.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(tmp_144_fu_665_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(tmp_158_reg_843.read(), ap_const_lv1_0))) {
        ccRet_co_0_we0 = ap_const_logic_1;
    } else {
        ccRet_co_0_we0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_ccRet_cp_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ccRet_cp_0_address0 =  (sc_lv<3>) (tmp_120_reg_787.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ccRet_cp_0_address0 =  (sc_lv<3>) (tmp_fu_437_p1.read());
    } else {
        ccRet_cp_0_address0 = "XXX";
    }
}

void toCubieCube::thread_ccRet_cp_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        ccRet_cp_0_ce0 = ap_const_logic_1;
    } else {
        ccRet_cp_0_ce0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_ccRet_cp_0_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ccRet_cp_0_d0 = tmp_159_fu_671_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ccRet_cp_0_d0 = ap_const_lv3_0;
    } else {
        ccRet_cp_0_d0 = "XXX";
    }
}

void toCubieCube::thread_ccRet_cp_0_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond1_fu_425_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(tmp_143_reg_862.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(tmp_144_fu_665_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(tmp_158_reg_843.read(), ap_const_lv1_0)))) {
        ccRet_cp_0_we0 = ap_const_logic_1;
    } else {
        ccRet_cp_0_we0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_ccRet_eo_0_addr_1_gep_fu_325_p3() {
    ccRet_eo_0_addr_1_gep_fu_325_p3 =  (sc_lv<4>) (tmp_122_reg_882.read());
}

void toCubieCube::thread_ccRet_eo_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        ccRet_eo_0_address0 = ccRet_eo_0_addr_1_gep_fu_325_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        ccRet_eo_0_address0 =  (sc_lv<4>) (tmp_122_reg_882.read());
    } else {
        ccRet_eo_0_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void toCubieCube::thread_ccRet_eo_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        ccRet_eo_0_ce0 = ap_const_logic_1;
    } else {
        ccRet_eo_0_ce0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_ccRet_eo_0_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        ccRet_eo_0_d0 = ap_const_lv1_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        ccRet_eo_0_d0 = ap_const_lv1_0;
    } else {
        ccRet_eo_0_d0 =  (sc_lv<1>) ("X");
    }
}

void toCubieCube::thread_ccRet_eo_0_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          esl_seteq<1,1,1>(tmp_137_reg_935.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_139_fu_741_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          ((esl_seteq<1,1,1>(tmp_137_reg_935.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_758_p2.read(), ap_const_lv1_1) && 
            esl_seteq<1,1,1>(tmp_127_reg_910.read(), ap_const_lv1_1)) || 
           (esl_seteq<1,1,1>(or_cond_fu_758_p2.read(), ap_const_lv1_1) && 
            esl_seteq<1,1,1>(tmp_127_reg_910.read(), ap_const_lv1_1) && 
            esl_seteq<1,1,1>(tmp_139_reg_944.read(), ap_const_lv1_0)))))) {
        ccRet_eo_0_we0 = ap_const_logic_1;
    } else {
        ccRet_eo_0_we0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_ccRet_ep_0_addr_2_gep_fu_317_p3() {
    ccRet_ep_0_addr_2_gep_fu_317_p3 =  (sc_lv<4>) (tmp_122_reg_882.read());
}

void toCubieCube::thread_ccRet_ep_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        ccRet_ep_0_address0 = ccRet_ep_0_addr_2_gep_fu_317_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        ccRet_ep_0_address0 =  (sc_lv<4>) (tmp_122_reg_882.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ccRet_ep_0_address0 =  (sc_lv<4>) (tmp_s_fu_454_p1.read());
    } else {
        ccRet_ep_0_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void toCubieCube::thread_ccRet_ep_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        ccRet_ep_0_ce0 = ap_const_logic_1;
    } else {
        ccRet_ep_0_ce0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_ccRet_ep_0_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        ccRet_ep_0_d0 = j_1_reg_402.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ccRet_ep_0_d0 = ap_const_lv4_0;
    } else {
        ccRet_ep_0_d0 =  (sc_lv<4>) ("XXXX");
    }
}

void toCubieCube::thread_ccRet_ep_0_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(exitcond9_fu_442_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          esl_seteq<1,1,1>(tmp_137_reg_935.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_139_fu_741_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          ((esl_seteq<1,1,1>(tmp_137_reg_935.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_fu_758_p2.read(), ap_const_lv1_1) && 
            esl_seteq<1,1,1>(tmp_127_reg_910.read(), ap_const_lv1_1)) || 
           (esl_seteq<1,1,1>(or_cond_fu_758_p2.read(), ap_const_lv1_1) && 
            esl_seteq<1,1,1>(tmp_127_reg_910.read(), ap_const_lv1_1) && 
            esl_seteq<1,1,1>(tmp_139_reg_944.read(), ap_const_lv1_0)))))) {
        ccRet_ep_0_we0 = ap_const_logic_1;
    } else {
        ccRet_ep_0_we0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_cornerColor_1_address0() {
    cornerColor_1_address0 =  (sc_lv<3>) (tmp_142_fu_654_p1.read());
}

void toCubieCube::thread_cornerColor_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        cornerColor_1_ce0 = ap_const_logic_1;
    } else {
        cornerColor_1_ce0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_cornerColor_2_address0() {
    cornerColor_2_address0 =  (sc_lv<3>) (tmp_142_reg_852.read());
}

void toCubieCube::thread_cornerColor_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        cornerColor_2_ce0 = ap_const_logic_1;
    } else {
        cornerColor_2_ce0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_cornerFacelet_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        cornerFacelet_address0 =  (sc_lv<5>) (tmp_152_cast_fu_585_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        cornerFacelet_address0 =  (sc_lv<5>) (tmp_149_cast_fu_514_p1.read());
    } else {
        cornerFacelet_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void toCubieCube::thread_cornerFacelet_address1() {
    cornerFacelet_address1 =  (sc_lv<5>) (tmp_155_cast_fu_625_p1.read());
}

void toCubieCube::thread_cornerFacelet_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        cornerFacelet_ce0 = ap_const_logic_1;
    } else {
        cornerFacelet_ce0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_cornerFacelet_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        cornerFacelet_ce1 = ap_const_logic_1;
    } else {
        cornerFacelet_ce1 = ap_const_logic_0;
    }
}

void toCubieCube::thread_edgeColor_0_address0() {
    edgeColor_0_address0 =  (sc_lv<4>) (tmp_136_fu_730_p1.read());
}

void toCubieCube::thread_edgeColor_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        edgeColor_0_ce0 = ap_const_logic_1;
    } else {
        edgeColor_0_ce0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_edgeColor_1_addr_1_gep_fu_287_p3() {
    edgeColor_1_addr_1_gep_fu_287_p3 =  (sc_lv<4>) (tmp_136_reg_919.read());
}

void toCubieCube::thread_edgeColor_1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        edgeColor_1_address0 = edgeColor_1_addr_1_gep_fu_287_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        edgeColor_1_address0 =  (sc_lv<4>) (tmp_136_reg_919.read());
    } else {
        edgeColor_1_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void toCubieCube::thread_edgeColor_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        edgeColor_1_ce0 = ap_const_logic_1;
    } else {
        edgeColor_1_ce0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_edgeFacelet_0_address0() {
    edgeFacelet_0_address0 =  (sc_lv<4>) (tmp_122_fu_702_p1.read());
}

void toCubieCube::thread_edgeFacelet_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        edgeFacelet_0_ce0 = ap_const_logic_1;
    } else {
        edgeFacelet_0_ce0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_edgeFacelet_1_address0() {
    edgeFacelet_1_address0 =  (sc_lv<4>) (tmp_122_fu_702_p1.read());
}

void toCubieCube::thread_edgeFacelet_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        edgeFacelet_1_ce0 = ap_const_logic_1;
    } else {
        edgeFacelet_1_ce0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_exitcond1_fu_425_p2() {
    exitcond1_fu_425_p2 = (!i_reg_334.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_334.read() == ap_const_lv4_8);
}

void toCubieCube::thread_exitcond8_fu_459_p2() {
    exitcond8_fu_459_p2 = (!i_2_reg_356.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_356.read() == ap_const_lv4_8);
}

void toCubieCube::thread_exitcond9_fu_442_p2() {
    exitcond9_fu_442_p2 = (!i_1_reg_345.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_345.read() == ap_const_lv4_C);
}

void toCubieCube::thread_exitcond_fu_690_p2() {
    exitcond_fu_690_p2 = (!i_3_reg_391.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(i_3_reg_391.read() == ap_const_lv4_C);
}

void toCubieCube::thread_facecube_0_f_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        facecube_0_f_address0 =  (sc_lv<6>) (tmp_124_fu_713_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        facecube_0_f_address0 =  (sc_lv<6>) (tmp_131_fu_630_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        facecube_0_f_address0 =  (sc_lv<6>) (tmp_126_fu_519_p1.read());
    } else {
        facecube_0_f_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void toCubieCube::thread_facecube_0_f_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        facecube_0_f_address1 =  (sc_lv<6>) (tmp_123_fu_708_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        facecube_0_f_address1 =  (sc_lv<6>) (tmp_135_fu_635_p1.read());
    } else {
        facecube_0_f_address1 =  (sc_lv<6>) ("XXXXXX");
    }
}

void toCubieCube::thread_facecube_0_f_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        facecube_0_f_ce0 = ap_const_logic_1;
    } else {
        facecube_0_f_ce0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_facecube_0_f_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        facecube_0_f_ce1 = ap_const_logic_1;
    } else {
        facecube_0_f_ce1 = ap_const_logic_0;
    }
}

void toCubieCube::thread_i_10_fu_431_p2() {
    i_10_fu_431_p2 = (!i_reg_334.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_334.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void toCubieCube::thread_i_11_fu_448_p2() {
    i_11_fu_448_p2 = (!i_1_reg_345.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_1_reg_345.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void toCubieCube::thread_i_12_fu_465_p2() {
    i_12_fu_465_p2 = (!i_2_reg_356.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_2_reg_356.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void toCubieCube::thread_i_4_fu_696_p2() {
    i_4_fu_696_p2 = (!i_3_reg_391.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_3_reg_391.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void toCubieCube::thread_j_2_fu_724_p2() {
    j_2_fu_724_p2 = (!j_1_reg_402.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_1_reg_402.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void toCubieCube::thread_j_3_fu_648_p2() {
    j_3_fu_648_p2 = (!j_reg_379.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_reg_379.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void toCubieCube::thread_or_cond_fu_758_p2() {
    or_cond_fu_758_p2 = (tmp_140_fu_752_p2.read() & tmp_141_reg_953.read());
}

void toCubieCube::thread_ori_1_fu_499_p2() {
    ori_1_fu_499_p2 = (!ori_reg_367.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(ori_reg_367.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void toCubieCube::thread_tmp_120_cast_fu_475_p1() {
    tmp_120_cast_fu_475_p1 = esl_zext<6,4>(i_2_reg_356.read());
}

void toCubieCube::thread_tmp_120_fu_471_p1() {
    tmp_120_fu_471_p1 = esl_zext<64,4>(i_2_reg_356.read());
}

void toCubieCube::thread_tmp_121_fu_493_p2() {
    tmp_121_fu_493_p2 = (!ori_reg_367.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(ori_reg_367.read() == ap_const_lv2_3);
}

void toCubieCube::thread_tmp_122_fu_702_p1() {
    tmp_122_fu_702_p1 = esl_zext<64,4>(i_3_reg_391.read());
}

void toCubieCube::thread_tmp_123_fu_708_p1() {
    tmp_123_fu_708_p1 = esl_zext<64,6>(edgeFacelet_0_q0.read());
}

void toCubieCube::thread_tmp_124_fu_713_p1() {
    tmp_124_fu_713_p1 = esl_zext<64,6>(edgeFacelet_1_q0.read());
}

void toCubieCube::thread_tmp_125_cast_fu_505_p1() {
    tmp_125_cast_fu_505_p1 = esl_zext<6,2>(ori_reg_367.read());
}

void toCubieCube::thread_tmp_126_fu_519_p1() {
    tmp_126_fu_519_p1 = esl_zext<64,6>(cornerFacelet_q0.read());
}

void toCubieCube::thread_tmp_127_fu_718_p2() {
    tmp_127_fu_718_p2 = (!j_1_reg_402.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): (sc_biguint<4>(j_1_reg_402.read()) < sc_biguint<4>(ap_const_lv4_C));
}

void toCubieCube::thread_tmp_128_fu_546_p2() {
    tmp_128_fu_546_p2 = (!tmp_148_cast_fu_542_p1.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(tmp_148_cast_fu_542_p1.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void toCubieCube::thread_tmp_130_cast_fu_576_p1() {
    tmp_130_cast_fu_576_p1 = esl_zext<6,3>(tmp_151_fu_568_p3.read());
}

void toCubieCube::thread_tmp_131_fu_630_p1() {
    tmp_131_fu_630_p1 = esl_zext<64,6>(cornerFacelet_q0.read());
}

void toCubieCube::thread_tmp_132_fu_590_p2() {
    tmp_132_fu_590_p2 = (!tmp_148_cast_fu_542_p1.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<3>(): (sc_biguint<3>(tmp_148_cast_fu_542_p1.read()) + sc_biguint<3>(ap_const_lv3_2));
}

void toCubieCube::thread_tmp_133_fu_524_p2() {
    tmp_133_fu_524_p2 = (!facecube_0_f_q0.read().is_01() || !ap_const_lv3_3.is_01())? sc_lv<1>(): sc_lv<1>(facecube_0_f_q0.read() == ap_const_lv3_3);
}

void toCubieCube::thread_tmp_134_cast_fu_616_p1() {
    tmp_134_cast_fu_616_p1 = esl_zext<6,3>(tmp_157_fu_608_p3.read());
}

void toCubieCube::thread_tmp_134_fu_530_p2() {
    tmp_134_fu_530_p2 = (!facecube_0_f_q0.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(facecube_0_f_q0.read() == ap_const_lv3_0);
}

void toCubieCube::thread_tmp_135_fu_635_p1() {
    tmp_135_fu_635_p1 = esl_zext<64,6>(cornerFacelet_q1.read());
}

void toCubieCube::thread_tmp_136_fu_730_p1() {
    tmp_136_fu_730_p1 = esl_zext<64,4>(j_1_reg_402.read());
}

void toCubieCube::thread_tmp_137_fu_735_p2() {
    tmp_137_fu_735_p2 = (!reg_415.read().is_01() || !edgeColor_0_q0.read().is_01())? sc_lv<1>(): sc_lv<1>(reg_415.read() == edgeColor_0_q0.read());
}

void toCubieCube::thread_tmp_138_fu_536_p2() {
    tmp_138_fu_536_p2 = (tmp_134_fu_530_p2.read() | tmp_133_fu_524_p2.read());
}

void toCubieCube::thread_tmp_139_fu_741_p2() {
    tmp_139_fu_741_p2 = (!reg_420.read().is_01() || !edgeColor_1_q0.read().is_01())? sc_lv<1>(): sc_lv<1>(reg_420.read() == edgeColor_1_q0.read());
}

void toCubieCube::thread_tmp_140_fu_752_p2() {
    tmp_140_fu_752_p2 = (!reg_415.read().is_01() || !edgeColor_1_q0.read().is_01())? sc_lv<1>(): sc_lv<1>(reg_415.read() == edgeColor_1_q0.read());
}

void toCubieCube::thread_tmp_141_fu_747_p2() {
    tmp_141_fu_747_p2 = (!reg_420.read().is_01() || !edgeColor_0_load_reg_930.read().is_01())? sc_lv<1>(): sc_lv<1>(reg_420.read() == edgeColor_0_load_reg_930.read());
}

void toCubieCube::thread_tmp_142_fu_654_p1() {
    tmp_142_fu_654_p1 = esl_zext<64,4>(j_reg_379.read());
}

void toCubieCube::thread_tmp_143_fu_659_p2() {
    tmp_143_fu_659_p2 = (!reg_415.read().is_01() || !cornerColor_1_q0.read().is_01())? sc_lv<1>(): sc_lv<1>(reg_415.read() == cornerColor_1_q0.read());
}

void toCubieCube::thread_tmp_144_fu_665_p2() {
    tmp_144_fu_665_p2 = (!reg_420.read().is_01() || !cornerColor_2_q0.read().is_01())? sc_lv<1>(): sc_lv<1>(reg_420.read() == cornerColor_2_q0.read());
}

void toCubieCube::thread_tmp_145_fu_479_p3() {
    tmp_145_fu_479_p3 = esl_concat<4,2>(i_2_reg_356.read(), ap_const_lv2_0);
}

void toCubieCube::thread_tmp_147_fu_487_p2() {
    tmp_147_fu_487_p2 = (!tmp_145_fu_479_p3.read().is_01() || !tmp_120_cast_fu_475_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_145_fu_479_p3.read()) - sc_biguint<6>(tmp_120_cast_fu_475_p1.read()));
}

void toCubieCube::thread_tmp_148_cast_fu_542_p1() {
    tmp_148_cast_fu_542_p1 = esl_zext<3,2>(ori_reg_367.read());
}

void toCubieCube::thread_tmp_148_fu_509_p2() {
    tmp_148_fu_509_p2 = (!tmp_147_reg_793.read().is_01() || !tmp_125_cast_fu_505_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_147_reg_793.read()) + sc_biguint<6>(tmp_125_cast_fu_505_p1.read()));
}

void toCubieCube::thread_tmp_149_cast_fu_514_p1() {
    tmp_149_cast_fu_514_p1 = esl_sext<64,6>(tmp_148_fu_509_p2.read());
}

void toCubieCube::thread_tmp_149_fu_552_p2() {
    tmp_149_fu_552_p2 = (!tmp_128_fu_546_p2.read().is_01() || !ap_const_lv3_3.is_01())? sc_lv<1>(): (sc_biguint<3>(tmp_128_fu_546_p2.read()) < sc_biguint<3>(ap_const_lv3_3));
}

void toCubieCube::thread_tmp_150_fu_558_p2() {
    tmp_150_fu_558_p2 = (ori_reg_367.read() ^ ap_const_lv2_2);
}

void toCubieCube::thread_tmp_151_cast_fu_564_p1() {
    tmp_151_cast_fu_564_p1 = esl_sext<3,2>(tmp_150_fu_558_p2.read());
}

void toCubieCube::thread_tmp_151_fu_568_p3() {
    tmp_151_fu_568_p3 = (!tmp_149_fu_552_p2.read()[0].is_01())? sc_lv<3>(): ((tmp_149_fu_552_p2.read()[0].to_bool())? tmp_128_fu_546_p2.read(): tmp_151_cast_fu_564_p1.read());
}

void toCubieCube::thread_tmp_152_cast_fu_585_p1() {
    tmp_152_cast_fu_585_p1 = esl_sext<64,6>(tmp_152_fu_580_p2.read());
}

void toCubieCube::thread_tmp_152_fu_580_p2() {
    tmp_152_fu_580_p2 = (!tmp_130_cast_fu_576_p1.read().is_01() || !tmp_147_reg_793.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_130_cast_fu_576_p1.read()) + sc_biguint<6>(tmp_147_reg_793.read()));
}

void toCubieCube::thread_tmp_153_fu_596_p2() {
    tmp_153_fu_596_p2 = (!tmp_132_fu_590_p2.read().is_01() || !ap_const_lv3_3.is_01())? sc_lv<1>(): (sc_biguint<3>(tmp_132_fu_590_p2.read()) < sc_biguint<3>(ap_const_lv3_3));
}

void toCubieCube::thread_tmp_154_fu_602_p2() {
    tmp_154_fu_602_p2 = (!tmp_148_cast_fu_542_p1.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<3>(): (sc_biguint<3>(tmp_148_cast_fu_542_p1.read()) + sc_bigint<3>(ap_const_lv3_7));
}

void toCubieCube::thread_tmp_155_cast_fu_625_p1() {
    tmp_155_cast_fu_625_p1 = esl_sext<64,6>(tmp_155_fu_620_p2.read());
}

void toCubieCube::thread_tmp_155_fu_620_p2() {
    tmp_155_fu_620_p2 = (!tmp_134_cast_fu_616_p1.read().is_01() || !tmp_147_reg_793.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_134_cast_fu_616_p1.read()) + sc_biguint<6>(tmp_147_reg_793.read()));
}

void toCubieCube::thread_tmp_156_fu_676_p2() {
    tmp_156_fu_676_p2 = (!ori_reg_367.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(ori_reg_367.read() != ap_const_lv2_3);
}

void toCubieCube::thread_tmp_157_fu_608_p3() {
    tmp_157_fu_608_p3 = (!tmp_153_fu_596_p2.read()[0].is_01())? sc_lv<3>(): ((tmp_153_fu_596_p2.read()[0].to_bool())? tmp_132_fu_590_p2.read(): tmp_154_fu_602_p2.read());
}

void toCubieCube::thread_tmp_158_fu_640_p3() {
    tmp_158_fu_640_p3 = j_reg_379.read().range(3, 3);
}

void toCubieCube::thread_tmp_159_fu_671_p1() {
    tmp_159_fu_671_p1 = j_reg_379.read().range(3-1, 0);
}

void toCubieCube::thread_tmp_fu_437_p1() {
    tmp_fu_437_p1 = esl_zext<64,4>(i_reg_334.read());
}

void toCubieCube::thread_tmp_s_fu_454_p1() {
    tmp_s_fu_454_p1 = esl_zext<64,4>(i_1_reg_345.read());
}

void toCubieCube::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_425_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond9_fu_442_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond8_fu_459_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(tmp_121_fu_493_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && (esl_seteq<1,1,1>(tmp_138_fu_536_p2.read(), ap_const_lv1_1) || 
  esl_seteq<1,1,1>(tmp_121_reg_800.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(tmp_158_fu_640_p3.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && (esl_seteq<1,1,1>(tmp_158_reg_843.read(), ap_const_lv1_1) || 
  (esl_seteq<1,1,1>(tmp_144_fu_665_p2.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(tmp_143_reg_862.read(), ap_const_lv1_1))))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(exitcond_fu_690_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(tmp_127_fu_718_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && (esl_seteq<1,1,1>(or_cond_fu_758_p2.read(), ap_const_lv1_1) || 
  esl_seteq<1,1,1>(tmp_127_reg_910.read(), ap_const_lv1_0) || 
  (esl_seteq<1,1,1>(tmp_139_reg_944.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(tmp_137_reg_935.read(), ap_const_lv1_1))))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

