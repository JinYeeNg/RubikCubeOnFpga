// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "getURFtoDLF.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic getURFtoDLF::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic getURFtoDLF::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state1 = "1";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state2 = "10";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state3 = "100";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state4 = "1000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state5 = "10000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state6 = "100000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state7 = "1000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state8 = "10000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state9 = "100000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state10 = "1000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state11 = "10000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state12 = "100000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<50> getURFtoDLF::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<32> getURFtoDLF::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> getURFtoDLF::ap_const_lv32_1 = "1";
const sc_lv<32> getURFtoDLF::ap_const_lv32_2 = "10";
const sc_lv<1> getURFtoDLF::ap_const_lv1_0 = "0";
const sc_lv<1> getURFtoDLF::ap_const_lv1_1 = "1";
const sc_lv<32> getURFtoDLF::ap_const_lv32_3 = "11";
const sc_lv<32> getURFtoDLF::ap_const_lv32_4 = "100";
const sc_lv<32> getURFtoDLF::ap_const_lv32_5 = "101";
const sc_lv<32> getURFtoDLF::ap_const_lv32_28 = "101000";
const sc_lv<32> getURFtoDLF::ap_const_lv32_2A = "101010";
const sc_lv<32> getURFtoDLF::ap_const_lv32_2C = "101100";
const sc_lv<32> getURFtoDLF::ap_const_lv32_2D = "101101";
const sc_lv<32> getURFtoDLF::ap_const_lv32_2E = "101110";
const sc_lv<32> getURFtoDLF::ap_const_lv32_30 = "110000";
const sc_lv<3> getURFtoDLF::ap_const_lv3_0 = "000";
const sc_lv<4> getURFtoDLF::ap_const_lv4_0 = "0000";
const sc_lv<32> getURFtoDLF::ap_const_lv32_29 = "101001";
const sc_lv<3> getURFtoDLF::ap_const_lv3_5 = "101";
const sc_lv<32> getURFtoDLF::ap_const_lv32_2F = "101111";
const sc_lv<64> getURFtoDLF::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> getURFtoDLF::ap_const_lv32_2B = "101011";
const sc_lv<3> getURFtoDLF::ap_const_lv3_1 = "1";
const sc_lv<4> getURFtoDLF::ap_const_lv4_8 = "1000";
const sc_lv<4> getURFtoDLF::ap_const_lv4_1 = "1";
const sc_lv<3> getURFtoDLF::ap_const_lv3_6 = "110";
const sc_lv<32> getURFtoDLF::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> getURFtoDLF::ap_const_lv32_2D0 = "1011010000";
const sc_lv<3> getURFtoDLF::ap_const_lv3_7 = "111";
const sc_lv<32> getURFtoDLF::ap_const_lv32_31 = "110001";
const bool getURFtoDLF::ap_const_boolean_1 = true;

getURFtoDLF::getURFtoDLF(sc_module_name name) : sc_module(name), mVcdFile(0) {
    corner6_U = new getURFtoDLF_corner6("corner6_U");
    corner6_U->clk(ap_clk);
    corner6_U->reset(ap_rst);
    corner6_U->address0(corner6_address0);
    corner6_U->ce0(corner6_ce0);
    corner6_U->we0(corner6_we0);
    corner6_U->d0(corner6_d0);
    corner6_U->q0(corner6_q0);
    solution_sdiv_32nkbM_U38 = new solution_sdiv_32nkbM<1,36,32,32,32>("solution_sdiv_32nkbM_U38");
    solution_sdiv_32nkbM_U38->clk(ap_clk);
    solution_sdiv_32nkbM_U38->reset(ap_rst);
    solution_sdiv_32nkbM_U38->start(grp_fu_371_ap_start);
    solution_sdiv_32nkbM_U38->done(grp_fu_371_ap_done);
    solution_sdiv_32nkbM_U38->din0(s_reg_553);
    solution_sdiv_32nkbM_U38->din1(j_i_reg_142);
    solution_sdiv_32nkbM_U38->ce(ap_var_for_const0);
    solution_sdiv_32nkbM_U38->dout(grp_fu_371_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_2_fu_382_p2);
    sensitive << ( p_0_i_reg_175 );
    sensitive << ( a_fu_50 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state50 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state50 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( tmp_261_fu_471_p2 );

    SC_METHOD(thread_b_2_fu_460_p2);
    sensitive << ( tmp_265_reg_594 );
    sensitive << ( k_reg_211 );

    SC_METHOD(thread_corner6_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( corner6_addr_1_reg_576 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( exitcond5_fu_438_p2 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( tmp_fu_247_p1 );
    sensitive << ( tmp_266_fu_362_p1 );
    sensitive << ( tmp_i4_fu_450_p1 );
    sensitive << ( tmp_287_i_fu_455_p1 );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_corner6_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( exitcond5_fu_438_p2 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_corner6_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( cubiecube_0_cp_load_reg_527 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( corner6_q0 );
    sensitive << ( temp_reg_599 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( exitcond5_fu_438_p2 );
    sensitive << ( ap_CS_fsm_state48 );

    SC_METHOD(thread_corner6_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_i_reg_541 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_i_fu_345_p2 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( exitcond5_fu_438_p2 );
    sensitive << ( ap_CS_fsm_state48 );

    SC_METHOD(thread_cubiecube_0_cp_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_257_fu_284_p1 );

    SC_METHOD(thread_cubiecube_0_cp_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_exitcond5_fu_438_p2);
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( r_assign_reg_187 );
    sensitive << ( i_i2_reg_223 );

    SC_METHOD(thread_exitcond_fu_272_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_reg_130 );

    SC_METHOD(thread_exitcond_i_fu_345_p2);
    sensitive << ( tmp_i_reg_541 );
    sensitive << ( tmp_364_i_reg_545 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j_i_reg_142 );

    SC_METHOD(thread_grp_fu_371_ap_start);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_i_21_fu_356_p2);
    sensitive << ( i_i_reg_154 );

    SC_METHOD(thread_i_22_fu_444_p2);
    sensitive << ( i_i2_reg_223 );

    SC_METHOD(thread_indvarinc_fu_241_p2);
    sensitive << ( invdar_reg_119 );

    SC_METHOD(thread_j_8_fu_278_p2);
    sensitive << ( i_reg_130 );

    SC_METHOD(thread_j_9_fu_376_p2);
    sensitive << ( j_i_reg_142 );

    SC_METHOD(thread_j_fu_465_p2);
    sensitive << ( r_assign_reg_187 );

    SC_METHOD(thread_k_2_fu_416_p2);
    sensitive << ( k_reg_211 );

    SC_METHOD(thread_k_assign_2_fu_326_p2);
    sensitive << ( n_assign_cast3_reg_502 );
    sensitive << ( x_3_fu_295_p2 );

    SC_METHOD(thread_n_assign_cast3_fu_268_p1);
    sensitive << ( i_reg_130 );

    SC_METHOD(thread_p_k_i_fu_331_p3);
    sensitive << ( x_3_fu_295_p2 );
    sensitive << ( tmp_363_i_fu_320_p2 );
    sensitive << ( k_assign_2_fu_326_p2 );

    SC_METHOD(thread_p_lshr_f_i_cast_fu_306_p4);
    sensitive << ( i_reg_130 );

    SC_METHOD(thread_s_fu_350_p2);
    sensitive << ( i_i_reg_154 );
    sensitive << ( s_i_reg_163 );

    SC_METHOD(thread_tmp_257_fu_284_p1);
    sensitive << ( i_reg_130 );

    SC_METHOD(thread_tmp_258_fu_289_p2);
    sensitive << ( cubiecube_0_cp_q0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_259_fu_393_p2);
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( r_assign_reg_187 );

    SC_METHOD(thread_tmp_260_fu_404_p1);
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( a_fu_50 );

    SC_METHOD(thread_tmp_260_fu_404_p2);
    sensitive << ( tmp_260_fu_404_p1 );

    SC_METHOD(thread_tmp_261_fu_471_p2);
    sensitive << ( tmp_260_reg_581 );
    sensitive << ( b_reg_199 );

    SC_METHOD(thread_tmp_262_fu_399_p1);
    sensitive << ( r_assign_reg_187 );

    SC_METHOD(thread_tmp_263_fu_410_p2);
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( corner6_q0 );
    sensitive << ( r_assign_reg_187 );

    SC_METHOD(thread_tmp_264_fu_422_p2);
    sensitive << ( r_assign_reg_187 );

    SC_METHOD(thread_tmp_265_fu_432_p0);
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( tmp_265_fu_432_p00 );

    SC_METHOD(thread_tmp_265_fu_432_p00);
    sensitive << ( tmp_264_fu_422_p2 );

    SC_METHOD(thread_tmp_265_fu_432_p2);
    sensitive << ( b_reg_199 );
    sensitive << ( tmp_265_fu_432_p0 );

    SC_METHOD(thread_tmp_266_fu_362_p0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( x_fu_54 );

    SC_METHOD(thread_tmp_266_fu_362_p1);
    sensitive << ( tmp_266_fu_362_p0 );

    SC_METHOD(thread_tmp_287_i_fu_455_p1);
    sensitive << ( i_i2_reg_223 );

    SC_METHOD(thread_tmp_363_i_fu_320_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_258_fu_289_p2 );
    sensitive << ( x_3_fu_295_p2 );
    sensitive << ( tmp_i_fu_301_p2 );
    sensitive << ( tmp_i_cast_fu_316_p1 );

    SC_METHOD(thread_tmp_364_i_fu_339_p2);
    sensitive << ( p_k_i_fu_331_p3 );

    SC_METHOD(thread_tmp_fu_247_p1);
    sensitive << ( invdar_reg_119 );

    SC_METHOD(thread_tmp_i4_fu_450_p1);
    sensitive << ( i_22_fu_444_p2 );

    SC_METHOD(thread_tmp_i_cast_fu_316_p1);
    sensitive << ( p_lshr_f_i_cast_fu_306_p4 );

    SC_METHOD(thread_tmp_i_fu_301_p2);
    sensitive << ( n_assign_cast3_reg_502 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_258_fu_289_p2 );
    sensitive << ( x_3_fu_295_p2 );

    SC_METHOD(thread_tmp_s_fu_252_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( invdar_reg_119 );

    SC_METHOD(thread_x_3_fu_295_p2);
    sensitive << ( x_fu_54 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_272_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_258_fu_289_p2 );
    sensitive << ( tmp_i_reg_541 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_i_fu_345_p2 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( tmp_259_fu_393_p2 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( tmp_263_fu_410_p2 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( exitcond5_fu_438_p2 );
    sensitive << ( tmp_s_fu_252_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "getURFtoDLF_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, cubiecube_0_cp_address0, "(port)cubiecube_0_cp_address0");
    sc_trace(mVcdFile, cubiecube_0_cp_ce0, "(port)cubiecube_0_cp_ce0");
    sc_trace(mVcdFile, cubiecube_0_cp_q0, "(port)cubiecube_0_cp_q0");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvarinc_fu_241_p2, "indvarinc_fu_241_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, n_assign_cast3_fu_268_p1, "n_assign_cast3_fu_268_p1");
    sc_trace(mVcdFile, n_assign_cast3_reg_502, "n_assign_cast3_reg_502");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, j_8_fu_278_p2, "j_8_fu_278_p2");
    sc_trace(mVcdFile, j_8_reg_512, "j_8_reg_512");
    sc_trace(mVcdFile, exitcond_fu_272_p2, "exitcond_fu_272_p2");
    sc_trace(mVcdFile, cubiecube_0_cp_load_reg_527, "cubiecube_0_cp_load_reg_527");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_258_fu_289_p2, "tmp_258_fu_289_p2");
    sc_trace(mVcdFile, tmp_258_reg_532, "tmp_258_reg_532");
    sc_trace(mVcdFile, x_3_fu_295_p2, "x_3_fu_295_p2");
    sc_trace(mVcdFile, x_3_reg_536, "x_3_reg_536");
    sc_trace(mVcdFile, tmp_i_fu_301_p2, "tmp_i_fu_301_p2");
    sc_trace(mVcdFile, tmp_i_reg_541, "tmp_i_reg_541");
    sc_trace(mVcdFile, tmp_364_i_fu_339_p2, "tmp_364_i_fu_339_p2");
    sc_trace(mVcdFile, tmp_364_i_reg_545, "tmp_364_i_reg_545");
    sc_trace(mVcdFile, s_fu_350_p2, "s_fu_350_p2");
    sc_trace(mVcdFile, s_reg_553, "s_reg_553");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, exitcond_i_fu_345_p2, "exitcond_i_fu_345_p2");
    sc_trace(mVcdFile, i_21_fu_356_p2, "i_21_fu_356_p2");
    sc_trace(mVcdFile, i_21_reg_558, "i_21_reg_558");
    sc_trace(mVcdFile, j_9_fu_376_p2, "j_9_fu_376_p2");
    sc_trace(mVcdFile, j_9_reg_563, "j_9_reg_563");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_fu_371_p2, "grp_fu_371_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, corner6_addr_1_reg_576, "corner6_addr_1_reg_576");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, tmp_259_fu_393_p2, "tmp_259_fu_393_p2");
    sc_trace(mVcdFile, tmp_260_fu_404_p2, "tmp_260_fu_404_p2");
    sc_trace(mVcdFile, tmp_260_reg_581, "tmp_260_reg_581");
    sc_trace(mVcdFile, k_2_fu_416_p2, "k_2_fu_416_p2");
    sc_trace(mVcdFile, k_2_reg_589, "k_2_reg_589");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, tmp_265_fu_432_p2, "tmp_265_fu_432_p2");
    sc_trace(mVcdFile, tmp_265_reg_594, "tmp_265_reg_594");
    sc_trace(mVcdFile, tmp_263_fu_410_p2, "tmp_263_fu_410_p2");
    sc_trace(mVcdFile, corner6_q0, "corner6_q0");
    sc_trace(mVcdFile, temp_reg_599, "temp_reg_599");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, i_22_fu_444_p2, "i_22_fu_444_p2");
    sc_trace(mVcdFile, i_22_reg_607, "i_22_reg_607");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, exitcond5_fu_438_p2, "exitcond5_fu_438_p2");
    sc_trace(mVcdFile, b_2_fu_460_p2, "b_2_fu_460_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, j_fu_465_p2, "j_fu_465_p2");
    sc_trace(mVcdFile, corner6_address0, "corner6_address0");
    sc_trace(mVcdFile, corner6_ce0, "corner6_ce0");
    sc_trace(mVcdFile, corner6_we0, "corner6_we0");
    sc_trace(mVcdFile, corner6_d0, "corner6_d0");
    sc_trace(mVcdFile, invdar_reg_119, "invdar_reg_119");
    sc_trace(mVcdFile, tmp_s_fu_252_p2, "tmp_s_fu_252_p2");
    sc_trace(mVcdFile, i_reg_130, "i_reg_130");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, j_i_reg_142, "j_i_reg_142");
    sc_trace(mVcdFile, i_i_reg_154, "i_i_reg_154");
    sc_trace(mVcdFile, s_i_reg_163, "s_i_reg_163");
    sc_trace(mVcdFile, p_0_i_reg_175, "p_0_i_reg_175");
    sc_trace(mVcdFile, r_assign_reg_187, "r_assign_reg_187");
    sc_trace(mVcdFile, b_reg_199, "b_reg_199");
    sc_trace(mVcdFile, k_reg_211, "k_reg_211");
    sc_trace(mVcdFile, i_i2_reg_223, "i_i2_reg_223");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, tmp_fu_247_p1, "tmp_fu_247_p1");
    sc_trace(mVcdFile, tmp_257_fu_284_p1, "tmp_257_fu_284_p1");
    sc_trace(mVcdFile, tmp_266_fu_362_p1, "tmp_266_fu_362_p1");
    sc_trace(mVcdFile, tmp_262_fu_399_p1, "tmp_262_fu_399_p1");
    sc_trace(mVcdFile, tmp_i4_fu_450_p1, "tmp_i4_fu_450_p1");
    sc_trace(mVcdFile, tmp_287_i_fu_455_p1, "tmp_287_i_fu_455_p1");
    sc_trace(mVcdFile, a_fu_50, "a_fu_50");
    sc_trace(mVcdFile, a_2_fu_382_p2, "a_2_fu_382_p2");
    sc_trace(mVcdFile, x_fu_54, "x_fu_54");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, p_lshr_f_i_cast_fu_306_p4, "p_lshr_f_i_cast_fu_306_p4");
    sc_trace(mVcdFile, tmp_i_cast_fu_316_p1, "tmp_i_cast_fu_316_p1");
    sc_trace(mVcdFile, tmp_363_i_fu_320_p2, "tmp_363_i_fu_320_p2");
    sc_trace(mVcdFile, k_assign_2_fu_326_p2, "k_assign_2_fu_326_p2");
    sc_trace(mVcdFile, p_k_i_fu_331_p3, "p_k_i_fu_331_p3");
    sc_trace(mVcdFile, tmp_266_fu_362_p0, "tmp_266_fu_362_p0");
    sc_trace(mVcdFile, tmp_260_fu_404_p1, "tmp_260_fu_404_p1");
    sc_trace(mVcdFile, tmp_264_fu_422_p2, "tmp_264_fu_422_p2");
    sc_trace(mVcdFile, tmp_265_fu_432_p0, "tmp_265_fu_432_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, tmp_261_fu_471_p2, "tmp_261_fu_471_p2");
    sc_trace(mVcdFile, grp_fu_371_ap_start, "grp_fu_371_ap_start");
    sc_trace(mVcdFile, grp_fu_371_ap_done, "grp_fu_371_ap_done");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, tmp_265_fu_432_p00, "tmp_265_fu_432_p00");
#endif

    }
}

getURFtoDLF::~getURFtoDLF() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete corner6_U;
    delete solution_sdiv_32nkbM_U38;
}

void getURFtoDLF::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void getURFtoDLF::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_258_reg_532.read()))) {
        a_fu_50 = a_2_fu_382_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(tmp_s_fu_252_p2.read(), ap_const_lv1_1))) {
        a_fu_50 = ap_const_lv32_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_272_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        b_reg_199 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        b_reg_199 = b_2_fu_460_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        i_i2_reg_223 = i_22_reg_607.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        i_i2_reg_223 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        i_i_reg_154 = i_21_reg_558.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_258_fu_289_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_301_p2.read()))) {
        i_i_reg_154 = n_assign_cast3_reg_502.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        i_reg_130 = j_8_reg_512.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(tmp_s_fu_252_p2.read(), ap_const_lv1_1))) {
        i_reg_130 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(tmp_s_fu_252_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        invdar_reg_119 = indvarinc_fu_241_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        invdar_reg_119 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        j_i_reg_142 = j_9_reg_563.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_258_fu_289_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_301_p2.read()))) {
        j_i_reg_142 = ap_const_lv32_1;
    }
    if ((esl_seteq<1,1,1>(tmp_259_fu_393_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()))) {
        k_reg_211 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
                esl_seteq<1,1,1>(exitcond5_fu_438_p2.read(), ap_const_lv1_1))) {
        k_reg_211 = k_2_reg_589.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(tmp_i_reg_541.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(exitcond_i_fu_345_p2.read(), ap_const_lv1_1))) {
        p_0_i_reg_175 = s_i_reg_163.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_258_fu_289_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_i_fu_301_p2.read()))) {
        p_0_i_reg_175 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(exitcond_fu_272_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        r_assign_reg_187 = ap_const_lv3_5;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        r_assign_reg_187 = j_fu_465_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        s_i_reg_163 = grp_fu_371_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_258_fu_289_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_301_p2.read()))) {
        s_i_reg_163 = ap_const_lv32_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         (esl_seteq<1,1,1>(exitcond_i_fu_345_p2.read(), ap_const_lv1_1) || 
          esl_seteq<1,1,1>(tmp_i_reg_541.read(), ap_const_lv1_1)))) {
        x_fu_54 = x_3_reg_536.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(tmp_s_fu_252_p2.read(), ap_const_lv1_1))) {
        x_fu_54 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(tmp_259_fu_393_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()))) {
        corner6_addr_1_reg_576 =  (sc_lv<3>) (tmp_262_fu_399_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        cubiecube_0_cp_load_reg_527 = cubiecube_0_cp_q0.read();
        tmp_258_reg_532 = tmp_258_fu_289_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_i_fu_345_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_i_reg_541.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        i_21_reg_558 = i_21_fu_356_p2.read();
        s_reg_553 = s_fu_350_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        i_22_reg_607 = i_22_fu_444_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_8_reg_512 = j_8_fu_278_p2.read();
        n_assign_cast3_reg_502 = n_assign_cast3_fu_268_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        j_9_reg_563 = j_9_fu_376_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        k_2_reg_589 = k_2_fu_416_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        temp_reg_599 = corner6_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && esl_seteq<1,1,1>(tmp_259_fu_393_p2.read(), ap_const_lv1_1))) {
        tmp_260_reg_581 = tmp_260_fu_404_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && esl_seteq<1,1,1>(tmp_263_fu_410_p2.read(), ap_const_lv1_1))) {
        tmp_265_reg_594 = tmp_265_fu_432_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(tmp_258_fu_289_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_i_fu_301_p2.read()))) {
        tmp_364_i_reg_545 = tmp_364_i_fu_339_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(tmp_258_fu_289_p2.read(), ap_const_lv1_1))) {
        tmp_i_reg_541 = tmp_i_fu_301_p2.read();
        x_3_reg_536 = x_3_fu_295_p2.read();
    }
}

void getURFtoDLF::thread_a_2_fu_382_p2() {
    a_2_fu_382_p2 = (!p_0_i_reg_175.read().is_01() || !a_fu_50.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_0_i_reg_175.read()) + sc_biguint<32>(a_fu_50.read()));
}

void getURFtoDLF::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void getURFtoDLF::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void getURFtoDLF::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void getURFtoDLF::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void getURFtoDLF::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void getURFtoDLF::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void getURFtoDLF::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void getURFtoDLF::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void getURFtoDLF::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void getURFtoDLF::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void getURFtoDLF::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void getURFtoDLF::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void getURFtoDLF::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void getURFtoDLF::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void getURFtoDLF::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[49];
}

void getURFtoDLF::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void getURFtoDLF::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void getURFtoDLF::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void getURFtoDLF::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void getURFtoDLF::thread_ap_return() {
    ap_return = tmp_261_fu_471_p2.read().range(16-1, 0);
}

void getURFtoDLF::thread_b_2_fu_460_p2() {
    b_2_fu_460_p2 = (!k_reg_211.read().is_01() || !tmp_265_reg_594.read().is_01())? sc_lv<32>(): (sc_biguint<32>(k_reg_211.read()) + sc_biguint<32>(tmp_265_reg_594.read()));
}

void getURFtoDLF::thread_corner6_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        corner6_address0 =  (sc_lv<3>) (tmp_287_i_fu_455_p1.read());
    } else if ((esl_seteq<1,1,1>(exitcond5_fu_438_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
        corner6_address0 =  (sc_lv<3>) (tmp_i4_fu_450_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        corner6_address0 =  (sc_lv<3>) (ap_const_lv64_0);
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
                 esl_seteq<1,1,1>(exitcond5_fu_438_p2.read(), ap_const_lv1_1)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        corner6_address0 = corner6_addr_1_reg_576.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        corner6_address0 =  (sc_lv<3>) (tmp_266_fu_362_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        corner6_address0 =  (sc_lv<3>) (tmp_fu_247_p1.read());
    } else {
        corner6_address0 = "XXX";
    }
}

void getURFtoDLF::thread_corner6_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         (esl_seteq<1,1,1>(exitcond5_fu_438_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
          esl_seteq<1,1,1>(exitcond5_fu_438_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        corner6_ce0 = ap_const_logic_1;
    } else {
        corner6_ce0 = ap_const_logic_0;
    }
}

void getURFtoDLF::thread_corner6_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        corner6_d0 = corner6_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
                esl_seteq<1,1,1>(exitcond5_fu_438_p2.read(), ap_const_lv1_1))) {
        corner6_d0 = temp_reg_599.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        corner6_d0 = cubiecube_0_cp_load_reg_527.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        corner6_d0 = ap_const_lv3_0;
    } else {
        corner6_d0 = "XXX";
    }
}

void getURFtoDLF::thread_corner6_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
          esl_seteq<1,1,1>(exitcond5_fu_438_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          (esl_seteq<1,1,1>(exitcond_i_fu_345_p2.read(), ap_const_lv1_1) || 
           esl_seteq<1,1,1>(tmp_i_reg_541.read(), ap_const_lv1_1))))) {
        corner6_we0 = ap_const_logic_1;
    } else {
        corner6_we0 = ap_const_logic_0;
    }
}

void getURFtoDLF::thread_cubiecube_0_cp_address0() {
    cubiecube_0_cp_address0 =  (sc_lv<3>) (tmp_257_fu_284_p1.read());
}

void getURFtoDLF::thread_cubiecube_0_cp_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        cubiecube_0_cp_ce0 = ap_const_logic_1;
    } else {
        cubiecube_0_cp_ce0 = ap_const_logic_0;
    }
}

void getURFtoDLF::thread_exitcond5_fu_438_p2() {
    exitcond5_fu_438_p2 = (!i_i2_reg_223.read().is_01() || !r_assign_reg_187.read().is_01())? sc_lv<1>(): sc_lv<1>(i_i2_reg_223.read() == r_assign_reg_187.read());
}

void getURFtoDLF::thread_exitcond_fu_272_p2() {
    exitcond_fu_272_p2 = (!i_reg_130.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_130.read() == ap_const_lv4_8);
}

void getURFtoDLF::thread_exitcond_i_fu_345_p2() {
    exitcond_i_fu_345_p2 = (!j_i_reg_142.read().is_01() || !tmp_364_i_reg_545.read().is_01())? sc_lv<1>(): sc_lv<1>(j_i_reg_142.read() == tmp_364_i_reg_545.read());
}

void getURFtoDLF::thread_grp_fu_371_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_371_ap_start = ap_const_logic_1;
    } else {
        grp_fu_371_ap_start = ap_const_logic_0;
    }
}

void getURFtoDLF::thread_i_21_fu_356_p2() {
    i_21_fu_356_p2 = (!i_i_reg_154.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<32>(): (sc_bigint<32>(i_i_reg_154.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFF));
}

void getURFtoDLF::thread_i_22_fu_444_p2() {
    i_22_fu_444_p2 = (!i_i2_reg_223.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_i2_reg_223.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void getURFtoDLF::thread_indvarinc_fu_241_p2() {
    indvarinc_fu_241_p2 = (!invdar_reg_119.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(invdar_reg_119.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void getURFtoDLF::thread_j_8_fu_278_p2() {
    j_8_fu_278_p2 = (!i_reg_130.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_130.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void getURFtoDLF::thread_j_9_fu_376_p2() {
    j_9_fu_376_p2 = (!j_i_reg_142.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(j_i_reg_142.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void getURFtoDLF::thread_j_fu_465_p2() {
    j_fu_465_p2 = (!r_assign_reg_187.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<3>(): (sc_biguint<3>(r_assign_reg_187.read()) + sc_bigint<3>(ap_const_lv3_7));
}

void getURFtoDLF::thread_k_2_fu_416_p2() {
    k_2_fu_416_p2 = (!k_reg_211.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(k_reg_211.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void getURFtoDLF::thread_k_assign_2_fu_326_p2() {
    k_assign_2_fu_326_p2 = (!n_assign_cast3_reg_502.read().is_01() || !x_3_fu_295_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(n_assign_cast3_reg_502.read()) - sc_biguint<32>(x_3_fu_295_p2.read()));
}

void getURFtoDLF::thread_n_assign_cast3_fu_268_p1() {
    n_assign_cast3_fu_268_p1 = esl_zext<32,4>(i_reg_130.read());
}

void getURFtoDLF::thread_p_k_i_fu_331_p3() {
    p_k_i_fu_331_p3 = (!tmp_363_i_fu_320_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_363_i_fu_320_p2.read()[0].to_bool())? k_assign_2_fu_326_p2.read(): x_3_fu_295_p2.read());
}

void getURFtoDLF::thread_p_lshr_f_i_cast_fu_306_p4() {
    p_lshr_f_i_cast_fu_306_p4 = i_reg_130.read().range(2, 1);
}

void getURFtoDLF::thread_s_fu_350_p2() {
    s_fu_350_p2 = (!s_i_reg_163.read().is_01() || !i_i_reg_154.read().is_01())? sc_lv<32>(): sc_bigint<32>(s_i_reg_163.read()) * sc_bigint<32>(i_i_reg_154.read());
}

void getURFtoDLF::thread_tmp_257_fu_284_p1() {
    tmp_257_fu_284_p1 = esl_zext<64,4>(i_reg_130.read());
}

void getURFtoDLF::thread_tmp_258_fu_289_p2() {
    tmp_258_fu_289_p2 = (!cubiecube_0_cp_q0.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): (sc_biguint<3>(cubiecube_0_cp_q0.read()) < sc_biguint<3>(ap_const_lv3_6));
}

void getURFtoDLF::thread_tmp_259_fu_393_p2() {
    tmp_259_fu_393_p2 = (!r_assign_reg_187.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(r_assign_reg_187.read() == ap_const_lv3_0);
}

void getURFtoDLF::thread_tmp_260_fu_404_p1() {
    tmp_260_fu_404_p1 = a_fu_50.read();
}

void getURFtoDLF::thread_tmp_260_fu_404_p2() {
    tmp_260_fu_404_p2 = (!ap_const_lv32_2D0.is_01() || !tmp_260_fu_404_p1.read().is_01())? sc_lv<32>(): sc_biguint<32>(ap_const_lv32_2D0) * sc_bigint<32>(tmp_260_fu_404_p1.read());
}

void getURFtoDLF::thread_tmp_261_fu_471_p2() {
    tmp_261_fu_471_p2 = (!b_reg_199.read().is_01() || !tmp_260_reg_581.read().is_01())? sc_lv<32>(): (sc_bigint<32>(b_reg_199.read()) + sc_biguint<32>(tmp_260_reg_581.read()));
}

void getURFtoDLF::thread_tmp_262_fu_399_p1() {
    tmp_262_fu_399_p1 = esl_zext<64,3>(r_assign_reg_187.read());
}

void getURFtoDLF::thread_tmp_263_fu_410_p2() {
    tmp_263_fu_410_p2 = (!corner6_q0.read().is_01() || !r_assign_reg_187.read().is_01())? sc_lv<1>(): sc_lv<1>(corner6_q0.read() == r_assign_reg_187.read());
}

void getURFtoDLF::thread_tmp_264_fu_422_p2() {
    tmp_264_fu_422_p2 = (!r_assign_reg_187.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(r_assign_reg_187.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void getURFtoDLF::thread_tmp_265_fu_432_p0() {
    tmp_265_fu_432_p0 =  (sc_lv<3>) (tmp_265_fu_432_p00.read());
}

void getURFtoDLF::thread_tmp_265_fu_432_p00() {
    tmp_265_fu_432_p00 = esl_zext<32,3>(tmp_264_fu_422_p2.read());
}

void getURFtoDLF::thread_tmp_265_fu_432_p2() {
    tmp_265_fu_432_p2 = (!tmp_265_fu_432_p0.read().is_01() || !b_reg_199.read().is_01())? sc_lv<32>(): sc_biguint<3>(tmp_265_fu_432_p0.read()) * sc_bigint<32>(b_reg_199.read());
}

void getURFtoDLF::thread_tmp_266_fu_362_p0() {
    tmp_266_fu_362_p0 = x_fu_54.read();
}

void getURFtoDLF::thread_tmp_266_fu_362_p1() {
    tmp_266_fu_362_p1 = esl_sext<64,32>(tmp_266_fu_362_p0.read());
}

void getURFtoDLF::thread_tmp_287_i_fu_455_p1() {
    tmp_287_i_fu_455_p1 = esl_zext<64,3>(i_i2_reg_223.read());
}

void getURFtoDLF::thread_tmp_363_i_fu_320_p2() {
    tmp_363_i_fu_320_p2 = (!tmp_i_cast_fu_316_p1.read().is_01() || !x_3_fu_295_p2.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_i_cast_fu_316_p1.read()) < sc_bigint<32>(x_3_fu_295_p2.read()));
}

void getURFtoDLF::thread_tmp_364_i_fu_339_p2() {
    tmp_364_i_fu_339_p2 = (!p_k_i_fu_331_p3.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(p_k_i_fu_331_p3.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void getURFtoDLF::thread_tmp_fu_247_p1() {
    tmp_fu_247_p1 = esl_zext<64,3>(invdar_reg_119.read());
}

void getURFtoDLF::thread_tmp_i4_fu_450_p1() {
    tmp_i4_fu_450_p1 = esl_zext<64,3>(i_22_fu_444_p2.read());
}

void getURFtoDLF::thread_tmp_i_cast_fu_316_p1() {
    tmp_i_cast_fu_316_p1 = esl_zext<32,2>(p_lshr_f_i_cast_fu_306_p4.read());
}

void getURFtoDLF::thread_tmp_i_fu_301_p2() {
    tmp_i_fu_301_p2 = (!n_assign_cast3_reg_502.read().is_01() || !x_3_fu_295_p2.read().is_01())? sc_lv<1>(): (sc_bigint<32>(n_assign_cast3_reg_502.read()) < sc_bigint<32>(x_3_fu_295_p2.read()));
}

void getURFtoDLF::thread_tmp_s_fu_252_p2() {
    tmp_s_fu_252_p2 = (!invdar_reg_119.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(invdar_reg_119.read() == ap_const_lv3_5);
}

void getURFtoDLF::thread_x_3_fu_295_p2() {
    x_3_fu_295_p2 = (!x_fu_54.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(x_fu_54.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void getURFtoDLF::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_s_fu_252_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(exitcond_fu_272_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state43;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(tmp_258_fu_289_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state42;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && (esl_seteq<1,1,1>(exitcond_i_fu_345_p2.read(), ap_const_lv1_1) || 
  esl_seteq<1,1,1>(tmp_i_reg_541.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_state42;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4398046511104 : 
            if ((esl_seteq<1,1,1>(tmp_259_fu_393_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()))) {
                ap_NS_fsm = ap_ST_fsm_state44;
            } else {
                ap_NS_fsm = ap_ST_fsm_state50;
            }
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_fsm_state45;
            break;
        case 17592186044416 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && esl_seteq<1,1,1>(tmp_263_fu_410_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state49;
            } else {
                ap_NS_fsm = ap_ST_fsm_state46;
            }
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_fsm_state47;
            break;
        case 70368744177664 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && esl_seteq<1,1,1>(exitcond5_fu_438_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state44;
            } else {
                ap_NS_fsm = ap_ST_fsm_state48;
            }
            break;
        case 140737488355328 : 
            ap_NS_fsm = ap_ST_fsm_state47;
            break;
        case 281474976710656 : 
            ap_NS_fsm = ap_ST_fsm_state43;
            break;
        case 562949953421312 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<50>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

