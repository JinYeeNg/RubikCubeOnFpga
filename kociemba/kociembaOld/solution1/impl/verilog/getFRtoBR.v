// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module getFRtoBR (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        cubiecube_0_ep_address0,
        cubiecube_0_ep_ce0,
        cubiecube_0_ep_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 47'd1;
parameter    ap_ST_fsm_state2 = 47'd2;
parameter    ap_ST_fsm_state3 = 47'd4;
parameter    ap_ST_fsm_state4 = 47'd8;
parameter    ap_ST_fsm_state5 = 47'd16;
parameter    ap_ST_fsm_state6 = 47'd32;
parameter    ap_ST_fsm_state7 = 47'd64;
parameter    ap_ST_fsm_state8 = 47'd128;
parameter    ap_ST_fsm_state9 = 47'd256;
parameter    ap_ST_fsm_state10 = 47'd512;
parameter    ap_ST_fsm_state11 = 47'd1024;
parameter    ap_ST_fsm_state12 = 47'd2048;
parameter    ap_ST_fsm_state13 = 47'd4096;
parameter    ap_ST_fsm_state14 = 47'd8192;
parameter    ap_ST_fsm_state15 = 47'd16384;
parameter    ap_ST_fsm_state16 = 47'd32768;
parameter    ap_ST_fsm_state17 = 47'd65536;
parameter    ap_ST_fsm_state18 = 47'd131072;
parameter    ap_ST_fsm_state19 = 47'd262144;
parameter    ap_ST_fsm_state20 = 47'd524288;
parameter    ap_ST_fsm_state21 = 47'd1048576;
parameter    ap_ST_fsm_state22 = 47'd2097152;
parameter    ap_ST_fsm_state23 = 47'd4194304;
parameter    ap_ST_fsm_state24 = 47'd8388608;
parameter    ap_ST_fsm_state25 = 47'd16777216;
parameter    ap_ST_fsm_state26 = 47'd33554432;
parameter    ap_ST_fsm_state27 = 47'd67108864;
parameter    ap_ST_fsm_state28 = 47'd134217728;
parameter    ap_ST_fsm_state29 = 47'd268435456;
parameter    ap_ST_fsm_state30 = 47'd536870912;
parameter    ap_ST_fsm_state31 = 47'd1073741824;
parameter    ap_ST_fsm_state32 = 47'd2147483648;
parameter    ap_ST_fsm_state33 = 47'd4294967296;
parameter    ap_ST_fsm_state34 = 47'd8589934592;
parameter    ap_ST_fsm_state35 = 47'd17179869184;
parameter    ap_ST_fsm_state36 = 47'd34359738368;
parameter    ap_ST_fsm_state37 = 47'd68719476736;
parameter    ap_ST_fsm_state38 = 47'd137438953472;
parameter    ap_ST_fsm_state39 = 47'd274877906944;
parameter    ap_ST_fsm_state40 = 47'd549755813888;
parameter    ap_ST_fsm_state41 = 47'd1099511627776;
parameter    ap_ST_fsm_state42 = 47'd2199023255552;
parameter    ap_ST_fsm_state43 = 47'd4398046511104;
parameter    ap_ST_fsm_state44 = 47'd8796093022208;
parameter    ap_ST_fsm_state45 = 47'd17592186044416;
parameter    ap_ST_fsm_state46 = 47'd35184372088832;
parameter    ap_ST_fsm_state47 = 47'd70368744177664;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] cubiecube_0_ep_address0;
output   cubiecube_0_ep_ce0;
input  [3:0] cubiecube_0_ep_q0;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg cubiecube_0_ep_ce0;
reg[15:0] ap_return;

(* fsm_encoding = "none" *) reg   [46:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [1:0] indvarinc_fu_344_p2;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_fu_478_p3;
reg   [3:0] edge4_0_2_reg_1159;
wire    ap_CS_fsm_state4;
wire   [0:0] tmp_350_fu_643_p2;
reg   [0:0] tmp_350_reg_1167;
wire   [31:0] n_assign_cast_fu_655_p1;
wire   [31:0] x_5_fu_659_p2;
reg   [31:0] x_5_reg_1176;
wire   [31:0] tmp_364_i_fu_705_p2;
reg   [31:0] tmp_364_i_reg_1184;
wire   [0:0] tmp_i_fu_665_p2;
wire   [31:0] s_fu_716_p2;
reg   [31:0] s_reg_1192;
wire    ap_CS_fsm_state5;
wire   [0:0] exitcond_i_fu_711_p2;
wire   [31:0] i_25_fu_722_p2;
reg   [31:0] i_25_reg_1197;
wire   [31:0] j_15_fu_733_p2;
reg   [31:0] j_15_reg_1202;
wire    ap_CS_fsm_state6;
wire   [31:0] grp_fu_728_p2;
wire    ap_CS_fsm_state41;
wire   [4:0] j_16_fu_772_p2;
wire    ap_CS_fsm_state42;
wire   [3:0] tmp_288_fu_784_p3;
reg   [3:0] tmp_288_reg_1223;
wire    ap_CS_fsm_state43;
wire   [0:0] tmp_284_fu_778_p2;
wire   [0:0] sel_tmp_i_fu_792_p2;
reg   [0:0] sel_tmp_i_reg_1228;
wire   [0:0] sel_tmp2_i_fu_798_p2;
reg   [0:0] sel_tmp2_i_reg_1234;
wire    ap_CS_fsm_state44;
wire   [31:0] k_4_fu_858_p2;
reg   [31:0] k_4_reg_1249;
wire   [31:0] tmp_292_fu_878_p2;
reg   [31:0] tmp_292_reg_1254;
wire   [0:0] tmp_289_fu_853_p2;
reg   [3:0] edge4_2_5_load_1_reg_1259;
wire    ap_CS_fsm_state45;
reg   [3:0] edge4_3_5_load_1_reg_1267;
wire   [1:0] i_26_fu_890_p2;
reg   [1:0] i_26_reg_1278;
wire   [0:0] write_flag_be_i_fu_896_p6;
reg   [0:0] write_flag_be_i_reg_1283;
wire   [0:0] exitcond_fu_884_p2;
wire   [3:0] arr_be_i_fu_976_p6;
wire    ap_CS_fsm_state46;
wire   [3:0] arr12_be_i_fu_990_p6;
wire   [31:0] b_4_fu_1036_p2;
wire    ap_CS_fsm_state47;
wire   [1:0] j_13_fu_1041_p2;
reg   [1:0] invdar_reg_151;
wire   [0:0] tmp_s_fu_406_p2;
reg  signed [4:0] j_reg_162;
reg   [31:0] j_i_reg_174;
reg  signed [31:0] i_i_reg_186;
reg  signed [31:0] s_i_reg_195;
reg   [31:0] p_0_i_reg_207;
reg   [1:0] indvars_iv_reg_219;
reg  signed [31:0] b_reg_231;
reg   [31:0] k_reg_243;
reg   [0:0] write_flag_i_reg_255;
reg   [3:0] arr4_i_reg_266;
reg   [3:0] arr_i_reg_276;
wire   [1:0] ap_phi_mux_i_i1_phi_fu_292_p4;
reg   [1:0] i_i1_reg_288;
reg   [3:0] arr_load_phi_i_reg_300;
wire   [63:0] tmp_283_fu_486_p1;
reg   [3:0] edge4_fu_82;
wire   [3:0] edge4_0_1_fu_350_p6;
reg   [3:0] edge4_1_fu_86;
wire   [3:0] edge4_1_1_fu_364_p6;
reg   [3:0] edge4_2_fu_90;
wire   [3:0] edge4_2_1_fu_378_p6;
reg   [3:0] edge4_3_fu_94;
wire   [3:0] edge4_3_1_fu_392_p6;
reg   [3:0] edge4_3_1_74_fu_98;
wire   [1:0] tmp_369_t_fu_750_p2;
reg   [3:0] edge4_3_2_fu_102;
reg   [3:0] edge4_3_3_fu_106;
reg   [3:0] edge4_3_4_fu_110;
reg   [31:0] a_fu_114;
wire   [31:0] a_4_fu_739_p2;
reg   [31:0] x_fu_118;
reg   [3:0] edge4_0_5_fu_122;
wire   [3:0] edge4_0_fu_948_p3;
reg   [3:0] edge4_1_5_fu_126;
wire   [3:0] edge4_1_80_fu_941_p3;
reg   [3:0] edge4_2_5_fu_130;
wire   [3:0] edge4_2_78_fu_920_p3;
wire   [3:0] arr2_be_i_fu_1015_p6;
reg   [3:0] edge4_3_5_fu_134;
wire   [3:0] edge4_3_79_fu_934_p3;
wire   [3:0] arr3_be_i_fu_1004_p6;
wire  signed [31:0] j_cast_fu_474_p1;
wire   [0:0] tmp_329_fu_517_p2;
wire   [0:0] tmp_328_fu_511_p2;
wire   [0:0] tmp_331_fu_529_p2;
wire   [0:0] tmp_330_fu_523_p2;
wire   [0:0] tmp_333_fu_541_p2;
wire   [0:0] tmp_332_fu_535_p2;
wire   [0:0] tmp_335_fu_553_p2;
wire   [0:0] tmp_334_fu_547_p2;
wire   [0:0] tmp_337_fu_565_p2;
wire   [0:0] tmp_336_fu_559_p2;
wire   [0:0] tmp_339_fu_577_p2;
wire   [0:0] tmp_338_fu_571_p2;
wire   [0:0] tmp_341_fu_589_p2;
wire   [0:0] tmp_340_fu_583_p2;
wire   [0:0] tmp_343_fu_601_p2;
wire   [0:0] tmp_342_fu_595_p2;
wire   [0:0] tmp_345_fu_613_p2;
wire   [0:0] tmp_344_fu_607_p2;
wire   [0:0] tmp_347_fu_625_p2;
wire   [0:0] tmp_346_fu_619_p2;
wire   [0:0] tmp_349_fu_637_p2;
wire   [0:0] tmp_348_fu_631_p2;
wire   [4:0] i_fu_649_p2;
wire   [2:0] p_lshr_f_i_cast_fu_671_p4;
wire   [31:0] tmp_i_cast_fu_681_p1;
wire   [0:0] tmp_363_i_fu_685_p2;
wire   [31:0] k_assign_4_fu_691_p2;
wire   [31:0] p_k_i_fu_697_p3;
wire   [1:0] tmp_355_fu_746_p1;
wire   [31:0] tmp_351_fu_804_p2;
wire   [31:0] tmp_352_fu_810_p2;
wire   [31:0] tmp_285_fu_816_p2;
wire   [15:0] tmp_354_fu_826_p1;
wire   [15:0] tmp_353_fu_822_p1;
wire   [3:0] edge4_load_phi_fu_839_p6;
wire   [2:0] j_1_cast3_fu_864_p1;
wire   [2:0] tmp_291_fu_868_p2;
wire   [2:0] tmp_292_fu_878_p0;
wire   [3:0] newSel4_fu_913_p3;
wire   [3:0] newSel_fu_927_p3;
reg    grp_fu_728_ap_start;
wire    grp_fu_728_ap_done;
wire   [15:0] tmp_287_fu_830_p2;
reg   [15:0] ap_return_preg;
reg   [46:0] ap_NS_fsm;
wire   [31:0] tmp_292_fu_878_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 47'd1;
#0 ap_return_preg = 16'd0;
end

solution_mux_42_4jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
solution_mux_42_4jbC_U23(
    .din0(4'd0),
    .din1(edge4_fu_82),
    .din2(edge4_fu_82),
    .din3(edge4_fu_82),
    .din4(invdar_reg_151),
    .dout(edge4_0_1_fu_350_p6)
);

solution_mux_42_4jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
solution_mux_42_4jbC_U24(
    .din0(edge4_1_fu_86),
    .din1(4'd0),
    .din2(edge4_1_fu_86),
    .din3(edge4_1_fu_86),
    .din4(invdar_reg_151),
    .dout(edge4_1_1_fu_364_p6)
);

solution_mux_42_4jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
solution_mux_42_4jbC_U25(
    .din0(edge4_2_fu_90),
    .din1(edge4_2_fu_90),
    .din2(4'd0),
    .din3(edge4_2_fu_90),
    .din4(invdar_reg_151),
    .dout(edge4_2_1_fu_378_p6)
);

solution_mux_42_4jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
solution_mux_42_4jbC_U26(
    .din0(edge4_3_fu_94),
    .din1(edge4_3_fu_94),
    .din2(edge4_3_fu_94),
    .din3(4'd0),
    .din4(invdar_reg_151),
    .dout(edge4_3_1_fu_392_p6)
);

solution_sdiv_32nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
solution_sdiv_32nkbM_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_728_ap_start),
    .done(grp_fu_728_ap_done),
    .din0(s_reg_1192),
    .din1(j_i_reg_174),
    .ce(1'b1),
    .dout(grp_fu_728_p2)
);

solution_mux_42_4jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
solution_mux_42_4jbC_U28(
    .din0(edge4_3_5_fu_134),
    .din1(edge4_1_5_fu_126),
    .din2(edge4_2_5_fu_130),
    .din3(edge4_3_5_fu_134),
    .din4(indvars_iv_reg_219),
    .dout(edge4_load_phi_fu_839_p6)
);

solution_mux_42_1lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
solution_mux_42_1lbW_U29(
    .din0(1'd1),
    .din1(write_flag_i_reg_255),
    .din2(write_flag_i_reg_255),
    .din3(write_flag_i_reg_255),
    .din4(i_i1_reg_288),
    .dout(write_flag_be_i_fu_896_p6)
);

solution_mux_42_4jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
solution_mux_42_4jbC_U30(
    .din0(arr_load_phi_i_reg_300),
    .din1(arr_i_reg_276),
    .din2(arr_i_reg_276),
    .din3(arr_i_reg_276),
    .din4(i_i1_reg_288),
    .dout(arr_be_i_fu_976_p6)
);

solution_mux_42_4jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
solution_mux_42_4jbC_U31(
    .din0(arr4_i_reg_266),
    .din1(arr_load_phi_i_reg_300),
    .din2(arr4_i_reg_266),
    .din3(arr4_i_reg_266),
    .din4(i_i1_reg_288),
    .dout(arr12_be_i_fu_990_p6)
);

solution_mux_42_4jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
solution_mux_42_4jbC_U32(
    .din0(edge4_3_5_load_1_reg_1267),
    .din1(edge4_3_5_load_1_reg_1267),
    .din2(edge4_3_5_load_1_reg_1267),
    .din3(arr_load_phi_i_reg_300),
    .din4(i_i1_reg_288),
    .dout(arr3_be_i_fu_1004_p6)
);

solution_mux_42_4jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
solution_mux_42_4jbC_U33(
    .din0(edge4_2_5_load_1_reg_1259),
    .din1(edge4_2_5_load_1_reg_1259),
    .din2(arr_load_phi_i_reg_300),
    .din3(edge4_2_5_load_1_reg_1259),
    .din4(i_i1_reg_288),
    .dout(arr2_be_i_fu_1015_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 16'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state43) & (tmp_284_fu_778_p2 == 1'd1))) begin
            ap_return_preg <= tmp_287_fu_830_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_350_reg_1167 == 1'd0) & (tmp_369_t_fu_750_p2 == 2'd3) & (1'b1 == ap_CS_fsm_state42)) | ((tmp_350_reg_1167 == 1'd0) & (tmp_369_t_fu_750_p2 == 2'd2) & (1'b1 == ap_CS_fsm_state42)) | ((tmp_350_reg_1167 == 1'd0) & (tmp_369_t_fu_750_p2 == 2'd1) & (1'b1 == ap_CS_fsm_state42)) | ((tmp_350_reg_1167 == 1'd0) & (tmp_369_t_fu_750_p2 == 2'd0) & (1'b1 == ap_CS_fsm_state42)))) begin
        a_fu_114 <= a_4_fu_739_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_406_p2 == 1'd1))) begin
        a_fu_114 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_289_fu_853_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
        arr4_i_reg_266 <= edge4_1_5_fu_126;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        arr4_i_reg_266 <= arr12_be_i_fu_990_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_884_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
        if ((ap_phi_mux_i_i1_phi_fu_292_p4 == 2'd0)) begin
            arr_load_phi_i_reg_300 <= arr4_i_reg_266;
        end else if ((~(ap_phi_mux_i_i1_phi_fu_292_p4 == 2'd0) & ~(ap_phi_mux_i_i1_phi_fu_292_p4 == 2'd1))) begin
            arr_load_phi_i_reg_300 <= edge4_3_5_fu_134;
        end else if ((ap_phi_mux_i_i1_phi_fu_292_p4 == 2'd1)) begin
            arr_load_phi_i_reg_300 <= edge4_2_5_fu_130;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_478_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        b_reg_231 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        b_reg_231 <= b_4_fu_1036_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (exitcond_fu_884_p2 == 1'd1))) begin
        edge4_0_5_fu_122 <= edge4_0_fu_948_p3;
    end else if (((tmp_fu_478_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        edge4_0_5_fu_122 <= edge4_3_1_74_fu_98;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (exitcond_fu_884_p2 == 1'd1))) begin
        edge4_1_5_fu_126 <= edge4_1_80_fu_941_p3;
    end else if (((tmp_fu_478_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        edge4_1_5_fu_126 <= edge4_3_2_fu_102;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        edge4_2_5_fu_130 <= arr2_be_i_fu_1015_p6;
    end else if (((1'b1 == ap_CS_fsm_state45) & (exitcond_fu_884_p2 == 1'd1))) begin
        edge4_2_5_fu_130 <= edge4_2_78_fu_920_p3;
    end else if (((tmp_fu_478_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        edge4_2_5_fu_130 <= edge4_3_3_fu_106;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_350_reg_1167 == 1'd0) & (tmp_369_t_fu_750_p2 == 2'd0) & (1'b1 == ap_CS_fsm_state42))) begin
        edge4_3_1_74_fu_98 <= edge4_0_2_reg_1159;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_406_p2 == 1'd1))) begin
        edge4_3_1_74_fu_98 <= edge4_0_1_fu_350_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_350_reg_1167 == 1'd0) & (tmp_369_t_fu_750_p2 == 2'd1) & (1'b1 == ap_CS_fsm_state42))) begin
        edge4_3_2_fu_102 <= edge4_0_2_reg_1159;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_406_p2 == 1'd1))) begin
        edge4_3_2_fu_102 <= edge4_1_1_fu_364_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_350_reg_1167 == 1'd0) & (tmp_369_t_fu_750_p2 == 2'd2) & (1'b1 == ap_CS_fsm_state42))) begin
        edge4_3_3_fu_106 <= edge4_0_2_reg_1159;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_406_p2 == 1'd1))) begin
        edge4_3_3_fu_106 <= edge4_2_1_fu_378_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_350_reg_1167 == 1'd0) & (tmp_369_t_fu_750_p2 == 2'd3) & (1'b1 == ap_CS_fsm_state42))) begin
        edge4_3_4_fu_110 <= edge4_0_2_reg_1159;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_406_p2 == 1'd1))) begin
        edge4_3_4_fu_110 <= edge4_3_1_fu_392_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        edge4_3_5_fu_134 <= arr3_be_i_fu_1004_p6;
    end else if (((1'b1 == ap_CS_fsm_state45) & (exitcond_fu_884_p2 == 1'd1))) begin
        edge4_3_5_fu_134 <= edge4_3_79_fu_934_p3;
    end else if (((tmp_fu_478_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        edge4_3_5_fu_134 <= edge4_3_4_fu_110;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_289_fu_853_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
        i_i1_reg_288 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        i_i1_reg_288 <= i_26_reg_1278;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        i_i_reg_186 <= i_25_reg_1197;
    end else if (((tmp_350_fu_643_p2 == 1'd0) & (tmp_i_fu_665_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        i_i_reg_186 <= n_assign_cast_fu_655_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_478_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        indvars_iv_reg_219 <= 2'd3;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        indvars_iv_reg_219 <= j_13_fu_1041_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_406_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        invdar_reg_151 <= indvarinc_fu_344_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        invdar_reg_151 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        j_i_reg_174 <= j_15_reg_1202;
    end else if (((tmp_350_fu_643_p2 == 1'd0) & (tmp_i_fu_665_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        j_i_reg_174 <= 32'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_406_p2 == 1'd1))) begin
        j_reg_162 <= 5'd11;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        j_reg_162 <= j_16_fu_772_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (exitcond_fu_884_p2 == 1'd1))) begin
        k_reg_243 <= k_4_reg_1249;
    end else if (((tmp_284_fu_778_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
        k_reg_243 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond_i_fu_711_p2 == 1'd1))) begin
        p_0_i_reg_207 <= s_i_reg_195;
    end else if (((tmp_350_fu_643_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_i_fu_665_p2 == 1'd1))) begin
        p_0_i_reg_207 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        s_i_reg_195 <= grp_fu_728_p2;
    end else if (((tmp_350_fu_643_p2 == 1'd0) & (tmp_i_fu_665_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        s_i_reg_195 <= 32'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_289_fu_853_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
        write_flag_i_reg_255 <= 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        write_flag_i_reg_255 <= write_flag_be_i_reg_1283;
    end
end

always @ (posedge ap_clk) begin
    if ((((tmp_350_reg_1167 == 1'd0) & (tmp_369_t_fu_750_p2 == 2'd3) & (1'b1 == ap_CS_fsm_state42)) | ((tmp_350_reg_1167 == 1'd0) & (tmp_369_t_fu_750_p2 == 2'd2) & (1'b1 == ap_CS_fsm_state42)) | ((tmp_350_reg_1167 == 1'd0) & (tmp_369_t_fu_750_p2 == 2'd1) & (1'b1 == ap_CS_fsm_state42)) | ((tmp_350_reg_1167 == 1'd0) & (tmp_369_t_fu_750_p2 == 2'd0) & (1'b1 == ap_CS_fsm_state42)))) begin
        x_fu_118 <= x_5_reg_1176;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_406_p2 == 1'd1))) begin
        x_fu_118 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        arr_i_reg_276 <= arr_be_i_fu_976_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        edge4_0_2_reg_1159 <= cubiecube_0_ep_q0;
        tmp_350_reg_1167 <= tmp_350_fu_643_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        edge4_1_fu_86 <= edge4_1_1_fu_364_p6;
        edge4_2_fu_90 <= edge4_2_1_fu_378_p6;
        edge4_3_fu_94 <= edge4_3_1_fu_392_p6;
        edge4_fu_82 <= edge4_0_1_fu_350_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        edge4_2_5_load_1_reg_1259 <= edge4_2_5_fu_130;
        edge4_3_5_load_1_reg_1267 <= edge4_3_5_fu_134;
        i_26_reg_1278 <= i_26_fu_890_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_711_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        i_25_reg_1197 <= i_25_fu_722_p2;
        s_reg_1192 <= s_fu_716_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_15_reg_1202 <= j_15_fu_733_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        k_4_reg_1249 <= k_4_fu_858_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_284_fu_778_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
        sel_tmp2_i_reg_1234 <= sel_tmp2_i_fu_798_p2;
        sel_tmp_i_reg_1228 <= sel_tmp_i_fu_792_p2;
        tmp_288_reg_1223[1 : 0] <= tmp_288_fu_784_p3[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) & (tmp_289_fu_853_p2 == 1'd1))) begin
        tmp_292_reg_1254 <= tmp_292_fu_878_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_350_fu_643_p2 == 1'd0) & (tmp_i_fu_665_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_364_i_reg_1184 <= tmp_364_i_fu_705_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_884_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
        write_flag_be_i_reg_1283 <= write_flag_be_i_fu_896_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_350_fu_643_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        x_5_reg_1176 <= x_5_fu_659_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state43) & (tmp_284_fu_778_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) & (tmp_284_fu_778_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) & (tmp_284_fu_778_p2 == 1'd1))) begin
        ap_return = tmp_287_fu_830_p2;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cubiecube_0_ep_ce0 = 1'b1;
    end else begin
        cubiecube_0_ep_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_728_ap_start = 1'b1;
    end else begin
        grp_fu_728_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_406_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((tmp_fu_478_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((tmp_350_fu_643_p2 == 1'd0) & (tmp_i_fu_665_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (exitcond_i_fu_711_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state43 : begin
            if (((1'b1 == ap_CS_fsm_state43) & (tmp_284_fu_778_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((tmp_289_fu_853_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state45 : begin
            if (((1'b1 == ap_CS_fsm_state45) & (exitcond_fu_884_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_4_fu_739_p2 = (p_0_i_reg_207 + a_fu_114);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_phi_mux_i_i1_phi_fu_292_p4 = i_i1_reg_288;

assign b_4_fu_1036_p2 = (k_reg_243 + tmp_292_reg_1254);

assign cubiecube_0_ep_address0 = tmp_283_fu_486_p1;

assign edge4_0_fu_948_p3 = ((write_flag_i_reg_255[0:0] === 1'b1) ? arr_i_reg_276 : edge4_0_5_fu_122);

assign edge4_1_80_fu_941_p3 = ((sel_tmp2_i_reg_1234[0:0] === 1'b1) ? edge4_0_5_fu_122 : arr4_i_reg_266);

assign edge4_2_78_fu_920_p3 = ((sel_tmp2_i_reg_1234[0:0] === 1'b1) ? edge4_2_5_fu_130 : newSel4_fu_913_p3);

assign edge4_3_79_fu_934_p3 = ((sel_tmp2_i_reg_1234[0:0] === 1'b1) ? edge4_3_5_fu_134 : newSel_fu_927_p3);

assign exitcond_fu_884_p2 = ((i_i1_reg_288 == indvars_iv_reg_219) ? 1'b1 : 1'b0);

assign exitcond_i_fu_711_p2 = ((j_i_reg_174 == tmp_364_i_reg_1184) ? 1'b1 : 1'b0);

assign i_25_fu_722_p2 = ($signed(i_i_reg_186) + $signed(32'd4294967295));

assign i_26_fu_890_p2 = (i_i1_reg_288 + 2'd1);

assign i_fu_649_p2 = ($signed(5'd11) - $signed(j_reg_162));

assign indvarinc_fu_344_p2 = (invdar_reg_151 + 2'd1);

assign j_13_fu_1041_p2 = ($signed(indvars_iv_reg_219) + $signed(2'd3));

assign j_15_fu_733_p2 = (j_i_reg_174 + 32'd1);

assign j_16_fu_772_p2 = ($signed(j_reg_162) + $signed(5'd31));

assign j_1_cast3_fu_864_p1 = indvars_iv_reg_219;

assign j_cast_fu_474_p1 = j_reg_162;

assign k_4_fu_858_p2 = (k_reg_243 + 32'd1);

assign k_assign_4_fu_691_p2 = (n_assign_cast_fu_655_p1 - x_5_fu_659_p2);

assign n_assign_cast_fu_655_p1 = i_fu_649_p2;

assign newSel4_fu_913_p3 = ((sel_tmp_i_reg_1228[0:0] === 1'b1) ? edge4_0_5_fu_122 : edge4_2_5_fu_130);

assign newSel_fu_927_p3 = ((sel_tmp_i_reg_1228[0:0] === 1'b1) ? edge4_3_5_fu_134 : edge4_0_5_fu_122);

assign p_k_i_fu_697_p3 = ((tmp_363_i_fu_685_p2[0:0] === 1'b1) ? k_assign_4_fu_691_p2 : x_5_fu_659_p2);

assign p_lshr_f_i_cast_fu_671_p4 = {{i_fu_649_p2[3:1]}};

assign s_fu_716_p2 = ($signed(s_i_reg_195) * $signed(i_i_reg_186));

assign sel_tmp2_i_fu_798_p2 = ((indvars_iv_reg_219 == 2'd1) ? 1'b1 : 1'b0);

assign sel_tmp_i_fu_792_p2 = ((indvars_iv_reg_219 == 2'd2) ? 1'b1 : 1'b0);

assign tmp_283_fu_486_p1 = $unsigned(j_cast_fu_474_p1);

assign tmp_284_fu_778_p2 = ((indvars_iv_reg_219 == 2'd0) ? 1'b1 : 1'b0);

assign tmp_285_fu_816_p2 = (tmp_351_fu_804_p2 - tmp_352_fu_810_p2);

assign tmp_287_fu_830_p2 = (tmp_354_fu_826_p1 + tmp_353_fu_822_p1);

assign tmp_288_fu_784_p3 = {{2'd2}, {indvars_iv_reg_219}};

assign tmp_289_fu_853_p2 = ((edge4_load_phi_fu_839_p6 == tmp_288_reg_1223) ? 1'b1 : 1'b0);

assign tmp_291_fu_868_p2 = (j_1_cast3_fu_864_p1 + 3'd1);

assign tmp_292_fu_878_p0 = tmp_292_fu_878_p00;

assign tmp_292_fu_878_p00 = tmp_291_fu_868_p2;

assign tmp_292_fu_878_p2 = ($signed({{1'b0}, {tmp_292_fu_878_p0}}) * $signed(b_reg_231));

assign tmp_328_fu_511_p2 = ((cubiecube_0_ep_q0 == 4'd15) ? 1'b1 : 1'b0);

assign tmp_329_fu_517_p2 = ((cubiecube_0_ep_q0 == 4'd14) ? 1'b1 : 1'b0);

assign tmp_330_fu_523_p2 = (tmp_329_fu_517_p2 | tmp_328_fu_511_p2);

assign tmp_331_fu_529_p2 = ((cubiecube_0_ep_q0 == 4'd13) ? 1'b1 : 1'b0);

assign tmp_332_fu_535_p2 = (tmp_331_fu_529_p2 | tmp_330_fu_523_p2);

assign tmp_333_fu_541_p2 = ((cubiecube_0_ep_q0 == 4'd12) ? 1'b1 : 1'b0);

assign tmp_334_fu_547_p2 = (tmp_333_fu_541_p2 | tmp_332_fu_535_p2);

assign tmp_335_fu_553_p2 = ((cubiecube_0_ep_q0 == 4'd7) ? 1'b1 : 1'b0);

assign tmp_336_fu_559_p2 = (tmp_335_fu_553_p2 | tmp_334_fu_547_p2);

assign tmp_337_fu_565_p2 = ((cubiecube_0_ep_q0 == 4'd6) ? 1'b1 : 1'b0);

assign tmp_338_fu_571_p2 = (tmp_337_fu_565_p2 | tmp_336_fu_559_p2);

assign tmp_339_fu_577_p2 = ((cubiecube_0_ep_q0 == 4'd5) ? 1'b1 : 1'b0);

assign tmp_340_fu_583_p2 = (tmp_339_fu_577_p2 | tmp_338_fu_571_p2);

assign tmp_341_fu_589_p2 = ((cubiecube_0_ep_q0 == 4'd4) ? 1'b1 : 1'b0);

assign tmp_342_fu_595_p2 = (tmp_341_fu_589_p2 | tmp_340_fu_583_p2);

assign tmp_343_fu_601_p2 = ((cubiecube_0_ep_q0 == 4'd3) ? 1'b1 : 1'b0);

assign tmp_344_fu_607_p2 = (tmp_343_fu_601_p2 | tmp_342_fu_595_p2);

assign tmp_345_fu_613_p2 = ((cubiecube_0_ep_q0 == 4'd2) ? 1'b1 : 1'b0);

assign tmp_346_fu_619_p2 = (tmp_345_fu_613_p2 | tmp_344_fu_607_p2);

assign tmp_347_fu_625_p2 = ((cubiecube_0_ep_q0 == 4'd1) ? 1'b1 : 1'b0);

assign tmp_348_fu_631_p2 = (tmp_347_fu_625_p2 | tmp_346_fu_619_p2);

assign tmp_349_fu_637_p2 = ((cubiecube_0_ep_q0 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_350_fu_643_p2 = (tmp_349_fu_637_p2 | tmp_348_fu_631_p2);

assign tmp_351_fu_804_p2 = a_fu_114 << 32'd5;

assign tmp_352_fu_810_p2 = a_fu_114 << 32'd3;

assign tmp_353_fu_822_p1 = b_reg_231[15:0];

assign tmp_354_fu_826_p1 = tmp_285_fu_816_p2[15:0];

assign tmp_355_fu_746_p1 = x_fu_118[1:0];

assign tmp_363_i_fu_685_p2 = (($signed(tmp_i_cast_fu_681_p1) < $signed(x_5_fu_659_p2)) ? 1'b1 : 1'b0);

assign tmp_364_i_fu_705_p2 = (p_k_i_fu_697_p3 + 32'd1);

assign tmp_369_t_fu_750_p2 = (tmp_355_fu_746_p1 ^ 2'd3);

assign tmp_fu_478_p3 = j_reg_162[32'd4];

assign tmp_i_cast_fu_681_p1 = p_lshr_f_i_cast_fu_671_p4;

assign tmp_i_fu_665_p2 = (($signed(n_assign_cast_fu_655_p1) < $signed(x_5_fu_659_p2)) ? 1'b1 : 1'b0);

assign tmp_s_fu_406_p2 = ((invdar_reg_151 == 2'd3) ? 1'b1 : 1'b0);

assign x_5_fu_659_p2 = (x_fu_118 + 32'd1);

always @ (posedge ap_clk) begin
    tmp_288_reg_1223[3:2] <= 2'b10;
end

endmodule //getFRtoBR
