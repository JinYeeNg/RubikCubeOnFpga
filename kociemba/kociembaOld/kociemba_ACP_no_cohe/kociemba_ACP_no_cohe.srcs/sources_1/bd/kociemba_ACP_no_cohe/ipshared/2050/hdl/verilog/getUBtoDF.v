// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module getUBtoDF (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        cubiecube_0_ep_address0,
        cubiecube_0_ep_ce0,
        cubiecube_0_ep_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 47'd1;
parameter    ap_ST_fsm_state2 = 47'd2;
parameter    ap_ST_fsm_state3 = 47'd4;
parameter    ap_ST_fsm_state4 = 47'd8;
parameter    ap_ST_fsm_state5 = 47'd16;
parameter    ap_ST_fsm_state6 = 47'd32;
parameter    ap_ST_fsm_state7 = 47'd64;
parameter    ap_ST_fsm_state8 = 47'd128;
parameter    ap_ST_fsm_state9 = 47'd256;
parameter    ap_ST_fsm_state10 = 47'd512;
parameter    ap_ST_fsm_state11 = 47'd1024;
parameter    ap_ST_fsm_state12 = 47'd2048;
parameter    ap_ST_fsm_state13 = 47'd4096;
parameter    ap_ST_fsm_state14 = 47'd8192;
parameter    ap_ST_fsm_state15 = 47'd16384;
parameter    ap_ST_fsm_state16 = 47'd32768;
parameter    ap_ST_fsm_state17 = 47'd65536;
parameter    ap_ST_fsm_state18 = 47'd131072;
parameter    ap_ST_fsm_state19 = 47'd262144;
parameter    ap_ST_fsm_state20 = 47'd524288;
parameter    ap_ST_fsm_state21 = 47'd1048576;
parameter    ap_ST_fsm_state22 = 47'd2097152;
parameter    ap_ST_fsm_state23 = 47'd4194304;
parameter    ap_ST_fsm_state24 = 47'd8388608;
parameter    ap_ST_fsm_state25 = 47'd16777216;
parameter    ap_ST_fsm_state26 = 47'd33554432;
parameter    ap_ST_fsm_state27 = 47'd67108864;
parameter    ap_ST_fsm_state28 = 47'd134217728;
parameter    ap_ST_fsm_state29 = 47'd268435456;
parameter    ap_ST_fsm_state30 = 47'd536870912;
parameter    ap_ST_fsm_state31 = 47'd1073741824;
parameter    ap_ST_fsm_state32 = 47'd2147483648;
parameter    ap_ST_fsm_state33 = 47'd4294967296;
parameter    ap_ST_fsm_state34 = 47'd8589934592;
parameter    ap_ST_fsm_state35 = 47'd17179869184;
parameter    ap_ST_fsm_state36 = 47'd34359738368;
parameter    ap_ST_fsm_state37 = 47'd68719476736;
parameter    ap_ST_fsm_state38 = 47'd137438953472;
parameter    ap_ST_fsm_state39 = 47'd274877906944;
parameter    ap_ST_fsm_state40 = 47'd549755813888;
parameter    ap_ST_fsm_state41 = 47'd1099511627776;
parameter    ap_ST_fsm_state42 = 47'd2199023255552;
parameter    ap_ST_fsm_state43 = 47'd4398046511104;
parameter    ap_ST_fsm_state44 = 47'd8796093022208;
parameter    ap_ST_fsm_state45 = 47'd17592186044416;
parameter    ap_ST_fsm_state46 = 47'd35184372088832;
parameter    ap_ST_fsm_state47 = 47'd70368744177664;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] cubiecube_0_ep_address0;
output   cubiecube_0_ep_ce0;
input  [3:0] cubiecube_0_ep_q0;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg cubiecube_0_ep_ce0;
reg[15:0] ap_return;

(* fsm_encoding = "none" *) reg   [46:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [1:0] indvarinc_fu_367_p2;
wire    ap_CS_fsm_state2;
wire   [31:0] n_assign_cast5_fu_470_p1;
reg   [31:0] n_assign_cast5_reg_871;
wire    ap_CS_fsm_state3;
wire   [3:0] j_11_fu_480_p2;
reg   [3:0] j_11_reg_881;
wire   [0:0] exitcond_fu_474_p2;
reg   [3:0] edge3_0_reg_912;
wire    ap_CS_fsm_state4;
wire   [0:0] or_cond_fu_518_p2;
reg   [0:0] or_cond_reg_919;
wire   [31:0] x_4_fu_524_p2;
reg   [31:0] x_4_reg_923;
wire   [31:0] tmp_364_i_fu_568_p2;
reg   [31:0] tmp_364_i_reg_931;
wire   [0:0] tmp_i_fu_530_p2;
wire   [31:0] s_fu_579_p2;
reg   [31:0] s_reg_939;
wire    ap_CS_fsm_state5;
wire   [0:0] exitcond_i_fu_574_p2;
wire   [31:0] i_23_fu_585_p2;
reg   [31:0] i_23_reg_944;
wire   [31:0] j_12_fu_596_p2;
reg   [31:0] j_12_reg_949;
wire    ap_CS_fsm_state6;
wire   [31:0] grp_fu_591_p2;
wire    ap_CS_fsm_state41;
wire   [4:0] tmp_311_cast_fu_641_p1;
reg   [4:0] tmp_311_cast_reg_965;
wire    ap_CS_fsm_state43;
wire   [0:0] tmp_270_fu_629_p2;
wire   [0:0] cond_fu_645_p2;
reg   [0:0] cond_reg_970;
wire    ap_CS_fsm_state44;
wire   [31:0] k_3_fu_705_p2;
reg   [31:0] k_3_reg_990;
wire   [31:0] tmp_278_fu_721_p2;
reg   [31:0] tmp_278_reg_995;
wire   [0:0] tmp_276_fu_700_p2;
wire   [1:0] j_fu_727_p2;
reg   [1:0] j_reg_1000;
wire   [1:0] i_24_fu_739_p2;
reg   [1:0] i_24_reg_1008;
wire    ap_CS_fsm_state45;
wire   [3:0] arr_load_phi_i_fu_751_p3;
wire   [0:0] exitcond1_fu_733_p2;
wire   [31:0] b_3_fu_799_p2;
wire    ap_CS_fsm_state47;
wire   [1:0] indvars_iv_next_fu_804_p2;
reg   [1:0] invdar_reg_111;
wire   [0:0] tmp_s_fu_415_p2;
reg   [3:0] i_reg_122;
wire    ap_CS_fsm_state42;
reg   [31:0] j_i_reg_134;
reg  signed [31:0] i_i_reg_146;
reg  signed [31:0] s_i_reg_155;
reg   [31:0] p_0_i_reg_167;
reg   [1:0] indvars_iv_reg_179;
reg   [1:0] r_assign_reg_191;
reg  signed [31:0] b_reg_203;
reg   [31:0] k_reg_215;
reg   [3:0] arr2_i_reg_227;
wire    ap_CS_fsm_state46;
reg   [0:0] write_flag_i_reg_237;
reg   [3:0] arr1_i_reg_249;
reg   [3:0] arr_i_reg_259;
wire   [1:0] ap_phi_mux_i_i1_phi_fu_275_p4;
reg   [1:0] i_i1_reg_271;
reg   [3:0] arr2_i_be_reg_282;
reg   [0:0] write_flag_i_be_reg_297;
reg   [3:0] arr1_i_be_reg_314;
reg   [3:0] arr_i_be_reg_329;
wire   [63:0] tmp_267_fu_486_p1;
reg   [3:0] edge3_fu_54;
wire   [3:0] edge3_0_1_fu_373_p6;
reg   [3:0] edge3_1_fu_58;
wire   [3:0] edge3_1_1_fu_387_p6;
reg   [3:0] edge3_2_fu_62;
wire   [3:0] edge3_2_1_fu_401_p6;
reg   [3:0] edge3_2_6_fu_66;
wire   [1:0] tmp_280_fu_609_p1;
reg   [3:0] edge3_2_7_fu_70;
reg   [3:0] edge3_2_8_fu_74;
reg   [31:0] a_fu_78;
wire   [31:0] a_3_fu_602_p2;
reg   [31:0] x_fu_82;
reg   [3:0] temp_fu_86;
wire   [3:0] edge3_0_2_fu_776_p3;
reg   [3:0] edge3_1_3_fu_90;
wire   [3:0] edge3_1_72_fu_769_p3;
reg   [3:0] edge3_2_9_fu_94;
wire   [3:0] edge3_2_71_fu_762_p3;
wire   [0:0] tmp_268_fu_506_p2;
wire   [0:0] tmp_269_fu_512_p2;
wire   [2:0] p_lshr_f_i_cast_fu_535_p4;
wire   [31:0] tmp_i_cast_fu_545_p1;
wire   [0:0] tmp_363_i_fu_549_p2;
wire   [31:0] k_assign_3_fu_555_p2;
wire   [31:0] p_k_i_fu_560_p3;
wire   [2:0] j_1_cast_fu_625_p1;
wire   [2:0] tmp_275_fu_635_p2;
wire   [31:0] tmp_fu_651_p2;
wire   [31:0] tmp_271_fu_657_p2;
wire   [31:0] tmp_272_fu_663_p2;
wire   [15:0] tmp_279_fu_673_p1;
wire   [15:0] tmp_273_fu_669_p1;
wire   [3:0] edge3_load_phi_fu_689_p3;
wire   [4:0] tmp_314_cast_fu_696_p1;
wire   [1:0] tmp_277_fu_711_p2;
wire   [1:0] tmp_278_fu_721_p0;
wire   [0:0] cond_i_fu_745_p2;
reg    grp_fu_591_ap_start;
wire    grp_fu_591_ap_done;
wire   [15:0] tmp_274_fu_677_p2;
reg   [15:0] ap_return_preg;
reg   [46:0] ap_NS_fsm;
wire   [31:0] tmp_278_fu_721_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 47'd1;
#0 ap_return_preg = 16'd0;
end

solution_mux_42_4jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
solution_mux_42_4jbC_U46(
    .din0(4'd0),
    .din1(edge3_fu_54),
    .din2(edge3_fu_54),
    .din3(edge3_fu_54),
    .din4(invdar_reg_111),
    .dout(edge3_0_1_fu_373_p6)
);

solution_mux_42_4jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
solution_mux_42_4jbC_U47(
    .din0(edge3_1_fu_58),
    .din1(4'd0),
    .din2(edge3_1_fu_58),
    .din3(edge3_1_fu_58),
    .din4(invdar_reg_111),
    .dout(edge3_1_1_fu_387_p6)
);

solution_mux_42_4jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
solution_mux_42_4jbC_U48(
    .din0(edge3_2_fu_62),
    .din1(edge3_2_fu_62),
    .din2(4'd0),
    .din3(4'd0),
    .din4(invdar_reg_111),
    .dout(edge3_2_1_fu_401_p6)
);

solution_sdiv_32nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
solution_sdiv_32nkbM_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_591_ap_start),
    .done(grp_fu_591_ap_done),
    .din0(s_reg_939),
    .din1(j_i_reg_134),
    .ce(1'b1),
    .dout(grp_fu_591_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 16'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state43) & (tmp_270_fu_629_p2 == 1'd1))) begin
            ap_return_preg <= tmp_274_fu_677_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((~(tmp_280_fu_609_p1 == 2'd1) & ~(tmp_280_fu_609_p1 == 2'd0) & (1'b1 == ap_CS_fsm_state42) & (or_cond_reg_919 == 1'd1)) | ((tmp_280_fu_609_p1 == 2'd1) & (1'b1 == ap_CS_fsm_state42) & (or_cond_reg_919 == 1'd1)) | ((1'b1 == ap_CS_fsm_state42) & (tmp_280_fu_609_p1 == 2'd0) & (or_cond_reg_919 == 1'd1)))) begin
        a_fu_78 <= a_3_fu_602_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_415_p2 == 1'd1))) begin
        a_fu_78 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_733_p2 == 1'd0) & (ap_phi_mux_i_i1_phi_fu_275_p4 == 2'd1) & (1'b1 == ap_CS_fsm_state45))) begin
        arr1_i_be_reg_314 <= arr_load_phi_i_fu_751_p3;
    end else if (((~(ap_phi_mux_i_i1_phi_fu_275_p4 == 2'd1) & ~(ap_phi_mux_i_i1_phi_fu_275_p4 == 2'd0) & (exitcond1_fu_733_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45)) | ((exitcond1_fu_733_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45) & (ap_phi_mux_i_i1_phi_fu_275_p4 == 2'd0)))) begin
        arr1_i_be_reg_314 <= arr1_i_reg_249;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        arr1_i_reg_249 <= arr1_i_be_reg_314;
    end else if (((tmp_276_fu_700_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
        arr1_i_reg_249 <= edge3_1_3_fu_90;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond1_fu_733_p2 == 1'd0) & (ap_phi_mux_i_i1_phi_fu_275_p4 == 2'd1) & (1'b1 == ap_CS_fsm_state45)) | ((exitcond1_fu_733_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45) & (ap_phi_mux_i_i1_phi_fu_275_p4 == 2'd0)))) begin
        arr2_i_be_reg_282 <= arr2_i_reg_227;
    end else if ((~(ap_phi_mux_i_i1_phi_fu_275_p4 == 2'd1) & ~(ap_phi_mux_i_i1_phi_fu_275_p4 == 2'd0) & (exitcond1_fu_733_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
        arr2_i_be_reg_282 <= arr_load_phi_i_fu_751_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        arr2_i_reg_227 <= arr2_i_be_reg_282;
    end else if (((tmp_276_fu_700_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
        arr2_i_reg_227 <= edge3_2_9_fu_94;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_733_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45) & (ap_phi_mux_i_i1_phi_fu_275_p4 == 2'd0))) begin
        arr_i_be_reg_329 <= arr_load_phi_i_fu_751_p3;
    end else if ((((exitcond1_fu_733_p2 == 1'd0) & (ap_phi_mux_i_i1_phi_fu_275_p4 == 2'd1) & (1'b1 == ap_CS_fsm_state45)) | (~(ap_phi_mux_i_i1_phi_fu_275_p4 == 2'd1) & ~(ap_phi_mux_i_i1_phi_fu_275_p4 == 2'd0) & (exitcond1_fu_733_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        arr_i_be_reg_329 <= arr_i_reg_259;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        b_reg_203 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        b_reg_203 <= b_3_fu_799_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (exitcond1_fu_733_p2 == 1'd1))) begin
        edge3_1_3_fu_90 <= edge3_1_72_fu_769_p3;
    end else if (((exitcond_fu_474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        edge3_1_3_fu_90 <= edge3_2_7_fu_70;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) & (tmp_280_fu_609_p1 == 2'd0) & (or_cond_reg_919 == 1'd1))) begin
        edge3_2_6_fu_66 <= edge3_0_reg_912;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_415_p2 == 1'd1))) begin
        edge3_2_6_fu_66 <= edge3_0_1_fu_373_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_280_fu_609_p1 == 2'd1) & (1'b1 == ap_CS_fsm_state42) & (or_cond_reg_919 == 1'd1))) begin
        edge3_2_7_fu_70 <= edge3_0_reg_912;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_415_p2 == 1'd1))) begin
        edge3_2_7_fu_70 <= edge3_1_1_fu_387_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((~(tmp_280_fu_609_p1 == 2'd1) & ~(tmp_280_fu_609_p1 == 2'd0) & (1'b1 == ap_CS_fsm_state42) & (or_cond_reg_919 == 1'd1))) begin
        edge3_2_8_fu_74 <= edge3_0_reg_912;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_415_p2 == 1'd1))) begin
        edge3_2_8_fu_74 <= edge3_2_1_fu_401_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (exitcond1_fu_733_p2 == 1'd1))) begin
        edge3_2_9_fu_94 <= edge3_2_71_fu_762_p3;
    end else if (((exitcond_fu_474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        edge3_2_9_fu_94 <= edge3_2_8_fu_74;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        i_i1_reg_271 <= i_24_reg_1008;
    end else if (((tmp_276_fu_700_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
        i_i1_reg_271 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        i_i_reg_146 <= i_23_reg_944;
    end else if (((tmp_i_fu_530_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (or_cond_fu_518_p2 == 1'd1))) begin
        i_i_reg_146 <= n_assign_cast5_reg_871;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        i_reg_122 <= j_11_reg_881;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_415_p2 == 1'd1))) begin
        i_reg_122 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        indvars_iv_reg_179 <= 2'd2;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        indvars_iv_reg_179 <= indvars_iv_next_fu_804_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_415_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        invdar_reg_111 <= indvarinc_fu_367_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        invdar_reg_111 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        j_i_reg_134 <= j_12_reg_949;
    end else if (((tmp_i_fu_530_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (or_cond_fu_518_p2 == 1'd1))) begin
        j_i_reg_134 <= 32'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (exitcond1_fu_733_p2 == 1'd1))) begin
        k_reg_215 <= k_3_reg_990;
    end else if (((tmp_270_fu_629_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
        k_reg_215 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond_i_fu_574_p2 == 1'd1))) begin
        p_0_i_reg_167 <= s_i_reg_155;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_i_fu_530_p2 == 1'd1) & (or_cond_fu_518_p2 == 1'd1))) begin
        p_0_i_reg_167 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        r_assign_reg_191 <= 2'd2;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        r_assign_reg_191 <= j_reg_1000;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        s_i_reg_155 <= grp_fu_591_p2;
    end else if (((tmp_i_fu_530_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (or_cond_fu_518_p2 == 1'd1))) begin
        s_i_reg_155 <= 32'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (exitcond1_fu_733_p2 == 1'd1))) begin
        temp_fu_86 <= edge3_0_2_fu_776_p3;
    end else if (((exitcond_fu_474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        temp_fu_86 <= edge3_2_6_fu_66;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_733_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45) & (ap_phi_mux_i_i1_phi_fu_275_p4 == 2'd0))) begin
        write_flag_i_be_reg_297 <= 1'd1;
    end else if ((((exitcond1_fu_733_p2 == 1'd0) & (ap_phi_mux_i_i1_phi_fu_275_p4 == 2'd1) & (1'b1 == ap_CS_fsm_state45)) | (~(ap_phi_mux_i_i1_phi_fu_275_p4 == 2'd1) & ~(ap_phi_mux_i_i1_phi_fu_275_p4 == 2'd0) & (exitcond1_fu_733_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        write_flag_i_be_reg_297 <= write_flag_i_reg_237;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        write_flag_i_reg_237 <= write_flag_i_be_reg_297;
    end else if (((tmp_276_fu_700_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
        write_flag_i_reg_237 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((~(tmp_280_fu_609_p1 == 2'd1) & ~(tmp_280_fu_609_p1 == 2'd0) & (1'b1 == ap_CS_fsm_state42) & (or_cond_reg_919 == 1'd1)) | ((tmp_280_fu_609_p1 == 2'd1) & (1'b1 == ap_CS_fsm_state42) & (or_cond_reg_919 == 1'd1)) | ((1'b1 == ap_CS_fsm_state42) & (tmp_280_fu_609_p1 == 2'd0) & (or_cond_reg_919 == 1'd1)))) begin
        x_fu_82 <= x_4_reg_923;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_415_p2 == 1'd1))) begin
        x_fu_82 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        arr_i_reg_259 <= arr_i_be_reg_329;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_270_fu_629_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
        cond_reg_970 <= cond_fu_645_p2;
        tmp_311_cast_reg_965[2 : 0] <= tmp_311_cast_fu_641_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        edge3_0_reg_912 <= cubiecube_0_ep_q0;
        or_cond_reg_919 <= or_cond_fu_518_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        edge3_1_fu_58 <= edge3_1_1_fu_387_p6;
        edge3_2_fu_62 <= edge3_2_1_fu_401_p6;
        edge3_fu_54 <= edge3_0_1_fu_373_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_574_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        i_23_reg_944 <= i_23_fu_585_p2;
        s_reg_939 <= s_fu_579_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        i_24_reg_1008 <= i_24_fu_739_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_11_reg_881 <= j_11_fu_480_p2;
        n_assign_cast5_reg_871[3 : 0] <= n_assign_cast5_fu_470_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_12_reg_949 <= j_12_fu_596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) & (tmp_276_fu_700_p2 == 1'd1))) begin
        j_reg_1000 <= j_fu_727_p2;
        tmp_278_reg_995 <= tmp_278_fu_721_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        k_3_reg_990 <= k_3_fu_705_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_fu_530_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (or_cond_fu_518_p2 == 1'd1))) begin
        tmp_364_i_reg_931 <= tmp_364_i_fu_568_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (or_cond_fu_518_p2 == 1'd1))) begin
        x_4_reg_923 <= x_4_fu_524_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state43) & (tmp_270_fu_629_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) & (tmp_270_fu_629_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) & (tmp_270_fu_629_p2 == 1'd1))) begin
        ap_return = tmp_274_fu_677_p2;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cubiecube_0_ep_ce0 = 1'b1;
    end else begin
        cubiecube_0_ep_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_591_ap_start = 1'b1;
    end else begin
        grp_fu_591_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_415_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond_fu_474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((tmp_i_fu_530_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (or_cond_fu_518_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (exitcond_i_fu_574_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state43 : begin
            if (((1'b1 == ap_CS_fsm_state43) & (tmp_270_fu_629_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((tmp_276_fu_700_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state45 : begin
            if (((1'b1 == ap_CS_fsm_state45) & (exitcond1_fu_733_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_3_fu_602_p2 = (p_0_i_reg_167 + a_fu_78);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_phi_mux_i_i1_phi_fu_275_p4 = i_i1_reg_271;

assign arr_load_phi_i_fu_751_p3 = ((cond_i_fu_745_p2[0:0] === 1'b1) ? arr1_i_reg_249 : arr2_i_reg_227);

assign b_3_fu_799_p2 = (k_reg_215 + tmp_278_reg_995);

assign cond_fu_645_p2 = ((r_assign_reg_191 == 2'd1) ? 1'b1 : 1'b0);

assign cond_i_fu_745_p2 = ((i_i1_reg_271 == 2'd0) ? 1'b1 : 1'b0);

assign cubiecube_0_ep_address0 = tmp_267_fu_486_p1;

assign edge3_0_2_fu_776_p3 = ((write_flag_i_reg_237[0:0] === 1'b1) ? arr_i_reg_259 : temp_fu_86);

assign edge3_1_72_fu_769_p3 = ((cond_reg_970[0:0] === 1'b1) ? temp_fu_86 : arr1_i_reg_249);

assign edge3_2_71_fu_762_p3 = ((cond_reg_970[0:0] === 1'b1) ? arr2_i_reg_227 : temp_fu_86);

assign edge3_load_phi_fu_689_p3 = ((cond_reg_970[0:0] === 1'b1) ? edge3_1_3_fu_90 : edge3_2_9_fu_94);

assign exitcond1_fu_733_p2 = ((i_i1_reg_271 == indvars_iv_reg_179) ? 1'b1 : 1'b0);

assign exitcond_fu_474_p2 = ((i_reg_122 == 4'd12) ? 1'b1 : 1'b0);

assign exitcond_i_fu_574_p2 = ((j_i_reg_134 == tmp_364_i_reg_931) ? 1'b1 : 1'b0);

assign i_23_fu_585_p2 = ($signed(i_i_reg_146) + $signed(32'd4294967295));

assign i_24_fu_739_p2 = (i_i1_reg_271 + 2'd1);

assign indvarinc_fu_367_p2 = (invdar_reg_111 + 2'd1);

assign indvars_iv_next_fu_804_p2 = ($signed(indvars_iv_reg_179) + $signed(2'd3));

assign j_11_fu_480_p2 = (i_reg_122 + 4'd1);

assign j_12_fu_596_p2 = (j_i_reg_134 + 32'd1);

assign j_1_cast_fu_625_p1 = r_assign_reg_191;

assign j_fu_727_p2 = ($signed(r_assign_reg_191) + $signed(2'd3));

assign k_3_fu_705_p2 = (k_reg_215 + 32'd1);

assign k_assign_3_fu_555_p2 = (n_assign_cast5_reg_871 - x_4_fu_524_p2);

assign n_assign_cast5_fu_470_p1 = i_reg_122;

assign or_cond_fu_518_p2 = (tmp_269_fu_512_p2 & tmp_268_fu_506_p2);

assign p_k_i_fu_560_p3 = ((tmp_363_i_fu_549_p2[0:0] === 1'b1) ? k_assign_3_fu_555_p2 : x_4_fu_524_p2);

assign p_lshr_f_i_cast_fu_535_p4 = {{i_reg_122[3:1]}};

assign s_fu_579_p2 = ($signed(s_i_reg_155) * $signed(i_i_reg_146));

assign tmp_267_fu_486_p1 = i_reg_122;

assign tmp_268_fu_506_p2 = ((cubiecube_0_ep_q0 > 4'd2) ? 1'b1 : 1'b0);

assign tmp_269_fu_512_p2 = ((cubiecube_0_ep_q0 < 4'd6) ? 1'b1 : 1'b0);

assign tmp_270_fu_629_p2 = ((r_assign_reg_191 == 2'd0) ? 1'b1 : 1'b0);

assign tmp_271_fu_657_p2 = a_fu_78 << 32'd1;

assign tmp_272_fu_663_p2 = (tmp_fu_651_p2 - tmp_271_fu_657_p2);

assign tmp_273_fu_669_p1 = b_reg_203[15:0];

assign tmp_274_fu_677_p2 = (tmp_279_fu_673_p1 + tmp_273_fu_669_p1);

assign tmp_275_fu_635_p2 = (j_1_cast_fu_625_p1 + 3'd3);

assign tmp_276_fu_700_p2 = ((tmp_314_cast_fu_696_p1 == tmp_311_cast_reg_965) ? 1'b1 : 1'b0);

assign tmp_277_fu_711_p2 = (r_assign_reg_191 + 2'd1);

assign tmp_278_fu_721_p0 = tmp_278_fu_721_p00;

assign tmp_278_fu_721_p00 = tmp_277_fu_711_p2;

assign tmp_278_fu_721_p2 = ($signed({{1'b0}, {tmp_278_fu_721_p0}}) * $signed(b_reg_203));

assign tmp_279_fu_673_p1 = tmp_272_fu_663_p2[15:0];

assign tmp_280_fu_609_p1 = x_fu_82[1:0];

assign tmp_311_cast_fu_641_p1 = tmp_275_fu_635_p2;

assign tmp_314_cast_fu_696_p1 = edge3_load_phi_fu_689_p3;

assign tmp_363_i_fu_549_p2 = (($signed(tmp_i_cast_fu_545_p1) < $signed(x_4_fu_524_p2)) ? 1'b1 : 1'b0);

assign tmp_364_i_fu_568_p2 = (p_k_i_fu_560_p3 + 32'd1);

assign tmp_fu_651_p2 = a_fu_78 << 32'd3;

assign tmp_i_cast_fu_545_p1 = p_lshr_f_i_cast_fu_535_p4;

assign tmp_i_fu_530_p2 = (($signed(n_assign_cast5_reg_871) < $signed(x_4_fu_524_p2)) ? 1'b1 : 1'b0);

assign tmp_s_fu_415_p2 = ((invdar_reg_111 == 2'd2) ? 1'b1 : 1'b0);

assign x_4_fu_524_p2 = (x_fu_82 + 32'd1);

always @ (posedge ap_clk) begin
    n_assign_cast5_reg_871[31:4] <= 28'b0000000000000000000000000000;
    tmp_311_cast_reg_965[4:3] <= 2'b00;
end

endmodule //getUBtoDF
