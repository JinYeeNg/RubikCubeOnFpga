// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module getURtoUL (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        cubiecube_0_ep_address0,
        cubiecube_0_ep_ce0,
        cubiecube_0_ep_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 47'd1;
parameter    ap_ST_fsm_state2 = 47'd2;
parameter    ap_ST_fsm_state3 = 47'd4;
parameter    ap_ST_fsm_state4 = 47'd8;
parameter    ap_ST_fsm_state5 = 47'd16;
parameter    ap_ST_fsm_state6 = 47'd32;
parameter    ap_ST_fsm_state7 = 47'd64;
parameter    ap_ST_fsm_state8 = 47'd128;
parameter    ap_ST_fsm_state9 = 47'd256;
parameter    ap_ST_fsm_state10 = 47'd512;
parameter    ap_ST_fsm_state11 = 47'd1024;
parameter    ap_ST_fsm_state12 = 47'd2048;
parameter    ap_ST_fsm_state13 = 47'd4096;
parameter    ap_ST_fsm_state14 = 47'd8192;
parameter    ap_ST_fsm_state15 = 47'd16384;
parameter    ap_ST_fsm_state16 = 47'd32768;
parameter    ap_ST_fsm_state17 = 47'd65536;
parameter    ap_ST_fsm_state18 = 47'd131072;
parameter    ap_ST_fsm_state19 = 47'd262144;
parameter    ap_ST_fsm_state20 = 47'd524288;
parameter    ap_ST_fsm_state21 = 47'd1048576;
parameter    ap_ST_fsm_state22 = 47'd2097152;
parameter    ap_ST_fsm_state23 = 47'd4194304;
parameter    ap_ST_fsm_state24 = 47'd8388608;
parameter    ap_ST_fsm_state25 = 47'd16777216;
parameter    ap_ST_fsm_state26 = 47'd33554432;
parameter    ap_ST_fsm_state27 = 47'd67108864;
parameter    ap_ST_fsm_state28 = 47'd134217728;
parameter    ap_ST_fsm_state29 = 47'd268435456;
parameter    ap_ST_fsm_state30 = 47'd536870912;
parameter    ap_ST_fsm_state31 = 47'd1073741824;
parameter    ap_ST_fsm_state32 = 47'd2147483648;
parameter    ap_ST_fsm_state33 = 47'd4294967296;
parameter    ap_ST_fsm_state34 = 47'd8589934592;
parameter    ap_ST_fsm_state35 = 47'd17179869184;
parameter    ap_ST_fsm_state36 = 47'd34359738368;
parameter    ap_ST_fsm_state37 = 47'd68719476736;
parameter    ap_ST_fsm_state38 = 47'd137438953472;
parameter    ap_ST_fsm_state39 = 47'd274877906944;
parameter    ap_ST_fsm_state40 = 47'd549755813888;
parameter    ap_ST_fsm_state41 = 47'd1099511627776;
parameter    ap_ST_fsm_state42 = 47'd2199023255552;
parameter    ap_ST_fsm_state43 = 47'd4398046511104;
parameter    ap_ST_fsm_state44 = 47'd8796093022208;
parameter    ap_ST_fsm_state45 = 47'd17592186044416;
parameter    ap_ST_fsm_state46 = 47'd35184372088832;
parameter    ap_ST_fsm_state47 = 47'd70368744177664;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] cubiecube_0_ep_address0;
output   cubiecube_0_ep_ce0;
input  [3:0] cubiecube_0_ep_q0;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg cubiecube_0_ep_ce0;
reg[15:0] ap_return;

(* fsm_encoding = "none" *) reg   [46:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [1:0] indvarinc_fu_363_p2;
wire    ap_CS_fsm_state2;
wire   [31:0] n_assign_cast6_fu_466_p1;
reg   [31:0] n_assign_cast6_reg_845;
wire    ap_CS_fsm_state3;
wire   [3:0] j_4_fu_476_p2;
reg   [3:0] j_4_reg_855;
wire   [0:0] exitcond_fu_470_p2;
reg   [3:0] edge3_0_reg_886;
wire    ap_CS_fsm_state4;
wire   [0:0] tmp_243_fu_502_p2;
reg   [0:0] tmp_243_reg_893;
wire   [31:0] x_1_fu_508_p2;
reg   [31:0] x_1_reg_897;
wire   [31:0] tmp_364_i_fu_552_p2;
reg   [31:0] tmp_364_i_reg_905;
wire   [0:0] tmp_i_fu_514_p2;
wire   [31:0] s_fu_563_p2;
reg   [31:0] s_reg_913;
wire    ap_CS_fsm_state5;
wire   [0:0] exitcond_i_fu_558_p2;
wire   [31:0] i_19_fu_569_p2;
reg   [31:0] i_19_reg_918;
wire   [31:0] j_5_fu_580_p2;
reg   [31:0] j_5_reg_923;
wire    ap_CS_fsm_state6;
wire   [31:0] grp_fu_575_p2;
wire    ap_CS_fsm_state41;
wire   [4:0] j_1_cast5_fu_609_p1;
reg   [4:0] j_1_cast5_reg_936;
wire    ap_CS_fsm_state43;
wire   [0:0] cond_fu_619_p2;
reg   [0:0] cond_reg_944;
wire   [0:0] tmp_244_fu_613_p2;
wire    ap_CS_fsm_state44;
wire   [31:0] k_1_fu_679_p2;
reg   [31:0] k_1_reg_964;
wire   [31:0] tmp_250_fu_695_p2;
reg   [31:0] tmp_250_reg_969;
wire   [0:0] tmp_248_fu_674_p2;
wire   [1:0] j_fu_701_p2;
reg   [1:0] j_reg_974;
wire   [1:0] i_20_fu_713_p2;
reg   [1:0] i_20_reg_982;
wire    ap_CS_fsm_state45;
wire   [3:0] arr_load_phi_i_fu_725_p3;
wire   [0:0] exitcond1_fu_707_p2;
wire   [31:0] b_1_fu_773_p2;
wire    ap_CS_fsm_state47;
wire   [1:0] indvars_iv_next_fu_778_p2;
reg   [1:0] invdar_reg_107;
wire   [0:0] tmp_s_fu_411_p2;
reg   [3:0] i_reg_118;
wire    ap_CS_fsm_state42;
reg   [31:0] j_i_reg_130;
reg  signed [31:0] i_i_reg_142;
reg  signed [31:0] s_i_reg_151;
reg   [31:0] p_0_i_reg_163;
reg   [1:0] indvars_iv_reg_175;
reg   [1:0] r_assign_reg_187;
reg  signed [31:0] b_reg_199;
reg   [31:0] k_reg_211;
reg   [3:0] arr2_i_reg_223;
wire    ap_CS_fsm_state46;
reg   [0:0] write_flag_i_reg_233;
reg   [3:0] arr1_i_reg_245;
reg   [3:0] arr_i_reg_255;
wire   [1:0] ap_phi_mux_i_i1_phi_fu_271_p4;
reg   [1:0] i_i1_reg_267;
reg   [3:0] arr2_i_be_reg_278;
reg   [0:0] write_flag_i_be_reg_293;
reg   [3:0] arr1_i_be_reg_310;
reg   [3:0] arr_i_be_reg_325;
wire   [63:0] tmp_242_fu_482_p1;
reg   [3:0] edge3_fu_50;
wire   [3:0] edge3_0_1_fu_369_p6;
reg   [3:0] edge3_1_fu_54;
wire   [3:0] edge3_1_1_fu_383_p6;
reg   [3:0] edge3_2_fu_58;
wire   [3:0] edge3_2_1_fu_397_p6;
reg   [3:0] edge3_2_1_51_fu_62;
wire   [1:0] tmp_265_fu_593_p1;
reg   [3:0] edge3_2_2_fu_66;
reg   [3:0] edge3_2_3_fu_70;
reg   [31:0] a_fu_74;
wire   [31:0] a_1_fu_586_p2;
reg   [31:0] x_fu_78;
reg   [3:0] temp_fu_82;
wire   [3:0] edge3_0_1_58_fu_750_p3;
reg   [3:0] edge3_1_1_53_fu_86;
wire   [3:0] edge3_1_57_fu_743_p3;
reg   [3:0] edge3_2_4_fu_90;
wire   [3:0] edge3_2_56_fu_736_p3;
wire   [2:0] p_lshr_f_i_cast_fu_519_p4;
wire   [31:0] tmp_i_cast_fu_529_p1;
wire   [0:0] tmp_363_i_fu_533_p2;
wire   [31:0] k_assign_1_fu_539_p2;
wire   [31:0] p_k_i_fu_544_p3;
wire   [31:0] tmp_fu_625_p2;
wire   [31:0] tmp_262_fu_631_p2;
wire   [31:0] tmp_245_fu_637_p2;
wire   [15:0] tmp_264_fu_647_p1;
wire   [15:0] tmp_263_fu_643_p1;
wire   [3:0] edge3_load_phi_fu_663_p3;
wire   [4:0] tmp_284_cast_fu_670_p1;
wire   [1:0] tmp_249_fu_685_p2;
wire   [1:0] tmp_250_fu_695_p0;
wire   [0:0] cond_i_fu_719_p2;
reg    grp_fu_575_ap_start;
wire    grp_fu_575_ap_done;
wire   [15:0] tmp_247_fu_651_p2;
reg   [15:0] ap_return_preg;
reg   [46:0] ap_NS_fsm;
wire   [31:0] tmp_250_fu_695_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 47'd1;
#0 ap_return_preg = 16'd0;
end

solution_mux_42_4jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
solution_mux_42_4jbC_U41(
    .din0(4'd0),
    .din1(edge3_fu_50),
    .din2(edge3_fu_50),
    .din3(edge3_fu_50),
    .din4(invdar_reg_107),
    .dout(edge3_0_1_fu_369_p6)
);

solution_mux_42_4jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
solution_mux_42_4jbC_U42(
    .din0(edge3_1_fu_54),
    .din1(4'd0),
    .din2(edge3_1_fu_54),
    .din3(edge3_1_fu_54),
    .din4(invdar_reg_107),
    .dout(edge3_1_1_fu_383_p6)
);

solution_mux_42_4jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 4 ))
solution_mux_42_4jbC_U43(
    .din0(edge3_2_fu_58),
    .din1(edge3_2_fu_58),
    .din2(4'd0),
    .din3(4'd0),
    .din4(invdar_reg_107),
    .dout(edge3_2_1_fu_397_p6)
);

solution_sdiv_32nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
solution_sdiv_32nkbM_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_575_ap_start),
    .done(grp_fu_575_ap_done),
    .din0(s_reg_913),
    .din1(j_i_reg_130),
    .ce(1'b1),
    .dout(grp_fu_575_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 16'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state43) & (tmp_244_fu_613_p2 == 1'd1))) begin
            ap_return_preg <= tmp_247_fu_651_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((~(tmp_265_fu_593_p1 == 2'd1) & ~(tmp_265_fu_593_p1 == 2'd0) & (1'b1 == ap_CS_fsm_state42) & (tmp_243_reg_893 == 1'd1)) | ((tmp_265_fu_593_p1 == 2'd1) & (1'b1 == ap_CS_fsm_state42) & (tmp_243_reg_893 == 1'd1)) | ((1'b1 == ap_CS_fsm_state42) & (tmp_265_fu_593_p1 == 2'd0) & (tmp_243_reg_893 == 1'd1)))) begin
        a_fu_74 <= a_1_fu_586_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_411_p2 == 1'd1))) begin
        a_fu_74 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_707_p2 == 1'd0) & (ap_phi_mux_i_i1_phi_fu_271_p4 == 2'd1) & (1'b1 == ap_CS_fsm_state45))) begin
        arr1_i_be_reg_310 <= arr_load_phi_i_fu_725_p3;
    end else if (((~(ap_phi_mux_i_i1_phi_fu_271_p4 == 2'd1) & ~(ap_phi_mux_i_i1_phi_fu_271_p4 == 2'd0) & (exitcond1_fu_707_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45)) | ((exitcond1_fu_707_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45) & (ap_phi_mux_i_i1_phi_fu_271_p4 == 2'd0)))) begin
        arr1_i_be_reg_310 <= arr1_i_reg_245;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        arr1_i_reg_245 <= arr1_i_be_reg_310;
    end else if (((tmp_248_fu_674_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
        arr1_i_reg_245 <= edge3_1_1_53_fu_86;
    end
end

always @ (posedge ap_clk) begin
    if ((((exitcond1_fu_707_p2 == 1'd0) & (ap_phi_mux_i_i1_phi_fu_271_p4 == 2'd1) & (1'b1 == ap_CS_fsm_state45)) | ((exitcond1_fu_707_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45) & (ap_phi_mux_i_i1_phi_fu_271_p4 == 2'd0)))) begin
        arr2_i_be_reg_278 <= arr2_i_reg_223;
    end else if ((~(ap_phi_mux_i_i1_phi_fu_271_p4 == 2'd1) & ~(ap_phi_mux_i_i1_phi_fu_271_p4 == 2'd0) & (exitcond1_fu_707_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
        arr2_i_be_reg_278 <= arr_load_phi_i_fu_725_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        arr2_i_reg_223 <= arr2_i_be_reg_278;
    end else if (((tmp_248_fu_674_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
        arr2_i_reg_223 <= edge3_2_4_fu_90;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_707_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45) & (ap_phi_mux_i_i1_phi_fu_271_p4 == 2'd0))) begin
        arr_i_be_reg_325 <= arr_load_phi_i_fu_725_p3;
    end else if ((((exitcond1_fu_707_p2 == 1'd0) & (ap_phi_mux_i_i1_phi_fu_271_p4 == 2'd1) & (1'b1 == ap_CS_fsm_state45)) | (~(ap_phi_mux_i_i1_phi_fu_271_p4 == 2'd1) & ~(ap_phi_mux_i_i1_phi_fu_271_p4 == 2'd0) & (exitcond1_fu_707_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        arr_i_be_reg_325 <= arr_i_reg_255;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_470_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        b_reg_199 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        b_reg_199 <= b_1_fu_773_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (exitcond1_fu_707_p2 == 1'd1))) begin
        edge3_1_1_53_fu_86 <= edge3_1_57_fu_743_p3;
    end else if (((exitcond_fu_470_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        edge3_1_1_53_fu_86 <= edge3_2_2_fu_66;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state42) & (tmp_265_fu_593_p1 == 2'd0) & (tmp_243_reg_893 == 1'd1))) begin
        edge3_2_1_51_fu_62 <= edge3_0_reg_886;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_411_p2 == 1'd1))) begin
        edge3_2_1_51_fu_62 <= edge3_0_1_fu_369_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_265_fu_593_p1 == 2'd1) & (1'b1 == ap_CS_fsm_state42) & (tmp_243_reg_893 == 1'd1))) begin
        edge3_2_2_fu_66 <= edge3_0_reg_886;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_411_p2 == 1'd1))) begin
        edge3_2_2_fu_66 <= edge3_1_1_fu_383_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((~(tmp_265_fu_593_p1 == 2'd1) & ~(tmp_265_fu_593_p1 == 2'd0) & (1'b1 == ap_CS_fsm_state42) & (tmp_243_reg_893 == 1'd1))) begin
        edge3_2_3_fu_70 <= edge3_0_reg_886;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_411_p2 == 1'd1))) begin
        edge3_2_3_fu_70 <= edge3_2_1_fu_397_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (exitcond1_fu_707_p2 == 1'd1))) begin
        edge3_2_4_fu_90 <= edge3_2_56_fu_736_p3;
    end else if (((exitcond_fu_470_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        edge3_2_4_fu_90 <= edge3_2_3_fu_70;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        i_i1_reg_267 <= i_20_reg_982;
    end else if (((tmp_248_fu_674_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
        i_i1_reg_267 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        i_i_reg_142 <= i_19_reg_918;
    end else if (((tmp_i_fu_514_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_243_fu_502_p2 == 1'd1))) begin
        i_i_reg_142 <= n_assign_cast6_reg_845;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        i_reg_118 <= j_4_reg_855;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_411_p2 == 1'd1))) begin
        i_reg_118 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_470_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        indvars_iv_reg_175 <= 2'd2;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        indvars_iv_reg_175 <= indvars_iv_next_fu_778_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_411_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        invdar_reg_107 <= indvarinc_fu_363_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        invdar_reg_107 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        j_i_reg_130 <= j_5_reg_923;
    end else if (((tmp_i_fu_514_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_243_fu_502_p2 == 1'd1))) begin
        j_i_reg_130 <= 32'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (exitcond1_fu_707_p2 == 1'd1))) begin
        k_reg_211 <= k_1_reg_964;
    end else if (((tmp_244_fu_613_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
        k_reg_211 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (exitcond_i_fu_558_p2 == 1'd1))) begin
        p_0_i_reg_163 <= s_i_reg_151;
    end else if (((1'b1 == ap_CS_fsm_state4) & (tmp_i_fu_514_p2 == 1'd1) & (tmp_243_fu_502_p2 == 1'd1))) begin
        p_0_i_reg_163 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_470_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        r_assign_reg_187 <= 2'd2;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        r_assign_reg_187 <= j_reg_974;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        s_i_reg_151 <= grp_fu_575_p2;
    end else if (((tmp_i_fu_514_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_243_fu_502_p2 == 1'd1))) begin
        s_i_reg_151 <= 32'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (exitcond1_fu_707_p2 == 1'd1))) begin
        temp_fu_82 <= edge3_0_1_58_fu_750_p3;
    end else if (((exitcond_fu_470_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        temp_fu_82 <= edge3_2_1_51_fu_62;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_707_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45) & (ap_phi_mux_i_i1_phi_fu_271_p4 == 2'd0))) begin
        write_flag_i_be_reg_293 <= 1'd1;
    end else if ((((exitcond1_fu_707_p2 == 1'd0) & (ap_phi_mux_i_i1_phi_fu_271_p4 == 2'd1) & (1'b1 == ap_CS_fsm_state45)) | (~(ap_phi_mux_i_i1_phi_fu_271_p4 == 2'd1) & ~(ap_phi_mux_i_i1_phi_fu_271_p4 == 2'd0) & (exitcond1_fu_707_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        write_flag_i_be_reg_293 <= write_flag_i_reg_233;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        write_flag_i_reg_233 <= write_flag_i_be_reg_293;
    end else if (((tmp_248_fu_674_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
        write_flag_i_reg_233 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((~(tmp_265_fu_593_p1 == 2'd1) & ~(tmp_265_fu_593_p1 == 2'd0) & (1'b1 == ap_CS_fsm_state42) & (tmp_243_reg_893 == 1'd1)) | ((tmp_265_fu_593_p1 == 2'd1) & (1'b1 == ap_CS_fsm_state42) & (tmp_243_reg_893 == 1'd1)) | ((1'b1 == ap_CS_fsm_state42) & (tmp_265_fu_593_p1 == 2'd0) & (tmp_243_reg_893 == 1'd1)))) begin
        x_fu_78 <= x_1_reg_897;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_411_p2 == 1'd1))) begin
        x_fu_78 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        arr_i_reg_255 <= arr_i_be_reg_325;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_244_fu_613_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
        cond_reg_944 <= cond_fu_619_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        edge3_0_reg_886 <= cubiecube_0_ep_q0;
        tmp_243_reg_893 <= tmp_243_fu_502_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        edge3_1_fu_54 <= edge3_1_1_fu_383_p6;
        edge3_2_fu_58 <= edge3_2_1_fu_397_p6;
        edge3_fu_50 <= edge3_0_1_fu_369_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_558_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        i_19_reg_918 <= i_19_fu_569_p2;
        s_reg_913 <= s_fu_563_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        i_20_reg_982 <= i_20_fu_713_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        j_1_cast5_reg_936[1 : 0] <= j_1_cast5_fu_609_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_4_reg_855 <= j_4_fu_476_p2;
        n_assign_cast6_reg_845[3 : 0] <= n_assign_cast6_fu_466_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_5_reg_923 <= j_5_fu_580_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) & (tmp_248_fu_674_p2 == 1'd1))) begin
        j_reg_974 <= j_fu_701_p2;
        tmp_250_reg_969 <= tmp_250_fu_695_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        k_1_reg_964 <= k_1_fu_679_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_fu_514_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_243_fu_502_p2 == 1'd1))) begin
        tmp_364_i_reg_905 <= tmp_364_i_fu_552_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_243_fu_502_p2 == 1'd1))) begin
        x_1_reg_897 <= x_1_fu_508_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state43) & (tmp_244_fu_613_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) & (tmp_244_fu_613_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) & (tmp_244_fu_613_p2 == 1'd1))) begin
        ap_return = tmp_247_fu_651_p2;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cubiecube_0_ep_ce0 = 1'b1;
    end else begin
        cubiecube_0_ep_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_575_ap_start = 1'b1;
    end else begin
        grp_fu_575_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_s_fu_411_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond_fu_470_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((tmp_i_fu_514_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_243_fu_502_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (exitcond_i_fu_558_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state43 : begin
            if (((1'b1 == ap_CS_fsm_state43) & (tmp_244_fu_613_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((tmp_248_fu_674_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state45 : begin
            if (((1'b1 == ap_CS_fsm_state45) & (exitcond1_fu_707_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_1_fu_586_p2 = (p_0_i_reg_163 + a_fu_74);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_phi_mux_i_i1_phi_fu_271_p4 = i_i1_reg_267;

assign arr_load_phi_i_fu_725_p3 = ((cond_i_fu_719_p2[0:0] === 1'b1) ? arr1_i_reg_245 : arr2_i_reg_223);

assign b_1_fu_773_p2 = (k_reg_211 + tmp_250_reg_969);

assign cond_fu_619_p2 = ((r_assign_reg_187 == 2'd1) ? 1'b1 : 1'b0);

assign cond_i_fu_719_p2 = ((i_i1_reg_267 == 2'd0) ? 1'b1 : 1'b0);

assign cubiecube_0_ep_address0 = tmp_242_fu_482_p1;

assign edge3_0_1_58_fu_750_p3 = ((write_flag_i_reg_233[0:0] === 1'b1) ? arr_i_reg_255 : temp_fu_82);

assign edge3_1_57_fu_743_p3 = ((cond_reg_944[0:0] === 1'b1) ? temp_fu_82 : arr1_i_reg_245);

assign edge3_2_56_fu_736_p3 = ((cond_reg_944[0:0] === 1'b1) ? arr2_i_reg_223 : temp_fu_82);

assign edge3_load_phi_fu_663_p3 = ((cond_reg_944[0:0] === 1'b1) ? edge3_1_1_53_fu_86 : edge3_2_4_fu_90);

assign exitcond1_fu_707_p2 = ((i_i1_reg_267 == indvars_iv_reg_175) ? 1'b1 : 1'b0);

assign exitcond_fu_470_p2 = ((i_reg_118 == 4'd12) ? 1'b1 : 1'b0);

assign exitcond_i_fu_558_p2 = ((j_i_reg_130 == tmp_364_i_reg_905) ? 1'b1 : 1'b0);

assign i_19_fu_569_p2 = ($signed(i_i_reg_142) + $signed(32'd4294967295));

assign i_20_fu_713_p2 = (i_i1_reg_267 + 2'd1);

assign indvarinc_fu_363_p2 = (invdar_reg_107 + 2'd1);

assign indvars_iv_next_fu_778_p2 = ($signed(indvars_iv_reg_175) + $signed(2'd3));

assign j_1_cast5_fu_609_p1 = r_assign_reg_187;

assign j_4_fu_476_p2 = (i_reg_118 + 4'd1);

assign j_5_fu_580_p2 = (j_i_reg_130 + 32'd1);

assign j_fu_701_p2 = ($signed(r_assign_reg_187) + $signed(2'd3));

assign k_1_fu_679_p2 = (k_reg_211 + 32'd1);

assign k_assign_1_fu_539_p2 = (n_assign_cast6_reg_845 - x_1_fu_508_p2);

assign n_assign_cast6_fu_466_p1 = i_reg_118;

assign p_k_i_fu_544_p3 = ((tmp_363_i_fu_533_p2[0:0] === 1'b1) ? k_assign_1_fu_539_p2 : x_1_fu_508_p2);

assign p_lshr_f_i_cast_fu_519_p4 = {{i_reg_118[3:1]}};

assign s_fu_563_p2 = ($signed(s_i_reg_151) * $signed(i_i_reg_142));

assign tmp_242_fu_482_p1 = i_reg_118;

assign tmp_243_fu_502_p2 = ((cubiecube_0_ep_q0 < 4'd3) ? 1'b1 : 1'b0);

assign tmp_244_fu_613_p2 = ((r_assign_reg_187 == 2'd0) ? 1'b1 : 1'b0);

assign tmp_245_fu_637_p2 = (tmp_fu_625_p2 - tmp_262_fu_631_p2);

assign tmp_247_fu_651_p2 = (tmp_264_fu_647_p1 + tmp_263_fu_643_p1);

assign tmp_248_fu_674_p2 = ((tmp_284_cast_fu_670_p1 == j_1_cast5_reg_936) ? 1'b1 : 1'b0);

assign tmp_249_fu_685_p2 = (r_assign_reg_187 + 2'd1);

assign tmp_250_fu_695_p0 = tmp_250_fu_695_p00;

assign tmp_250_fu_695_p00 = tmp_249_fu_685_p2;

assign tmp_250_fu_695_p2 = ($signed({{1'b0}, {tmp_250_fu_695_p0}}) * $signed(b_reg_199));

assign tmp_262_fu_631_p2 = a_fu_74 << 32'd1;

assign tmp_263_fu_643_p1 = b_reg_199[15:0];

assign tmp_264_fu_647_p1 = tmp_245_fu_637_p2[15:0];

assign tmp_265_fu_593_p1 = x_fu_78[1:0];

assign tmp_284_cast_fu_670_p1 = edge3_load_phi_fu_663_p3;

assign tmp_363_i_fu_533_p2 = (($signed(tmp_i_cast_fu_529_p1) < $signed(x_1_fu_508_p2)) ? 1'b1 : 1'b0);

assign tmp_364_i_fu_552_p2 = (p_k_i_fu_544_p3 + 32'd1);

assign tmp_fu_625_p2 = a_fu_74 << 32'd3;

assign tmp_i_cast_fu_529_p1 = p_lshr_f_i_cast_fu_519_p4;

assign tmp_i_fu_514_p2 = (($signed(n_assign_cast6_reg_845) < $signed(x_1_fu_508_p2)) ? 1'b1 : 1'b0);

assign tmp_s_fu_411_p2 = ((invdar_reg_107 == 2'd2) ? 1'b1 : 1'b0);

assign x_1_fu_508_p2 = (x_fu_78 + 32'd1);

always @ (posedge ap_clk) begin
    n_assign_cast6_reg_845[31:4] <= 28'b0000000000000000000000000000;
    j_1_cast5_reg_936[4:2] <= 3'b000;
end

endmodule //getURtoUL
