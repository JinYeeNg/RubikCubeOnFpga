

================================================================
== Vivado HLS Report for 'toCubieCube'
================================================================
* Date:           Thu Jul  4 02:06:59 2019

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        kociembaHls
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.167|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+------+-----+------+---------+
    |   Latency  |  Interval  | Pipeline|
    | min |  max | min |  max |   Type  |
    +-----+------+-----+------+---------+
    |  228|  1084|  228|  1084|   none  |
    +-----+------+-----+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+--------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  |  Trip  |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  |  Count | Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+--------+----------+
        |- Loop 1     |    8|    8|         1|          -|          -|       8|    no    |
        |- Loop 2     |   12|   12|         1|          -|          -|      12|    no    |
        |- Loop 3     |   96|  352|  12 ~ 44 |          -|          -|       8|    no    |
        | + Loop 3.1  |    3|   11|         3|          -|          -|  1 ~ 3 |    no    |
        | + Loop 3.2  |    3|   26|         3|          -|          -|  1 ~ 8 |    no    |
        |- Loop 4     |  108|  708|  9 ~ 59  |          -|          -|      12|    no    |
        | + Loop 4.1  |    4|   51|         4|          -|          -| 1 ~ 12 |    no    |
        +-------------+-----+-----+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 22
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	2  / (!exitcond1)
	3  / (exitcond1)
3 --> 
	3  / (!exitcond9)
	4  / (exitcond9)
4 --> 
	5  / (!exitcond8)
	14  / (exitcond8)
5 --> 
	6  / (!tmp_21)
	7  / (tmp_21)
6 --> 
	7  / true
7 --> 
	5  / (!tmp_21 & !tmp_49)
	8  / (tmp_21) | (tmp_49)
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / (!tmp_58)
	13  / (tmp_58)
11 --> 
	12  / true
12 --> 
	13  / (tmp_44 & tmp_47)
	10  / (!tmp_44) | (!tmp_47)
13 --> 
	4  / true
14 --> 
	15  / (!exitcond)
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / (tmp_28)
	21  / (!tmp_28)
18 --> 
	19  / true
19 --> 
	20  / (!tmp_37) | (!tmp_40)
	22  / (tmp_37 & tmp_40)
20 --> 
	17  / (!or_cond)
	21  / (or_cond)
21 --> 
	14  / true
22 --> 
	21  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 23 [1/1] (1.76ns)   --->   "br label %1" [facecube.cpp:96]   --->   Operation 23 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 2.32>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%i = phi i4 [ 0, %0 ], [ %i_8, %2 ]"   --->   Operation 24 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (1.30ns)   --->   "%exitcond1 = icmp eq i4 %i, -8" [facecube.cpp:96]   --->   Operation 25 'icmp' 'exitcond1' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 26 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (1.73ns)   --->   "%i_8 = add i4 %i, 1" [facecube.cpp:96]   --->   Operation 27 'add' 'i_8' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "br i1 %exitcond1, label %.preheader19.preheader, label %2" [facecube.cpp:96]   --->   Operation 28 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%tmp = zext i4 %i to i64" [facecube.cpp:97]   --->   Operation 29 'zext' 'tmp' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%ccRet_cp_0_addr = getelementptr [8 x i3]* @ccRet_cp_0, i64 0, i64 %tmp" [facecube.cpp:97]   --->   Operation 30 'getelementptr' 'ccRet_cp_0_addr' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (2.32ns)   --->   "store i3 0, i3* %ccRet_cp_0_addr, align 1" [facecube.cpp:97]   --->   Operation 31 'store' <Predicate = (!exitcond1)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 12> <RAM>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "br label %1" [facecube.cpp:96]   --->   Operation 32 'br' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (1.76ns)   --->   "br label %.preheader19" [facecube.cpp:98]   --->   Operation 33 'br' <Predicate = (exitcond1)> <Delay = 1.76>

State 3 <SV = 2> <Delay = 2.32>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%i_1 = phi i4 [ %i_9, %3 ], [ 0, %.preheader19.preheader ]"   --->   Operation 34 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (1.30ns)   --->   "%exitcond9 = icmp eq i4 %i_1, -4" [facecube.cpp:98]   --->   Operation 35 'icmp' 'exitcond9' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 12, i64 12, i64 12)"   --->   Operation 36 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (1.73ns)   --->   "%i_9 = add i4 %i_1, 1" [facecube.cpp:98]   --->   Operation 37 'add' 'i_9' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "br i1 %exitcond9, label %.preheader18.preheader, label %3" [facecube.cpp:98]   --->   Operation 38 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%tmp_s = zext i4 %i_1 to i64" [facecube.cpp:99]   --->   Operation 39 'zext' 'tmp_s' <Predicate = (!exitcond9)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%ccRet_ep_0_addr = getelementptr [12 x i4]* @ccRet_ep_0, i64 0, i64 %tmp_s" [facecube.cpp:99]   --->   Operation 40 'getelementptr' 'ccRet_ep_0_addr' <Predicate = (!exitcond9)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (2.32ns)   --->   "store i4 0, i4* %ccRet_ep_0_addr, align 1" [facecube.cpp:99]   --->   Operation 41 'store' <Predicate = (!exitcond9)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 12> <RAM>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "br label %.preheader19" [facecube.cpp:98]   --->   Operation 42 'br' <Predicate = (!exitcond9)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (1.76ns)   --->   "br label %.preheader18" [facecube.cpp:101]   --->   Operation 43 'br' <Predicate = (exitcond9)> <Delay = 1.76>

State 4 <SV = 3> <Delay = 1.82>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "%i_2 = phi i4 [ %i_10, %.loopexit1 ], [ 0, %.preheader18.preheader ]"   --->   Operation 44 'phi' 'i_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (1.30ns)   --->   "%exitcond8 = icmp eq i4 %i_2, -8" [facecube.cpp:101]   --->   Operation 45 'icmp' 'exitcond8' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 46 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (1.73ns)   --->   "%i_10 = add i4 %i_2, 1" [facecube.cpp:101]   --->   Operation 47 'add' 'i_10' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "br i1 %exitcond8, label %.preheader13.preheader, label %.preheader15.preheader" [facecube.cpp:101]   --->   Operation 48 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_20 = zext i4 %i_2 to i64" [facecube.cpp:104]   --->   Operation 49 'zext' 'tmp_20' <Predicate = (!exitcond8)> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_20_cast = zext i4 %i_2 to i6" [facecube.cpp:101]   --->   Operation 50 'zext' 'tmp_20_cast' <Predicate = (!exitcond8)> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_30 = call i6 @_ssdm_op_BitConcatenate.i6.i4.i2(i4 %i_2, i2 0)" [facecube.cpp:101]   --->   Operation 51 'bitconcatenate' 'tmp_30' <Predicate = (!exitcond8)> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (1.82ns)   --->   "%tmp_31 = sub i6 %tmp_30, %tmp_20_cast" [facecube.cpp:104]   --->   Operation 52 'sub' 'tmp_31' <Predicate = (!exitcond8)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 53 [1/1] (1.76ns)   --->   "br label %.preheader15" [facecube.cpp:103]   --->   Operation 53 'br' <Predicate = (!exitcond8)> <Delay = 1.76>
ST_4 : Operation 54 [1/1] (1.76ns)   --->   "br label %.preheader13" [facecube.cpp:119]   --->   Operation 54 'br' <Predicate = (exitcond8)> <Delay = 1.76>

State 5 <SV = 4> <Delay = 5.07>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%ori = phi i2 [ 0, %.preheader15.preheader ], [ %ori_1, %4 ]"   --->   Operation 55 'phi' 'ori' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.95ns)   --->   "%tmp_21 = icmp eq i2 %ori, -1" [facecube.cpp:103]   --->   Operation 56 'icmp' 'tmp_21' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 3, i64 2)"   --->   Operation 57 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 58 [1/1] (1.56ns)   --->   "%ori_1 = add i2 %ori, 1" [facecube.cpp:103]   --->   Operation 58 'add' 'ori_1' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "br i1 %tmp_21, label %.loopexit2, label %4" [facecube.cpp:103]   --->   Operation 59 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%tmp_26_cast = zext i2 %ori to i6" [facecube.cpp:104]   --->   Operation 60 'zext' 'tmp_26_cast' <Predicate = (!tmp_21)> <Delay = 0.00>
ST_5 : Operation 61 [1/1] (1.82ns)   --->   "%tmp_34 = add i6 %tmp_31, %tmp_26_cast" [facecube.cpp:104]   --->   Operation 61 'add' 'tmp_34' <Predicate = (!tmp_21)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_50_cast = sext i6 %tmp_34 to i64" [facecube.cpp:104]   --->   Operation 62 'sext' 'tmp_50_cast' <Predicate = (!tmp_21)> <Delay = 0.00>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%cornerFacelet_addr = getelementptr [24 x i6]* @cornerFacelet, i64 0, i64 %tmp_50_cast" [facecube.cpp:104]   --->   Operation 63 'getelementptr' 'cornerFacelet_addr' <Predicate = (!tmp_21)> <Delay = 0.00>
ST_5 : Operation 64 [2/2] (3.25ns)   --->   "%cornerFacelet_load = load i6* %cornerFacelet_addr, align 1" [facecube.cpp:104]   --->   Operation 64 'load' 'cornerFacelet_load' <Predicate = (!tmp_21)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 12> <ROM>

State 6 <SV = 5> <Delay = 5.57>
ST_6 : Operation 65 [1/2] (3.25ns)   --->   "%cornerFacelet_load = load i6* %cornerFacelet_addr, align 1" [facecube.cpp:104]   --->   Operation 65 'load' 'cornerFacelet_load' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 12> <ROM>
ST_6 : Operation 66 [1/1] (0.00ns)   --->   "%tmp_27 = zext i6 %cornerFacelet_load to i64" [facecube.cpp:104]   --->   Operation 66 'zext' 'tmp_27' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 67 [1/1] (0.00ns)   --->   "%facecube_0_f_addr_2 = getelementptr [54 x i3]* %facecube_0_f, i64 0, i64 %tmp_27" [facecube.cpp:104]   --->   Operation 67 'getelementptr' 'facecube_0_f_addr_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 68 [2/2] (2.32ns)   --->   "%facecube_0_f_load_2 = load i3* %facecube_0_f_addr_2, align 1" [facecube.cpp:104]   --->   Operation 68 'load' 'facecube_0_f_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 12> <RAM>

State 7 <SV = 6> <Delay = 7.85>
ST_7 : Operation 69 [1/2] (2.32ns)   --->   "%facecube_0_f_load_2 = load i3* %facecube_0_f_addr_2, align 1" [facecube.cpp:104]   --->   Operation 69 'load' 'facecube_0_f_load_2' <Predicate = (!tmp_21)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 12> <RAM>
ST_7 : Operation 70 [1/1] (1.13ns)   --->   "%tmp_39 = icmp eq i3 %facecube_0_f_load_2, 3" [facecube.cpp:104]   --->   Operation 70 'icmp' 'tmp_39' <Predicate = (!tmp_21)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 71 [1/1] (1.13ns)   --->   "%tmp_48 = icmp eq i3 %facecube_0_f_load_2, 0" [facecube.cpp:104]   --->   Operation 71 'icmp' 'tmp_48' <Predicate = (!tmp_21)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 72 [1/1] (0.97ns)   --->   "%tmp_49 = or i1 %tmp_48, %tmp_39" [facecube.cpp:104]   --->   Operation 72 'or' 'tmp_49' <Predicate = (!tmp_21)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 73 [1/1] (0.00ns)   --->   "br i1 %tmp_49, label %.loopexit2, label %.preheader15" [facecube.cpp:104]   --->   Operation 73 'br' <Predicate = (!tmp_21)> <Delay = 0.00>
ST_7 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_32_cast = zext i2 %ori to i3" [facecube.cpp:106]   --->   Operation 74 'zext' 'tmp_32_cast' <Predicate = (tmp_21) | (tmp_49)> <Delay = 0.00>
ST_7 : Operation 75 [1/1] (1.56ns)   --->   "%tmp_29 = add i3 %tmp_32_cast, 1" [facecube.cpp:106]   --->   Operation 75 'add' 'tmp_29' <Predicate = (tmp_21) | (tmp_49)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 76 [1/1] (1.13ns)   --->   "%tmp_35 = icmp ult i3 %tmp_29, 3" [facecube.cpp:106]   --->   Operation 76 'icmp' 'tmp_35' <Predicate = (tmp_21) | (tmp_49)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node tmp_52)   --->   "%tmp_50 = xor i2 %ori, -2" [facecube.cpp:106]   --->   Operation 77 'xor' 'tmp_50' <Predicate = (tmp_21) | (tmp_49)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node tmp_52)   --->   "%tmp_52_cast = sext i2 %tmp_50 to i3" [facecube.cpp:106]   --->   Operation 78 'sext' 'tmp_52_cast' <Predicate = (tmp_21) | (tmp_49)> <Delay = 0.00>
ST_7 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node tmp_52)   --->   "%tmp_51 = select i1 %tmp_35, i3 %tmp_29, i3 %tmp_52_cast" [facecube.cpp:106]   --->   Operation 79 'select' 'tmp_51' <Predicate = (tmp_21) | (tmp_49)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node tmp_52)   --->   "%tmp_31_cast = zext i3 %tmp_51 to i6" [facecube.cpp:106]   --->   Operation 80 'zext' 'tmp_31_cast' <Predicate = (tmp_21) | (tmp_49)> <Delay = 0.00>
ST_7 : Operation 81 [1/1] (1.82ns) (out node of the LUT)   --->   "%tmp_52 = add i6 %tmp_31_cast, %tmp_31" [facecube.cpp:106]   --->   Operation 81 'add' 'tmp_52' <Predicate = (tmp_21) | (tmp_49)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 82 [1/1] (0.00ns)   --->   "%tmp_53_cast = sext i6 %tmp_52 to i64" [facecube.cpp:106]   --->   Operation 82 'sext' 'tmp_53_cast' <Predicate = (tmp_21) | (tmp_49)> <Delay = 0.00>
ST_7 : Operation 83 [1/1] (0.00ns)   --->   "%cornerFacelet_addr_1 = getelementptr [24 x i6]* @cornerFacelet, i64 0, i64 %tmp_53_cast" [facecube.cpp:106]   --->   Operation 83 'getelementptr' 'cornerFacelet_addr_1' <Predicate = (tmp_21) | (tmp_49)> <Delay = 0.00>
ST_7 : Operation 84 [2/2] (3.25ns)   --->   "%cornerFacelet_load_1 = load i6* %cornerFacelet_addr_1, align 1" [facecube.cpp:106]   --->   Operation 84 'load' 'cornerFacelet_load_1' <Predicate = (tmp_21) | (tmp_49)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 12> <ROM>
ST_7 : Operation 85 [1/1] (1.65ns)   --->   "%tmp_33 = add i3 %tmp_32_cast, 2" [facecube.cpp:107]   --->   Operation 85 'add' 'tmp_33' <Predicate = (tmp_21) | (tmp_49)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 86 [1/1] (1.13ns)   --->   "%tmp_53 = icmp ult i3 %tmp_33, 3" [facecube.cpp:107]   --->   Operation 86 'icmp' 'tmp_53' <Predicate = (tmp_21) | (tmp_49)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 87 [1/1] (1.56ns)   --->   "%tmp_54 = add i3 %tmp_32_cast, -1" [facecube.cpp:107]   --->   Operation 87 'add' 'tmp_54' <Predicate = (tmp_21) | (tmp_49)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node tmp_56)   --->   "%tmp_55 = select i1 %tmp_53, i3 %tmp_33, i3 %tmp_54" [facecube.cpp:107]   --->   Operation 88 'select' 'tmp_55' <Predicate = (tmp_21) | (tmp_49)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node tmp_56)   --->   "%tmp_35_cast = zext i3 %tmp_55 to i6" [facecube.cpp:107]   --->   Operation 89 'zext' 'tmp_35_cast' <Predicate = (tmp_21) | (tmp_49)> <Delay = 0.00>
ST_7 : Operation 90 [1/1] (1.82ns) (out node of the LUT)   --->   "%tmp_56 = add i6 %tmp_35_cast, %tmp_31" [facecube.cpp:107]   --->   Operation 90 'add' 'tmp_56' <Predicate = (tmp_21) | (tmp_49)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 91 [1/1] (0.00ns)   --->   "%tmp_56_cast = sext i6 %tmp_56 to i64" [facecube.cpp:107]   --->   Operation 91 'sext' 'tmp_56_cast' <Predicate = (tmp_21) | (tmp_49)> <Delay = 0.00>
ST_7 : Operation 92 [1/1] (0.00ns)   --->   "%cornerFacelet_addr_2 = getelementptr [24 x i6]* @cornerFacelet, i64 0, i64 %tmp_56_cast" [facecube.cpp:107]   --->   Operation 92 'getelementptr' 'cornerFacelet_addr_2' <Predicate = (tmp_21) | (tmp_49)> <Delay = 0.00>
ST_7 : Operation 93 [2/2] (3.25ns)   --->   "%cornerFacelet_load_2 = load i6* %cornerFacelet_addr_2, align 1" [facecube.cpp:107]   --->   Operation 93 'load' 'cornerFacelet_load_2' <Predicate = (tmp_21) | (tmp_49)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 12> <ROM>

State 8 <SV = 7> <Delay = 5.57>
ST_8 : Operation 94 [1/2] (3.25ns)   --->   "%cornerFacelet_load_1 = load i6* %cornerFacelet_addr_1, align 1" [facecube.cpp:106]   --->   Operation 94 'load' 'cornerFacelet_load_1' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 12> <ROM>
ST_8 : Operation 95 [1/1] (0.00ns)   --->   "%tmp_32 = zext i6 %cornerFacelet_load_1 to i64" [facecube.cpp:106]   --->   Operation 95 'zext' 'tmp_32' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 96 [1/1] (0.00ns)   --->   "%facecube_0_f_addr_3 = getelementptr [54 x i3]* %facecube_0_f, i64 0, i64 %tmp_32" [facecube.cpp:106]   --->   Operation 96 'getelementptr' 'facecube_0_f_addr_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 97 [2/2] (2.32ns)   --->   "%col1 = load i3* %facecube_0_f_addr_3, align 1" [facecube.cpp:106]   --->   Operation 97 'load' 'col1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 12> <RAM>
ST_8 : Operation 98 [1/2] (3.25ns)   --->   "%cornerFacelet_load_2 = load i6* %cornerFacelet_addr_2, align 1" [facecube.cpp:107]   --->   Operation 98 'load' 'cornerFacelet_load_2' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 12> <ROM>
ST_8 : Operation 99 [1/1] (0.00ns)   --->   "%tmp_38 = zext i6 %cornerFacelet_load_2 to i64" [facecube.cpp:107]   --->   Operation 99 'zext' 'tmp_38' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 100 [1/1] (0.00ns)   --->   "%facecube_0_f_addr_4 = getelementptr [54 x i3]* %facecube_0_f, i64 0, i64 %tmp_38" [facecube.cpp:107]   --->   Operation 100 'getelementptr' 'facecube_0_f_addr_4' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 101 [2/2] (2.32ns)   --->   "%col2 = load i3* %facecube_0_f_addr_4, align 1" [facecube.cpp:107]   --->   Operation 101 'load' 'col2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 12> <RAM>

State 9 <SV = 8> <Delay = 2.32>
ST_9 : Operation 102 [1/2] (2.32ns)   --->   "%col1 = load i3* %facecube_0_f_addr_3, align 1" [facecube.cpp:106]   --->   Operation 102 'load' 'col1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 12> <RAM>
ST_9 : Operation 103 [1/2] (2.32ns)   --->   "%col2 = load i3* %facecube_0_f_addr_4, align 1" [facecube.cpp:107]   --->   Operation 103 'load' 'col2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 12> <RAM>
ST_9 : Operation 104 [1/1] (1.76ns)   --->   "br label %5" [facecube.cpp:109]   --->   Operation 104 'br' <Predicate = true> <Delay = 1.76>

State 10 <SV = 9> <Delay = 3.25>
ST_10 : Operation 105 [1/1] (0.00ns)   --->   "%in_assign = phi i4 [ 0, %.loopexit2 ], [ %j_2, %._crit_edge ]"   --->   Operation 105 'phi' 'in_assign' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 106 [1/1] (0.00ns)   --->   "%tmp_58 = call i1 @_ssdm_op_BitSelect.i1.i4.i32(i4 %in_assign, i32 3)" [facecube.cpp:109]   --->   Operation 106 'bitselect' 'tmp_58' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 107 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 8, i64 4)"   --->   Operation 107 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 108 [1/1] (1.73ns)   --->   "%j_2 = add i4 %in_assign, 1" [facecube.cpp:109]   --->   Operation 108 'add' 'j_2' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 109 [1/1] (0.00ns)   --->   "br i1 %tmp_58, label %.loopexit1.loopexit, label %6" [facecube.cpp:109]   --->   Operation 109 'br' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 110 [1/1] (0.00ns)   --->   "%tmp_43 = zext i4 %in_assign to i64" [facecube.cpp:110]   --->   Operation 110 'zext' 'tmp_43' <Predicate = (!tmp_58)> <Delay = 0.00>
ST_10 : Operation 111 [1/1] (0.00ns)   --->   "%cornerColor_1_addr = getelementptr [8 x i3]* @cornerColor_1, i64 0, i64 %tmp_43" [facecube.cpp:110]   --->   Operation 111 'getelementptr' 'cornerColor_1_addr' <Predicate = (!tmp_58)> <Delay = 0.00>
ST_10 : Operation 112 [2/2] (3.25ns)   --->   "%cornerColor_1_load = load i3* %cornerColor_1_addr, align 1" [facecube.cpp:110]   --->   Operation 112 'load' 'cornerColor_1_load' <Predicate = (!tmp_58)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 12> <ROM>
ST_10 : Operation 113 [1/1] (0.00ns)   --->   "br label %.loopexit1"   --->   Operation 113 'br' <Predicate = (tmp_58)> <Delay = 0.00>

State 11 <SV = 10> <Delay = 4.38>
ST_11 : Operation 114 [1/2] (3.25ns)   --->   "%cornerColor_1_load = load i3* %cornerColor_1_addr, align 1" [facecube.cpp:110]   --->   Operation 114 'load' 'cornerColor_1_load' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 12> <ROM>
ST_11 : Operation 115 [1/1] (1.13ns)   --->   "%tmp_44 = icmp eq i3 %col1, %cornerColor_1_load" [facecube.cpp:110]   --->   Operation 115 'icmp' 'tmp_44' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 116 [1/1] (0.00ns)   --->   "br i1 %tmp_44, label %7, label %._crit_edge" [facecube.cpp:110]   --->   Operation 116 'br' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 117 [1/1] (0.00ns)   --->   "%cornerColor_2_addr = getelementptr [8 x i3]* @cornerColor_2, i64 0, i64 %tmp_43" [facecube.cpp:110]   --->   Operation 117 'getelementptr' 'cornerColor_2_addr' <Predicate = (tmp_44)> <Delay = 0.00>
ST_11 : Operation 118 [2/2] (3.25ns)   --->   "%cornerColor_2_load = load i3* %cornerColor_2_addr, align 1" [facecube.cpp:110]   --->   Operation 118 'load' 'cornerColor_2_load' <Predicate = (tmp_44)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 12> <ROM>

State 12 <SV = 11> <Delay = 8.16>
ST_12 : Operation 119 [1/2] (3.25ns)   --->   "%cornerColor_2_load = load i3* %cornerColor_2_addr, align 1" [facecube.cpp:110]   --->   Operation 119 'load' 'cornerColor_2_load' <Predicate = (tmp_44)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 12> <ROM>
ST_12 : Operation 120 [1/1] (1.13ns)   --->   "%tmp_47 = icmp eq i3 %col2, %cornerColor_2_load" [facecube.cpp:110]   --->   Operation 120 'icmp' 'tmp_47' <Predicate = (tmp_44)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 121 [1/1] (0.00ns)   --->   "br i1 %tmp_47, label %_ifconv, label %._crit_edge" [facecube.cpp:110]   --->   Operation 121 'br' <Predicate = (tmp_44)> <Delay = 0.00>
ST_12 : Operation 122 [1/1] (0.00ns)   --->   "br label %5" [facecube.cpp:109]   --->   Operation 122 'br' <Predicate = (!tmp_44) | (!tmp_47)> <Delay = 0.00>
ST_12 : Operation 123 [1/1] (1.30ns)   --->   "%tmp_i = icmp eq i4 %in_assign, 0" [cubiecube.cpp:32->facecube.cpp:112]   --->   Operation 123 'icmp' 'tmp_i' <Predicate = (tmp_44 & tmp_47)> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 124 [1/1] (1.30ns)   --->   "%tmp_i_29 = icmp eq i4 %in_assign, 1" [cubiecube.cpp:34->facecube.cpp:112]   --->   Operation 124 'icmp' 'tmp_i_29' <Predicate = (tmp_44 & tmp_47)> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 125 [1/1] (1.30ns)   --->   "%tmp_297_i = icmp eq i4 %in_assign, 2" [cubiecube.cpp:36->facecube.cpp:112]   --->   Operation 125 'icmp' 'tmp_297_i' <Predicate = (tmp_44 & tmp_47)> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 126 [1/1] (1.30ns)   --->   "%tmp_298_i = icmp eq i4 %in_assign, 3" [cubiecube.cpp:38->facecube.cpp:112]   --->   Operation 126 'icmp' 'tmp_298_i' <Predicate = (tmp_44 & tmp_47)> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 127 [1/1] (1.30ns)   --->   "%tmp_299_i = icmp eq i4 %in_assign, 4" [cubiecube.cpp:40->facecube.cpp:112]   --->   Operation 127 'icmp' 'tmp_299_i' <Predicate = (tmp_44 & tmp_47)> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 128 [1/1] (1.30ns)   --->   "%tmp_300_i = icmp eq i4 %in_assign, 5" [cubiecube.cpp:42->facecube.cpp:112]   --->   Operation 128 'icmp' 'tmp_300_i' <Predicate = (tmp_44 & tmp_47)> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 129 [1/1] (1.30ns)   --->   "%tmp_301_i = icmp eq i4 %in_assign, 6" [cubiecube.cpp:44->facecube.cpp:112]   --->   Operation 129 'icmp' 'tmp_301_i' <Predicate = (tmp_44 & tmp_47)> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node sel_tmp2)   --->   "%sel_tmp1 = xor i1 %tmp_i, true" [cubiecube.cpp:32->facecube.cpp:112]   --->   Operation 130 'xor' 'sel_tmp1' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 131 [1/1] (0.97ns) (out node of the LUT)   --->   "%sel_tmp2 = and i1 %tmp_i_29, %sel_tmp1" [cubiecube.cpp:34->facecube.cpp:112]   --->   Operation 131 'and' 'sel_tmp2' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node sel_tmp9)   --->   "%sel_tmp = zext i1 %sel_tmp2 to i2" [cubiecube.cpp:34->facecube.cpp:112]   --->   Operation 132 'zext' 'sel_tmp' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.00>
ST_12 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node sel_tmp9)   --->   "%tmp_17 = or i1 %sel_tmp2, %tmp_i" [cubiecube.cpp:34->facecube.cpp:112]   --->   Operation 133 'or' 'tmp_17' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node sel_tmp9)   --->   "%sel_tmp3 = select i1 %tmp_17, i2 %sel_tmp, i2 -2" [cubiecube.cpp:34->facecube.cpp:112]   --->   Operation 134 'select' 'sel_tmp3' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node sel_tmp9)   --->   "%sel_tmp3_cast = sext i2 %sel_tmp3 to i3" [cubiecube.cpp:34->facecube.cpp:112]   --->   Operation 135 'sext' 'sel_tmp3_cast' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.00>
ST_12 : Operation 136 [1/1] (0.97ns)   --->   "%sel_tmp6_demorgan = or i1 %tmp_i, %tmp_i_29" [cubiecube.cpp:32->facecube.cpp:112]   --->   Operation 136 'or' 'sel_tmp6_demorgan' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node tmp_18)   --->   "%sel_tmp6 = xor i1 %sel_tmp6_demorgan, true" [cubiecube.cpp:32->facecube.cpp:112]   --->   Operation 137 'xor' 'sel_tmp6' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node tmp_18)   --->   "%sel_tmp7 = and i1 %tmp_297_i, %sel_tmp6" [cubiecube.cpp:36->facecube.cpp:112]   --->   Operation 138 'and' 'sel_tmp7' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 139 [1/1] (0.97ns)   --->   "%sel_tmp13_demorgan = or i1 %sel_tmp6_demorgan, %tmp_297_i" [cubiecube.cpp:32->facecube.cpp:112]   --->   Operation 139 'or' 'sel_tmp13_demorgan' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node sel_tmp5)   --->   "%sel_tmp4 = xor i1 %sel_tmp13_demorgan, true" [cubiecube.cpp:32->facecube.cpp:112]   --->   Operation 140 'xor' 'sel_tmp4' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 141 [1/1] (0.97ns) (out node of the LUT)   --->   "%sel_tmp5 = and i1 %tmp_298_i, %sel_tmp4" [cubiecube.cpp:38->facecube.cpp:112]   --->   Operation 141 'and' 'sel_tmp5' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node sel_tmp9)   --->   "%sel_tmp8_cast = select i1 %sel_tmp5, i3 3, i3 2" [cubiecube.cpp:38->facecube.cpp:112]   --->   Operation 142 'select' 'sel_tmp8_cast' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 143 [1/1] (0.97ns) (out node of the LUT)   --->   "%tmp_18 = or i1 %sel_tmp5, %sel_tmp7" [cubiecube.cpp:38->facecube.cpp:112]   --->   Operation 143 'or' 'tmp_18' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 144 [1/1] (0.99ns) (out node of the LUT)   --->   "%sel_tmp9 = select i1 %tmp_18, i3 %sel_tmp8_cast, i3 %sel_tmp3_cast" [cubiecube.cpp:38->facecube.cpp:112]   --->   Operation 144 'select' 'sel_tmp9' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 145 [1/1] (0.97ns)   --->   "%sel_tmp22_demorgan = or i1 %sel_tmp13_demorgan, %tmp_298_i" [cubiecube.cpp:32->facecube.cpp:112]   --->   Operation 145 'or' 'sel_tmp22_demorgan' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node p_0_i)   --->   "%sel_tmp8 = xor i1 %sel_tmp22_demorgan, true" [cubiecube.cpp:32->facecube.cpp:112]   --->   Operation 146 'xor' 'sel_tmp8' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node p_0_i)   --->   "%sel_tmp10 = and i1 %tmp_299_i, %sel_tmp8" [cubiecube.cpp:40->facecube.cpp:112]   --->   Operation 147 'and' 'sel_tmp10' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 148 [1/1] (0.97ns)   --->   "%sel_tmp33_demorgan = or i1 %sel_tmp22_demorgan, %tmp_299_i" [cubiecube.cpp:32->facecube.cpp:112]   --->   Operation 148 'or' 'sel_tmp33_demorgan' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node sel_tmp12)   --->   "%sel_tmp11 = xor i1 %sel_tmp33_demorgan, true" [cubiecube.cpp:32->facecube.cpp:112]   --->   Operation 149 'xor' 'sel_tmp11' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 150 [1/1] (0.97ns) (out node of the LUT)   --->   "%sel_tmp12 = and i1 %tmp_300_i, %sel_tmp11" [cubiecube.cpp:42->facecube.cpp:112]   --->   Operation 150 'and' 'sel_tmp12' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 151 [1/1] (0.00ns) (grouped into LUT with out node p_0_i)   --->   "%sel_tmp13 = select i1 %sel_tmp12, i3 -3, i3 -4" [cubiecube.cpp:42->facecube.cpp:112]   --->   Operation 151 'select' 'sel_tmp13' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 152 [1/1] (0.00ns) (grouped into LUT with out node p_0_i)   --->   "%tmp_19 = or i1 %sel_tmp12, %sel_tmp10" [cubiecube.cpp:42->facecube.cpp:112]   --->   Operation 152 'or' 'tmp_19' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 153 [1/1] (0.98ns) (out node of the LUT)   --->   "%p_0_i = select i1 %tmp_19, i3 %sel_tmp13, i3 %sel_tmp9" [cubiecube.cpp:42->facecube.cpp:112]   --->   Operation 153 'select' 'p_0_i' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 154 [1/1] (0.00ns) (grouped into LUT with out node merge_i)   --->   "%tmp20 = or i1 %tmp_300_i, %tmp_301_i" [cubiecube.cpp:42->facecube.cpp:112]   --->   Operation 154 'or' 'tmp20' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 155 [1/1] (0.00ns) (grouped into LUT with out node merge_i)   --->   "%sel_tmp14 = or i1 %tmp20, %sel_tmp33_demorgan" [cubiecube.cpp:42->facecube.cpp:112]   --->   Operation 155 'or' 'sel_tmp14' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 156 [1/1] (0.98ns) (out node of the LUT)   --->   "%merge_i = select i1 %sel_tmp14, i3 %p_0_i, i3 -1" [cubiecube.cpp:42->facecube.cpp:112]   --->   Operation 156 'select' 'merge_i' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 157 [1/1] (0.95ns)   --->   "%tmp_57 = icmp ne i2 %ori, -1" [facecube.cpp:113]   --->   Operation 157 'icmp' 'tmp_57' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 158 [1/1] (0.99ns)   --->   "%tmp_25 = select i1 %tmp_57, i2 %ori, i2 %ori_1" [facecube.cpp:113]   --->   Operation 158 'select' 'tmp_25' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 159 [1/1] (0.00ns)   --->   "%ccRet_co_0_addr = getelementptr [8 x i2]* @ccRet_co_0, i64 0, i64 %tmp_20" [facecube.cpp:113]   --->   Operation 159 'getelementptr' 'ccRet_co_0_addr' <Predicate = (tmp_44 & tmp_47)> <Delay = 0.00>
ST_12 : Operation 160 [1/1] (2.32ns)   --->   "store i2 %tmp_25, i2* %ccRet_co_0_addr, align 1" [facecube.cpp:113]   --->   Operation 160 'store' <Predicate = (tmp_44 & tmp_47)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 12> <RAM>

State 13 <SV = 12> <Delay = 2.32>
ST_13 : Operation 161 [1/1] (0.00ns)   --->   "%ccRet_cp_0_addr_1 = getelementptr [8 x i3]* @ccRet_cp_0, i64 0, i64 %tmp_20" [facecube.cpp:112]   --->   Operation 161 'getelementptr' 'ccRet_cp_0_addr_1' <Predicate = (!tmp_58)> <Delay = 0.00>
ST_13 : Operation 162 [1/1] (2.32ns)   --->   "store i3 %merge_i, i3* %ccRet_cp_0_addr_1, align 1" [facecube.cpp:112]   --->   Operation 162 'store' <Predicate = (!tmp_58)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 12> <RAM>
ST_13 : Operation 163 [1/1] (0.00ns)   --->   "br label %.loopexit1" [facecube.cpp:114]   --->   Operation 163 'br' <Predicate = (!tmp_58)> <Delay = 0.00>
ST_13 : Operation 164 [1/1] (0.00ns)   --->   "br label %.preheader18" [facecube.cpp:101]   --->   Operation 164 'br' <Predicate = true> <Delay = 0.00>

State 14 <SV = 4> <Delay = 3.25>
ST_14 : Operation 165 [1/1] (0.00ns)   --->   "%i_3 = phi i4 [ %i_4, %.loopexit ], [ 0, %.preheader13.preheader ]"   --->   Operation 165 'phi' 'i_3' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 166 [1/1] (1.30ns)   --->   "%exitcond = icmp eq i4 %i_3, -4" [facecube.cpp:119]   --->   Operation 166 'icmp' 'exitcond' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 167 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 12, i64 12, i64 12)"   --->   Operation 167 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 168 [1/1] (1.73ns)   --->   "%i_4 = add i4 %i_3, 1" [facecube.cpp:119]   --->   Operation 168 'add' 'i_4' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 169 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %12, label %.preheader.preheader" [facecube.cpp:119]   --->   Operation 169 'br' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 170 [1/1] (0.00ns)   --->   "%tmp_22 = zext i4 %i_3 to i64" [facecube.cpp:121]   --->   Operation 170 'zext' 'tmp_22' <Predicate = (!exitcond)> <Delay = 0.00>
ST_14 : Operation 171 [1/1] (0.00ns)   --->   "%edgeFacelet_0_addr = getelementptr [12 x i6]* @edgeFacelet_0, i64 0, i64 %tmp_22" [facecube.cpp:121]   --->   Operation 171 'getelementptr' 'edgeFacelet_0_addr' <Predicate = (!exitcond)> <Delay = 0.00>
ST_14 : Operation 172 [2/2] (3.25ns)   --->   "%edgeFacelet_0_load = load i6* %edgeFacelet_0_addr, align 2" [facecube.cpp:121]   --->   Operation 172 'load' 'edgeFacelet_0_load' <Predicate = (!exitcond)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 12> <ROM>
ST_14 : Operation 173 [1/1] (0.00ns)   --->   "%edgeFacelet_1_addr = getelementptr [12 x i6]* @edgeFacelet_1, i64 0, i64 %tmp_22" [facecube.cpp:121]   --->   Operation 173 'getelementptr' 'edgeFacelet_1_addr' <Predicate = (!exitcond)> <Delay = 0.00>
ST_14 : Operation 174 [2/2] (3.25ns)   --->   "%edgeFacelet_1_load = load i6* %edgeFacelet_1_addr, align 1" [facecube.cpp:121]   --->   Operation 174 'load' 'edgeFacelet_1_load' <Predicate = (!exitcond)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 12> <ROM>
ST_14 : Operation 175 [1/1] (0.00ns)   --->   "ret void"   --->   Operation 175 'ret' <Predicate = (exitcond)> <Delay = 0.00>

State 15 <SV = 5> <Delay = 5.57>
ST_15 : Operation 176 [1/2] (3.25ns)   --->   "%edgeFacelet_0_load = load i6* %edgeFacelet_0_addr, align 2" [facecube.cpp:121]   --->   Operation 176 'load' 'edgeFacelet_0_load' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 12> <ROM>
ST_15 : Operation 177 [1/1] (0.00ns)   --->   "%tmp_23 = zext i6 %edgeFacelet_0_load to i64" [facecube.cpp:121]   --->   Operation 177 'zext' 'tmp_23' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 178 [1/1] (0.00ns)   --->   "%facecube_0_f_addr = getelementptr [54 x i3]* %facecube_0_f, i64 0, i64 %tmp_23" [facecube.cpp:121]   --->   Operation 178 'getelementptr' 'facecube_0_f_addr' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 179 [2/2] (2.32ns)   --->   "%facecube_0_f_load = load i3* %facecube_0_f_addr, align 1" [facecube.cpp:121]   --->   Operation 179 'load' 'facecube_0_f_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 12> <RAM>
ST_15 : Operation 180 [1/2] (3.25ns)   --->   "%edgeFacelet_1_load = load i6* %edgeFacelet_1_addr, align 1" [facecube.cpp:121]   --->   Operation 180 'load' 'edgeFacelet_1_load' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 12> <ROM>
ST_15 : Operation 181 [1/1] (0.00ns)   --->   "%tmp_24 = zext i6 %edgeFacelet_1_load to i64" [facecube.cpp:121]   --->   Operation 181 'zext' 'tmp_24' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 182 [1/1] (0.00ns)   --->   "%facecube_0_f_addr_1 = getelementptr [54 x i3]* %facecube_0_f, i64 0, i64 %tmp_24" [facecube.cpp:121]   --->   Operation 182 'getelementptr' 'facecube_0_f_addr_1' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 183 [2/2] (2.32ns)   --->   "%facecube_0_f_load_1 = load i3* %facecube_0_f_addr_1, align 1" [facecube.cpp:121]   --->   Operation 183 'load' 'facecube_0_f_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 12> <RAM>

State 16 <SV = 6> <Delay = 2.32>
ST_16 : Operation 184 [1/2] (2.32ns)   --->   "%facecube_0_f_load = load i3* %facecube_0_f_addr, align 1" [facecube.cpp:121]   --->   Operation 184 'load' 'facecube_0_f_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 12> <RAM>
ST_16 : Operation 185 [1/2] (2.32ns)   --->   "%facecube_0_f_load_1 = load i3* %facecube_0_f_addr_1, align 1" [facecube.cpp:121]   --->   Operation 185 'load' 'facecube_0_f_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 12> <RAM>
ST_16 : Operation 186 [1/1] (1.76ns)   --->   "br label %.preheader" [facecube.cpp:120]   --->   Operation 186 'br' <Predicate = true> <Delay = 1.76>

State 17 <SV = 7> <Delay = 3.25>
ST_17 : Operation 187 [1/1] (0.00ns)   --->   "%j_1 = phi i4 [ 0, %.preheader.preheader ], [ %j, %._crit_edge9 ]"   --->   Operation 187 'phi' 'j_1' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 188 [1/1] (1.30ns)   --->   "%tmp_28 = icmp ult i4 %j_1, -4" [facecube.cpp:120]   --->   Operation 188 'icmp' 'tmp_28' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 189 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 12, i64 6)"   --->   Operation 189 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 190 [1/1] (1.73ns)   --->   "%j = add i4 %j_1, 1" [facecube.cpp:120]   --->   Operation 190 'add' 'j' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 191 [1/1] (0.00ns)   --->   "br i1 %tmp_28, label %8, label %.loopexit.loopexit" [facecube.cpp:120]   --->   Operation 191 'br' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 192 [1/1] (0.00ns)   --->   "%tmp_36 = zext i4 %j_1 to i64" [facecube.cpp:121]   --->   Operation 192 'zext' 'tmp_36' <Predicate = (tmp_28)> <Delay = 0.00>
ST_17 : Operation 193 [1/1] (0.00ns)   --->   "%edgeColor_0_addr = getelementptr [12 x i3]* @edgeColor_0, i64 0, i64 %tmp_36" [facecube.cpp:121]   --->   Operation 193 'getelementptr' 'edgeColor_0_addr' <Predicate = (tmp_28)> <Delay = 0.00>
ST_17 : Operation 194 [2/2] (3.25ns)   --->   "%edgeColor_0_load = load i3* %edgeColor_0_addr, align 2" [facecube.cpp:121]   --->   Operation 194 'load' 'edgeColor_0_load' <Predicate = (tmp_28)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 12> <ROM>
ST_17 : Operation 195 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 195 'br' <Predicate = (!tmp_28)> <Delay = 0.00>

State 18 <SV = 8> <Delay = 4.38>
ST_18 : Operation 196 [1/2] (3.25ns)   --->   "%edgeColor_0_load = load i3* %edgeColor_0_addr, align 2" [facecube.cpp:121]   --->   Operation 196 'load' 'edgeColor_0_load' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 12> <ROM>
ST_18 : Operation 197 [1/1] (1.13ns)   --->   "%tmp_37 = icmp eq i3 %facecube_0_f_load, %edgeColor_0_load" [facecube.cpp:121]   --->   Operation 197 'icmp' 'tmp_37' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 198 [1/1] (0.00ns)   --->   "br i1 %tmp_37, label %9, label %._crit_edge9" [facecube.cpp:121]   --->   Operation 198 'br' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 199 [1/1] (0.00ns)   --->   "%edgeColor_1_addr = getelementptr [12 x i3]* @edgeColor_1, i64 0, i64 %tmp_36" [facecube.cpp:121]   --->   Operation 199 'getelementptr' 'edgeColor_1_addr' <Predicate = (tmp_37)> <Delay = 0.00>
ST_18 : Operation 200 [2/2] (3.25ns)   --->   "%edgeColor_1_load = load i3* %edgeColor_1_addr, align 1" [facecube.cpp:121]   --->   Operation 200 'load' 'edgeColor_1_load' <Predicate = (tmp_37)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 12> <ROM>

State 19 <SV = 9> <Delay = 5.14>
ST_19 : Operation 201 [1/2] (3.25ns)   --->   "%edgeColor_1_load = load i3* %edgeColor_1_addr, align 1" [facecube.cpp:121]   --->   Operation 201 'load' 'edgeColor_1_load' <Predicate = (tmp_37)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 12> <ROM>
ST_19 : Operation 202 [1/1] (1.13ns)   --->   "%tmp_40 = icmp eq i3 %facecube_0_f_load_1, %edgeColor_1_load" [facecube.cpp:121]   --->   Operation 202 'icmp' 'tmp_40' <Predicate = (tmp_37)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 203 [1/1] (0.00ns)   --->   "br i1 %tmp_40, label %10, label %._crit_edge9" [facecube.cpp:121]   --->   Operation 203 'br' <Predicate = (tmp_37)> <Delay = 0.00>
ST_19 : Operation 204 [1/1] (0.00ns)   --->   "%edgeColor_1_addr_1 = getelementptr [12 x i3]* @edgeColor_1, i64 0, i64 %tmp_36" [facecube.cpp:127]   --->   Operation 204 'getelementptr' 'edgeColor_1_addr_1' <Predicate = (!tmp_37) | (!tmp_40)> <Delay = 0.00>
ST_19 : Operation 205 [2/2] (3.25ns)   --->   "%edgeColor_1_load_1 = load i3* %edgeColor_1_addr_1, align 1" [facecube.cpp:127]   --->   Operation 205 'load' 'edgeColor_1_load_1' <Predicate = (!tmp_37) | (!tmp_40)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 12> <ROM>
ST_19 : Operation 206 [1/1] (1.13ns)   --->   "%tmp_42 = icmp eq i3 %facecube_0_f_load_1, %edgeColor_0_load" [facecube.cpp:127]   --->   Operation 206 'icmp' 'tmp_42' <Predicate = (!tmp_37) | (!tmp_40)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 207 [2/2] (5.14ns)   --->   "%tmp_45 = call fastcc zeroext i4 @convert_edge(i4 %j_1)" [facecube.cpp:123]   --->   Operation 207 'call' 'tmp_45' <Predicate = (tmp_37 & tmp_40)> <Delay = 5.14> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 20 <SV = 10> <Delay = 5.36>
ST_20 : Operation 208 [1/2] (3.25ns)   --->   "%edgeColor_1_load_1 = load i3* %edgeColor_1_addr_1, align 1" [facecube.cpp:127]   --->   Operation 208 'load' 'edgeColor_1_load_1' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 48 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 3> <Depth = 12> <ROM>
ST_20 : Operation 209 [1/1] (1.13ns)   --->   "%tmp_41 = icmp eq i3 %facecube_0_f_load, %edgeColor_1_load_1" [facecube.cpp:127]   --->   Operation 209 'icmp' 'tmp_41' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 210 [1/1] (0.97ns)   --->   "%or_cond = and i1 %tmp_41, %tmp_42" [facecube.cpp:127]   --->   Operation 210 'and' 'or_cond' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 211 [1/1] (0.00ns)   --->   "br i1 %or_cond, label %11, label %.preheader" [facecube.cpp:127]   --->   Operation 211 'br' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 212 [2/2] (5.14ns)   --->   "%tmp_46 = call fastcc zeroext i4 @convert_edge(i4 %j_1)" [facecube.cpp:129]   --->   Operation 212 'call' 'tmp_46' <Predicate = (or_cond)> <Delay = 5.14> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 11> <Delay = 2.32>
ST_21 : Operation 213 [1/2] (0.00ns)   --->   "%tmp_46 = call fastcc zeroext i4 @convert_edge(i4 %j_1)" [facecube.cpp:129]   --->   Operation 213 'call' 'tmp_46' <Predicate = (tmp_28 & !tmp_37) | (tmp_28 & !tmp_40)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_21 : Operation 214 [1/1] (0.00ns)   --->   "%ccRet_ep_0_addr_2 = getelementptr [12 x i4]* @ccRet_ep_0, i64 0, i64 %tmp_22" [facecube.cpp:129]   --->   Operation 214 'getelementptr' 'ccRet_ep_0_addr_2' <Predicate = (tmp_28 & !tmp_37) | (tmp_28 & !tmp_40)> <Delay = 0.00>
ST_21 : Operation 215 [1/1] (2.32ns)   --->   "store i4 %tmp_46, i4* %ccRet_ep_0_addr_2, align 1" [facecube.cpp:129]   --->   Operation 215 'store' <Predicate = (tmp_28 & !tmp_37) | (tmp_28 & !tmp_40)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 12> <RAM>
ST_21 : Operation 216 [1/1] (0.00ns)   --->   "%ccRet_eo_0_addr_1 = getelementptr [12 x i1]* @ccRet_eo_0, i64 0, i64 %tmp_22" [facecube.cpp:130]   --->   Operation 216 'getelementptr' 'ccRet_eo_0_addr_1' <Predicate = (tmp_28 & !tmp_37) | (tmp_28 & !tmp_40)> <Delay = 0.00>
ST_21 : Operation 217 [1/1] (2.32ns)   --->   "store i1 true, i1* %ccRet_eo_0_addr_1, align 1" [facecube.cpp:130]   --->   Operation 217 'store' <Predicate = (tmp_28 & !tmp_37) | (tmp_28 & !tmp_40)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 12> <RAM>
ST_21 : Operation 218 [1/1] (0.00ns)   --->   "br label %.loopexit" [facecube.cpp:131]   --->   Operation 218 'br' <Predicate = (tmp_28 & !tmp_37) | (tmp_28 & !tmp_40)> <Delay = 0.00>
ST_21 : Operation 219 [1/1] (0.00ns)   --->   "br label %.preheader13" [facecube.cpp:119]   --->   Operation 219 'br' <Predicate = true> <Delay = 0.00>

State 22 <SV = 10> <Delay = 2.32>
ST_22 : Operation 220 [1/2] (0.00ns)   --->   "%tmp_45 = call fastcc zeroext i4 @convert_edge(i4 %j_1)" [facecube.cpp:123]   --->   Operation 220 'call' 'tmp_45' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_22 : Operation 221 [1/1] (0.00ns)   --->   "%ccRet_ep_0_addr_1 = getelementptr [12 x i4]* @ccRet_ep_0, i64 0, i64 %tmp_22" [facecube.cpp:123]   --->   Operation 221 'getelementptr' 'ccRet_ep_0_addr_1' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 222 [1/1] (2.32ns)   --->   "store i4 %tmp_45, i4* %ccRet_ep_0_addr_1, align 1" [facecube.cpp:123]   --->   Operation 222 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 12> <RAM>
ST_22 : Operation 223 [1/1] (0.00ns)   --->   "%ccRet_eo_0_addr = getelementptr [12 x i1]* @ccRet_eo_0, i64 0, i64 %tmp_22" [facecube.cpp:124]   --->   Operation 223 'getelementptr' 'ccRet_eo_0_addr' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 224 [1/1] (2.32ns)   --->   "store i1 false, i1* %ccRet_eo_0_addr, align 1" [facecube.cpp:124]   --->   Operation 224 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 12> <RAM>
ST_22 : Operation 225 [1/1] (0.00ns)   --->   "br label %.loopexit" [facecube.cpp:125]   --->   Operation 225 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', facecube.cpp:96) [15]  (1.77 ns)

 <State 2>: 2.32ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', facecube.cpp:96) [15]  (0 ns)
	'getelementptr' operation ('ccRet_cp_0_addr', facecube.cpp:97) [22]  (0 ns)
	'store' operation (facecube.cpp:97) of constant 0 on array 'ccRet_cp_0' [23]  (2.32 ns)

 <State 3>: 2.32ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', facecube.cpp:98) [28]  (0 ns)
	'getelementptr' operation ('ccRet_ep_0_addr', facecube.cpp:99) [35]  (0 ns)
	'store' operation (facecube.cpp:99) of constant 0 on array 'ccRet_ep_0' [36]  (2.32 ns)

 <State 4>: 1.83ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', facecube.cpp:101) [41]  (0 ns)
	'sub' operation ('tmp_31', facecube.cpp:104) [50]  (1.83 ns)

 <State 5>: 5.08ns
The critical path consists of the following:
	'phi' operation ('ori') with incoming values : ('ori', facecube.cpp:103) [53]  (0 ns)
	'add' operation ('tmp_34', facecube.cpp:104) [60]  (1.83 ns)
	'getelementptr' operation ('cornerFacelet_addr', facecube.cpp:104) [62]  (0 ns)
	'load' operation ('cornerFacelet_load', facecube.cpp:104) on array 'cornerFacelet' [63]  (3.25 ns)

 <State 6>: 5.58ns
The critical path consists of the following:
	'load' operation ('cornerFacelet_load', facecube.cpp:104) on array 'cornerFacelet' [63]  (3.25 ns)
	'getelementptr' operation ('facecube_0_f_addr_2', facecube.cpp:104) [65]  (0 ns)
	'load' operation ('facecube_0_f_load_2', facecube.cpp:104) on array 'facecube_0_f' [66]  (2.32 ns)

 <State 7>: 7.86ns
The critical path consists of the following:
	'add' operation ('tmp_33', facecube.cpp:107) [86]  (1.65 ns)
	'icmp' operation ('tmp_53', facecube.cpp:107) [87]  (1.13 ns)
	'select' operation ('tmp_55', facecube.cpp:107) [89]  (0 ns)
	'add' operation ('tmp_56', facecube.cpp:107) [91]  (1.83 ns)
	'getelementptr' operation ('cornerFacelet_addr_2', facecube.cpp:107) [93]  (0 ns)
	'load' operation ('cornerFacelet_load_2', facecube.cpp:107) on array 'cornerFacelet' [94]  (3.25 ns)

 <State 8>: 5.58ns
The critical path consists of the following:
	'load' operation ('cornerFacelet_load_1', facecube.cpp:106) on array 'cornerFacelet' [82]  (3.25 ns)
	'getelementptr' operation ('facecube_0_f_addr_3', facecube.cpp:106) [84]  (0 ns)
	'load' operation ('col1', facecube.cpp:106) on array 'facecube_0_f' [85]  (2.32 ns)

 <State 9>: 2.32ns
The critical path consists of the following:
	'load' operation ('col1', facecube.cpp:106) on array 'facecube_0_f' [85]  (2.32 ns)

 <State 10>: 3.25ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', facecube.cpp:109) [100]  (0 ns)
	'getelementptr' operation ('cornerColor_1_addr', facecube.cpp:110) [107]  (0 ns)
	'load' operation ('cornerColor_1_load', facecube.cpp:110) on array 'cornerColor_1' [108]  (3.25 ns)

 <State 11>: 4.38ns
The critical path consists of the following:
	'load' operation ('cornerColor_1_load', facecube.cpp:110) on array 'cornerColor_1' [108]  (3.25 ns)
	'icmp' operation ('tmp_44', facecube.cpp:110) [109]  (1.13 ns)

 <State 12>: 8.17ns
The critical path consists of the following:
	'icmp' operation ('tmp_i', cubiecube.cpp:32->facecube.cpp:112) [119]  (1.3 ns)
	'or' operation ('sel_tmp6_demorgan', cubiecube.cpp:32->facecube.cpp:112) [132]  (0.978 ns)
	'or' operation ('sel_tmp13_demorgan', cubiecube.cpp:32->facecube.cpp:112) [135]  (0.978 ns)
	'xor' operation ('sel_tmp4', cubiecube.cpp:32->facecube.cpp:112) [136]  (0 ns)
	'and' operation ('sel_tmp5', cubiecube.cpp:38->facecube.cpp:112) [137]  (0.978 ns)
	'or' operation ('tmp_18', cubiecube.cpp:38->facecube.cpp:112) [139]  (0.978 ns)
	'select' operation ('sel_tmp9', cubiecube.cpp:38->facecube.cpp:112) [140]  (0.993 ns)
	'select' operation ('p_0_i', cubiecube.cpp:42->facecube.cpp:112) [149]  (0.98 ns)
	'select' operation ('merge_i', cubiecube.cpp:42->facecube.cpp:112) [152]  (0.98 ns)

 <State 13>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('ccRet_cp_0_addr_1', facecube.cpp:112) [153]  (0 ns)
	'store' operation (facecube.cpp:112) of variable 'merge_i', cubiecube.cpp:42->facecube.cpp:112 on array 'ccRet_cp_0' [154]  (2.32 ns)

 <State 14>: 3.25ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', facecube.cpp:119) [167]  (0 ns)
	'getelementptr' operation ('edgeFacelet_0_addr', facecube.cpp:121) [174]  (0 ns)
	'load' operation ('edgeFacelet_0_load', facecube.cpp:121) on array 'edgeFacelet_0' [175]  (3.25 ns)

 <State 15>: 5.58ns
The critical path consists of the following:
	'load' operation ('edgeFacelet_0_load', facecube.cpp:121) on array 'edgeFacelet_0' [175]  (3.25 ns)
	'getelementptr' operation ('facecube_0_f_addr', facecube.cpp:121) [177]  (0 ns)
	'load' operation ('facecube_0_f_load', facecube.cpp:121) on array 'facecube_0_f' [178]  (2.32 ns)

 <State 16>: 2.32ns
The critical path consists of the following:
	'load' operation ('facecube_0_f_load', facecube.cpp:121) on array 'facecube_0_f' [178]  (2.32 ns)

 <State 17>: 3.25ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', facecube.cpp:120) [186]  (0 ns)
	'getelementptr' operation ('edgeColor_0_addr', facecube.cpp:121) [193]  (0 ns)
	'load' operation ('edgeColor_0_load', facecube.cpp:121) on array 'edgeColor_0' [194]  (3.25 ns)

 <State 18>: 4.38ns
The critical path consists of the following:
	'load' operation ('edgeColor_0_load', facecube.cpp:121) on array 'edgeColor_0' [194]  (3.25 ns)
	'icmp' operation ('tmp_37', facecube.cpp:121) [195]  (1.13 ns)

 <State 19>: 5.15ns
The critical path consists of the following:
	'call' operation ('tmp_45', facecube.cpp:123) to 'convert_edge' [217]  (5.15 ns)

 <State 20>: 5.36ns
The critical path consists of the following:
	'load' operation ('edgeColor_1_load_1', facecube.cpp:127) on array 'edgeColor_1' [204]  (3.25 ns)
	'icmp' operation ('tmp_41', facecube.cpp:127) [205]  (1.13 ns)
	'and' operation ('or_cond', facecube.cpp:127) [207]  (0.978 ns)

 <State 21>: 2.32ns
The critical path consists of the following:
	'call' operation ('tmp_46', facecube.cpp:129) to 'convert_edge' [210]  (0 ns)
	'store' operation (facecube.cpp:129) of variable 'tmp_46', facecube.cpp:129 on array 'ccRet_ep_0' [212]  (2.32 ns)

 <State 22>: 2.32ns
The critical path consists of the following:
	'call' operation ('tmp_45', facecube.cpp:123) to 'convert_edge' [217]  (0 ns)
	'store' operation (facecube.cpp:123) of variable 'tmp_45', facecube.cpp:123 on array 'ccRet_ep_0' [219]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
