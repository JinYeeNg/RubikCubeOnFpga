-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity blockP2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    URFtoDLF : IN STD_LOGIC_VECTOR (15 downto 0);
    FRtoBR : IN STD_LOGIC_VECTOR (15 downto 0);
    parity : IN STD_LOGIC;
    URtoUL : IN STD_LOGIC_VECTOR (15 downto 0);
    UBtoDF : IN STD_LOGIC_VECTOR (15 downto 0);
    P3Buffer_0_parity_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    P3Buffer_0_parity_ce0 : OUT STD_LOGIC;
    P3Buffer_0_parity_we0 : OUT STD_LOGIC;
    P3Buffer_0_parity_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    P3Buffer_0_parity_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    P3Buffer_0_URFtoDLF_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    P3Buffer_0_URFtoDLF_ce0 : OUT STD_LOGIC;
    P3Buffer_0_URFtoDLF_we0 : OUT STD_LOGIC;
    P3Buffer_0_URFtoDLF_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    P3Buffer_0_URFtoDLF_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    P3Buffer_0_FRtoBR_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    P3Buffer_0_FRtoBR_ce0 : OUT STD_LOGIC;
    P3Buffer_0_FRtoBR_we0 : OUT STD_LOGIC;
    P3Buffer_0_FRtoBR_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    P3Buffer_0_FRtoBR_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    P3Buffer_0_URtoDF_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    P3Buffer_0_URtoDF_ce0 : OUT STD_LOGIC;
    P3Buffer_0_URtoDF_we0 : OUT STD_LOGIC;
    P3Buffer_0_URtoDF_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    P3Buffer_0_URtoDF_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    P3Buffer_0_n_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    P3Buffer_0_n_ce0 : OUT STD_LOGIC;
    P3Buffer_0_n_we0 : OUT STD_LOGIC;
    P3Buffer_0_n_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    P3Buffer_0_n_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    P3Buffer_0_i_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    P3Buffer_0_i_ce0 : OUT STD_LOGIC;
    P3Buffer_0_i_we0 : OUT STD_LOGIC;
    P3Buffer_0_i_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    P3Buffer_0_i_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    P3Buffer_0_i_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
    P3Buffer_0_i_ce1 : OUT STD_LOGIC;
    P3Buffer_0_i_we1 : OUT STD_LOGIC;
    P3Buffer_0_i_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    P3Buffer_0_i_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    maxDepth : IN STD_LOGIC_VECTOR (7 downto 0);
    encode_length : OUT STD_LOGIC_VECTOR (7 downto 0);
    encode_length_ap_vld : OUT STD_LOGIC;
    encode_array_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    encode_array_ce0 : OUT STD_LOGIC;
    encode_array_we0 : OUT STD_LOGIC;
    encode_array_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_FRtoBR_Move2_AWVALID : OUT STD_LOGIC;
    m_axi_FRtoBR_Move2_AWREADY : IN STD_LOGIC;
    m_axi_FRtoBR_Move2_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_FRtoBR_Move2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FRtoBR_Move2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_FRtoBR_Move2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_FRtoBR_Move2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_FRtoBR_Move2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_FRtoBR_Move2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_FRtoBR_Move2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_FRtoBR_Move2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_FRtoBR_Move2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_FRtoBR_Move2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FRtoBR_Move2_WVALID : OUT STD_LOGIC;
    m_axi_FRtoBR_Move2_WREADY : IN STD_LOGIC;
    m_axi_FRtoBR_Move2_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    m_axi_FRtoBR_Move2_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_FRtoBR_Move2_WLAST : OUT STD_LOGIC;
    m_axi_FRtoBR_Move2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FRtoBR_Move2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FRtoBR_Move2_ARVALID : OUT STD_LOGIC;
    m_axi_FRtoBR_Move2_ARREADY : IN STD_LOGIC;
    m_axi_FRtoBR_Move2_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_FRtoBR_Move2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FRtoBR_Move2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_FRtoBR_Move2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_FRtoBR_Move2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_FRtoBR_Move2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_FRtoBR_Move2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_FRtoBR_Move2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_FRtoBR_Move2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_FRtoBR_Move2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_FRtoBR_Move2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FRtoBR_Move2_RVALID : IN STD_LOGIC;
    m_axi_FRtoBR_Move2_RREADY : OUT STD_LOGIC;
    m_axi_FRtoBR_Move2_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    m_axi_FRtoBR_Move2_RLAST : IN STD_LOGIC;
    m_axi_FRtoBR_Move2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FRtoBR_Move2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FRtoBR_Move2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_FRtoBR_Move2_BVALID : IN STD_LOGIC;
    m_axi_FRtoBR_Move2_BREADY : OUT STD_LOGIC;
    m_axi_FRtoBR_Move2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_FRtoBR_Move2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_FRtoBR_Move2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    FRtoBR_Move2_offset : IN STD_LOGIC_VECTOR (30 downto 0);
    m_axi_URFtoDLF_Move2_AWVALID : OUT STD_LOGIC;
    m_axi_URFtoDLF_Move2_AWREADY : IN STD_LOGIC;
    m_axi_URFtoDLF_Move2_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_URFtoDLF_Move2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_URFtoDLF_Move2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_URFtoDLF_Move2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_URFtoDLF_Move2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_URFtoDLF_Move2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_URFtoDLF_Move2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_URFtoDLF_Move2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_URFtoDLF_Move2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_URFtoDLF_Move2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_URFtoDLF_Move2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_URFtoDLF_Move2_WVALID : OUT STD_LOGIC;
    m_axi_URFtoDLF_Move2_WREADY : IN STD_LOGIC;
    m_axi_URFtoDLF_Move2_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    m_axi_URFtoDLF_Move2_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_URFtoDLF_Move2_WLAST : OUT STD_LOGIC;
    m_axi_URFtoDLF_Move2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_URFtoDLF_Move2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_URFtoDLF_Move2_ARVALID : OUT STD_LOGIC;
    m_axi_URFtoDLF_Move2_ARREADY : IN STD_LOGIC;
    m_axi_URFtoDLF_Move2_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_URFtoDLF_Move2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_URFtoDLF_Move2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_URFtoDLF_Move2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_URFtoDLF_Move2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_URFtoDLF_Move2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_URFtoDLF_Move2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_URFtoDLF_Move2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_URFtoDLF_Move2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_URFtoDLF_Move2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_URFtoDLF_Move2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_URFtoDLF_Move2_RVALID : IN STD_LOGIC;
    m_axi_URFtoDLF_Move2_RREADY : OUT STD_LOGIC;
    m_axi_URFtoDLF_Move2_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    m_axi_URFtoDLF_Move2_RLAST : IN STD_LOGIC;
    m_axi_URFtoDLF_Move2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_URFtoDLF_Move2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_URFtoDLF_Move2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_URFtoDLF_Move2_BVALID : IN STD_LOGIC;
    m_axi_URFtoDLF_Move2_BREADY : OUT STD_LOGIC;
    m_axi_URFtoDLF_Move2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_URFtoDLF_Move2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_URFtoDLF_Move2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    URFtoDLF_Move2_offset : IN STD_LOGIC_VECTOR (30 downto 0);
    m_axi_URtoDF_Move2_AWVALID : OUT STD_LOGIC;
    m_axi_URtoDF_Move2_AWREADY : IN STD_LOGIC;
    m_axi_URtoDF_Move2_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_URtoDF_Move2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_URtoDF_Move2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_URtoDF_Move2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_URtoDF_Move2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_URtoDF_Move2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_URtoDF_Move2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_URtoDF_Move2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_URtoDF_Move2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_URtoDF_Move2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_URtoDF_Move2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_URtoDF_Move2_WVALID : OUT STD_LOGIC;
    m_axi_URtoDF_Move2_WREADY : IN STD_LOGIC;
    m_axi_URtoDF_Move2_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    m_axi_URtoDF_Move2_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_URtoDF_Move2_WLAST : OUT STD_LOGIC;
    m_axi_URtoDF_Move2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_URtoDF_Move2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_URtoDF_Move2_ARVALID : OUT STD_LOGIC;
    m_axi_URtoDF_Move2_ARREADY : IN STD_LOGIC;
    m_axi_URtoDF_Move2_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_URtoDF_Move2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_URtoDF_Move2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_URtoDF_Move2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_URtoDF_Move2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_URtoDF_Move2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_URtoDF_Move2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_URtoDF_Move2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_URtoDF_Move2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_URtoDF_Move2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_URtoDF_Move2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_URtoDF_Move2_RVALID : IN STD_LOGIC;
    m_axi_URtoDF_Move2_RREADY : OUT STD_LOGIC;
    m_axi_URtoDF_Move2_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    m_axi_URtoDF_Move2_RLAST : IN STD_LOGIC;
    m_axi_URtoDF_Move2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_URtoDF_Move2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_URtoDF_Move2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_URtoDF_Move2_BVALID : IN STD_LOGIC;
    m_axi_URtoDF_Move2_BREADY : OUT STD_LOGIC;
    m_axi_URtoDF_Move2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_URtoDF_Move2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_URtoDF_Move2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    URtoDF_Move2_offset : IN STD_LOGIC_VECTOR (30 downto 0);
    URtoUL_Move2_offset : IN STD_LOGIC_VECTOR (30 downto 0);
    UBtoDF_Move2_offset : IN STD_LOGIC_VECTOR (30 downto 0);
    MergeURtoULandUBtoDF2_offset : IN STD_LOGIC_VECTOR (30 downto 0);
    Slice_URFtoDLF_Parity_Prun2_offset : IN STD_LOGIC_VECTOR (30 downto 0);
    Slice_URtoDF_Parity_Prun2_offset : IN STD_LOGIC_VECTOR (30 downto 0);
    P2Buffer_V_flip_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    P2Buffer_V_flip_empty_n : IN STD_LOGIC;
    P2Buffer_V_flip_read : OUT STD_LOGIC;
    P2Buffer_V_twist_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    P2Buffer_V_twist_empty_n : IN STD_LOGIC;
    P2Buffer_V_twist_read : OUT STD_LOGIC;
    P2Buffer_V_slice_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    P2Buffer_V_slice_empty_n : IN STD_LOGIC;
    P2Buffer_V_slice_read : OUT STD_LOGIC;
    P2Buffer_V_parity_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    P2Buffer_V_parity_empty_n : IN STD_LOGIC;
    P2Buffer_V_parity_read : OUT STD_LOGIC;
    P2Buffer_V_URFtoDLF_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    P2Buffer_V_URFtoDLF_empty_n : IN STD_LOGIC;
    P2Buffer_V_URFtoDLF_read : OUT STD_LOGIC;
    P2Buffer_V_FRtoBR_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    P2Buffer_V_FRtoBR_empty_n : IN STD_LOGIC;
    P2Buffer_V_FRtoBR_read : OUT STD_LOGIC;
    P2Buffer_V_URtoDF_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    P2Buffer_V_URtoDF_empty_n : IN STD_LOGIC;
    P2Buffer_V_URtoDF_read : OUT STD_LOGIC;
    P2Buffer_V_depthPhas_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_depthPhas_empty_n : IN STD_LOGIC;
    P2Buffer_V_depthPhas_read : OUT STD_LOGIC;
    P2Buffer_V_n_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_n_empty_n : IN STD_LOGIC;
    P2Buffer_V_n_read : OUT STD_LOGIC;
    P2Buffer_V_i_0_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_0_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_0_read : OUT STD_LOGIC;
    P2Buffer_V_i_1_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_1_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_1_read : OUT STD_LOGIC;
    P2Buffer_V_i_2_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_2_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_2_read : OUT STD_LOGIC;
    P2Buffer_V_i_3_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_3_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_3_read : OUT STD_LOGIC;
    P2Buffer_V_i_4_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_4_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_4_read : OUT STD_LOGIC;
    P2Buffer_V_i_5_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_5_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_5_read : OUT STD_LOGIC;
    P2Buffer_V_i_6_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_6_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_6_read : OUT STD_LOGIC;
    P2Buffer_V_i_7_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_7_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_7_read : OUT STD_LOGIC;
    P2Buffer_V_i_8_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_8_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_8_read : OUT STD_LOGIC;
    P2Buffer_V_i_9_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_9_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_9_read : OUT STD_LOGIC;
    P2Buffer_V_i_10_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_10_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_10_read : OUT STD_LOGIC;
    P2Buffer_V_i_11_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_11_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_11_read : OUT STD_LOGIC;
    P2Buffer_V_i_12_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_12_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_12_read : OUT STD_LOGIC;
    P2Buffer_V_i_13_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_13_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_13_read : OUT STD_LOGIC;
    P2Buffer_V_i_14_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_14_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_14_read : OUT STD_LOGIC;
    P2Buffer_V_i_15_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_15_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_15_read : OUT STD_LOGIC;
    P2Buffer_V_i_16_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_16_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_16_read : OUT STD_LOGIC;
    P2Buffer_V_i_17_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_17_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_17_read : OUT STD_LOGIC;
    P2Buffer_V_i_18_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_18_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_18_read : OUT STD_LOGIC;
    P2Buffer_V_i_19_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_19_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_19_read : OUT STD_LOGIC;
    P2Buffer_V_i_20_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_20_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_20_read : OUT STD_LOGIC;
    P2Buffer_V_i_21_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_21_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_21_read : OUT STD_LOGIC;
    P2Buffer_V_i_22_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_22_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_22_read : OUT STD_LOGIC;
    P2Buffer_V_i_23_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_23_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_23_read : OUT STD_LOGIC;
    P2Buffer_V_i_24_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_24_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_24_read : OUT STD_LOGIC;
    P2Buffer_V_i_25_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_25_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_25_read : OUT STD_LOGIC;
    P2Buffer_V_i_26_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_26_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_26_read : OUT STD_LOGIC;
    P2Buffer_V_i_27_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_27_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_27_read : OUT STD_LOGIC;
    P2Buffer_V_i_28_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_28_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_28_read : OUT STD_LOGIC;
    P2Buffer_V_i_29_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_29_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_29_read : OUT STD_LOGIC;
    P2Buffer_V_i_30_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    P2Buffer_V_i_30_empty_n : IN STD_LOGIC;
    P2Buffer_V_i_30_read : OUT STD_LOGIC;
    a : OUT STD_LOGIC_VECTOR (31 downto 0);
    a_ap_vld : OUT STD_LOGIC );
end;


architecture behav of blockP2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv18_156 : STD_LOGIC_VECTOR (17 downto 0) := "000000000101010110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal search_sol_i_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal search_sol_i_ce0 : STD_LOGIC;
    signal search_sol_i_we0 : STD_LOGIC;
    signal search_sol_i_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal search_sol_i_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal search_sol_i_ce1 : STD_LOGIC;
    signal search_sol_i_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal search_sol_depthPhas : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal s_fu_1103_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal s_reg_1424 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_phase2_fu_967_ap_idle : STD_LOGIC;
    signal grp_phase2_fu_967_ap_ready : STD_LOGIC;
    signal grp_phase2_fu_967_ap_done : STD_LOGIC;
    signal tmp_180_fu_1107_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_180_reg_1431 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_217_fu_1139_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_217_reg_1445 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_181_fu_1154_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_181_reg_1449 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_182_reg_1454 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_184_reg_1460 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_187_fu_1186_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_187_reg_1465 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_188_reg_1470 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_190_reg_1476 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_223_fu_1251_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_223_reg_1481 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_226_fu_1301_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_226_reg_1487 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_cond_fu_1322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_1493 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal i_fu_1337_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_reg_1503 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_i_45_fu_1343_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_45_reg_1508 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_fu_1332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_phase2_fu_967_ap_start : STD_LOGIC;
    signal grp_phase2_fu_967_P3Buffer_0_parity_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_phase2_fu_967_P3Buffer_0_parity_ce0 : STD_LOGIC;
    signal grp_phase2_fu_967_P3Buffer_0_parity_we0 : STD_LOGIC;
    signal grp_phase2_fu_967_P3Buffer_0_parity_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_phase2_fu_967_P3Buffer_0_URFtoDLF_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_phase2_fu_967_P3Buffer_0_URFtoDLF_ce0 : STD_LOGIC;
    signal grp_phase2_fu_967_P3Buffer_0_URFtoDLF_we0 : STD_LOGIC;
    signal grp_phase2_fu_967_P3Buffer_0_URFtoDLF_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_phase2_fu_967_P3Buffer_0_FRtoBR_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_phase2_fu_967_P3Buffer_0_FRtoBR_ce0 : STD_LOGIC;
    signal grp_phase2_fu_967_P3Buffer_0_FRtoBR_we0 : STD_LOGIC;
    signal grp_phase2_fu_967_P3Buffer_0_FRtoBR_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_phase2_fu_967_P3Buffer_0_URtoDF_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_phase2_fu_967_P3Buffer_0_URtoDF_ce0 : STD_LOGIC;
    signal grp_phase2_fu_967_P3Buffer_0_URtoDF_we0 : STD_LOGIC;
    signal grp_phase2_fu_967_P3Buffer_0_URtoDF_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_phase2_fu_967_P3Buffer_0_n_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_phase2_fu_967_P3Buffer_0_n_ce0 : STD_LOGIC;
    signal grp_phase2_fu_967_P3Buffer_0_n_we0 : STD_LOGIC;
    signal grp_phase2_fu_967_P3Buffer_0_n_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_phase2_fu_967_P3Buffer_0_i_address0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_phase2_fu_967_P3Buffer_0_i_ce0 : STD_LOGIC;
    signal grp_phase2_fu_967_P3Buffer_0_i_we0 : STD_LOGIC;
    signal grp_phase2_fu_967_P3Buffer_0_i_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_phase2_fu_967_P3Buffer_0_i_address1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_phase2_fu_967_P3Buffer_0_i_ce1 : STD_LOGIC;
    signal grp_phase2_fu_967_P3Buffer_0_i_we1 : STD_LOGIC;
    signal grp_phase2_fu_967_P3Buffer_0_i_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_AWVALID : STD_LOGIC;
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_WVALID : STD_LOGIC;
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_WLAST : STD_LOGIC;
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARVALID : STD_LOGIC;
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_RREADY : STD_LOGIC;
    signal grp_phase2_fu_967_m_axi_FRtoBR_Move2_BREADY : STD_LOGIC;
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_AWVALID : STD_LOGIC;
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_WVALID : STD_LOGIC;
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_WLAST : STD_LOGIC;
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARVALID : STD_LOGIC;
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_RREADY : STD_LOGIC;
    signal grp_phase2_fu_967_m_axi_URFtoDLF_Move2_BREADY : STD_LOGIC;
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_AWVALID : STD_LOGIC;
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_WVALID : STD_LOGIC;
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_WLAST : STD_LOGIC;
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_ARVALID : STD_LOGIC;
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_RREADY : STD_LOGIC;
    signal grp_phase2_fu_967_m_axi_URtoDF_Move2_BREADY : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_flip_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_twist_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_slice_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_parity_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_URFtoDLF_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_FRtoBR_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_URtoDF_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_depthPhas_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_n_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_0_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_1_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_2_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_3_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_4_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_5_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_6_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_7_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_8_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_9_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_10_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_11_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_12_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_13_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_14_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_15_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_16_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_17_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_18_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_19_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_20_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_21_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_22_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_23_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_24_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_25_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_26_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_27_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_28_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_29_read : STD_LOGIC;
    signal grp_phase2_fu_967_P2Buffer_V_i_30_read : STD_LOGIC;
    signal grp_phase2_fu_967_search_sol_i_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_phase2_fu_967_search_sol_i_ce0 : STD_LOGIC;
    signal grp_phase2_fu_967_search_sol_i_we0 : STD_LOGIC;
    signal grp_phase2_fu_967_search_sol_i_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_phase2_fu_967_search_sol_depthPhas : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_phase2_fu_967_search_sol_depthPhas_ap_vld : STD_LOGIC;
    signal grp_phase2_fu_967_a : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_phase2_fu_967_a_ap_vld : STD_LOGIC;
    signal grp_phase2_fu_967_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal i_i_reg_956 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_phase2_fu_967_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_215_fu_1129_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_216_fu_1134_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_nbreadreq_fu_816_p42 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_258_cast_fu_1119_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_258_cast_fu_1119_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_214_fu_1123_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_216_fu_1134_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_217_fu_1139_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext8_cast_fu_1144_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul9_fu_1148_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul9_fu_1148_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_182_fu_1158_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_cast_fu_1176_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_fu_1180_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_fu_1180_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_188_fu_1190_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal neg_mul2_fu_1208_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_183_fu_1213_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_221_fu_1223_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_222_fu_1227_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_v_fu_1230_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_185_fu_1237_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal neg_ti2_fu_1241_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_186_fu_1247_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal neg_mul_fu_1258_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_189_fu_1263_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_224_fu_1273_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_225_fu_1277_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_v1_fu_1280_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_191_fu_1287_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal neg_ti_fu_1291_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_192_fu_1297_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_219_fu_1312_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_218_fu_1308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_220_fu_1317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_i_cast_fu_1328_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);

    component phase2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        P3Buffer_0_parity_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        P3Buffer_0_parity_ce0 : OUT STD_LOGIC;
        P3Buffer_0_parity_we0 : OUT STD_LOGIC;
        P3Buffer_0_parity_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        P3Buffer_0_parity_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
        P3Buffer_0_URFtoDLF_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        P3Buffer_0_URFtoDLF_ce0 : OUT STD_LOGIC;
        P3Buffer_0_URFtoDLF_we0 : OUT STD_LOGIC;
        P3Buffer_0_URFtoDLF_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        P3Buffer_0_URFtoDLF_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        P3Buffer_0_FRtoBR_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        P3Buffer_0_FRtoBR_ce0 : OUT STD_LOGIC;
        P3Buffer_0_FRtoBR_we0 : OUT STD_LOGIC;
        P3Buffer_0_FRtoBR_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        P3Buffer_0_FRtoBR_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        P3Buffer_0_URtoDF_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        P3Buffer_0_URtoDF_ce0 : OUT STD_LOGIC;
        P3Buffer_0_URtoDF_we0 : OUT STD_LOGIC;
        P3Buffer_0_URtoDF_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        P3Buffer_0_URtoDF_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        P3Buffer_0_n_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        P3Buffer_0_n_ce0 : OUT STD_LOGIC;
        P3Buffer_0_n_we0 : OUT STD_LOGIC;
        P3Buffer_0_n_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        P3Buffer_0_n_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        P3Buffer_0_i_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        P3Buffer_0_i_ce0 : OUT STD_LOGIC;
        P3Buffer_0_i_we0 : OUT STD_LOGIC;
        P3Buffer_0_i_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        P3Buffer_0_i_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        P3Buffer_0_i_address1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        P3Buffer_0_i_ce1 : OUT STD_LOGIC;
        P3Buffer_0_i_we1 : OUT STD_LOGIC;
        P3Buffer_0_i_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        P3Buffer_0_i_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        maxDepth : IN STD_LOGIC_VECTOR (7 downto 0);
        URFtoDLF : IN STD_LOGIC_VECTOR (15 downto 0);
        FRtoBR : IN STD_LOGIC_VECTOR (15 downto 0);
        URtoUL : IN STD_LOGIC_VECTOR (15 downto 0);
        UBtoDF : IN STD_LOGIC_VECTOR (15 downto 0);
        parity : IN STD_LOGIC;
        m_axi_FRtoBR_Move2_AWVALID : OUT STD_LOGIC;
        m_axi_FRtoBR_Move2_AWREADY : IN STD_LOGIC;
        m_axi_FRtoBR_Move2_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_FRtoBR_Move2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_FRtoBR_Move2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_FRtoBR_Move2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_FRtoBR_Move2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_FRtoBR_Move2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_FRtoBR_Move2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_FRtoBR_Move2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_FRtoBR_Move2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_FRtoBR_Move2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_FRtoBR_Move2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_FRtoBR_Move2_WVALID : OUT STD_LOGIC;
        m_axi_FRtoBR_Move2_WREADY : IN STD_LOGIC;
        m_axi_FRtoBR_Move2_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_FRtoBR_Move2_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_FRtoBR_Move2_WLAST : OUT STD_LOGIC;
        m_axi_FRtoBR_Move2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_FRtoBR_Move2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_FRtoBR_Move2_ARVALID : OUT STD_LOGIC;
        m_axi_FRtoBR_Move2_ARREADY : IN STD_LOGIC;
        m_axi_FRtoBR_Move2_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_FRtoBR_Move2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_FRtoBR_Move2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_FRtoBR_Move2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_FRtoBR_Move2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_FRtoBR_Move2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_FRtoBR_Move2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_FRtoBR_Move2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_FRtoBR_Move2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_FRtoBR_Move2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_FRtoBR_Move2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_FRtoBR_Move2_RVALID : IN STD_LOGIC;
        m_axi_FRtoBR_Move2_RREADY : OUT STD_LOGIC;
        m_axi_FRtoBR_Move2_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_FRtoBR_Move2_RLAST : IN STD_LOGIC;
        m_axi_FRtoBR_Move2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_FRtoBR_Move2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_FRtoBR_Move2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_FRtoBR_Move2_BVALID : IN STD_LOGIC;
        m_axi_FRtoBR_Move2_BREADY : OUT STD_LOGIC;
        m_axi_FRtoBR_Move2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_FRtoBR_Move2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_FRtoBR_Move2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        FRtoBR_Move2_offset : IN STD_LOGIC_VECTOR (30 downto 0);
        m_axi_URFtoDLF_Move2_AWVALID : OUT STD_LOGIC;
        m_axi_URFtoDLF_Move2_AWREADY : IN STD_LOGIC;
        m_axi_URFtoDLF_Move2_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_URFtoDLF_Move2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_URFtoDLF_Move2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_URFtoDLF_Move2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_URFtoDLF_Move2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_URFtoDLF_Move2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_URFtoDLF_Move2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_URFtoDLF_Move2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_URFtoDLF_Move2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_URFtoDLF_Move2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_URFtoDLF_Move2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_URFtoDLF_Move2_WVALID : OUT STD_LOGIC;
        m_axi_URFtoDLF_Move2_WREADY : IN STD_LOGIC;
        m_axi_URFtoDLF_Move2_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_URFtoDLF_Move2_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_URFtoDLF_Move2_WLAST : OUT STD_LOGIC;
        m_axi_URFtoDLF_Move2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_URFtoDLF_Move2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_URFtoDLF_Move2_ARVALID : OUT STD_LOGIC;
        m_axi_URFtoDLF_Move2_ARREADY : IN STD_LOGIC;
        m_axi_URFtoDLF_Move2_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_URFtoDLF_Move2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_URFtoDLF_Move2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_URFtoDLF_Move2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_URFtoDLF_Move2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_URFtoDLF_Move2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_URFtoDLF_Move2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_URFtoDLF_Move2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_URFtoDLF_Move2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_URFtoDLF_Move2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_URFtoDLF_Move2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_URFtoDLF_Move2_RVALID : IN STD_LOGIC;
        m_axi_URFtoDLF_Move2_RREADY : OUT STD_LOGIC;
        m_axi_URFtoDLF_Move2_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_URFtoDLF_Move2_RLAST : IN STD_LOGIC;
        m_axi_URFtoDLF_Move2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_URFtoDLF_Move2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_URFtoDLF_Move2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_URFtoDLF_Move2_BVALID : IN STD_LOGIC;
        m_axi_URFtoDLF_Move2_BREADY : OUT STD_LOGIC;
        m_axi_URFtoDLF_Move2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_URFtoDLF_Move2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_URFtoDLF_Move2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        URFtoDLF_Move2_offset : IN STD_LOGIC_VECTOR (30 downto 0);
        m_axi_URtoDF_Move2_AWVALID : OUT STD_LOGIC;
        m_axi_URtoDF_Move2_AWREADY : IN STD_LOGIC;
        m_axi_URtoDF_Move2_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_URtoDF_Move2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_URtoDF_Move2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_URtoDF_Move2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_URtoDF_Move2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_URtoDF_Move2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_URtoDF_Move2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_URtoDF_Move2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_URtoDF_Move2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_URtoDF_Move2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_URtoDF_Move2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_URtoDF_Move2_WVALID : OUT STD_LOGIC;
        m_axi_URtoDF_Move2_WREADY : IN STD_LOGIC;
        m_axi_URtoDF_Move2_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_URtoDF_Move2_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_URtoDF_Move2_WLAST : OUT STD_LOGIC;
        m_axi_URtoDF_Move2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_URtoDF_Move2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_URtoDF_Move2_ARVALID : OUT STD_LOGIC;
        m_axi_URtoDF_Move2_ARREADY : IN STD_LOGIC;
        m_axi_URtoDF_Move2_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_URtoDF_Move2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_URtoDF_Move2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_URtoDF_Move2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_URtoDF_Move2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_URtoDF_Move2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_URtoDF_Move2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_URtoDF_Move2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_URtoDF_Move2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_URtoDF_Move2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_URtoDF_Move2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_URtoDF_Move2_RVALID : IN STD_LOGIC;
        m_axi_URtoDF_Move2_RREADY : OUT STD_LOGIC;
        m_axi_URtoDF_Move2_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_URtoDF_Move2_RLAST : IN STD_LOGIC;
        m_axi_URtoDF_Move2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_URtoDF_Move2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_URtoDF_Move2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_URtoDF_Move2_BVALID : IN STD_LOGIC;
        m_axi_URtoDF_Move2_BREADY : OUT STD_LOGIC;
        m_axi_URtoDF_Move2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_URtoDF_Move2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_URtoDF_Move2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        URtoDF_Move2_offset : IN STD_LOGIC_VECTOR (30 downto 0);
        URtoUL_Move2_offset : IN STD_LOGIC_VECTOR (30 downto 0);
        UBtoDF_Move2_offset : IN STD_LOGIC_VECTOR (30 downto 0);
        MergeURtoULandUBtoDF2_offset : IN STD_LOGIC_VECTOR (30 downto 0);
        Slice_URFtoDLF_Parity_Prun2_offset : IN STD_LOGIC_VECTOR (30 downto 0);
        Slice_URtoDF_Parity_Prun2_offset : IN STD_LOGIC_VECTOR (30 downto 0);
        P2Buffer_V_flip_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        P2Buffer_V_flip_empty_n : IN STD_LOGIC;
        P2Buffer_V_flip_read : OUT STD_LOGIC;
        P2Buffer_V_twist_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        P2Buffer_V_twist_empty_n : IN STD_LOGIC;
        P2Buffer_V_twist_read : OUT STD_LOGIC;
        P2Buffer_V_slice_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        P2Buffer_V_slice_empty_n : IN STD_LOGIC;
        P2Buffer_V_slice_read : OUT STD_LOGIC;
        P2Buffer_V_parity_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        P2Buffer_V_parity_empty_n : IN STD_LOGIC;
        P2Buffer_V_parity_read : OUT STD_LOGIC;
        P2Buffer_V_URFtoDLF_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        P2Buffer_V_URFtoDLF_empty_n : IN STD_LOGIC;
        P2Buffer_V_URFtoDLF_read : OUT STD_LOGIC;
        P2Buffer_V_FRtoBR_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        P2Buffer_V_FRtoBR_empty_n : IN STD_LOGIC;
        P2Buffer_V_FRtoBR_read : OUT STD_LOGIC;
        P2Buffer_V_URtoDF_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        P2Buffer_V_URtoDF_empty_n : IN STD_LOGIC;
        P2Buffer_V_URtoDF_read : OUT STD_LOGIC;
        P2Buffer_V_depthPhas_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_depthPhas_empty_n : IN STD_LOGIC;
        P2Buffer_V_depthPhas_read : OUT STD_LOGIC;
        P2Buffer_V_n_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_n_empty_n : IN STD_LOGIC;
        P2Buffer_V_n_read : OUT STD_LOGIC;
        P2Buffer_V_i_0_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_0_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_0_read : OUT STD_LOGIC;
        P2Buffer_V_i_1_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_1_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_1_read : OUT STD_LOGIC;
        P2Buffer_V_i_2_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_2_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_2_read : OUT STD_LOGIC;
        P2Buffer_V_i_3_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_3_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_3_read : OUT STD_LOGIC;
        P2Buffer_V_i_4_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_4_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_4_read : OUT STD_LOGIC;
        P2Buffer_V_i_5_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_5_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_5_read : OUT STD_LOGIC;
        P2Buffer_V_i_6_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_6_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_6_read : OUT STD_LOGIC;
        P2Buffer_V_i_7_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_7_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_7_read : OUT STD_LOGIC;
        P2Buffer_V_i_8_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_8_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_8_read : OUT STD_LOGIC;
        P2Buffer_V_i_9_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_9_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_9_read : OUT STD_LOGIC;
        P2Buffer_V_i_10_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_10_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_10_read : OUT STD_LOGIC;
        P2Buffer_V_i_11_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_11_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_11_read : OUT STD_LOGIC;
        P2Buffer_V_i_12_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_12_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_12_read : OUT STD_LOGIC;
        P2Buffer_V_i_13_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_13_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_13_read : OUT STD_LOGIC;
        P2Buffer_V_i_14_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_14_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_14_read : OUT STD_LOGIC;
        P2Buffer_V_i_15_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_15_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_15_read : OUT STD_LOGIC;
        P2Buffer_V_i_16_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_16_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_16_read : OUT STD_LOGIC;
        P2Buffer_V_i_17_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_17_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_17_read : OUT STD_LOGIC;
        P2Buffer_V_i_18_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_18_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_18_read : OUT STD_LOGIC;
        P2Buffer_V_i_19_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_19_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_19_read : OUT STD_LOGIC;
        P2Buffer_V_i_20_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_20_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_20_read : OUT STD_LOGIC;
        P2Buffer_V_i_21_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_21_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_21_read : OUT STD_LOGIC;
        P2Buffer_V_i_22_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_22_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_22_read : OUT STD_LOGIC;
        P2Buffer_V_i_23_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_23_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_23_read : OUT STD_LOGIC;
        P2Buffer_V_i_24_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_24_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_24_read : OUT STD_LOGIC;
        P2Buffer_V_i_25_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_25_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_25_read : OUT STD_LOGIC;
        P2Buffer_V_i_26_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_26_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_26_read : OUT STD_LOGIC;
        P2Buffer_V_i_27_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_27_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_27_read : OUT STD_LOGIC;
        P2Buffer_V_i_28_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_28_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_28_read : OUT STD_LOGIC;
        P2Buffer_V_i_29_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_29_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_29_read : OUT STD_LOGIC;
        P2Buffer_V_i_30_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        P2Buffer_V_i_30_empty_n : IN STD_LOGIC;
        P2Buffer_V_i_30_read : OUT STD_LOGIC;
        search_sol_i_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        search_sol_i_ce0 : OUT STD_LOGIC;
        search_sol_i_we0 : OUT STD_LOGIC;
        search_sol_i_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        search_sol_depthPhas : OUT STD_LOGIC_VECTOR (7 downto 0);
        search_sol_depthPhas_ap_vld : OUT STD_LOGIC;
        a : OUT STD_LOGIC_VECTOR (31 downto 0);
        a_ap_vld : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component blockP2_search_soudo IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    search_sol_i_U : component blockP2_search_soudo
    generic map (
        DataWidth => 8,
        AddressRange => 31,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => search_sol_i_address0,
        ce0 => search_sol_i_ce0,
        we0 => search_sol_i_we0,
        d0 => grp_phase2_fu_967_search_sol_i_d0,
        q0 => search_sol_i_q0,
        address1 => search_sol_i_address1,
        ce1 => search_sol_i_ce1,
        q1 => search_sol_i_q1);

    grp_phase2_fu_967 : component phase2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_phase2_fu_967_ap_start,
        ap_done => grp_phase2_fu_967_ap_done,
        ap_idle => grp_phase2_fu_967_ap_idle,
        ap_ready => grp_phase2_fu_967_ap_ready,
        P3Buffer_0_parity_address0 => grp_phase2_fu_967_P3Buffer_0_parity_address0,
        P3Buffer_0_parity_ce0 => grp_phase2_fu_967_P3Buffer_0_parity_ce0,
        P3Buffer_0_parity_we0 => grp_phase2_fu_967_P3Buffer_0_parity_we0,
        P3Buffer_0_parity_d0 => grp_phase2_fu_967_P3Buffer_0_parity_d0,
        P3Buffer_0_parity_q0 => P3Buffer_0_parity_q0,
        P3Buffer_0_URFtoDLF_address0 => grp_phase2_fu_967_P3Buffer_0_URFtoDLF_address0,
        P3Buffer_0_URFtoDLF_ce0 => grp_phase2_fu_967_P3Buffer_0_URFtoDLF_ce0,
        P3Buffer_0_URFtoDLF_we0 => grp_phase2_fu_967_P3Buffer_0_URFtoDLF_we0,
        P3Buffer_0_URFtoDLF_d0 => grp_phase2_fu_967_P3Buffer_0_URFtoDLF_d0,
        P3Buffer_0_URFtoDLF_q0 => P3Buffer_0_URFtoDLF_q0,
        P3Buffer_0_FRtoBR_address0 => grp_phase2_fu_967_P3Buffer_0_FRtoBR_address0,
        P3Buffer_0_FRtoBR_ce0 => grp_phase2_fu_967_P3Buffer_0_FRtoBR_ce0,
        P3Buffer_0_FRtoBR_we0 => grp_phase2_fu_967_P3Buffer_0_FRtoBR_we0,
        P3Buffer_0_FRtoBR_d0 => grp_phase2_fu_967_P3Buffer_0_FRtoBR_d0,
        P3Buffer_0_FRtoBR_q0 => P3Buffer_0_FRtoBR_q0,
        P3Buffer_0_URtoDF_address0 => grp_phase2_fu_967_P3Buffer_0_URtoDF_address0,
        P3Buffer_0_URtoDF_ce0 => grp_phase2_fu_967_P3Buffer_0_URtoDF_ce0,
        P3Buffer_0_URtoDF_we0 => grp_phase2_fu_967_P3Buffer_0_URtoDF_we0,
        P3Buffer_0_URtoDF_d0 => grp_phase2_fu_967_P3Buffer_0_URtoDF_d0,
        P3Buffer_0_URtoDF_q0 => P3Buffer_0_URtoDF_q0,
        P3Buffer_0_n_address0 => grp_phase2_fu_967_P3Buffer_0_n_address0,
        P3Buffer_0_n_ce0 => grp_phase2_fu_967_P3Buffer_0_n_ce0,
        P3Buffer_0_n_we0 => grp_phase2_fu_967_P3Buffer_0_n_we0,
        P3Buffer_0_n_d0 => grp_phase2_fu_967_P3Buffer_0_n_d0,
        P3Buffer_0_n_q0 => P3Buffer_0_n_q0,
        P3Buffer_0_i_address0 => grp_phase2_fu_967_P3Buffer_0_i_address0,
        P3Buffer_0_i_ce0 => grp_phase2_fu_967_P3Buffer_0_i_ce0,
        P3Buffer_0_i_we0 => grp_phase2_fu_967_P3Buffer_0_i_we0,
        P3Buffer_0_i_d0 => grp_phase2_fu_967_P3Buffer_0_i_d0,
        P3Buffer_0_i_q0 => P3Buffer_0_i_q0,
        P3Buffer_0_i_address1 => grp_phase2_fu_967_P3Buffer_0_i_address1,
        P3Buffer_0_i_ce1 => grp_phase2_fu_967_P3Buffer_0_i_ce1,
        P3Buffer_0_i_we1 => grp_phase2_fu_967_P3Buffer_0_i_we1,
        P3Buffer_0_i_d1 => grp_phase2_fu_967_P3Buffer_0_i_d1,
        P3Buffer_0_i_q1 => P3Buffer_0_i_q1,
        maxDepth => maxDepth,
        URFtoDLF => URFtoDLF,
        FRtoBR => FRtoBR,
        URtoUL => URtoUL,
        UBtoDF => UBtoDF,
        parity => parity,
        m_axi_FRtoBR_Move2_AWVALID => grp_phase2_fu_967_m_axi_FRtoBR_Move2_AWVALID,
        m_axi_FRtoBR_Move2_AWREADY => ap_const_logic_0,
        m_axi_FRtoBR_Move2_AWADDR => grp_phase2_fu_967_m_axi_FRtoBR_Move2_AWADDR,
        m_axi_FRtoBR_Move2_AWID => grp_phase2_fu_967_m_axi_FRtoBR_Move2_AWID,
        m_axi_FRtoBR_Move2_AWLEN => grp_phase2_fu_967_m_axi_FRtoBR_Move2_AWLEN,
        m_axi_FRtoBR_Move2_AWSIZE => grp_phase2_fu_967_m_axi_FRtoBR_Move2_AWSIZE,
        m_axi_FRtoBR_Move2_AWBURST => grp_phase2_fu_967_m_axi_FRtoBR_Move2_AWBURST,
        m_axi_FRtoBR_Move2_AWLOCK => grp_phase2_fu_967_m_axi_FRtoBR_Move2_AWLOCK,
        m_axi_FRtoBR_Move2_AWCACHE => grp_phase2_fu_967_m_axi_FRtoBR_Move2_AWCACHE,
        m_axi_FRtoBR_Move2_AWPROT => grp_phase2_fu_967_m_axi_FRtoBR_Move2_AWPROT,
        m_axi_FRtoBR_Move2_AWQOS => grp_phase2_fu_967_m_axi_FRtoBR_Move2_AWQOS,
        m_axi_FRtoBR_Move2_AWREGION => grp_phase2_fu_967_m_axi_FRtoBR_Move2_AWREGION,
        m_axi_FRtoBR_Move2_AWUSER => grp_phase2_fu_967_m_axi_FRtoBR_Move2_AWUSER,
        m_axi_FRtoBR_Move2_WVALID => grp_phase2_fu_967_m_axi_FRtoBR_Move2_WVALID,
        m_axi_FRtoBR_Move2_WREADY => ap_const_logic_0,
        m_axi_FRtoBR_Move2_WDATA => grp_phase2_fu_967_m_axi_FRtoBR_Move2_WDATA,
        m_axi_FRtoBR_Move2_WSTRB => grp_phase2_fu_967_m_axi_FRtoBR_Move2_WSTRB,
        m_axi_FRtoBR_Move2_WLAST => grp_phase2_fu_967_m_axi_FRtoBR_Move2_WLAST,
        m_axi_FRtoBR_Move2_WID => grp_phase2_fu_967_m_axi_FRtoBR_Move2_WID,
        m_axi_FRtoBR_Move2_WUSER => grp_phase2_fu_967_m_axi_FRtoBR_Move2_WUSER,
        m_axi_FRtoBR_Move2_ARVALID => grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARVALID,
        m_axi_FRtoBR_Move2_ARREADY => m_axi_FRtoBR_Move2_ARREADY,
        m_axi_FRtoBR_Move2_ARADDR => grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARADDR,
        m_axi_FRtoBR_Move2_ARID => grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARID,
        m_axi_FRtoBR_Move2_ARLEN => grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARLEN,
        m_axi_FRtoBR_Move2_ARSIZE => grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARSIZE,
        m_axi_FRtoBR_Move2_ARBURST => grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARBURST,
        m_axi_FRtoBR_Move2_ARLOCK => grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARLOCK,
        m_axi_FRtoBR_Move2_ARCACHE => grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARCACHE,
        m_axi_FRtoBR_Move2_ARPROT => grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARPROT,
        m_axi_FRtoBR_Move2_ARQOS => grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARQOS,
        m_axi_FRtoBR_Move2_ARREGION => grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARREGION,
        m_axi_FRtoBR_Move2_ARUSER => grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARUSER,
        m_axi_FRtoBR_Move2_RVALID => m_axi_FRtoBR_Move2_RVALID,
        m_axi_FRtoBR_Move2_RREADY => grp_phase2_fu_967_m_axi_FRtoBR_Move2_RREADY,
        m_axi_FRtoBR_Move2_RDATA => m_axi_FRtoBR_Move2_RDATA,
        m_axi_FRtoBR_Move2_RLAST => m_axi_FRtoBR_Move2_RLAST,
        m_axi_FRtoBR_Move2_RID => m_axi_FRtoBR_Move2_RID,
        m_axi_FRtoBR_Move2_RUSER => m_axi_FRtoBR_Move2_RUSER,
        m_axi_FRtoBR_Move2_RRESP => m_axi_FRtoBR_Move2_RRESP,
        m_axi_FRtoBR_Move2_BVALID => ap_const_logic_0,
        m_axi_FRtoBR_Move2_BREADY => grp_phase2_fu_967_m_axi_FRtoBR_Move2_BREADY,
        m_axi_FRtoBR_Move2_BRESP => ap_const_lv2_0,
        m_axi_FRtoBR_Move2_BID => ap_const_lv1_0,
        m_axi_FRtoBR_Move2_BUSER => ap_const_lv1_0,
        FRtoBR_Move2_offset => FRtoBR_Move2_offset,
        m_axi_URFtoDLF_Move2_AWVALID => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_AWVALID,
        m_axi_URFtoDLF_Move2_AWREADY => ap_const_logic_0,
        m_axi_URFtoDLF_Move2_AWADDR => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_AWADDR,
        m_axi_URFtoDLF_Move2_AWID => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_AWID,
        m_axi_URFtoDLF_Move2_AWLEN => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_AWLEN,
        m_axi_URFtoDLF_Move2_AWSIZE => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_AWSIZE,
        m_axi_URFtoDLF_Move2_AWBURST => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_AWBURST,
        m_axi_URFtoDLF_Move2_AWLOCK => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_AWLOCK,
        m_axi_URFtoDLF_Move2_AWCACHE => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_AWCACHE,
        m_axi_URFtoDLF_Move2_AWPROT => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_AWPROT,
        m_axi_URFtoDLF_Move2_AWQOS => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_AWQOS,
        m_axi_URFtoDLF_Move2_AWREGION => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_AWREGION,
        m_axi_URFtoDLF_Move2_AWUSER => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_AWUSER,
        m_axi_URFtoDLF_Move2_WVALID => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_WVALID,
        m_axi_URFtoDLF_Move2_WREADY => ap_const_logic_0,
        m_axi_URFtoDLF_Move2_WDATA => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_WDATA,
        m_axi_URFtoDLF_Move2_WSTRB => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_WSTRB,
        m_axi_URFtoDLF_Move2_WLAST => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_WLAST,
        m_axi_URFtoDLF_Move2_WID => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_WID,
        m_axi_URFtoDLF_Move2_WUSER => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_WUSER,
        m_axi_URFtoDLF_Move2_ARVALID => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARVALID,
        m_axi_URFtoDLF_Move2_ARREADY => m_axi_URFtoDLF_Move2_ARREADY,
        m_axi_URFtoDLF_Move2_ARADDR => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARADDR,
        m_axi_URFtoDLF_Move2_ARID => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARID,
        m_axi_URFtoDLF_Move2_ARLEN => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARLEN,
        m_axi_URFtoDLF_Move2_ARSIZE => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARSIZE,
        m_axi_URFtoDLF_Move2_ARBURST => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARBURST,
        m_axi_URFtoDLF_Move2_ARLOCK => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARLOCK,
        m_axi_URFtoDLF_Move2_ARCACHE => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARCACHE,
        m_axi_URFtoDLF_Move2_ARPROT => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARPROT,
        m_axi_URFtoDLF_Move2_ARQOS => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARQOS,
        m_axi_URFtoDLF_Move2_ARREGION => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARREGION,
        m_axi_URFtoDLF_Move2_ARUSER => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARUSER,
        m_axi_URFtoDLF_Move2_RVALID => m_axi_URFtoDLF_Move2_RVALID,
        m_axi_URFtoDLF_Move2_RREADY => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_RREADY,
        m_axi_URFtoDLF_Move2_RDATA => m_axi_URFtoDLF_Move2_RDATA,
        m_axi_URFtoDLF_Move2_RLAST => m_axi_URFtoDLF_Move2_RLAST,
        m_axi_URFtoDLF_Move2_RID => m_axi_URFtoDLF_Move2_RID,
        m_axi_URFtoDLF_Move2_RUSER => m_axi_URFtoDLF_Move2_RUSER,
        m_axi_URFtoDLF_Move2_RRESP => m_axi_URFtoDLF_Move2_RRESP,
        m_axi_URFtoDLF_Move2_BVALID => ap_const_logic_0,
        m_axi_URFtoDLF_Move2_BREADY => grp_phase2_fu_967_m_axi_URFtoDLF_Move2_BREADY,
        m_axi_URFtoDLF_Move2_BRESP => ap_const_lv2_0,
        m_axi_URFtoDLF_Move2_BID => ap_const_lv1_0,
        m_axi_URFtoDLF_Move2_BUSER => ap_const_lv1_0,
        URFtoDLF_Move2_offset => URFtoDLF_Move2_offset,
        m_axi_URtoDF_Move2_AWVALID => grp_phase2_fu_967_m_axi_URtoDF_Move2_AWVALID,
        m_axi_URtoDF_Move2_AWREADY => ap_const_logic_0,
        m_axi_URtoDF_Move2_AWADDR => grp_phase2_fu_967_m_axi_URtoDF_Move2_AWADDR,
        m_axi_URtoDF_Move2_AWID => grp_phase2_fu_967_m_axi_URtoDF_Move2_AWID,
        m_axi_URtoDF_Move2_AWLEN => grp_phase2_fu_967_m_axi_URtoDF_Move2_AWLEN,
        m_axi_URtoDF_Move2_AWSIZE => grp_phase2_fu_967_m_axi_URtoDF_Move2_AWSIZE,
        m_axi_URtoDF_Move2_AWBURST => grp_phase2_fu_967_m_axi_URtoDF_Move2_AWBURST,
        m_axi_URtoDF_Move2_AWLOCK => grp_phase2_fu_967_m_axi_URtoDF_Move2_AWLOCK,
        m_axi_URtoDF_Move2_AWCACHE => grp_phase2_fu_967_m_axi_URtoDF_Move2_AWCACHE,
        m_axi_URtoDF_Move2_AWPROT => grp_phase2_fu_967_m_axi_URtoDF_Move2_AWPROT,
        m_axi_URtoDF_Move2_AWQOS => grp_phase2_fu_967_m_axi_URtoDF_Move2_AWQOS,
        m_axi_URtoDF_Move2_AWREGION => grp_phase2_fu_967_m_axi_URtoDF_Move2_AWREGION,
        m_axi_URtoDF_Move2_AWUSER => grp_phase2_fu_967_m_axi_URtoDF_Move2_AWUSER,
        m_axi_URtoDF_Move2_WVALID => grp_phase2_fu_967_m_axi_URtoDF_Move2_WVALID,
        m_axi_URtoDF_Move2_WREADY => ap_const_logic_0,
        m_axi_URtoDF_Move2_WDATA => grp_phase2_fu_967_m_axi_URtoDF_Move2_WDATA,
        m_axi_URtoDF_Move2_WSTRB => grp_phase2_fu_967_m_axi_URtoDF_Move2_WSTRB,
        m_axi_URtoDF_Move2_WLAST => grp_phase2_fu_967_m_axi_URtoDF_Move2_WLAST,
        m_axi_URtoDF_Move2_WID => grp_phase2_fu_967_m_axi_URtoDF_Move2_WID,
        m_axi_URtoDF_Move2_WUSER => grp_phase2_fu_967_m_axi_URtoDF_Move2_WUSER,
        m_axi_URtoDF_Move2_ARVALID => grp_phase2_fu_967_m_axi_URtoDF_Move2_ARVALID,
        m_axi_URtoDF_Move2_ARREADY => m_axi_URtoDF_Move2_ARREADY,
        m_axi_URtoDF_Move2_ARADDR => grp_phase2_fu_967_m_axi_URtoDF_Move2_ARADDR,
        m_axi_URtoDF_Move2_ARID => grp_phase2_fu_967_m_axi_URtoDF_Move2_ARID,
        m_axi_URtoDF_Move2_ARLEN => grp_phase2_fu_967_m_axi_URtoDF_Move2_ARLEN,
        m_axi_URtoDF_Move2_ARSIZE => grp_phase2_fu_967_m_axi_URtoDF_Move2_ARSIZE,
        m_axi_URtoDF_Move2_ARBURST => grp_phase2_fu_967_m_axi_URtoDF_Move2_ARBURST,
        m_axi_URtoDF_Move2_ARLOCK => grp_phase2_fu_967_m_axi_URtoDF_Move2_ARLOCK,
        m_axi_URtoDF_Move2_ARCACHE => grp_phase2_fu_967_m_axi_URtoDF_Move2_ARCACHE,
        m_axi_URtoDF_Move2_ARPROT => grp_phase2_fu_967_m_axi_URtoDF_Move2_ARPROT,
        m_axi_URtoDF_Move2_ARQOS => grp_phase2_fu_967_m_axi_URtoDF_Move2_ARQOS,
        m_axi_URtoDF_Move2_ARREGION => grp_phase2_fu_967_m_axi_URtoDF_Move2_ARREGION,
        m_axi_URtoDF_Move2_ARUSER => grp_phase2_fu_967_m_axi_URtoDF_Move2_ARUSER,
        m_axi_URtoDF_Move2_RVALID => m_axi_URtoDF_Move2_RVALID,
        m_axi_URtoDF_Move2_RREADY => grp_phase2_fu_967_m_axi_URtoDF_Move2_RREADY,
        m_axi_URtoDF_Move2_RDATA => m_axi_URtoDF_Move2_RDATA,
        m_axi_URtoDF_Move2_RLAST => m_axi_URtoDF_Move2_RLAST,
        m_axi_URtoDF_Move2_RID => m_axi_URtoDF_Move2_RID,
        m_axi_URtoDF_Move2_RUSER => m_axi_URtoDF_Move2_RUSER,
        m_axi_URtoDF_Move2_RRESP => m_axi_URtoDF_Move2_RRESP,
        m_axi_URtoDF_Move2_BVALID => ap_const_logic_0,
        m_axi_URtoDF_Move2_BREADY => grp_phase2_fu_967_m_axi_URtoDF_Move2_BREADY,
        m_axi_URtoDF_Move2_BRESP => ap_const_lv2_0,
        m_axi_URtoDF_Move2_BID => ap_const_lv1_0,
        m_axi_URtoDF_Move2_BUSER => ap_const_lv1_0,
        URtoDF_Move2_offset => URtoDF_Move2_offset,
        URtoUL_Move2_offset => URtoUL_Move2_offset,
        UBtoDF_Move2_offset => UBtoDF_Move2_offset,
        MergeURtoULandUBtoDF2_offset => MergeURtoULandUBtoDF2_offset,
        Slice_URFtoDLF_Parity_Prun2_offset => Slice_URFtoDLF_Parity_Prun2_offset,
        Slice_URtoDF_Parity_Prun2_offset => Slice_URtoDF_Parity_Prun2_offset,
        P2Buffer_V_flip_dout => P2Buffer_V_flip_dout,
        P2Buffer_V_flip_empty_n => P2Buffer_V_flip_empty_n,
        P2Buffer_V_flip_read => grp_phase2_fu_967_P2Buffer_V_flip_read,
        P2Buffer_V_twist_dout => P2Buffer_V_twist_dout,
        P2Buffer_V_twist_empty_n => P2Buffer_V_twist_empty_n,
        P2Buffer_V_twist_read => grp_phase2_fu_967_P2Buffer_V_twist_read,
        P2Buffer_V_slice_dout => P2Buffer_V_slice_dout,
        P2Buffer_V_slice_empty_n => P2Buffer_V_slice_empty_n,
        P2Buffer_V_slice_read => grp_phase2_fu_967_P2Buffer_V_slice_read,
        P2Buffer_V_parity_dout => P2Buffer_V_parity_dout,
        P2Buffer_V_parity_empty_n => P2Buffer_V_parity_empty_n,
        P2Buffer_V_parity_read => grp_phase2_fu_967_P2Buffer_V_parity_read,
        P2Buffer_V_URFtoDLF_dout => P2Buffer_V_URFtoDLF_dout,
        P2Buffer_V_URFtoDLF_empty_n => P2Buffer_V_URFtoDLF_empty_n,
        P2Buffer_V_URFtoDLF_read => grp_phase2_fu_967_P2Buffer_V_URFtoDLF_read,
        P2Buffer_V_FRtoBR_dout => P2Buffer_V_FRtoBR_dout,
        P2Buffer_V_FRtoBR_empty_n => P2Buffer_V_FRtoBR_empty_n,
        P2Buffer_V_FRtoBR_read => grp_phase2_fu_967_P2Buffer_V_FRtoBR_read,
        P2Buffer_V_URtoDF_dout => P2Buffer_V_URtoDF_dout,
        P2Buffer_V_URtoDF_empty_n => P2Buffer_V_URtoDF_empty_n,
        P2Buffer_V_URtoDF_read => grp_phase2_fu_967_P2Buffer_V_URtoDF_read,
        P2Buffer_V_depthPhas_dout => P2Buffer_V_depthPhas_dout,
        P2Buffer_V_depthPhas_empty_n => P2Buffer_V_depthPhas_empty_n,
        P2Buffer_V_depthPhas_read => grp_phase2_fu_967_P2Buffer_V_depthPhas_read,
        P2Buffer_V_n_dout => P2Buffer_V_n_dout,
        P2Buffer_V_n_empty_n => P2Buffer_V_n_empty_n,
        P2Buffer_V_n_read => grp_phase2_fu_967_P2Buffer_V_n_read,
        P2Buffer_V_i_0_dout => P2Buffer_V_i_0_dout,
        P2Buffer_V_i_0_empty_n => P2Buffer_V_i_0_empty_n,
        P2Buffer_V_i_0_read => grp_phase2_fu_967_P2Buffer_V_i_0_read,
        P2Buffer_V_i_1_dout => P2Buffer_V_i_1_dout,
        P2Buffer_V_i_1_empty_n => P2Buffer_V_i_1_empty_n,
        P2Buffer_V_i_1_read => grp_phase2_fu_967_P2Buffer_V_i_1_read,
        P2Buffer_V_i_2_dout => P2Buffer_V_i_2_dout,
        P2Buffer_V_i_2_empty_n => P2Buffer_V_i_2_empty_n,
        P2Buffer_V_i_2_read => grp_phase2_fu_967_P2Buffer_V_i_2_read,
        P2Buffer_V_i_3_dout => P2Buffer_V_i_3_dout,
        P2Buffer_V_i_3_empty_n => P2Buffer_V_i_3_empty_n,
        P2Buffer_V_i_3_read => grp_phase2_fu_967_P2Buffer_V_i_3_read,
        P2Buffer_V_i_4_dout => P2Buffer_V_i_4_dout,
        P2Buffer_V_i_4_empty_n => P2Buffer_V_i_4_empty_n,
        P2Buffer_V_i_4_read => grp_phase2_fu_967_P2Buffer_V_i_4_read,
        P2Buffer_V_i_5_dout => P2Buffer_V_i_5_dout,
        P2Buffer_V_i_5_empty_n => P2Buffer_V_i_5_empty_n,
        P2Buffer_V_i_5_read => grp_phase2_fu_967_P2Buffer_V_i_5_read,
        P2Buffer_V_i_6_dout => P2Buffer_V_i_6_dout,
        P2Buffer_V_i_6_empty_n => P2Buffer_V_i_6_empty_n,
        P2Buffer_V_i_6_read => grp_phase2_fu_967_P2Buffer_V_i_6_read,
        P2Buffer_V_i_7_dout => P2Buffer_V_i_7_dout,
        P2Buffer_V_i_7_empty_n => P2Buffer_V_i_7_empty_n,
        P2Buffer_V_i_7_read => grp_phase2_fu_967_P2Buffer_V_i_7_read,
        P2Buffer_V_i_8_dout => P2Buffer_V_i_8_dout,
        P2Buffer_V_i_8_empty_n => P2Buffer_V_i_8_empty_n,
        P2Buffer_V_i_8_read => grp_phase2_fu_967_P2Buffer_V_i_8_read,
        P2Buffer_V_i_9_dout => P2Buffer_V_i_9_dout,
        P2Buffer_V_i_9_empty_n => P2Buffer_V_i_9_empty_n,
        P2Buffer_V_i_9_read => grp_phase2_fu_967_P2Buffer_V_i_9_read,
        P2Buffer_V_i_10_dout => P2Buffer_V_i_10_dout,
        P2Buffer_V_i_10_empty_n => P2Buffer_V_i_10_empty_n,
        P2Buffer_V_i_10_read => grp_phase2_fu_967_P2Buffer_V_i_10_read,
        P2Buffer_V_i_11_dout => P2Buffer_V_i_11_dout,
        P2Buffer_V_i_11_empty_n => P2Buffer_V_i_11_empty_n,
        P2Buffer_V_i_11_read => grp_phase2_fu_967_P2Buffer_V_i_11_read,
        P2Buffer_V_i_12_dout => P2Buffer_V_i_12_dout,
        P2Buffer_V_i_12_empty_n => P2Buffer_V_i_12_empty_n,
        P2Buffer_V_i_12_read => grp_phase2_fu_967_P2Buffer_V_i_12_read,
        P2Buffer_V_i_13_dout => P2Buffer_V_i_13_dout,
        P2Buffer_V_i_13_empty_n => P2Buffer_V_i_13_empty_n,
        P2Buffer_V_i_13_read => grp_phase2_fu_967_P2Buffer_V_i_13_read,
        P2Buffer_V_i_14_dout => P2Buffer_V_i_14_dout,
        P2Buffer_V_i_14_empty_n => P2Buffer_V_i_14_empty_n,
        P2Buffer_V_i_14_read => grp_phase2_fu_967_P2Buffer_V_i_14_read,
        P2Buffer_V_i_15_dout => P2Buffer_V_i_15_dout,
        P2Buffer_V_i_15_empty_n => P2Buffer_V_i_15_empty_n,
        P2Buffer_V_i_15_read => grp_phase2_fu_967_P2Buffer_V_i_15_read,
        P2Buffer_V_i_16_dout => P2Buffer_V_i_16_dout,
        P2Buffer_V_i_16_empty_n => P2Buffer_V_i_16_empty_n,
        P2Buffer_V_i_16_read => grp_phase2_fu_967_P2Buffer_V_i_16_read,
        P2Buffer_V_i_17_dout => P2Buffer_V_i_17_dout,
        P2Buffer_V_i_17_empty_n => P2Buffer_V_i_17_empty_n,
        P2Buffer_V_i_17_read => grp_phase2_fu_967_P2Buffer_V_i_17_read,
        P2Buffer_V_i_18_dout => P2Buffer_V_i_18_dout,
        P2Buffer_V_i_18_empty_n => P2Buffer_V_i_18_empty_n,
        P2Buffer_V_i_18_read => grp_phase2_fu_967_P2Buffer_V_i_18_read,
        P2Buffer_V_i_19_dout => P2Buffer_V_i_19_dout,
        P2Buffer_V_i_19_empty_n => P2Buffer_V_i_19_empty_n,
        P2Buffer_V_i_19_read => grp_phase2_fu_967_P2Buffer_V_i_19_read,
        P2Buffer_V_i_20_dout => P2Buffer_V_i_20_dout,
        P2Buffer_V_i_20_empty_n => P2Buffer_V_i_20_empty_n,
        P2Buffer_V_i_20_read => grp_phase2_fu_967_P2Buffer_V_i_20_read,
        P2Buffer_V_i_21_dout => P2Buffer_V_i_21_dout,
        P2Buffer_V_i_21_empty_n => P2Buffer_V_i_21_empty_n,
        P2Buffer_V_i_21_read => grp_phase2_fu_967_P2Buffer_V_i_21_read,
        P2Buffer_V_i_22_dout => P2Buffer_V_i_22_dout,
        P2Buffer_V_i_22_empty_n => P2Buffer_V_i_22_empty_n,
        P2Buffer_V_i_22_read => grp_phase2_fu_967_P2Buffer_V_i_22_read,
        P2Buffer_V_i_23_dout => P2Buffer_V_i_23_dout,
        P2Buffer_V_i_23_empty_n => P2Buffer_V_i_23_empty_n,
        P2Buffer_V_i_23_read => grp_phase2_fu_967_P2Buffer_V_i_23_read,
        P2Buffer_V_i_24_dout => P2Buffer_V_i_24_dout,
        P2Buffer_V_i_24_empty_n => P2Buffer_V_i_24_empty_n,
        P2Buffer_V_i_24_read => grp_phase2_fu_967_P2Buffer_V_i_24_read,
        P2Buffer_V_i_25_dout => P2Buffer_V_i_25_dout,
        P2Buffer_V_i_25_empty_n => P2Buffer_V_i_25_empty_n,
        P2Buffer_V_i_25_read => grp_phase2_fu_967_P2Buffer_V_i_25_read,
        P2Buffer_V_i_26_dout => P2Buffer_V_i_26_dout,
        P2Buffer_V_i_26_empty_n => P2Buffer_V_i_26_empty_n,
        P2Buffer_V_i_26_read => grp_phase2_fu_967_P2Buffer_V_i_26_read,
        P2Buffer_V_i_27_dout => P2Buffer_V_i_27_dout,
        P2Buffer_V_i_27_empty_n => P2Buffer_V_i_27_empty_n,
        P2Buffer_V_i_27_read => grp_phase2_fu_967_P2Buffer_V_i_27_read,
        P2Buffer_V_i_28_dout => P2Buffer_V_i_28_dout,
        P2Buffer_V_i_28_empty_n => P2Buffer_V_i_28_empty_n,
        P2Buffer_V_i_28_read => grp_phase2_fu_967_P2Buffer_V_i_28_read,
        P2Buffer_V_i_29_dout => P2Buffer_V_i_29_dout,
        P2Buffer_V_i_29_empty_n => P2Buffer_V_i_29_empty_n,
        P2Buffer_V_i_29_read => grp_phase2_fu_967_P2Buffer_V_i_29_read,
        P2Buffer_V_i_30_dout => P2Buffer_V_i_30_dout,
        P2Buffer_V_i_30_empty_n => P2Buffer_V_i_30_empty_n,
        P2Buffer_V_i_30_read => grp_phase2_fu_967_P2Buffer_V_i_30_read,
        search_sol_i_address0 => grp_phase2_fu_967_search_sol_i_address0,
        search_sol_i_ce0 => grp_phase2_fu_967_search_sol_i_ce0,
        search_sol_i_we0 => grp_phase2_fu_967_search_sol_i_we0,
        search_sol_i_d0 => grp_phase2_fu_967_search_sol_i_d0,
        search_sol_depthPhas => grp_phase2_fu_967_search_sol_depthPhas,
        search_sol_depthPhas_ap_vld => grp_phase2_fu_967_search_sol_depthPhas_ap_vld,
        a => grp_phase2_fu_967_a,
        a_ap_vld => grp_phase2_fu_967_a_ap_vld,
        ap_return => grp_phase2_fu_967_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_phase2_fu_967_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_phase2_fu_967_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_phase2_fu_967_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_phase2_fu_967_ap_ready = ap_const_logic_1)) then 
                    grp_phase2_fu_967_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_i_reg_956_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                i_i_reg_956 <= i_reg_1503;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (((or_cond_fu_1322_p2 = ap_const_lv1_0) and (tmp_180_reg_1431 = ap_const_lv1_0)) or ((tmp_217_reg_1445 = ap_const_lv1_1) and (tmp_180_reg_1431 = ap_const_lv1_0))))) then 
                i_i_reg_956 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (((or_cond_reg_1493 = ap_const_lv1_0) and (tmp_180_reg_1431 = ap_const_lv1_0)) or ((tmp_217_reg_1445 = ap_const_lv1_1) and (tmp_180_reg_1431 = ap_const_lv1_0))))) then
                i_reg_1503 <= i_fu_1337_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (tmp_217_reg_1445 = ap_const_lv1_0) and (tmp_180_reg_1431 = ap_const_lv1_0))) then
                or_cond_reg_1493 <= or_cond_fu_1322_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_phase2_fu_967_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                s_reg_1424 <= s_fu_1103_p1;
                tmp_180_reg_1431 <= grp_phase2_fu_967_ap_return(7 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_phase2_fu_967_search_sol_depthPhas_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                search_sol_depthPhas <= grp_phase2_fu_967_search_sol_depthPhas;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                tmp_181_reg_1449 <= tmp_181_fu_1154_p1;
                tmp_182_reg_1454 <= tmp_182_fu_1158_p1(7 downto 7);
                tmp_184_reg_1460 <= mul9_fu_1148_p2(17 downto 10);
                tmp_187_reg_1465 <= tmp_187_fu_1186_p1;
                tmp_188_reg_1470 <= tmp_188_fu_1190_p1(7 downto 7);
                tmp_190_reg_1476 <= mul_fu_1180_p2(17 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                tmp_217_reg_1445 <= tmp_217_fu_1139_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                tmp_223_reg_1481 <= tmp_223_fu_1251_p3;
                tmp_226_reg_1487 <= tmp_226_fu_1301_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (((tmp_i_fu_1332_p2 = ap_const_lv1_1) and (or_cond_reg_1493 = ap_const_lv1_0) and (tmp_180_reg_1431 = ap_const_lv1_0)) or ((tmp_i_fu_1332_p2 = ap_const_lv1_1) and (tmp_217_reg_1445 = ap_const_lv1_1) and (tmp_180_reg_1431 = ap_const_lv1_0))))) then
                    tmp_i_45_reg_1508(6 downto 0) <= tmp_i_45_fu_1343_p1(6 downto 0);
            end if;
        end if;
    end process;
    tmp_i_45_reg_1508(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, grp_phase2_fu_967_ap_done, tmp_180_fu_1107_p3, tmp_180_reg_1431, tmp_217_reg_1445, or_cond_fu_1322_p2, or_cond_reg_1493, ap_CS_fsm_state7, ap_CS_fsm_state8, tmp_i_fu_1332_p2, tmp_1_nbreadreq_fu_816_p42)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((tmp_180_fu_1107_p3 = ap_const_lv1_1) and (grp_phase2_fu_967_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                elsif (((grp_phase2_fu_967_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_180_fu_1107_p3 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (((tmp_1_nbreadreq_fu_816_p42 = ap_const_lv1_1) and (or_cond_fu_1322_p2 = ap_const_lv1_1) and (tmp_217_reg_1445 = ap_const_lv1_0)) or ((tmp_1_nbreadreq_fu_816_p42 = ap_const_lv1_1) and (tmp_180_reg_1431 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and ((tmp_180_reg_1431 = ap_const_lv1_1) or (tmp_i_fu_1332_p2 = ap_const_lv1_0) or ((or_cond_reg_1493 = ap_const_lv1_1) and (tmp_217_reg_1445 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;

    P2Buffer_V_FRtoBR_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_FRtoBR_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_FRtoBR_read <= grp_phase2_fu_967_P2Buffer_V_FRtoBR_read;
        else 
            P2Buffer_V_FRtoBR_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_URFtoDLF_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_URFtoDLF_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_URFtoDLF_read <= grp_phase2_fu_967_P2Buffer_V_URFtoDLF_read;
        else 
            P2Buffer_V_URFtoDLF_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_URtoDF_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_URtoDF_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_URtoDF_read <= grp_phase2_fu_967_P2Buffer_V_URtoDF_read;
        else 
            P2Buffer_V_URtoDF_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_depthPhas_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_depthPhas_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_depthPhas_read <= grp_phase2_fu_967_P2Buffer_V_depthPhas_read;
        else 
            P2Buffer_V_depthPhas_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_flip_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_flip_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_flip_read <= grp_phase2_fu_967_P2Buffer_V_flip_read;
        else 
            P2Buffer_V_flip_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_0_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_0_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_0_read <= grp_phase2_fu_967_P2Buffer_V_i_0_read;
        else 
            P2Buffer_V_i_0_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_10_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_10_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_10_read <= grp_phase2_fu_967_P2Buffer_V_i_10_read;
        else 
            P2Buffer_V_i_10_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_11_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_11_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_11_read <= grp_phase2_fu_967_P2Buffer_V_i_11_read;
        else 
            P2Buffer_V_i_11_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_12_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_12_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_12_read <= grp_phase2_fu_967_P2Buffer_V_i_12_read;
        else 
            P2Buffer_V_i_12_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_13_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_13_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_13_read <= grp_phase2_fu_967_P2Buffer_V_i_13_read;
        else 
            P2Buffer_V_i_13_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_14_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_14_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_14_read <= grp_phase2_fu_967_P2Buffer_V_i_14_read;
        else 
            P2Buffer_V_i_14_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_15_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_15_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_15_read <= grp_phase2_fu_967_P2Buffer_V_i_15_read;
        else 
            P2Buffer_V_i_15_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_16_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_16_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_16_read <= grp_phase2_fu_967_P2Buffer_V_i_16_read;
        else 
            P2Buffer_V_i_16_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_17_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_17_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_17_read <= grp_phase2_fu_967_P2Buffer_V_i_17_read;
        else 
            P2Buffer_V_i_17_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_18_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_18_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_18_read <= grp_phase2_fu_967_P2Buffer_V_i_18_read;
        else 
            P2Buffer_V_i_18_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_19_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_19_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_19_read <= grp_phase2_fu_967_P2Buffer_V_i_19_read;
        else 
            P2Buffer_V_i_19_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_1_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_1_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_1_read <= grp_phase2_fu_967_P2Buffer_V_i_1_read;
        else 
            P2Buffer_V_i_1_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_20_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_20_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_20_read <= grp_phase2_fu_967_P2Buffer_V_i_20_read;
        else 
            P2Buffer_V_i_20_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_21_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_21_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_21_read <= grp_phase2_fu_967_P2Buffer_V_i_21_read;
        else 
            P2Buffer_V_i_21_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_22_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_22_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_22_read <= grp_phase2_fu_967_P2Buffer_V_i_22_read;
        else 
            P2Buffer_V_i_22_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_23_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_23_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_23_read <= grp_phase2_fu_967_P2Buffer_V_i_23_read;
        else 
            P2Buffer_V_i_23_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_24_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_24_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_24_read <= grp_phase2_fu_967_P2Buffer_V_i_24_read;
        else 
            P2Buffer_V_i_24_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_25_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_25_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_25_read <= grp_phase2_fu_967_P2Buffer_V_i_25_read;
        else 
            P2Buffer_V_i_25_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_26_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_26_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_26_read <= grp_phase2_fu_967_P2Buffer_V_i_26_read;
        else 
            P2Buffer_V_i_26_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_27_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_27_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_27_read <= grp_phase2_fu_967_P2Buffer_V_i_27_read;
        else 
            P2Buffer_V_i_27_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_28_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_28_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_28_read <= grp_phase2_fu_967_P2Buffer_V_i_28_read;
        else 
            P2Buffer_V_i_28_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_29_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_29_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_29_read <= grp_phase2_fu_967_P2Buffer_V_i_29_read;
        else 
            P2Buffer_V_i_29_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_2_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_2_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_2_read <= grp_phase2_fu_967_P2Buffer_V_i_2_read;
        else 
            P2Buffer_V_i_2_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_30_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_30_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_30_read <= grp_phase2_fu_967_P2Buffer_V_i_30_read;
        else 
            P2Buffer_V_i_30_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_3_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_3_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_3_read <= grp_phase2_fu_967_P2Buffer_V_i_3_read;
        else 
            P2Buffer_V_i_3_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_4_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_4_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_4_read <= grp_phase2_fu_967_P2Buffer_V_i_4_read;
        else 
            P2Buffer_V_i_4_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_5_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_5_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_5_read <= grp_phase2_fu_967_P2Buffer_V_i_5_read;
        else 
            P2Buffer_V_i_5_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_6_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_6_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_6_read <= grp_phase2_fu_967_P2Buffer_V_i_6_read;
        else 
            P2Buffer_V_i_6_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_7_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_7_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_7_read <= grp_phase2_fu_967_P2Buffer_V_i_7_read;
        else 
            P2Buffer_V_i_7_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_8_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_8_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_8_read <= grp_phase2_fu_967_P2Buffer_V_i_8_read;
        else 
            P2Buffer_V_i_8_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_i_9_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_i_9_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_i_9_read <= grp_phase2_fu_967_P2Buffer_V_i_9_read;
        else 
            P2Buffer_V_i_9_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_n_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_n_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_n_read <= grp_phase2_fu_967_P2Buffer_V_n_read;
        else 
            P2Buffer_V_n_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_parity_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_parity_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_parity_read <= grp_phase2_fu_967_P2Buffer_V_parity_read;
        else 
            P2Buffer_V_parity_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_slice_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_slice_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_slice_read <= grp_phase2_fu_967_P2Buffer_V_slice_read;
        else 
            P2Buffer_V_slice_read <= ap_const_logic_0;
        end if; 
    end process;


    P2Buffer_V_twist_read_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_P2Buffer_V_twist_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            P2Buffer_V_twist_read <= grp_phase2_fu_967_P2Buffer_V_twist_read;
        else 
            P2Buffer_V_twist_read <= ap_const_logic_0;
        end if; 
    end process;

    P3Buffer_0_FRtoBR_address0 <= grp_phase2_fu_967_P3Buffer_0_FRtoBR_address0;
    P3Buffer_0_FRtoBR_ce0 <= grp_phase2_fu_967_P3Buffer_0_FRtoBR_ce0;
    P3Buffer_0_FRtoBR_d0 <= grp_phase2_fu_967_P3Buffer_0_FRtoBR_d0;
    P3Buffer_0_FRtoBR_we0 <= grp_phase2_fu_967_P3Buffer_0_FRtoBR_we0;
    P3Buffer_0_URFtoDLF_address0 <= grp_phase2_fu_967_P3Buffer_0_URFtoDLF_address0;
    P3Buffer_0_URFtoDLF_ce0 <= grp_phase2_fu_967_P3Buffer_0_URFtoDLF_ce0;
    P3Buffer_0_URFtoDLF_d0 <= grp_phase2_fu_967_P3Buffer_0_URFtoDLF_d0;
    P3Buffer_0_URFtoDLF_we0 <= grp_phase2_fu_967_P3Buffer_0_URFtoDLF_we0;
    P3Buffer_0_URtoDF_address0 <= grp_phase2_fu_967_P3Buffer_0_URtoDF_address0;
    P3Buffer_0_URtoDF_ce0 <= grp_phase2_fu_967_P3Buffer_0_URtoDF_ce0;
    P3Buffer_0_URtoDF_d0 <= grp_phase2_fu_967_P3Buffer_0_URtoDF_d0;
    P3Buffer_0_URtoDF_we0 <= grp_phase2_fu_967_P3Buffer_0_URtoDF_we0;
    P3Buffer_0_i_address0 <= grp_phase2_fu_967_P3Buffer_0_i_address0;
    P3Buffer_0_i_address1 <= grp_phase2_fu_967_P3Buffer_0_i_address1;
    P3Buffer_0_i_ce0 <= grp_phase2_fu_967_P3Buffer_0_i_ce0;
    P3Buffer_0_i_ce1 <= grp_phase2_fu_967_P3Buffer_0_i_ce1;
    P3Buffer_0_i_d0 <= grp_phase2_fu_967_P3Buffer_0_i_d0;
    P3Buffer_0_i_d1 <= grp_phase2_fu_967_P3Buffer_0_i_d1;
    P3Buffer_0_i_we0 <= grp_phase2_fu_967_P3Buffer_0_i_we0;
    P3Buffer_0_i_we1 <= grp_phase2_fu_967_P3Buffer_0_i_we1;
    P3Buffer_0_n_address0 <= grp_phase2_fu_967_P3Buffer_0_n_address0;
    P3Buffer_0_n_ce0 <= grp_phase2_fu_967_P3Buffer_0_n_ce0;
    P3Buffer_0_n_d0 <= grp_phase2_fu_967_P3Buffer_0_n_d0;
    P3Buffer_0_n_we0 <= grp_phase2_fu_967_P3Buffer_0_n_we0;
    P3Buffer_0_parity_address0 <= grp_phase2_fu_967_P3Buffer_0_parity_address0;
    P3Buffer_0_parity_ce0 <= grp_phase2_fu_967_P3Buffer_0_parity_ce0;
    P3Buffer_0_parity_d0 <= grp_phase2_fu_967_P3Buffer_0_parity_d0;
    P3Buffer_0_parity_we0 <= grp_phase2_fu_967_P3Buffer_0_parity_we0;

    a_assign_proc : process(ap_CS_fsm_state3, tmp_180_reg_1431, tmp_217_reg_1445, or_cond_reg_1493, ap_CS_fsm_state8, tmp_i_fu_1332_p2, grp_phase2_fu_967_a, grp_phase2_fu_967_a_ap_vld)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (((tmp_i_fu_1332_p2 = ap_const_lv1_0) and (or_cond_reg_1493 = ap_const_lv1_0) and (tmp_180_reg_1431 = ap_const_lv1_0)) or ((tmp_217_reg_1445 = ap_const_lv1_1) and (tmp_i_fu_1332_p2 = ap_const_lv1_0) and (tmp_180_reg_1431 = ap_const_lv1_0))))) then 
            a <= ap_const_lv32_FFFFFFFE;
        elsif (((grp_phase2_fu_967_a_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            a <= grp_phase2_fu_967_a;
        else 
            a <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    a_ap_vld_assign_proc : process(ap_CS_fsm_state3, tmp_180_reg_1431, tmp_217_reg_1445, or_cond_reg_1493, ap_CS_fsm_state8, tmp_i_fu_1332_p2, grp_phase2_fu_967_a_ap_vld)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (((tmp_i_fu_1332_p2 = ap_const_lv1_0) and (or_cond_reg_1493 = ap_const_lv1_0) and (tmp_180_reg_1431 = ap_const_lv1_0)) or ((tmp_217_reg_1445 = ap_const_lv1_1) and (tmp_i_fu_1332_p2 = ap_const_lv1_0) and (tmp_180_reg_1431 = ap_const_lv1_0))))) then 
            a_ap_vld <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            a_ap_vld <= grp_phase2_fu_967_a_ap_vld;
        else 
            a_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_180_reg_1431, tmp_217_reg_1445, or_cond_reg_1493, ap_CS_fsm_state8, tmp_i_fu_1332_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state8) and ((tmp_180_reg_1431 = ap_const_lv1_1) or (tmp_i_fu_1332_p2 = ap_const_lv1_0) or ((or_cond_reg_1493 = ap_const_lv1_1) and (tmp_217_reg_1445 = ap_const_lv1_0)))) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(tmp_180_reg_1431, tmp_217_reg_1445, or_cond_reg_1493, ap_CS_fsm_state8, tmp_i_fu_1332_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and ((tmp_180_reg_1431 = ap_const_lv1_1) or (tmp_i_fu_1332_p2 = ap_const_lv1_0) or ((or_cond_reg_1493 = ap_const_lv1_1) and (tmp_217_reg_1445 = ap_const_lv1_0))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    encode_array_address0 <= tmp_i_45_reg_1508(5 - 1 downto 0);

    encode_array_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            encode_array_ce0 <= ap_const_logic_1;
        else 
            encode_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    encode_array_d0 <= search_sol_i_q0;

    encode_array_we0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            encode_array_we0 <= ap_const_logic_1;
        else 
            encode_array_we0 <= ap_const_logic_0;
        end if; 
    end process;

    encode_length <= s_reg_1424;

    encode_length_ap_vld_assign_proc : process(tmp_180_reg_1431, tmp_217_reg_1445, or_cond_reg_1493, ap_CS_fsm_state8, tmp_i_fu_1332_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (((tmp_i_fu_1332_p2 = ap_const_lv1_0) and (or_cond_reg_1493 = ap_const_lv1_0) and (tmp_180_reg_1431 = ap_const_lv1_0)) or ((tmp_217_reg_1445 = ap_const_lv1_1) and (tmp_i_fu_1332_p2 = ap_const_lv1_0) and (tmp_180_reg_1431 = ap_const_lv1_0))))) then 
            encode_length_ap_vld <= ap_const_logic_1;
        else 
            encode_length_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    grp_phase2_fu_967_ap_start <= grp_phase2_fu_967_ap_start_reg;
    i_fu_1337_p2 <= std_logic_vector(unsigned(i_i_reg_956) + unsigned(ap_const_lv7_1));
    i_i_cast_fu_1328_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i_reg_956),8));
    m_axi_FRtoBR_Move2_ARADDR <= grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARADDR;
    m_axi_FRtoBR_Move2_ARBURST <= grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARBURST;
    m_axi_FRtoBR_Move2_ARCACHE <= grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARCACHE;
    m_axi_FRtoBR_Move2_ARID <= grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARID;
    m_axi_FRtoBR_Move2_ARLEN <= grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARLEN;
    m_axi_FRtoBR_Move2_ARLOCK <= grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARLOCK;
    m_axi_FRtoBR_Move2_ARPROT <= grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARPROT;
    m_axi_FRtoBR_Move2_ARQOS <= grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARQOS;
    m_axi_FRtoBR_Move2_ARREGION <= grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARREGION;
    m_axi_FRtoBR_Move2_ARSIZE <= grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARSIZE;
    m_axi_FRtoBR_Move2_ARUSER <= grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARUSER;

    m_axi_FRtoBR_Move2_ARVALID_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARVALID, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_FRtoBR_Move2_ARVALID <= grp_phase2_fu_967_m_axi_FRtoBR_Move2_ARVALID;
        else 
            m_axi_FRtoBR_Move2_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_FRtoBR_Move2_AWADDR <= ap_const_lv32_0;
    m_axi_FRtoBR_Move2_AWBURST <= ap_const_lv2_0;
    m_axi_FRtoBR_Move2_AWCACHE <= ap_const_lv4_0;
    m_axi_FRtoBR_Move2_AWID <= ap_const_lv1_0;
    m_axi_FRtoBR_Move2_AWLEN <= ap_const_lv32_0;
    m_axi_FRtoBR_Move2_AWLOCK <= ap_const_lv2_0;
    m_axi_FRtoBR_Move2_AWPROT <= ap_const_lv3_0;
    m_axi_FRtoBR_Move2_AWQOS <= ap_const_lv4_0;
    m_axi_FRtoBR_Move2_AWREGION <= ap_const_lv4_0;
    m_axi_FRtoBR_Move2_AWSIZE <= ap_const_lv3_0;
    m_axi_FRtoBR_Move2_AWUSER <= ap_const_lv1_0;
    m_axi_FRtoBR_Move2_AWVALID <= ap_const_logic_0;
    m_axi_FRtoBR_Move2_BREADY <= ap_const_logic_0;

    m_axi_FRtoBR_Move2_RREADY_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_m_axi_FRtoBR_Move2_RREADY, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_FRtoBR_Move2_RREADY <= grp_phase2_fu_967_m_axi_FRtoBR_Move2_RREADY;
        else 
            m_axi_FRtoBR_Move2_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_FRtoBR_Move2_WDATA <= ap_const_lv16_0;
    m_axi_FRtoBR_Move2_WID <= ap_const_lv1_0;
    m_axi_FRtoBR_Move2_WLAST <= ap_const_logic_0;
    m_axi_FRtoBR_Move2_WSTRB <= ap_const_lv2_0;
    m_axi_FRtoBR_Move2_WUSER <= ap_const_lv1_0;
    m_axi_FRtoBR_Move2_WVALID <= ap_const_logic_0;
    m_axi_URFtoDLF_Move2_ARADDR <= grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARADDR;
    m_axi_URFtoDLF_Move2_ARBURST <= grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARBURST;
    m_axi_URFtoDLF_Move2_ARCACHE <= grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARCACHE;
    m_axi_URFtoDLF_Move2_ARID <= grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARID;
    m_axi_URFtoDLF_Move2_ARLEN <= grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARLEN;
    m_axi_URFtoDLF_Move2_ARLOCK <= grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARLOCK;
    m_axi_URFtoDLF_Move2_ARPROT <= grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARPROT;
    m_axi_URFtoDLF_Move2_ARQOS <= grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARQOS;
    m_axi_URFtoDLF_Move2_ARREGION <= grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARREGION;
    m_axi_URFtoDLF_Move2_ARSIZE <= grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARSIZE;
    m_axi_URFtoDLF_Move2_ARUSER <= grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARUSER;

    m_axi_URFtoDLF_Move2_ARVALID_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARVALID, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_URFtoDLF_Move2_ARVALID <= grp_phase2_fu_967_m_axi_URFtoDLF_Move2_ARVALID;
        else 
            m_axi_URFtoDLF_Move2_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_URFtoDLF_Move2_AWADDR <= ap_const_lv32_0;
    m_axi_URFtoDLF_Move2_AWBURST <= ap_const_lv2_0;
    m_axi_URFtoDLF_Move2_AWCACHE <= ap_const_lv4_0;
    m_axi_URFtoDLF_Move2_AWID <= ap_const_lv1_0;
    m_axi_URFtoDLF_Move2_AWLEN <= ap_const_lv32_0;
    m_axi_URFtoDLF_Move2_AWLOCK <= ap_const_lv2_0;
    m_axi_URFtoDLF_Move2_AWPROT <= ap_const_lv3_0;
    m_axi_URFtoDLF_Move2_AWQOS <= ap_const_lv4_0;
    m_axi_URFtoDLF_Move2_AWREGION <= ap_const_lv4_0;
    m_axi_URFtoDLF_Move2_AWSIZE <= ap_const_lv3_0;
    m_axi_URFtoDLF_Move2_AWUSER <= ap_const_lv1_0;
    m_axi_URFtoDLF_Move2_AWVALID <= ap_const_logic_0;
    m_axi_URFtoDLF_Move2_BREADY <= ap_const_logic_0;

    m_axi_URFtoDLF_Move2_RREADY_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_m_axi_URFtoDLF_Move2_RREADY, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_URFtoDLF_Move2_RREADY <= grp_phase2_fu_967_m_axi_URFtoDLF_Move2_RREADY;
        else 
            m_axi_URFtoDLF_Move2_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_URFtoDLF_Move2_WDATA <= ap_const_lv16_0;
    m_axi_URFtoDLF_Move2_WID <= ap_const_lv1_0;
    m_axi_URFtoDLF_Move2_WLAST <= ap_const_logic_0;
    m_axi_URFtoDLF_Move2_WSTRB <= ap_const_lv2_0;
    m_axi_URFtoDLF_Move2_WUSER <= ap_const_lv1_0;
    m_axi_URFtoDLF_Move2_WVALID <= ap_const_logic_0;
    m_axi_URtoDF_Move2_ARADDR <= grp_phase2_fu_967_m_axi_URtoDF_Move2_ARADDR;
    m_axi_URtoDF_Move2_ARBURST <= grp_phase2_fu_967_m_axi_URtoDF_Move2_ARBURST;
    m_axi_URtoDF_Move2_ARCACHE <= grp_phase2_fu_967_m_axi_URtoDF_Move2_ARCACHE;
    m_axi_URtoDF_Move2_ARID <= grp_phase2_fu_967_m_axi_URtoDF_Move2_ARID;
    m_axi_URtoDF_Move2_ARLEN <= grp_phase2_fu_967_m_axi_URtoDF_Move2_ARLEN;
    m_axi_URtoDF_Move2_ARLOCK <= grp_phase2_fu_967_m_axi_URtoDF_Move2_ARLOCK;
    m_axi_URtoDF_Move2_ARPROT <= grp_phase2_fu_967_m_axi_URtoDF_Move2_ARPROT;
    m_axi_URtoDF_Move2_ARQOS <= grp_phase2_fu_967_m_axi_URtoDF_Move2_ARQOS;
    m_axi_URtoDF_Move2_ARREGION <= grp_phase2_fu_967_m_axi_URtoDF_Move2_ARREGION;
    m_axi_URtoDF_Move2_ARSIZE <= grp_phase2_fu_967_m_axi_URtoDF_Move2_ARSIZE;
    m_axi_URtoDF_Move2_ARUSER <= grp_phase2_fu_967_m_axi_URtoDF_Move2_ARUSER;

    m_axi_URtoDF_Move2_ARVALID_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_m_axi_URtoDF_Move2_ARVALID, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_URtoDF_Move2_ARVALID <= grp_phase2_fu_967_m_axi_URtoDF_Move2_ARVALID;
        else 
            m_axi_URtoDF_Move2_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_URtoDF_Move2_AWADDR <= ap_const_lv32_0;
    m_axi_URtoDF_Move2_AWBURST <= ap_const_lv2_0;
    m_axi_URtoDF_Move2_AWCACHE <= ap_const_lv4_0;
    m_axi_URtoDF_Move2_AWID <= ap_const_lv1_0;
    m_axi_URtoDF_Move2_AWLEN <= ap_const_lv32_0;
    m_axi_URtoDF_Move2_AWLOCK <= ap_const_lv2_0;
    m_axi_URtoDF_Move2_AWPROT <= ap_const_lv3_0;
    m_axi_URtoDF_Move2_AWQOS <= ap_const_lv4_0;
    m_axi_URtoDF_Move2_AWREGION <= ap_const_lv4_0;
    m_axi_URtoDF_Move2_AWSIZE <= ap_const_lv3_0;
    m_axi_URtoDF_Move2_AWUSER <= ap_const_lv1_0;
    m_axi_URtoDF_Move2_AWVALID <= ap_const_logic_0;
    m_axi_URtoDF_Move2_BREADY <= ap_const_logic_0;

    m_axi_URtoDF_Move2_RREADY_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_m_axi_URtoDF_Move2_RREADY, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_URtoDF_Move2_RREADY <= grp_phase2_fu_967_m_axi_URtoDF_Move2_RREADY;
        else 
            m_axi_URtoDF_Move2_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_URtoDF_Move2_WDATA <= ap_const_lv16_0;
    m_axi_URtoDF_Move2_WID <= ap_const_lv1_0;
    m_axi_URtoDF_Move2_WLAST <= ap_const_logic_0;
    m_axi_URtoDF_Move2_WSTRB <= ap_const_lv2_0;
    m_axi_URtoDF_Move2_WUSER <= ap_const_lv1_0;
    m_axi_URtoDF_Move2_WVALID <= ap_const_logic_0;
    mul9_fu_1148_p1 <= sext8_cast_fu_1144_p0;
    mul9_fu_1148_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv18_156) * signed(mul9_fu_1148_p1))), 18));
    mul_fu_1180_p1 <= sext_cast_fu_1176_p0;
    mul_fu_1180_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv18_156) * signed(mul_fu_1180_p1))), 18));
    neg_mul2_fu_1208_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(tmp_181_reg_1449));
    neg_mul_fu_1258_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(tmp_187_reg_1465));
    neg_ti2_fu_1241_p2 <= std_logic_vector(unsigned(ap_const_lv7_0) - unsigned(tmp_185_fu_1237_p1));
    neg_ti_fu_1291_p2 <= std_logic_vector(unsigned(ap_const_lv7_0) - unsigned(tmp_191_fu_1287_p1));
    or_cond_fu_1322_p2 <= (tmp_220_fu_1317_p2 or tmp_218_fu_1308_p2);
    p_v1_fu_1280_p3 <= 
        tmp_224_fu_1273_p1 when (tmp_188_reg_1470(0) = '1') else 
        tmp_225_fu_1277_p1;
    p_v_fu_1230_p3 <= 
        tmp_221_fu_1223_p1 when (tmp_182_reg_1454(0) = '1') else 
        tmp_222_fu_1227_p1;
    s_fu_1103_p1 <= grp_phase2_fu_967_ap_return(8 - 1 downto 0);

    search_sol_i_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state8, tmp_i_45_fu_1343_p1, grp_phase2_fu_967_search_sol_i_address0, tmp_215_fu_1129_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            search_sol_i_address0 <= tmp_i_45_fu_1343_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            search_sol_i_address0 <= tmp_215_fu_1129_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            search_sol_i_address0 <= grp_phase2_fu_967_search_sol_i_address0;
        else 
            search_sol_i_address0 <= "XXXXX";
        end if; 
    end process;

    search_sol_i_address1 <= tmp_216_fu_1134_p1(5 - 1 downto 0);

    search_sol_i_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state8, grp_phase2_fu_967_search_sol_i_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            search_sol_i_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            search_sol_i_ce0 <= grp_phase2_fu_967_search_sol_i_ce0;
        else 
            search_sol_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    search_sol_i_ce1_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            search_sol_i_ce1 <= ap_const_logic_1;
        else 
            search_sol_i_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    search_sol_i_we0_assign_proc : process(ap_CS_fsm_state3, grp_phase2_fu_967_search_sol_i_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            search_sol_i_we0 <= grp_phase2_fu_967_search_sol_i_we0;
        else 
            search_sol_i_we0 <= ap_const_logic_0;
        end if; 
    end process;

    sext8_cast_fu_1144_p0 <= search_sol_i_q0;
    sext_cast_fu_1176_p0 <= search_sol_i_q1;
    tmp_180_fu_1107_p3 <= grp_phase2_fu_967_ap_return(7 downto 7);
    tmp_181_fu_1154_p1 <= mul9_fu_1148_p2(17 - 1 downto 0);
    tmp_182_fu_1158_p1 <= search_sol_i_q0;
    tmp_183_fu_1213_p4 <= neg_mul2_fu_1208_p2(16 downto 10);
    tmp_185_fu_1237_p1 <= p_v_fu_1230_p3(7 - 1 downto 0);
    tmp_186_fu_1247_p1 <= p_v_fu_1230_p3(7 - 1 downto 0);
    tmp_187_fu_1186_p1 <= mul_fu_1180_p2(17 - 1 downto 0);
    tmp_188_fu_1190_p1 <= search_sol_i_q1;
    tmp_189_fu_1263_p4 <= neg_mul_fu_1258_p2(16 downto 10);
    tmp_191_fu_1287_p1 <= p_v1_fu_1280_p3(7 - 1 downto 0);
    tmp_192_fu_1297_p1 <= p_v1_fu_1280_p3(7 - 1 downto 0);
    tmp_1_nbreadreq_fu_816_p42 <= (0=>(P2Buffer_V_twist_empty_n and P2Buffer_V_slice_empty_n and P2Buffer_V_parity_empty_n and P2Buffer_V_n_empty_n and P2Buffer_V_i_9_empty_n and P2Buffer_V_i_8_empty_n and P2Buffer_V_i_7_empty_n and P2Buffer_V_i_6_empty_n and P2Buffer_V_i_5_empty_n and P2Buffer_V_i_4_empty_n and P2Buffer_V_i_3_empty_n and P2Buffer_V_i_30_empty_n and P2Buffer_V_i_2_empty_n and P2Buffer_V_i_29_empty_n and P2Buffer_V_i_28_empty_n and P2Buffer_V_i_27_empty_n and P2Buffer_V_i_26_empty_n and P2Buffer_V_i_25_empty_n and P2Buffer_V_i_24_empty_n and P2Buffer_V_i_23_empty_n and P2Buffer_V_i_22_empty_n and P2Buffer_V_i_21_empty_n and P2Buffer_V_i_20_empty_n and P2Buffer_V_i_1_empty_n and P2Buffer_V_i_19_empty_n and P2Buffer_V_i_18_empty_n and P2Buffer_V_i_17_empty_n and P2Buffer_V_i_16_empty_n and P2Buffer_V_i_15_empty_n and P2Buffer_V_i_14_empty_n and P2Buffer_V_i_13_empty_n and P2Buffer_V_i_12_empty_n and P2Buffer_V_i_11_empty_n and P2Buffer_V_i_10_empty_n and P2Buffer_V_i_0_empty_n and P2Buffer_V_flip_empty_n and P2Buffer_V_depthPhas_empty_n and P2Buffer_V_URtoDF_empty_n and P2Buffer_V_URFtoDLF_empty_n and P2Buffer_V_FRtoBR_empty_n), others=>'-');
    tmp_214_fu_1123_p2 <= std_logic_vector(signed(ap_const_lv9_1FF) + signed(tmp_258_cast_fu_1119_p1));
        tmp_215_fu_1129_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_214_fu_1123_p2),64));

    tmp_216_fu_1134_p0 <= search_sol_depthPhas;
        tmp_216_fu_1134_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_216_fu_1134_p0),64));

    tmp_217_fu_1139_p1 <= search_sol_depthPhas;
    tmp_217_fu_1139_p2 <= "1" when (s_reg_1424 = tmp_217_fu_1139_p1) else "0";
    tmp_218_fu_1308_p2 <= "1" when (tmp_223_reg_1481 = tmp_226_reg_1487) else "0";
    tmp_219_fu_1312_p2 <= std_logic_vector(unsigned(tmp_226_reg_1487) + unsigned(ap_const_lv7_3));
    tmp_220_fu_1317_p2 <= "1" when (tmp_223_reg_1481 = tmp_219_fu_1312_p2) else "0";
        tmp_221_fu_1223_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_183_fu_1213_p4),9));

        tmp_222_fu_1227_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_184_reg_1460),9));

    tmp_223_fu_1251_p3 <= 
        neg_ti2_fu_1241_p2 when (tmp_182_reg_1454(0) = '1') else 
        tmp_186_fu_1247_p1;
        tmp_224_fu_1273_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_189_fu_1263_p4),9));

        tmp_225_fu_1277_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_190_reg_1476),9));

    tmp_226_fu_1301_p3 <= 
        neg_ti_fu_1291_p2 when (tmp_188_reg_1470(0) = '1') else 
        tmp_192_fu_1297_p1;
    tmp_258_cast_fu_1119_p0 <= search_sol_depthPhas;
        tmp_258_cast_fu_1119_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_258_cast_fu_1119_p0),9));

    tmp_i_45_fu_1343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i_reg_956),64));
    tmp_i_fu_1332_p2 <= "1" when (signed(i_i_cast_fu_1328_p1) < signed(s_reg_1424)) else "0";
end behav;
