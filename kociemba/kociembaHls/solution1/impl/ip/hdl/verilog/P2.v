// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module P2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        P3Buffer_0_parity_address0,
        P3Buffer_0_parity_ce0,
        P3Buffer_0_parity_we0,
        P3Buffer_0_parity_d0,
        P3Buffer_0_parity_q0,
        P3Buffer_0_URFtoDLF_address0,
        P3Buffer_0_URFtoDLF_ce0,
        P3Buffer_0_URFtoDLF_we0,
        P3Buffer_0_URFtoDLF_d0,
        P3Buffer_0_URFtoDLF_q0,
        P3Buffer_0_FRtoBR_address0,
        P3Buffer_0_FRtoBR_ce0,
        P3Buffer_0_FRtoBR_we0,
        P3Buffer_0_FRtoBR_d0,
        P3Buffer_0_FRtoBR_q0,
        P3Buffer_0_URtoDF_address0,
        P3Buffer_0_URtoDF_ce0,
        P3Buffer_0_URtoDF_we0,
        P3Buffer_0_URtoDF_d0,
        P3Buffer_0_URtoDF_q0,
        P3Buffer_0_n_address0,
        P3Buffer_0_n_ce0,
        P3Buffer_0_n_we0,
        P3Buffer_0_n_d0,
        P3Buffer_0_n_q0,
        P3Buffer_0_i_address0,
        P3Buffer_0_i_ce0,
        P3Buffer_0_i_we0,
        P3Buffer_0_i_d0,
        P3Buffer_0_i_q0,
        P3Buffer_0_i_address1,
        P3Buffer_0_i_ce1,
        P3Buffer_0_i_we1,
        P3Buffer_0_i_d1,
        P3Buffer_0_i_q1,
        P3Start_read,
        P3End_read,
        depthPhase1,
        depthPhase2,
        m_axi_FRtoBR_Move2_AWVALID,
        m_axi_FRtoBR_Move2_AWREADY,
        m_axi_FRtoBR_Move2_AWADDR,
        m_axi_FRtoBR_Move2_AWID,
        m_axi_FRtoBR_Move2_AWLEN,
        m_axi_FRtoBR_Move2_AWSIZE,
        m_axi_FRtoBR_Move2_AWBURST,
        m_axi_FRtoBR_Move2_AWLOCK,
        m_axi_FRtoBR_Move2_AWCACHE,
        m_axi_FRtoBR_Move2_AWPROT,
        m_axi_FRtoBR_Move2_AWQOS,
        m_axi_FRtoBR_Move2_AWREGION,
        m_axi_FRtoBR_Move2_AWUSER,
        m_axi_FRtoBR_Move2_WVALID,
        m_axi_FRtoBR_Move2_WREADY,
        m_axi_FRtoBR_Move2_WDATA,
        m_axi_FRtoBR_Move2_WSTRB,
        m_axi_FRtoBR_Move2_WLAST,
        m_axi_FRtoBR_Move2_WID,
        m_axi_FRtoBR_Move2_WUSER,
        m_axi_FRtoBR_Move2_ARVALID,
        m_axi_FRtoBR_Move2_ARREADY,
        m_axi_FRtoBR_Move2_ARADDR,
        m_axi_FRtoBR_Move2_ARID,
        m_axi_FRtoBR_Move2_ARLEN,
        m_axi_FRtoBR_Move2_ARSIZE,
        m_axi_FRtoBR_Move2_ARBURST,
        m_axi_FRtoBR_Move2_ARLOCK,
        m_axi_FRtoBR_Move2_ARCACHE,
        m_axi_FRtoBR_Move2_ARPROT,
        m_axi_FRtoBR_Move2_ARQOS,
        m_axi_FRtoBR_Move2_ARREGION,
        m_axi_FRtoBR_Move2_ARUSER,
        m_axi_FRtoBR_Move2_RVALID,
        m_axi_FRtoBR_Move2_RREADY,
        m_axi_FRtoBR_Move2_RDATA,
        m_axi_FRtoBR_Move2_RLAST,
        m_axi_FRtoBR_Move2_RID,
        m_axi_FRtoBR_Move2_RUSER,
        m_axi_FRtoBR_Move2_RRESP,
        m_axi_FRtoBR_Move2_BVALID,
        m_axi_FRtoBR_Move2_BREADY,
        m_axi_FRtoBR_Move2_BRESP,
        m_axi_FRtoBR_Move2_BID,
        m_axi_FRtoBR_Move2_BUSER,
        FRtoBR_Move2_offset,
        m_axi_URFtoDLF_Move2_AWVALID,
        m_axi_URFtoDLF_Move2_AWREADY,
        m_axi_URFtoDLF_Move2_AWADDR,
        m_axi_URFtoDLF_Move2_AWID,
        m_axi_URFtoDLF_Move2_AWLEN,
        m_axi_URFtoDLF_Move2_AWSIZE,
        m_axi_URFtoDLF_Move2_AWBURST,
        m_axi_URFtoDLF_Move2_AWLOCK,
        m_axi_URFtoDLF_Move2_AWCACHE,
        m_axi_URFtoDLF_Move2_AWPROT,
        m_axi_URFtoDLF_Move2_AWQOS,
        m_axi_URFtoDLF_Move2_AWREGION,
        m_axi_URFtoDLF_Move2_AWUSER,
        m_axi_URFtoDLF_Move2_WVALID,
        m_axi_URFtoDLF_Move2_WREADY,
        m_axi_URFtoDLF_Move2_WDATA,
        m_axi_URFtoDLF_Move2_WSTRB,
        m_axi_URFtoDLF_Move2_WLAST,
        m_axi_URFtoDLF_Move2_WID,
        m_axi_URFtoDLF_Move2_WUSER,
        m_axi_URFtoDLF_Move2_ARVALID,
        m_axi_URFtoDLF_Move2_ARREADY,
        m_axi_URFtoDLF_Move2_ARADDR,
        m_axi_URFtoDLF_Move2_ARID,
        m_axi_URFtoDLF_Move2_ARLEN,
        m_axi_URFtoDLF_Move2_ARSIZE,
        m_axi_URFtoDLF_Move2_ARBURST,
        m_axi_URFtoDLF_Move2_ARLOCK,
        m_axi_URFtoDLF_Move2_ARCACHE,
        m_axi_URFtoDLF_Move2_ARPROT,
        m_axi_URFtoDLF_Move2_ARQOS,
        m_axi_URFtoDLF_Move2_ARREGION,
        m_axi_URFtoDLF_Move2_ARUSER,
        m_axi_URFtoDLF_Move2_RVALID,
        m_axi_URFtoDLF_Move2_RREADY,
        m_axi_URFtoDLF_Move2_RDATA,
        m_axi_URFtoDLF_Move2_RLAST,
        m_axi_URFtoDLF_Move2_RID,
        m_axi_URFtoDLF_Move2_RUSER,
        m_axi_URFtoDLF_Move2_RRESP,
        m_axi_URFtoDLF_Move2_BVALID,
        m_axi_URFtoDLF_Move2_BREADY,
        m_axi_URFtoDLF_Move2_BRESP,
        m_axi_URFtoDLF_Move2_BID,
        m_axi_URFtoDLF_Move2_BUSER,
        URFtoDLF_Move2_offset,
        m_axi_URtoDF_Move2_AWVALID,
        m_axi_URtoDF_Move2_AWREADY,
        m_axi_URtoDF_Move2_AWADDR,
        m_axi_URtoDF_Move2_AWID,
        m_axi_URtoDF_Move2_AWLEN,
        m_axi_URtoDF_Move2_AWSIZE,
        m_axi_URtoDF_Move2_AWBURST,
        m_axi_URtoDF_Move2_AWLOCK,
        m_axi_URtoDF_Move2_AWCACHE,
        m_axi_URtoDF_Move2_AWPROT,
        m_axi_URtoDF_Move2_AWQOS,
        m_axi_URtoDF_Move2_AWREGION,
        m_axi_URtoDF_Move2_AWUSER,
        m_axi_URtoDF_Move2_WVALID,
        m_axi_URtoDF_Move2_WREADY,
        m_axi_URtoDF_Move2_WDATA,
        m_axi_URtoDF_Move2_WSTRB,
        m_axi_URtoDF_Move2_WLAST,
        m_axi_URtoDF_Move2_WID,
        m_axi_URtoDF_Move2_WUSER,
        m_axi_URtoDF_Move2_ARVALID,
        m_axi_URtoDF_Move2_ARREADY,
        m_axi_URtoDF_Move2_ARADDR,
        m_axi_URtoDF_Move2_ARID,
        m_axi_URtoDF_Move2_ARLEN,
        m_axi_URtoDF_Move2_ARSIZE,
        m_axi_URtoDF_Move2_ARBURST,
        m_axi_URtoDF_Move2_ARLOCK,
        m_axi_URtoDF_Move2_ARCACHE,
        m_axi_URtoDF_Move2_ARPROT,
        m_axi_URtoDF_Move2_ARQOS,
        m_axi_URtoDF_Move2_ARREGION,
        m_axi_URtoDF_Move2_ARUSER,
        m_axi_URtoDF_Move2_RVALID,
        m_axi_URtoDF_Move2_RREADY,
        m_axi_URtoDF_Move2_RDATA,
        m_axi_URtoDF_Move2_RLAST,
        m_axi_URtoDF_Move2_RID,
        m_axi_URtoDF_Move2_RUSER,
        m_axi_URtoDF_Move2_RRESP,
        m_axi_URtoDF_Move2_BVALID,
        m_axi_URtoDF_Move2_BREADY,
        m_axi_URtoDF_Move2_BRESP,
        m_axi_URtoDF_Move2_BID,
        m_axi_URtoDF_Move2_BUSER,
        URtoDF_Move2_offset,
        Slice_URFtoDLF_Parity_Prun2_offset,
        Slice_URtoDF_Parity_Prun2_offset,
        search_sol_depthPhas,
        search_sol_depthPhas_ap_vld,
        search_sol_i_address0,
        search_sol_i_ce0,
        search_sol_i_we0,
        search_sol_i_d0,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 35'd1;
parameter    ap_ST_fsm_state2 = 35'd2;
parameter    ap_ST_fsm_state3 = 35'd4;
parameter    ap_ST_fsm_state4 = 35'd8;
parameter    ap_ST_fsm_state5 = 35'd16;
parameter    ap_ST_fsm_state6 = 35'd32;
parameter    ap_ST_fsm_state7 = 35'd64;
parameter    ap_ST_fsm_state8 = 35'd128;
parameter    ap_ST_fsm_state9 = 35'd256;
parameter    ap_ST_fsm_state10 = 35'd512;
parameter    ap_ST_fsm_state11 = 35'd1024;
parameter    ap_ST_fsm_state12 = 35'd2048;
parameter    ap_ST_fsm_state13 = 35'd4096;
parameter    ap_ST_fsm_state14 = 35'd8192;
parameter    ap_ST_fsm_state15 = 35'd16384;
parameter    ap_ST_fsm_state16 = 35'd32768;
parameter    ap_ST_fsm_state17 = 35'd65536;
parameter    ap_ST_fsm_state18 = 35'd131072;
parameter    ap_ST_fsm_state19 = 35'd262144;
parameter    ap_ST_fsm_state20 = 35'd524288;
parameter    ap_ST_fsm_pp0_stage0 = 35'd1048576;
parameter    ap_ST_fsm_pp0_stage1 = 35'd2097152;
parameter    ap_ST_fsm_pp0_stage2 = 35'd4194304;
parameter    ap_ST_fsm_pp0_stage3 = 35'd8388608;
parameter    ap_ST_fsm_pp0_stage4 = 35'd16777216;
parameter    ap_ST_fsm_pp0_stage5 = 35'd33554432;
parameter    ap_ST_fsm_pp0_stage6 = 35'd67108864;
parameter    ap_ST_fsm_pp0_stage7 = 35'd134217728;
parameter    ap_ST_fsm_pp0_stage8 = 35'd268435456;
parameter    ap_ST_fsm_pp0_stage9 = 35'd536870912;
parameter    ap_ST_fsm_pp0_stage10 = 35'd1073741824;
parameter    ap_ST_fsm_state47 = 35'd2147483648;
parameter    ap_ST_fsm_state48 = 35'd4294967296;
parameter    ap_ST_fsm_state49 = 35'd8589934592;
parameter    ap_ST_fsm_state50 = 35'd17179869184;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] P3Buffer_0_parity_address0;
output   P3Buffer_0_parity_ce0;
output   P3Buffer_0_parity_we0;
output  [0:0] P3Buffer_0_parity_d0;
input  [0:0] P3Buffer_0_parity_q0;
output  [9:0] P3Buffer_0_URFtoDLF_address0;
output   P3Buffer_0_URFtoDLF_ce0;
output   P3Buffer_0_URFtoDLF_we0;
output  [15:0] P3Buffer_0_URFtoDLF_d0;
input  [15:0] P3Buffer_0_URFtoDLF_q0;
output  [9:0] P3Buffer_0_FRtoBR_address0;
output   P3Buffer_0_FRtoBR_ce0;
output   P3Buffer_0_FRtoBR_we0;
output  [15:0] P3Buffer_0_FRtoBR_d0;
input  [15:0] P3Buffer_0_FRtoBR_q0;
output  [9:0] P3Buffer_0_URtoDF_address0;
output   P3Buffer_0_URtoDF_ce0;
output   P3Buffer_0_URtoDF_we0;
output  [15:0] P3Buffer_0_URtoDF_d0;
input  [15:0] P3Buffer_0_URtoDF_q0;
output  [9:0] P3Buffer_0_n_address0;
output   P3Buffer_0_n_ce0;
output   P3Buffer_0_n_we0;
output  [7:0] P3Buffer_0_n_d0;
input  [7:0] P3Buffer_0_n_q0;
output  [14:0] P3Buffer_0_i_address0;
output   P3Buffer_0_i_ce0;
output   P3Buffer_0_i_we0;
output  [7:0] P3Buffer_0_i_d0;
input  [7:0] P3Buffer_0_i_q0;
output  [14:0] P3Buffer_0_i_address1;
output   P3Buffer_0_i_ce1;
output   P3Buffer_0_i_we1;
output  [7:0] P3Buffer_0_i_d1;
input  [7:0] P3Buffer_0_i_q1;
input  [31:0] P3Start_read;
input  [31:0] P3End_read;
input  [7:0] depthPhase1;
input  [7:0] depthPhase2;
output   m_axi_FRtoBR_Move2_AWVALID;
input   m_axi_FRtoBR_Move2_AWREADY;
output  [31:0] m_axi_FRtoBR_Move2_AWADDR;
output  [0:0] m_axi_FRtoBR_Move2_AWID;
output  [31:0] m_axi_FRtoBR_Move2_AWLEN;
output  [2:0] m_axi_FRtoBR_Move2_AWSIZE;
output  [1:0] m_axi_FRtoBR_Move2_AWBURST;
output  [1:0] m_axi_FRtoBR_Move2_AWLOCK;
output  [3:0] m_axi_FRtoBR_Move2_AWCACHE;
output  [2:0] m_axi_FRtoBR_Move2_AWPROT;
output  [3:0] m_axi_FRtoBR_Move2_AWQOS;
output  [3:0] m_axi_FRtoBR_Move2_AWREGION;
output  [0:0] m_axi_FRtoBR_Move2_AWUSER;
output   m_axi_FRtoBR_Move2_WVALID;
input   m_axi_FRtoBR_Move2_WREADY;
output  [15:0] m_axi_FRtoBR_Move2_WDATA;
output  [1:0] m_axi_FRtoBR_Move2_WSTRB;
output   m_axi_FRtoBR_Move2_WLAST;
output  [0:0] m_axi_FRtoBR_Move2_WID;
output  [0:0] m_axi_FRtoBR_Move2_WUSER;
output   m_axi_FRtoBR_Move2_ARVALID;
input   m_axi_FRtoBR_Move2_ARREADY;
output  [31:0] m_axi_FRtoBR_Move2_ARADDR;
output  [0:0] m_axi_FRtoBR_Move2_ARID;
output  [31:0] m_axi_FRtoBR_Move2_ARLEN;
output  [2:0] m_axi_FRtoBR_Move2_ARSIZE;
output  [1:0] m_axi_FRtoBR_Move2_ARBURST;
output  [1:0] m_axi_FRtoBR_Move2_ARLOCK;
output  [3:0] m_axi_FRtoBR_Move2_ARCACHE;
output  [2:0] m_axi_FRtoBR_Move2_ARPROT;
output  [3:0] m_axi_FRtoBR_Move2_ARQOS;
output  [3:0] m_axi_FRtoBR_Move2_ARREGION;
output  [0:0] m_axi_FRtoBR_Move2_ARUSER;
input   m_axi_FRtoBR_Move2_RVALID;
output   m_axi_FRtoBR_Move2_RREADY;
input  [15:0] m_axi_FRtoBR_Move2_RDATA;
input   m_axi_FRtoBR_Move2_RLAST;
input  [0:0] m_axi_FRtoBR_Move2_RID;
input  [0:0] m_axi_FRtoBR_Move2_RUSER;
input  [1:0] m_axi_FRtoBR_Move2_RRESP;
input   m_axi_FRtoBR_Move2_BVALID;
output   m_axi_FRtoBR_Move2_BREADY;
input  [1:0] m_axi_FRtoBR_Move2_BRESP;
input  [0:0] m_axi_FRtoBR_Move2_BID;
input  [0:0] m_axi_FRtoBR_Move2_BUSER;
input  [30:0] FRtoBR_Move2_offset;
output   m_axi_URFtoDLF_Move2_AWVALID;
input   m_axi_URFtoDLF_Move2_AWREADY;
output  [31:0] m_axi_URFtoDLF_Move2_AWADDR;
output  [0:0] m_axi_URFtoDLF_Move2_AWID;
output  [31:0] m_axi_URFtoDLF_Move2_AWLEN;
output  [2:0] m_axi_URFtoDLF_Move2_AWSIZE;
output  [1:0] m_axi_URFtoDLF_Move2_AWBURST;
output  [1:0] m_axi_URFtoDLF_Move2_AWLOCK;
output  [3:0] m_axi_URFtoDLF_Move2_AWCACHE;
output  [2:0] m_axi_URFtoDLF_Move2_AWPROT;
output  [3:0] m_axi_URFtoDLF_Move2_AWQOS;
output  [3:0] m_axi_URFtoDLF_Move2_AWREGION;
output  [0:0] m_axi_URFtoDLF_Move2_AWUSER;
output   m_axi_URFtoDLF_Move2_WVALID;
input   m_axi_URFtoDLF_Move2_WREADY;
output  [15:0] m_axi_URFtoDLF_Move2_WDATA;
output  [1:0] m_axi_URFtoDLF_Move2_WSTRB;
output   m_axi_URFtoDLF_Move2_WLAST;
output  [0:0] m_axi_URFtoDLF_Move2_WID;
output  [0:0] m_axi_URFtoDLF_Move2_WUSER;
output   m_axi_URFtoDLF_Move2_ARVALID;
input   m_axi_URFtoDLF_Move2_ARREADY;
output  [31:0] m_axi_URFtoDLF_Move2_ARADDR;
output  [0:0] m_axi_URFtoDLF_Move2_ARID;
output  [31:0] m_axi_URFtoDLF_Move2_ARLEN;
output  [2:0] m_axi_URFtoDLF_Move2_ARSIZE;
output  [1:0] m_axi_URFtoDLF_Move2_ARBURST;
output  [1:0] m_axi_URFtoDLF_Move2_ARLOCK;
output  [3:0] m_axi_URFtoDLF_Move2_ARCACHE;
output  [2:0] m_axi_URFtoDLF_Move2_ARPROT;
output  [3:0] m_axi_URFtoDLF_Move2_ARQOS;
output  [3:0] m_axi_URFtoDLF_Move2_ARREGION;
output  [0:0] m_axi_URFtoDLF_Move2_ARUSER;
input   m_axi_URFtoDLF_Move2_RVALID;
output   m_axi_URFtoDLF_Move2_RREADY;
input  [15:0] m_axi_URFtoDLF_Move2_RDATA;
input   m_axi_URFtoDLF_Move2_RLAST;
input  [0:0] m_axi_URFtoDLF_Move2_RID;
input  [0:0] m_axi_URFtoDLF_Move2_RUSER;
input  [1:0] m_axi_URFtoDLF_Move2_RRESP;
input   m_axi_URFtoDLF_Move2_BVALID;
output   m_axi_URFtoDLF_Move2_BREADY;
input  [1:0] m_axi_URFtoDLF_Move2_BRESP;
input  [0:0] m_axi_URFtoDLF_Move2_BID;
input  [0:0] m_axi_URFtoDLF_Move2_BUSER;
input  [30:0] URFtoDLF_Move2_offset;
output   m_axi_URtoDF_Move2_AWVALID;
input   m_axi_URtoDF_Move2_AWREADY;
output  [31:0] m_axi_URtoDF_Move2_AWADDR;
output  [0:0] m_axi_URtoDF_Move2_AWID;
output  [31:0] m_axi_URtoDF_Move2_AWLEN;
output  [2:0] m_axi_URtoDF_Move2_AWSIZE;
output  [1:0] m_axi_URtoDF_Move2_AWBURST;
output  [1:0] m_axi_URtoDF_Move2_AWLOCK;
output  [3:0] m_axi_URtoDF_Move2_AWCACHE;
output  [2:0] m_axi_URtoDF_Move2_AWPROT;
output  [3:0] m_axi_URtoDF_Move2_AWQOS;
output  [3:0] m_axi_URtoDF_Move2_AWREGION;
output  [0:0] m_axi_URtoDF_Move2_AWUSER;
output   m_axi_URtoDF_Move2_WVALID;
input   m_axi_URtoDF_Move2_WREADY;
output  [15:0] m_axi_URtoDF_Move2_WDATA;
output  [1:0] m_axi_URtoDF_Move2_WSTRB;
output   m_axi_URtoDF_Move2_WLAST;
output  [0:0] m_axi_URtoDF_Move2_WID;
output  [0:0] m_axi_URtoDF_Move2_WUSER;
output   m_axi_URtoDF_Move2_ARVALID;
input   m_axi_URtoDF_Move2_ARREADY;
output  [31:0] m_axi_URtoDF_Move2_ARADDR;
output  [0:0] m_axi_URtoDF_Move2_ARID;
output  [31:0] m_axi_URtoDF_Move2_ARLEN;
output  [2:0] m_axi_URtoDF_Move2_ARSIZE;
output  [1:0] m_axi_URtoDF_Move2_ARBURST;
output  [1:0] m_axi_URtoDF_Move2_ARLOCK;
output  [3:0] m_axi_URtoDF_Move2_ARCACHE;
output  [2:0] m_axi_URtoDF_Move2_ARPROT;
output  [3:0] m_axi_URtoDF_Move2_ARQOS;
output  [3:0] m_axi_URtoDF_Move2_ARREGION;
output  [0:0] m_axi_URtoDF_Move2_ARUSER;
input   m_axi_URtoDF_Move2_RVALID;
output   m_axi_URtoDF_Move2_RREADY;
input  [15:0] m_axi_URtoDF_Move2_RDATA;
input   m_axi_URtoDF_Move2_RLAST;
input  [0:0] m_axi_URtoDF_Move2_RID;
input  [0:0] m_axi_URtoDF_Move2_RUSER;
input  [1:0] m_axi_URtoDF_Move2_RRESP;
input   m_axi_URtoDF_Move2_BVALID;
output   m_axi_URtoDF_Move2_BREADY;
input  [1:0] m_axi_URtoDF_Move2_BRESP;
input  [0:0] m_axi_URtoDF_Move2_BID;
input  [0:0] m_axi_URtoDF_Move2_BUSER;
input  [30:0] URtoDF_Move2_offset;
input  [30:0] Slice_URFtoDLF_Parity_Prun2_offset;
input  [30:0] Slice_URtoDF_Parity_Prun2_offset;
output  [7:0] search_sol_depthPhas;
output   search_sol_depthPhas_ap_vld;
output  [4:0] search_sol_i_address0;
output   search_sol_i_ce0;
output   search_sol_i_we0;
output  [7:0] search_sol_i_d0;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] P3Buffer_0_parity_address0;
reg P3Buffer_0_parity_ce0;
reg P3Buffer_0_parity_we0;
reg[9:0] P3Buffer_0_URFtoDLF_address0;
reg P3Buffer_0_URFtoDLF_ce0;
reg P3Buffer_0_URFtoDLF_we0;
reg[9:0] P3Buffer_0_FRtoBR_address0;
reg P3Buffer_0_FRtoBR_ce0;
reg P3Buffer_0_FRtoBR_we0;
reg[9:0] P3Buffer_0_URtoDF_address0;
reg P3Buffer_0_URtoDF_ce0;
reg P3Buffer_0_URtoDF_we0;
reg[9:0] P3Buffer_0_n_address0;
reg P3Buffer_0_n_ce0;
reg P3Buffer_0_n_we0;
reg[14:0] P3Buffer_0_i_address0;
reg P3Buffer_0_i_ce0;
reg P3Buffer_0_i_we0;
reg[7:0] P3Buffer_0_i_d0;
reg[14:0] P3Buffer_0_i_address1;
reg P3Buffer_0_i_ce1;
reg P3Buffer_0_i_we1;
reg[7:0] P3Buffer_0_i_d1;
reg m_axi_FRtoBR_Move2_ARVALID;
reg m_axi_FRtoBR_Move2_RREADY;
reg m_axi_URFtoDLF_Move2_ARVALID;
reg[31:0] m_axi_URFtoDLF_Move2_ARADDR;
reg[31:0] m_axi_URFtoDLF_Move2_ARLEN;
reg m_axi_URFtoDLF_Move2_RREADY;
reg m_axi_URtoDF_Move2_ARVALID;
reg[31:0] m_axi_URtoDF_Move2_ARADDR;
reg[31:0] m_axi_URtoDF_Move2_ARLEN;
reg m_axi_URtoDF_Move2_RREADY;
reg search_sol_depthPhas_ap_vld;
reg[4:0] search_sol_i_address0;
reg search_sol_i_ce0;
reg search_sol_i_we0;
reg[7:0] search_sol_i_d0;

(* fsm_encoding = "none" *) reg   [34:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] nOld;
reg   [4:0] URFtoDLF_Move3_address0;
reg    URFtoDLF_Move3_ce0;
reg    URFtoDLF_Move3_we0;
wire   [15:0] URFtoDLF_Move3_q0;
reg   [4:0] FRtoBR_Move3_2_address0;
reg    FRtoBR_Move3_2_ce0;
reg    FRtoBR_Move3_2_we0;
wire   [15:0] FRtoBR_Move3_2_q0;
reg   [4:0] URtoDF_Move3_address0;
reg    URtoDF_Move3_ce0;
reg    URtoDF_Move3_we0;
wire   [15:0] URtoDF_Move3_q0;
wire   [3:0] label3_0_address0;
reg    label3_0_ce0;
wire   [2:0] label3_0_q0;
wire   [3:0] label3_1_address0;
reg    label3_1_ce0;
wire   [1:0] label3_1_q0;
wire   [5:0] parityMove_address0;
reg    parityMove_ce0;
wire   [0:0] parityMove_q0;
reg    FRtoBR_Move2_blk_n_AR;
wire    ap_CS_fsm_state6;
reg    FRtoBR_Move2_blk_n_R;
wire    ap_CS_fsm_state13;
reg   [0:0] tmp_226_reg_2299;
wire   [0:0] exitcond3_fu_1147_p2;
reg    URFtoDLF_Move2_blk_n_AR;
reg    URFtoDLF_Move2_blk_n_R;
wire    ap_CS_fsm_pp0_stage5;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage5;
reg   [0:0] exitcond2_reg_2634;
reg   [0:0] tmp_233_reg_2519;
reg   [0:0] or_cond_reg_2653;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage1;
reg    URtoDF_Move2_blk_n_AR;
reg    URtoDF_Move2_blk_n_R;
reg   [3:0] i1_reg_833;
wire   [15:0] tmp_227_fu_886_p2;
reg   [15:0] tmp_227_reg_2135;
wire    ap_CS_fsm_state2;
reg   [7:0] n_reg_2210;
wire  signed [7:0] start_assign_fu_892_p2;
reg  signed [7:0] start_assign_reg_2215;
reg   [0:0] parityOld_reg_2221;
reg  signed [15:0] search_0_URFtoDLF_reg_2226;
reg   [15:0] search_0_FRtoBR_reg_2234;
reg   [15:0] search_0_URtoDF_reg_2240;
wire  signed [8:0] tmp_i_cast_fu_898_p1;
reg  signed [8:0] tmp_i_cast_reg_2246;
wire  signed [8:0] tmp_62_i_fu_902_p2;
reg  signed [8:0] tmp_62_i_reg_2259;
wire   [2:0] i_32_fu_914_p2;
reg   [2:0] i_32_reg_2269;
wire    ap_CS_fsm_state3;
wire  signed [8:0] i1_2_fu_932_p2;
reg  signed [8:0] i1_2_reg_2274;
wire   [0:0] exitcond_i_fu_908_p2;
wire  signed [8:0] i2_2_fu_937_p2;
reg  signed [8:0] i2_2_reg_2279;
wire  signed [31:0] tmp_s_fu_970_p1;
reg  signed [31:0] tmp_s_reg_2294;
wire   [0:0] tmp_226_fu_981_p2;
reg   [31:0] Slice_URFtoDLF_Parit_12_reg_2303;
reg   [31:0] FRtoBR_Move2_addr_reg_2309;
reg   [31:0] Slice_URtoDF_Parity_7_reg_2315;
reg   [7:0] P3Buffer_0_i_load_1_reg_2321;
wire    ap_CS_fsm_state4;
wire   [4:0] i_33_fu_1153_p2;
reg   [4:0] i_33_reg_2329;
reg    ap_predicate_op180_read_state13;
reg    ap_block_state13;
reg   [15:0] Slice_URFtoDLF_Parit_14_reg_2334;
reg   [15:0] FRtoBR_Move2_addr_re_reg_2339;
reg   [15:0] Slice_URtoDF_Parity_9_reg_2344;
wire  signed [7:0] n_3_fu_1164_p2;
reg  signed [7:0] n_3_reg_2369;
wire   [7:0] search_0_i_q0;
reg  signed [7:0] axOld_reg_2383;
wire    ap_CS_fsm_state15;
reg   [7:0] search_0_i_load_reg_2399;
wire    ap_CS_fsm_state16;
wire   [7:0] search_0_i_q1;
reg   [7:0] search_0_i_load_4_reg_2404;
wire  signed [8:0] i1_1_i_fu_1208_p2;
reg  signed [8:0] i1_1_i_reg_2409;
wire  signed [8:0] i2_1_i_fu_1213_p2;
reg  signed [8:0] i2_1_i_reg_2414;
reg   [7:0] search_0_i_load_5_reg_2429;
wire    ap_CS_fsm_state17;
reg   [7:0] search_0_i_load_6_reg_2434;
wire  signed [8:0] i1_2_i_fu_1228_p2;
reg  signed [8:0] i1_2_i_reg_2439;
wire  signed [8:0] i2_2_i_fu_1233_p2;
reg  signed [8:0] i2_2_i_reg_2444;
reg   [7:0] search_0_i_load_7_reg_2459;
wire    ap_CS_fsm_state18;
reg   [7:0] search_0_i_load_8_reg_2464;
wire  signed [8:0] i1_3_i_fu_1248_p2;
reg  signed [8:0] i1_3_i_reg_2469;
wire  signed [8:0] i2_3_i_fu_1253_p2;
reg  signed [8:0] i2_3_i_reg_2474;
reg   [7:0] search_0_i_load_9_reg_2489;
wire    ap_CS_fsm_state19;
reg   [7:0] search_0_i_load_10_reg_2494;
wire  signed [8:0] i1_4_i_fu_1268_p2;
reg  signed [8:0] i1_4_i_reg_2499;
wire  signed [8:0] i2_4_i_fu_1273_p2;
reg  signed [8:0] i2_4_i_reg_2504;
wire   [0:0] tmp_233_fu_1291_p2;
wire    ap_CS_fsm_state20;
wire   [6:0] tmp_271_cast_fu_1295_p3;
reg   [6:0] tmp_271_cast_reg_2523;
wire   [7:0] s_4_fu_1302_p2;
reg   [7:0] s_4_reg_2528;
wire  signed [8:0] tmp_292_cast_fu_1306_p1;
reg  signed [8:0] tmp_292_cast_reg_2533;
wire   [9:0] tmp_235_fu_1322_p2;
reg   [9:0] tmp_235_reg_2539;
wire  signed [15:0] tmp_240_cast_fu_1332_p1;
reg  signed [15:0] tmp_240_cast_reg_2544;
reg   [4:0] search_sol_i_addr_reg_2549;
wire   [8:0] tmp_237_fu_1338_p2;
reg   [8:0] tmp_237_reg_2554;
wire  signed [15:0] tmp_61_i4_cast_fu_1344_p1;
reg  signed [15:0] tmp_61_i4_cast_reg_2559;
wire  signed [15:0] tmp_62_i8_cast_fu_1347_p1;
reg  signed [15:0] tmp_62_i8_cast_reg_2564;
wire  signed [15:0] tmp_61_1_i_cast_fu_1350_p1;
reg  signed [15:0] tmp_61_1_i_cast_reg_2569;
wire  signed [15:0] tmp_62_1_i_cast_fu_1353_p1;
reg  signed [15:0] tmp_62_1_i_cast_reg_2574;
wire  signed [15:0] tmp_61_2_i_cast_fu_1356_p1;
reg  signed [15:0] tmp_61_2_i_cast_reg_2579;
wire  signed [15:0] tmp_62_2_i_cast_fu_1359_p1;
reg  signed [15:0] tmp_62_2_i_cast_reg_2584;
wire  signed [15:0] tmp_61_3_i_cast_fu_1362_p1;
reg  signed [15:0] tmp_61_3_i_cast_reg_2589;
wire  signed [15:0] tmp_62_3_i_cast_fu_1365_p1;
reg  signed [15:0] tmp_62_3_i_cast_reg_2594;
wire  signed [15:0] tmp_61_4_i_cast_fu_1368_p1;
reg  signed [15:0] tmp_61_4_i_cast_reg_2599;
reg   [7:0] search_0_i_load_11_reg_2604;
wire  signed [15:0] tmp_62_4_i_cast_fu_1371_p1;
reg  signed [15:0] tmp_62_4_i_cast_reg_2609;
reg   [7:0] search_0_i_load_12_reg_2614;
wire   [31:0] tmp_239_fu_1384_p3;
reg   [31:0] tmp_239_reg_2619;
wire   [63:0] sext5_fu_1392_p1;
reg   [63:0] sext5_reg_2624;
wire   [63:0] sext6_fu_1395_p1;
reg   [63:0] sext6_reg_2629;
wire   [0:0] exitcond2_fu_1398_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state21_pp0_stage0_iter0;
wire    ap_block_state32_pp0_stage0_iter1;
wire    ap_block_state43_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] i_35_fu_1416_p2;
reg   [3:0] i_35_reg_2648;
wire   [0:0] or_cond_fu_1448_p2;
wire    ap_block_state22_pp0_stage1_iter0;
reg    ap_predicate_op391_read_state33;
reg    ap_block_state33_pp0_stage1_iter1;
wire    ap_block_state44_pp0_stage1_iter2;
reg    ap_block_pp0_stage1_11001;
reg   [0:0] or_cond_reg_2653_pp0_iter1_reg;
reg   [0:0] or_cond_reg_2653_pp0_iter2_reg;
wire  signed [5:0] mv_fu_1478_p2;
reg  signed [5:0] mv_reg_2657;
reg  signed [5:0] mv_reg_2657_pp0_iter1_reg;
reg  signed [5:0] mv_reg_2657_pp0_iter2_reg;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state23_pp0_stage2_iter0;
wire    ap_block_state34_pp0_stage2_iter1;
wire    ap_block_state45_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_11001;
reg   [15:0] URFtoDLF_reg_2684;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state24_pp0_stage3_iter0;
wire    ap_block_state35_pp0_stage3_iter1;
wire    ap_block_state46_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_11001;
reg   [15:0] URFtoDLF_reg_2684_pp0_iter1_reg;
reg  signed [15:0] FRtoBR_reg_2689;
reg  signed [15:0] FRtoBR_reg_2689_pp0_iter1_reg;
reg   [0:0] parity_reg_2694;
reg   [0:0] parity_reg_2694_pp0_iter1_reg;
reg   [15:0] URtoDF_reg_2701;
reg   [15:0] URtoDF_reg_2701_pp0_iter1_reg;
wire  signed [21:0] tmp_249_fu_1537_p2;
reg  signed [21:0] tmp_249_reg_2706;
wire  signed [21:0] tmp_251_fu_1585_p2;
reg  signed [21:0] tmp_251_reg_2711;
reg   [0:0] tmp_196_reg_2716;
reg   [22:0] tmp_197_reg_2721;
reg   [0:0] tmp_201_reg_2726;
reg   [22:0] tmp_202_reg_2731;
wire   [0:0] tmp_198_fu_1696_p1;
reg   [0:0] tmp_198_reg_2736;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state25_pp0_stage4_iter0;
wire    ap_block_state36_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
reg   [31:0] Slice_URtoDF_Parity_10_reg_2741;
wire   [0:0] tmp_203_fu_1756_p1;
reg   [0:0] tmp_203_reg_2747;
reg   [31:0] Slice_URFtoDLF_Parit_15_reg_2752;
reg   [15:0] Slice_URtoDF_Parity_12_reg_2758;
reg   [15:0] Slice_URFtoDLF_Parit_17_reg_2763;
wire   [3:0] a_1_fu_1801_p3;
reg   [3:0] a_1_reg_2768;
wire   [3:0] minDistPhase2_fu_1850_p3;
reg   [3:0] minDistPhase2_reg_2774;
wire   [0:0] tmp_260_fu_1857_p2;
reg   [0:0] tmp_260_reg_2779;
wire   [0:0] tmp_264_fu_1875_p2;
reg   [0:0] tmp_264_reg_2783;
wire   [15:0] tmp_277_fu_1905_p2;
reg   [15:0] tmp_277_reg_2787;
wire   [31:0] p_s_fu_1933_p3;
reg   [31:0] p_s_reg_2801;
wire   [0:0] tmp_269_fu_1941_p2;
reg   [0:0] tmp_269_reg_2806;
wire   [15:0] tmp_288_fu_2037_p2;
reg   [15:0] tmp_288_reg_2811;
wire   [0:0] tmp_240_fu_2054_p2;
reg   [0:0] tmp_240_reg_2816;
wire    ap_CS_fsm_state47;
wire   [8:0] tmp5_fu_2060_p2;
reg   [8:0] tmp5_reg_2820;
wire   [2:0] i_34_fu_2071_p2;
reg   [2:0] i_34_reg_2828;
wire    ap_CS_fsm_state48;
wire   [8:0] i2_1_fu_2094_p2;
reg   [8:0] i2_1_reg_2833;
wire   [0:0] exitcond_fu_2065_p2;
wire  signed [63:0] tmp_262_fu_2099_p1;
reg  signed [63:0] tmp_262_reg_2838;
wire  signed [63:0] tmp_263_fu_2124_p1;
reg  signed [63:0] tmp_263_reg_2848;
wire    ap_CS_fsm_state49;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state21;
wire    ap_block_state31_pp0_stage10_iter0;
wire    ap_block_state42_pp0_stage10_iter1;
wire    ap_block_pp0_stage10_subdone;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage3_subdone;
reg    ap_enable_reg_pp0_iter2;
reg   [4:0] search_0_i_address0;
reg    search_0_i_ce0;
reg    search_0_i_we0;
reg   [7:0] search_0_i_d0;
reg   [4:0] search_0_i_address1;
reg    search_0_i_ce1;
reg   [2:0] i_i_reg_810;
wire    ap_CS_fsm_state5;
reg   [4:0] i_reg_821;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state12;
reg   [3:0] ap_phi_mux_i1_phi_fu_837_p4;
wire    ap_block_pp0_stage0;
reg   [2:0] i2_reg_844;
wire    ap_CS_fsm_state50;
wire  signed [63:0] tmp_fu_861_p1;
wire  signed [63:0] tmp_258_cast_fu_951_p1;
wire  signed [63:0] tmp_270_cast_fu_965_p1;
wire  signed [63:0] tmp_63_i_fu_1139_p1;
wire  signed [63:0] tmp_64_i_fu_1143_p1;
wire  signed [63:0] tmp_232_fu_1179_p1;
wire   [63:0] tmp_229_fu_1193_p1;
wire  signed [63:0] tmp_61_i4_fu_1200_p1;
wire  signed [63:0] tmp_62_i8_fu_1204_p1;
wire  signed [63:0] tmp_61_1_i_fu_1218_p1;
wire  signed [63:0] tmp_62_1_i_fu_1223_p1;
wire  signed [63:0] tmp_61_2_i_fu_1238_p1;
wire  signed [63:0] tmp_62_2_i_fu_1243_p1;
wire  signed [63:0] tmp_61_3_i_fu_1258_p1;
wire  signed [63:0] tmp_62_3_i_fu_1263_p1;
wire  signed [63:0] tmp_61_4_i_fu_1278_p1;
wire  signed [63:0] tmp_62_4_i_fu_1283_p1;
wire  signed [63:0] tmp_236_fu_1328_p1;
wire   [63:0] tmp_242_fu_1410_p1;
wire  signed [63:0] tmp_272_cast_fu_1498_p1;
wire    ap_block_pp0_stage2;
wire  signed [63:0] tmp_246_fu_1484_p1;
wire  signed [63:0] tmp_296_cast_fu_1916_p1;
wire    ap_block_pp0_stage4;
wire  signed [63:0] tmp_266_fu_1880_p1;
wire  signed [63:0] tmp_297_cast1_fu_1950_p1;
wire  signed [63:0] tmp_298_cast_fu_1969_p1;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire  signed [63:0] tmp_299_cast_fu_1978_p1;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire  signed [63:0] tmp_300_cast_fu_1987_p1;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire  signed [63:0] tmp_301_cast_fu_1996_p1;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire  signed [63:0] tmp_302_cast_fu_2005_p1;
wire    ap_block_pp0_stage10;
wire  signed [63:0] tmp_303_cast_fu_2014_p1;
wire  signed [63:0] tmp_304_cast_fu_2023_p1;
wire  signed [63:0] tmp_305_cast_fu_2032_p1;
wire  signed [63:0] tmp_306_cast1_fu_2050_p1;
wire    ap_block_pp0_stage3;
wire  signed [63:0] sum5_cast_fu_1091_p1;
wire  signed [63:0] sum_cast_fu_1110_p1;
wire  signed [63:0] sum9_cast_fu_1129_p1;
wire   [63:0] sum4_fu_1700_p2;
wire   [63:0] sum6_fu_1760_p2;
reg    ap_reg_ioackin_m_axi_URFtoDLF_Move2_ARREADY;
reg    ap_sig_ioackin_m_axi_URFtoDLF_Move2_ARREADY;
reg    ap_sig_ioackin_m_axi_FRtoBR_Move2_ARREADY;
reg    ap_sig_ioackin_m_axi_URtoDF_Move2_ARREADY;
reg    ap_block_state6_io;
reg    ap_reg_ioackin_m_axi_FRtoBR_Move2_ARREADY;
reg    ap_reg_ioackin_m_axi_URtoDF_Move2_ARREADY;
wire    ap_block_state26_pp0_stage5_iter0;
wire    ap_block_state37_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_01001;
reg    ap_predicate_op377_readreq_state26;
reg    ap_block_state26_io;
reg    ap_block_pp0_stage5_11001;
reg   [7:0] iSol_s_fu_220;
wire  signed [7:0] mv_cast_fu_2041_p1;
reg   [7:0] s_fu_224;
reg   [31:0] P3Start_fu_228;
wire   [31:0] tmp_378_s_fu_1955_p3;
wire    ap_block_pp0_stage3_01001;
wire    ap_block_state27_pp0_stage6_iter0;
wire    ap_block_state38_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_11001;
wire    ap_block_state28_pp0_stage7_iter0;
wire    ap_block_state39_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_11001;
wire    ap_block_state29_pp0_stage8_iter0;
wire    ap_block_state40_pp0_stage8_iter1;
wire    ap_block_pp0_stage8_11001;
wire    ap_block_state30_pp0_stage9_iter0;
wire    ap_block_state41_pp0_stage9_iter1;
wire    ap_block_pp0_stage9_11001;
wire    ap_block_pp0_stage10_11001;
wire  signed [31:0] tmp_fu_861_p0;
wire  signed [31:0] tmp_193_fu_870_p0;
wire  signed [31:0] tmp_194_fu_874_p0;
wire   [10:0] tmp_194_fu_874_p1;
wire   [15:0] p_shl15_cast_fu_878_p3;
wire   [15:0] tmp_193_fu_870_p1;
wire  signed [7:0] start_assign_fu_892_p1;
wire   [3:0] tmp_61_i_fu_920_p3;
wire   [8:0] tmp_61_i_cast_fu_928_p1;
wire  signed [15:0] tmp_63_i_cast_fu_942_p1;
wire   [15:0] tmp_228_fu_946_p2;
wire  signed [15:0] tmp_64_i_cast_fu_956_p1;
wire   [15:0] tmp_230_fu_960_p2;
wire   [15:0] tmp_195_fu_977_p1;
wire   [19:0] p_shl5_fu_986_p3;
wire   [19:0] p_shl3_fu_1004_p3;
wire   [19:0] p_shl_fu_1022_p3;
wire   [16:0] p_shl6_fu_997_p3;
wire  signed [20:0] tmp_58_fu_1040_p1;
wire  signed [20:0] p_shl5_cast_fu_993_p1;
wire   [20:0] tmp_59_fu_1044_p2;
wire   [16:0] p_shl4_fu_1015_p3;
wire  signed [20:0] tmp_63_fu_1054_p1;
wire  signed [20:0] p_shl3_cast_fu_1011_p1;
wire   [20:0] tmp_64_fu_1058_p2;
wire   [16:0] p_shl2_fu_1033_p3;
wire  signed [20:0] tmp_68_fu_1068_p1;
wire  signed [20:0] p_shl_cast_fu_1029_p1;
wire   [20:0] tmp_69_fu_1072_p2;
wire  signed [32:0] tmp_60_cast_fu_1050_p1;
wire   [32:0] sext4_cast_fu_1082_p1;
wire   [32:0] sum5_fu_1085_p2;
wire  signed [32:0] tmp_65_cast_fu_1064_p1;
wire   [32:0] sext_cast_fu_1101_p1;
wire   [32:0] sum_fu_1104_p2;
wire  signed [32:0] tmp_70_cast_fu_1078_p1;
wire   [32:0] sext9_cast_fu_1120_p1;
wire   [32:0] sum9_fu_1123_p2;
wire  signed [8:0] tmp_287_cast1_fu_1169_p1;
wire   [8:0] tmp_231_fu_1173_p2;
wire  signed [7:0] tmp_233_fu_1291_p1;
wire  signed [7:0] s_4_fu_1302_p0;
wire  signed [7:0] s_4_fu_1302_p1;
wire  signed [7:0] tmp_292_cast_fu_1306_p0;
wire  signed [7:0] tmp_293_cast_fu_1309_p0;
wire  signed [8:0] tmp_293_cast_fu_1309_p1;
wire   [8:0] tmp_234_fu_1312_p2;
wire  signed [9:0] tmp_294_cast_fu_1318_p1;
wire  signed [9:0] tmp_287_cast_fu_1288_p1;
wire  signed [8:0] tmp_297_cast_fu_1335_p1;
wire  signed [31:0] tmp_238_fu_1374_p0;
wire  signed [31:0] p_op_fu_1379_p0;
wire   [0:0] tmp_238_fu_1374_p2;
wire   [31:0] p_op_fu_1379_p2;
wire   [3:0] tmp_241_fu_1404_p2;
wire   [7:0] ax_cast_fu_1426_p1;
wire   [8:0] tmp_306_cast_fu_1439_p1;
wire   [0:0] tmp_243_fu_1434_p2;
wire   [0:0] tmp_244_fu_1443_p2;
wire   [4:0] p_shl12_fu_1454_p3;
wire   [5:0] p_shl12_cast_fu_1462_p1;
wire   [5:0] ax_cast1_fu_1422_p1;
wire   [5:0] tmp_245_fu_1466_p2;
wire   [5:0] po_cast_fu_1430_p1;
wire   [5:0] tmp4_fu_1472_p2;
wire  signed [6:0] tmp_250_cast_fu_1490_p1;
wire   [6:0] tmp_247_fu_1493_p2;
wire   [20:0] p_shl13_fu_1503_p3;
wire   [18:0] p_shl14_fu_1515_p3;
wire  signed [21:0] p_shl13_cast_fu_1511_p1;
wire  signed [21:0] p_shl14_cast_fu_1523_p1;
wire  signed [15:0] tmp_75_cast_fu_1533_p0;
wire  signed [21:0] tmp_75_cast_fu_1533_p1;
wire   [21:0] tmp_248_fu_1527_p2;
wire   [22:0] tmp_75_fu_1543_p3;
wire   [20:0] p_shl9_fu_1555_p3;
wire   [18:0] p_shl10_fu_1567_p3;
wire  signed [21:0] p_shl9_cast_fu_1563_p1;
wire  signed [21:0] p_shl10_cast_fu_1575_p1;
wire   [21:0] tmp_250_fu_1579_p2;
wire   [22:0] tmp_76_fu_1591_p3;
wire  signed [23:0] index_cast_fu_1551_p1;
wire   [23:0] p_neg_fu_1611_p2;
wire  signed [23:0] index1_cast_fu_1599_p1;
wire   [23:0] p_neg1_fu_1635_p2;
wire  signed [30:0] p_lshr_fu_1651_p1;
wire   [31:0] tmp_252_fu_1654_p1;
wire  signed [30:0] tmp_81_fu_1664_p1;
wire   [31:0] p_neg_t_fu_1658_p2;
wire   [31:0] p_lshr_f_fu_1667_p1;
wire   [31:0] tmp_253_fu_1671_p3;
wire   [30:0] tmp_254_fu_1678_p4;
wire  signed [62:0] tmp_255_fu_1688_p1;
wire   [63:0] tmp_256_fu_1692_p1;
wire  signed [30:0] p_lshr1_fu_1711_p1;
wire   [31:0] tmp_271_fu_1714_p1;
wire  signed [30:0] tmp_87_fu_1724_p1;
wire   [31:0] p_neg_t1_fu_1718_p2;
wire   [31:0] p_lshr_f1_fu_1727_p1;
wire   [31:0] tmp_257_fu_1731_p3;
wire   [30:0] tmp_272_fu_1738_p4;
wire  signed [62:0] tmp_273_fu_1748_p1;
wire   [63:0] tmp_274_fu_1752_p1;
wire   [3:0] tmp_199_fu_1771_p3;
wire   [15:0] tmp_258_fu_1778_p1;
wire   [15:0] Slice_URtoDF_Parity_5_fu_1782_p2;
wire   [3:0] tmp_270_fu_1787_p4;
wire   [3:0] tmp_200_fu_1797_p1;
wire   [3:0] tmp_204_fu_1808_p3;
wire   [15:0] tmp_275_fu_1815_p1;
wire   [15:0] Slice_URFtoDLF_Parit_8_fu_1819_p2;
wire   [3:0] tmp_276_fu_1824_p4;
wire   [3:0] tmp_205_fu_1834_p1;
wire   [3:0] b_fu_1838_p3;
wire   [0:0] tmp_259_fu_1845_p2;
wire   [9:0] tmp_327_cast_fu_1872_p1;
wire  signed [31:0] tmp_266_fu_1880_p0;
wire  signed [31:0] tmp_206_fu_1889_p0;
wire  signed [31:0] tmp_207_fu_1893_p0;
wire   [10:0] tmp_207_fu_1893_p1;
wire   [15:0] p_shl16_cast_fu_1897_p3;
wire   [15:0] tmp_206_fu_1889_p1;
wire   [15:0] tmp_278_fu_1911_p2;
wire  signed [31:0] tmp_267_fu_1921_p1;
wire   [31:0] tmp_267_fu_1921_p2;
wire   [0:0] tmp_268_fu_1927_p2;
wire  signed [31:0] tmp_269_fu_1941_p1;
wire   [15:0] tmp_279_fu_1946_p2;
wire   [15:0] tmp_280_fu_1965_p2;
wire   [15:0] tmp_281_fu_1974_p2;
wire   [15:0] tmp_282_fu_1983_p2;
wire   [15:0] tmp_283_fu_1992_p2;
wire   [15:0] tmp_284_fu_2001_p2;
wire   [15:0] tmp_285_fu_2010_p2;
wire   [15:0] tmp_286_fu_2019_p2;
wire   [15:0] tmp_287_fu_2028_p2;
wire   [3:0] tmp_261_fu_2077_p3;
wire   [8:0] tmp_324_cast_fu_2085_p1;
wire   [8:0] i1_1_fu_2089_p2;
wire  signed [31:0] tmp_265_fu_2108_p1;
reg   [34:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_1130;

// power-on initialization
initial begin
#0 ap_CS_fsm = 35'd1;
#0 nOld = 32'd4294967295;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_reg_ioackin_m_axi_URFtoDLF_Move2_ARREADY = 1'b0;
#0 ap_reg_ioackin_m_axi_FRtoBR_Move2_ARREADY = 1'b0;
#0 ap_reg_ioackin_m_axi_URtoDF_Move2_ARREADY = 1'b0;
end

parallel_v2_twistmb6 #(
    .DataWidth( 16 ),
    .AddressRange( 18 ),
    .AddressWidth( 5 ))
URFtoDLF_Move3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(URFtoDLF_Move3_address0),
    .ce0(URFtoDLF_Move3_ce0),
    .we0(URFtoDLF_Move3_we0),
    .d0(Slice_URFtoDLF_Parit_14_reg_2334),
    .q0(URFtoDLF_Move3_q0)
);

parallel_v2_twistmb6 #(
    .DataWidth( 16 ),
    .AddressRange( 18 ),
    .AddressWidth( 5 ))
FRtoBR_Move3_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(FRtoBR_Move3_2_address0),
    .ce0(FRtoBR_Move3_2_ce0),
    .we0(FRtoBR_Move3_2_we0),
    .d0(FRtoBR_Move2_addr_re_reg_2339),
    .q0(FRtoBR_Move3_2_q0)
);

parallel_v2_twistmb6 #(
    .DataWidth( 16 ),
    .AddressRange( 18 ),
    .AddressWidth( 5 ))
URtoDF_Move3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(URtoDF_Move3_address0),
    .ce0(URtoDF_Move3_ce0),
    .we0(URtoDF_Move3_we0),
    .d0(Slice_URtoDF_Parity_9_reg_2344),
    .q0(URtoDF_Move3_q0)
);

P2_label3_0 #(
    .DataWidth( 3 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
label3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(label3_0_address0),
    .ce0(label3_0_ce0),
    .q0(label3_0_q0)
);

P2_label3_1 #(
    .DataWidth( 2 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
label3_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(label3_1_address0),
    .ce0(label3_1_ce0),
    .q0(label3_1_q0)
);

P2_parityMove #(
    .DataWidth( 1 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
parityMove_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(parityMove_address0),
    .ce0(parityMove_ce0),
    .q0(parityMove_q0)
);

parallel_v2_searcpcA #(
    .DataWidth( 8 ),
    .AddressRange( 31 ),
    .AddressWidth( 5 ))
search_0_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(search_0_i_address0),
    .ce0(search_0_i_ce0),
    .we0(search_0_i_we0),
    .d0(search_0_i_d0),
    .q0(search_0_i_q0),
    .address1(search_0_i_address1),
    .ce1(search_0_i_ce1),
    .q1(search_0_i_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state21) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state21)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state21);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_FRtoBR_Move2_ARREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            if ((1'b0 == ap_block_state6_io)) begin
                ap_reg_ioackin_m_axi_FRtoBR_Move2_ARREADY <= 1'b0;
            end else if ((m_axi_FRtoBR_Move2_ARREADY == 1'b1)) begin
                ap_reg_ioackin_m_axi_FRtoBR_Move2_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_URFtoDLF_Move2_ARREADY <= 1'b0;
    end else begin
        if ((((ap_predicate_op377_readreq_state26 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6_io)))) begin
            ap_reg_ioackin_m_axi_URFtoDLF_Move2_ARREADY <= 1'b0;
        end else if ((((ap_predicate_op377_readreq_state26 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (m_axi_URFtoDLF_Move2_ARREADY == 1'b1) & (1'b0 == ap_block_pp0_stage5_01001)) | ((1'b1 == ap_CS_fsm_state6) & (m_axi_URFtoDLF_Move2_ARREADY == 1'b1)))) begin
            ap_reg_ioackin_m_axi_URFtoDLF_Move2_ARREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_URtoDF_Move2_ARREADY <= 1'b0;
    end else begin
        if ((((ap_predicate_op377_readreq_state26 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6_io)))) begin
            ap_reg_ioackin_m_axi_URtoDF_Move2_ARREADY <= 1'b0;
        end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (m_axi_URtoDF_Move2_ARREADY == 1'b1) & (1'b0 == ap_block_pp0_stage5_01001) & (((or_cond_reg_2653 == 1'd0) & (exitcond2_reg_2634 == 1'd0)) | ((tmp_233_reg_2519 == 1'd1) & (exitcond2_reg_2634 == 1'd0)))) | ((1'b1 == ap_CS_fsm_state6) & (m_axi_URtoDF_Move2_ARREADY == 1'b1)))) begin
            ap_reg_ioackin_m_axi_URtoDF_Move2_ARREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (((tmp_264_reg_2783 == 1'd1) & (or_cond_reg_2653_pp0_iter1_reg == 1'd0)) | ((tmp_264_reg_2783 == 1'd1) & (tmp_233_reg_2519 == 1'd1))))) begin
        P3Start_fu_228 <= tmp_378_s_fu_1955_p3;
    end else if ((~(((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URtoDF_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_FRtoBR_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URFtoDLF_Move2_RVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state13) & ((exitcond3_fu_1147_p2 == 1'd1) | (tmp_226_reg_2299 == 1'd1)))) begin
        P3Start_fu_228 <= P3Start_read;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond2_reg_2634 == 1'd0))) begin
        i1_reg_833 <= i_35_reg_2648;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        i1_reg_833 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state47) & (tmp_240_fu_2054_p2 == 1'd0))) begin
        i2_reg_844 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        i2_reg_844 <= i_34_reg_2828;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_i_reg_810 <= i_32_reg_2269;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_i_reg_810 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_reg_821 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        i_reg_821 <= i_33_reg_2329;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_260_fu_1857_p2 == 1'd1) & (or_cond_reg_2653_pp0_iter1_reg == 1'd0)) | ((tmp_260_fu_1857_p2 == 1'd1) & (tmp_233_reg_2519 == 1'd1))))) begin
        s_fu_224 <= s_4_reg_2528;
    end else if ((~(((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URtoDF_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_FRtoBR_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URFtoDLF_Move2_RVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state13) & ((exitcond3_fu_1147_p2 == 1'd1) | (tmp_226_reg_2299 == 1'd1)))) begin
        s_fu_224 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URtoDF_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_FRtoBR_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URFtoDLF_Move2_RVALID == 1'b0))) & (ap_predicate_op180_read_state13 == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        FRtoBR_Move2_addr_re_reg_2339 <= m_axi_FRtoBR_Move2_RDATA;
        Slice_URFtoDLF_Parit_14_reg_2334 <= m_axi_URFtoDLF_Move2_RDATA;
        Slice_URtoDF_Parity_9_reg_2344 <= m_axi_URtoDF_Move2_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_908_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (tmp_226_fu_981_p2 == 1'd0))) begin
        FRtoBR_Move2_addr_reg_2309 <= sum_cast_fu_1110_p1;
        Slice_URFtoDLF_Parit_12_reg_2303 <= sum5_cast_fu_1091_p1;
        Slice_URtoDF_Parity_7_reg_2315 <= sum9_cast_fu_1129_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (((or_cond_reg_2653 == 1'd0) & (exitcond2_reg_2634 == 1'd0)) | ((tmp_233_reg_2519 == 1'd1) & (exitcond2_reg_2634 == 1'd0))))) begin
        FRtoBR_reg_2689 <= FRtoBR_Move3_2_q0;
        URFtoDLF_reg_2684 <= URFtoDLF_Move3_q0;
        URtoDF_reg_2701 <= URtoDF_Move3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        FRtoBR_reg_2689_pp0_iter1_reg <= FRtoBR_reg_2689;
        URFtoDLF_reg_2684_pp0_iter1_reg <= URFtoDLF_reg_2684;
        URtoDF_reg_2701_pp0_iter1_reg <= URtoDF_reg_2701;
        parity_reg_2694_pp0_iter1_reg <= parity_reg_2694;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        P3Buffer_0_i_load_1_reg_2321 <= P3Buffer_0_i_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (((or_cond_reg_2653 == 1'd0) & (exitcond2_reg_2634 == 1'd0)) | ((tmp_233_reg_2519 == 1'd1) & (exitcond2_reg_2634 == 1'd0))))) begin
        Slice_URFtoDLF_Parit_15_reg_2752 <= sum6_fu_1760_p2;
        Slice_URtoDF_Parity_10_reg_2741 <= sum4_fu_1700_p2;
        tmp_198_reg_2736 <= tmp_198_fu_1696_p1;
        tmp_203_reg_2747 <= tmp_203_fu_1756_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op391_read_state33 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Slice_URFtoDLF_Parit_17_reg_2763 <= m_axi_URFtoDLF_Move2_RDATA;
        Slice_URtoDF_Parity_12_reg_2758 <= m_axi_URtoDF_Move2_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & ((tmp_233_reg_2519 == 1'd1) | (or_cond_reg_2653_pp0_iter1_reg == 1'd0)))) begin
        a_1_reg_2768 <= a_1_fu_1801_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        axOld_reg_2383 <= search_0_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond2_reg_2634 <= exitcond2_fu_1398_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        i1_1_i_reg_2409 <= i1_1_i_fu_1208_p2;
        i2_1_i_reg_2414 <= i2_1_i_fu_1213_p2;
        search_0_i_load_4_reg_2404 <= search_0_i_q1;
        search_0_i_load_reg_2399 <= search_0_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i1_2_i_reg_2439 <= i1_2_i_fu_1228_p2;
        i2_2_i_reg_2444 <= i2_2_i_fu_1233_p2;
        search_0_i_load_5_reg_2429 <= search_0_i_q1;
        search_0_i_load_6_reg_2434 <= search_0_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond_i_fu_908_p2 == 1'd0))) begin
        i1_2_reg_2274 <= i1_2_fu_932_p2;
        i2_2_reg_2279 <= i2_2_fu_937_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i1_3_i_reg_2469 <= i1_3_i_fu_1248_p2;
        i2_3_i_reg_2474 <= i2_3_i_fu_1253_p2;
        search_0_i_load_7_reg_2459 <= search_0_i_q1;
        search_0_i_load_8_reg_2464 <= search_0_i_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        i1_4_i_reg_2499 <= i1_4_i_fu_1268_p2;
        i2_4_i_reg_2504 <= i2_4_i_fu_1273_p2;
        search_0_i_load_10_reg_2494 <= search_0_i_q0;
        search_0_i_load_9_reg_2489 <= search_0_i_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state48) & (exitcond_fu_2065_p2 == 1'd0) & (tmp_240_reg_2816 == 1'd0))) begin
        i2_1_reg_2833 <= i2_1_fu_2094_p2;
        tmp_262_reg_2838 <= tmp_262_fu_2099_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (((tmp_260_reg_2779 == 1'd1) & (or_cond_reg_2653_pp0_iter2_reg == 1'd0)) | ((tmp_260_reg_2779 == 1'd1) & (tmp_233_reg_2519 == 1'd1))))) begin
        iSol_s_fu_220 <= mv_cast_fu_2041_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_32_reg_2269 <= i_32_fu_914_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URtoDF_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_FRtoBR_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URFtoDLF_Move2_RVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state13) & (tmp_226_reg_2299 == 1'd0))) begin
        i_33_reg_2329 <= i_33_fu_1153_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state48) & (tmp_240_reg_2816 == 1'd0))) begin
        i_34_reg_2828 <= i_34_fu_2071_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond2_fu_1398_p2 == 1'd0))) begin
        i_35_reg_2648 <= i_35_fu_1416_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & ((tmp_233_reg_2519 == 1'd1) | (or_cond_reg_2653_pp0_iter1_reg == 1'd0)))) begin
        minDistPhase2_reg_2774 <= minDistPhase2_fu_1850_p3;
        tmp_260_reg_2779 <= tmp_260_fu_1857_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (((or_cond_fu_1448_p2 == 1'd0) & (exitcond2_reg_2634 == 1'd0)) | ((tmp_233_reg_2519 == 1'd1) & (exitcond2_reg_2634 == 1'd0))))) begin
        mv_reg_2657 <= mv_fu_1478_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mv_reg_2657_pp0_iter1_reg <= mv_reg_2657;
        mv_reg_2657_pp0_iter2_reg <= mv_reg_2657_pp0_iter1_reg;
        or_cond_reg_2653_pp0_iter1_reg <= or_cond_reg_2653;
        or_cond_reg_2653_pp0_iter2_reg <= or_cond_reg_2653_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URtoDF_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_FRtoBR_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URFtoDLF_Move2_RVALID == 1'b0))) & (exitcond3_fu_1147_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13) & (tmp_226_reg_2299 == 1'd0))) begin
        nOld <= tmp_s_reg_2294;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URtoDF_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_FRtoBR_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URFtoDLF_Move2_RVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state13) & ((exitcond3_fu_1147_p2 == 1'd1) | (tmp_226_reg_2299 == 1'd1)))) begin
        n_3_reg_2369 <= n_3_fu_1164_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        n_reg_2210 <= P3Buffer_0_n_q0;
        parityOld_reg_2221 <= P3Buffer_0_parity_q0;
        search_0_FRtoBR_reg_2234 <= P3Buffer_0_FRtoBR_q0;
        search_0_URFtoDLF_reg_2226 <= P3Buffer_0_URFtoDLF_q0;
        search_0_URtoDF_reg_2240 <= P3Buffer_0_URtoDF_q0;
        start_assign_reg_2215 <= start_assign_fu_892_p2;
        tmp_62_i_reg_2259 <= tmp_62_i_fu_902_p2;
        tmp_i_cast_reg_2246 <= tmp_i_cast_fu_898_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_233_reg_2519 == 1'd0) & (exitcond2_reg_2634 == 1'd0))) begin
        or_cond_reg_2653 <= or_cond_fu_1448_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (((tmp_264_fu_1875_p2 == 1'd1) & (or_cond_reg_2653_pp0_iter1_reg == 1'd0)) | ((tmp_264_fu_1875_p2 == 1'd1) & (tmp_233_reg_2519 == 1'd1))))) begin
        p_s_reg_2801 <= p_s_fu_1933_p3;
        tmp_269_reg_2806 <= tmp_269_fu_1941_p2;
        tmp_277_reg_2787 <= tmp_277_fu_1905_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (((or_cond_reg_2653 == 1'd0) & (exitcond2_reg_2634 == 1'd0)) | ((tmp_233_reg_2519 == 1'd1) & (exitcond2_reg_2634 == 1'd0))))) begin
        parity_reg_2694 <= parityMove_q0;
        tmp_196_reg_2716 <= tmp_249_fu_1537_p2[32'd21];
        tmp_197_reg_2721 <= {{p_neg_fu_1611_p2[23:1]}};
        tmp_201_reg_2726 <= tmp_251_fu_1585_p2[32'd21];
        tmp_202_reg_2731 <= {{p_neg1_fu_1635_p2[23:1]}};
        tmp_249_reg_2706 <= tmp_249_fu_1537_p2;
        tmp_251_reg_2711 <= tmp_251_fu_1585_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        s_4_reg_2528 <= s_4_fu_1302_p2;
        search_0_i_load_11_reg_2604 <= search_0_i_q1;
        search_0_i_load_12_reg_2614 <= search_0_i_q0;
        search_sol_i_addr_reg_2549 <= tmp_236_fu_1328_p1;
        sext5_reg_2624[30 : 0] <= sext5_fu_1392_p1[30 : 0];
        sext6_reg_2629[30 : 0] <= sext6_fu_1395_p1[30 : 0];
        tmp_233_reg_2519 <= tmp_233_fu_1291_p2;
        tmp_235_reg_2539 <= tmp_235_fu_1322_p2;
        tmp_237_reg_2554 <= tmp_237_fu_1338_p2;
        tmp_239_reg_2619 <= tmp_239_fu_1384_p3;
        tmp_240_cast_reg_2544 <= tmp_240_cast_fu_1332_p1;
        tmp_271_cast_reg_2523[1] <= tmp_271_cast_fu_1295_p3[1];
tmp_271_cast_reg_2523[4] <= tmp_271_cast_fu_1295_p3[4];
        tmp_292_cast_reg_2533 <= tmp_292_cast_fu_1306_p1;
        tmp_61_1_i_cast_reg_2569 <= tmp_61_1_i_cast_fu_1350_p1;
        tmp_61_2_i_cast_reg_2579 <= tmp_61_2_i_cast_fu_1356_p1;
        tmp_61_3_i_cast_reg_2589 <= tmp_61_3_i_cast_fu_1362_p1;
        tmp_61_4_i_cast_reg_2599 <= tmp_61_4_i_cast_fu_1368_p1;
        tmp_61_i4_cast_reg_2559 <= tmp_61_i4_cast_fu_1344_p1;
        tmp_62_1_i_cast_reg_2574 <= tmp_62_1_i_cast_fu_1353_p1;
        tmp_62_2_i_cast_reg_2584 <= tmp_62_2_i_cast_fu_1359_p1;
        tmp_62_3_i_cast_reg_2594 <= tmp_62_3_i_cast_fu_1365_p1;
        tmp_62_4_i_cast_reg_2609 <= tmp_62_4_i_cast_fu_1371_p1;
        tmp_62_i8_cast_reg_2564 <= tmp_62_i8_cast_fu_1347_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state47) & (tmp_240_fu_2054_p2 == 1'd0))) begin
        tmp5_reg_2820 <= tmp5_fu_2060_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_908_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_226_reg_2299 <= tmp_226_fu_981_p2;
        tmp_s_reg_2294 <= tmp_s_fu_970_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_227_reg_2135 <= tmp_227_fu_886_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        tmp_240_reg_2816 <= tmp_240_fu_2054_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        tmp_263_reg_2848 <= tmp_263_fu_2124_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & ((tmp_233_reg_2519 == 1'd1) | (or_cond_reg_2653_pp0_iter1_reg == 1'd0)))) begin
        tmp_264_reg_2783 <= tmp_264_fu_1875_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (((tmp_264_reg_2783 == 1'd1) & (or_cond_reg_2653_pp0_iter2_reg == 1'd0)) | ((tmp_264_reg_2783 == 1'd1) & (tmp_233_reg_2519 == 1'd1))))) begin
        tmp_288_reg_2811 <= tmp_288_fu_2037_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        FRtoBR_Move2_blk_n_AR = m_axi_FRtoBR_Move2_ARREADY;
    end else begin
        FRtoBR_Move2_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (exitcond3_fu_1147_p2 == 1'd0) & (tmp_226_reg_2299 == 1'd0))) begin
        FRtoBR_Move2_blk_n_R = m_axi_FRtoBR_Move2_RVALID;
    end else begin
        FRtoBR_Move2_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        FRtoBR_Move3_2_address0 = tmp_246_fu_1484_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        FRtoBR_Move3_2_address0 = tmp_229_fu_1193_p1;
    end else begin
        FRtoBR_Move3_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        FRtoBR_Move3_2_ce0 = 1'b1;
    end else begin
        FRtoBR_Move3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        FRtoBR_Move3_2_we0 = 1'b1;
    end else begin
        FRtoBR_Move3_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        P3Buffer_0_FRtoBR_address0 = tmp_266_fu_1880_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        P3Buffer_0_FRtoBR_address0 = tmp_fu_861_p1;
    end else begin
        P3Buffer_0_FRtoBR_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        P3Buffer_0_FRtoBR_ce0 = 1'b1;
    end else begin
        P3Buffer_0_FRtoBR_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_264_fu_1875_p2 == 1'd1) & (or_cond_reg_2653_pp0_iter1_reg == 1'd0)) | ((tmp_264_fu_1875_p2 == 1'd1) & (tmp_233_reg_2519 == 1'd1))))) begin
        P3Buffer_0_FRtoBR_we0 = 1'b1;
    end else begin
        P3Buffer_0_FRtoBR_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        P3Buffer_0_URFtoDLF_address0 = tmp_266_fu_1880_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        P3Buffer_0_URFtoDLF_address0 = tmp_fu_861_p1;
    end else begin
        P3Buffer_0_URFtoDLF_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        P3Buffer_0_URFtoDLF_ce0 = 1'b1;
    end else begin
        P3Buffer_0_URFtoDLF_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_264_fu_1875_p2 == 1'd1) & (or_cond_reg_2653_pp0_iter1_reg == 1'd0)) | ((tmp_264_fu_1875_p2 == 1'd1) & (tmp_233_reg_2519 == 1'd1))))) begin
        P3Buffer_0_URFtoDLF_we0 = 1'b1;
    end else begin
        P3Buffer_0_URFtoDLF_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        P3Buffer_0_URtoDF_address0 = tmp_266_fu_1880_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        P3Buffer_0_URtoDF_address0 = tmp_fu_861_p1;
    end else begin
        P3Buffer_0_URtoDF_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        P3Buffer_0_URtoDF_ce0 = 1'b1;
    end else begin
        P3Buffer_0_URtoDF_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_264_fu_1875_p2 == 1'd1) & (or_cond_reg_2653_pp0_iter1_reg == 1'd0)) | ((tmp_264_fu_1875_p2 == 1'd1) & (tmp_233_reg_2519 == 1'd1))))) begin
        P3Buffer_0_URtoDF_we0 = 1'b1;
    end else begin
        P3Buffer_0_URtoDF_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        P3Buffer_0_i_address0 = tmp_305_cast_fu_2032_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        P3Buffer_0_i_address0 = tmp_303_cast_fu_2014_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage10))) begin
        P3Buffer_0_i_address0 = tmp_302_cast_fu_2005_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        P3Buffer_0_i_address0 = tmp_300_cast_fu_1987_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        P3Buffer_0_i_address0 = tmp_298_cast_fu_1969_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        P3Buffer_0_i_address0 = tmp_296_cast_fu_1916_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        P3Buffer_0_i_address0 = tmp_258_cast_fu_951_p1;
    end else begin
        P3Buffer_0_i_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        P3Buffer_0_i_address1 = tmp_306_cast1_fu_2050_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        P3Buffer_0_i_address1 = tmp_304_cast_fu_2023_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        P3Buffer_0_i_address1 = tmp_301_cast_fu_1996_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        P3Buffer_0_i_address1 = tmp_299_cast_fu_1978_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        P3Buffer_0_i_address1 = tmp_297_cast1_fu_1950_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        P3Buffer_0_i_address1 = tmp_270_cast_fu_965_p1;
    end else begin
        P3Buffer_0_i_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)))) begin
        P3Buffer_0_i_ce0 = 1'b1;
    end else begin
        P3Buffer_0_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)))) begin
        P3Buffer_0_i_ce1 = 1'b1;
    end else begin
        P3Buffer_0_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        P3Buffer_0_i_d0 = search_0_i_load_12_reg_2614;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        P3Buffer_0_i_d0 = search_0_i_load_10_reg_2494;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage10))) begin
        P3Buffer_0_i_d0 = search_0_i_load_9_reg_2489;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        P3Buffer_0_i_d0 = search_0_i_load_7_reg_2459;
    end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        P3Buffer_0_i_d0 = search_0_i_load_5_reg_2429;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        P3Buffer_0_i_d0 = search_0_i_load_reg_2399;
    end else begin
        P3Buffer_0_i_d0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        P3Buffer_0_i_d1 = mv_cast_fu_2041_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        P3Buffer_0_i_d1 = search_0_i_load_11_reg_2604;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        P3Buffer_0_i_d1 = search_0_i_load_8_reg_2464;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        P3Buffer_0_i_d1 = search_0_i_load_6_reg_2434;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        P3Buffer_0_i_d1 = search_0_i_load_4_reg_2404;
    end else begin
        P3Buffer_0_i_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (((tmp_264_reg_2783 == 1'd1) & (or_cond_reg_2653_pp0_iter2_reg == 1'd0)) | ((tmp_264_reg_2783 == 1'd1) & (tmp_233_reg_2519 == 1'd1)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_264_reg_2783 == 1'd1) & (or_cond_reg_2653_pp0_iter1_reg == 1'd0)) | ((tmp_264_reg_2783 == 1'd1) & (tmp_233_reg_2519 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001) & (((tmp_264_reg_2783 == 1'd1) & (or_cond_reg_2653_pp0_iter1_reg == 1'd0)) | ((tmp_264_reg_2783 == 1'd1) & (tmp_233_reg_2519 == 1'd1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (((tmp_264_reg_2783 == 1'd1) & (or_cond_reg_2653_pp0_iter1_reg == 1'd0)) | ((tmp_264_reg_2783 == 1'd1) & (tmp_233_reg_2519 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage10_11001) & (((tmp_264_reg_2783 == 1'd1) & (or_cond_reg_2653_pp0_iter1_reg == 1'd0)) | ((tmp_264_reg_2783 == 1'd1) & (tmp_233_reg_2519 == 1'd1)))) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_264_fu_1875_p2 == 1'd1) & (or_cond_reg_2653_pp0_iter1_reg == 1'd0)) | ((tmp_264_fu_1875_p2 == 1'd1) & (tmp_233_reg_2519 == 1'd1)))))) begin
        P3Buffer_0_i_we0 = 1'b1;
    end else begin
        P3Buffer_0_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (((tmp_264_reg_2783 == 1'd1) & (or_cond_reg_2653_pp0_iter2_reg == 1'd0)) | ((tmp_264_reg_2783 == 1'd1) & (tmp_233_reg_2519 == 1'd1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (((tmp_264_reg_2783 == 1'd1) & (or_cond_reg_2653_pp0_iter1_reg == 1'd0)) | ((tmp_264_reg_2783 == 1'd1) & (tmp_233_reg_2519 == 1'd1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (((tmp_264_reg_2783 == 1'd1) & (or_cond_reg_2653_pp0_iter1_reg == 1'd0)) | ((tmp_264_reg_2783 == 1'd1) & (tmp_233_reg_2519 == 1'd1)))) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (((tmp_264_reg_2783 == 1'd1) & (or_cond_reg_2653_pp0_iter1_reg == 1'd0)) | ((tmp_264_reg_2783 == 1'd1) & (tmp_233_reg_2519 == 1'd1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (((tmp_264_reg_2783 == 1'd1) & (or_cond_reg_2653_pp0_iter1_reg == 1'd0)) | ((tmp_264_reg_2783 == 1'd1) & (tmp_233_reg_2519 == 1'd1)))))) begin
        P3Buffer_0_i_we1 = 1'b1;
    end else begin
        P3Buffer_0_i_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        P3Buffer_0_n_address0 = tmp_266_fu_1880_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        P3Buffer_0_n_address0 = tmp_fu_861_p1;
    end else begin
        P3Buffer_0_n_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        P3Buffer_0_n_ce0 = 1'b1;
    end else begin
        P3Buffer_0_n_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_264_fu_1875_p2 == 1'd1) & (or_cond_reg_2653_pp0_iter1_reg == 1'd0)) | ((tmp_264_fu_1875_p2 == 1'd1) & (tmp_233_reg_2519 == 1'd1))))) begin
        P3Buffer_0_n_we0 = 1'b1;
    end else begin
        P3Buffer_0_n_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        P3Buffer_0_parity_address0 = tmp_266_fu_1880_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        P3Buffer_0_parity_address0 = tmp_fu_861_p1;
    end else begin
        P3Buffer_0_parity_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        P3Buffer_0_parity_ce0 = 1'b1;
    end else begin
        P3Buffer_0_parity_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_264_fu_1875_p2 == 1'd1) & (or_cond_reg_2653_pp0_iter1_reg == 1'd0)) | ((tmp_264_fu_1875_p2 == 1'd1) & (tmp_233_reg_2519 == 1'd1))))) begin
        P3Buffer_0_parity_we0 = 1'b1;
    end else begin
        P3Buffer_0_parity_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (((or_cond_reg_2653 == 1'd0) & (exitcond2_reg_2634 == 1'd0)) | ((tmp_233_reg_2519 == 1'd1) & (exitcond2_reg_2634 == 1'd0)))))) begin
        URFtoDLF_Move2_blk_n_AR = m_axi_URFtoDLF_Move2_ARREADY;
    end else begin
        URFtoDLF_Move2_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & ((tmp_233_reg_2519 == 1'd1) | (or_cond_reg_2653 == 1'd0))) | ((1'b1 == ap_CS_fsm_state13) & (exitcond3_fu_1147_p2 == 1'd0) & (tmp_226_reg_2299 == 1'd0)))) begin
        URFtoDLF_Move2_blk_n_R = m_axi_URFtoDLF_Move2_RVALID;
    end else begin
        URFtoDLF_Move2_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        URFtoDLF_Move3_address0 = tmp_246_fu_1484_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        URFtoDLF_Move3_address0 = tmp_229_fu_1193_p1;
    end else begin
        URFtoDLF_Move3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        URFtoDLF_Move3_ce0 = 1'b1;
    end else begin
        URFtoDLF_Move3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        URFtoDLF_Move3_we0 = 1'b1;
    end else begin
        URFtoDLF_Move3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (((or_cond_reg_2653 == 1'd0) & (exitcond2_reg_2634 == 1'd0)) | ((tmp_233_reg_2519 == 1'd1) & (exitcond2_reg_2634 == 1'd0)))))) begin
        URtoDF_Move2_blk_n_AR = m_axi_URtoDF_Move2_ARREADY;
    end else begin
        URtoDF_Move2_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & ((tmp_233_reg_2519 == 1'd1) | (or_cond_reg_2653 == 1'd0))) | ((1'b1 == ap_CS_fsm_state13) & (exitcond3_fu_1147_p2 == 1'd0) & (tmp_226_reg_2299 == 1'd0)))) begin
        URtoDF_Move2_blk_n_R = m_axi_URtoDF_Move2_RVALID;
    end else begin
        URtoDF_Move2_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        URtoDF_Move3_address0 = tmp_246_fu_1484_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        URtoDF_Move3_address0 = tmp_229_fu_1193_p1;
    end else begin
        URtoDF_Move3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        URtoDF_Move3_ce0 = 1'b1;
    end else begin
        URtoDF_Move3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        URtoDF_Move3_we0 = 1'b1;
    end else begin
        URtoDF_Move3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond2_fu_1398_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state21 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state21 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state48) & ((exitcond_fu_2065_p2 == 1'd1) | (tmp_240_reg_2816 == 1'd1))) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond2_reg_2634 == 1'd0))) begin
        ap_phi_mux_i1_phi_fu_837_p4 = i_35_reg_2648;
    end else begin
        ap_phi_mux_i1_phi_fu_837_p4 = i1_reg_833;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) & ((exitcond_fu_2065_p2 == 1'd1) | (tmp_240_reg_2816 == 1'd1)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_m_axi_FRtoBR_Move2_ARREADY == 1'b0)) begin
        ap_sig_ioackin_m_axi_FRtoBR_Move2_ARREADY = m_axi_FRtoBR_Move2_ARREADY;
    end else begin
        ap_sig_ioackin_m_axi_FRtoBR_Move2_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_m_axi_URFtoDLF_Move2_ARREADY == 1'b0)) begin
        ap_sig_ioackin_m_axi_URFtoDLF_Move2_ARREADY = m_axi_URFtoDLF_Move2_ARREADY;
    end else begin
        ap_sig_ioackin_m_axi_URFtoDLF_Move2_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_m_axi_URtoDF_Move2_ARREADY == 1'b0)) begin
        ap_sig_ioackin_m_axi_URtoDF_Move2_ARREADY = m_axi_URtoDF_Move2_ARREADY;
    end else begin
        ap_sig_ioackin_m_axi_URtoDF_Move2_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        label3_0_ce0 = 1'b1;
    end else begin
        label3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        label3_1_ce0 = 1'b1;
    end else begin
        label3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_m_axi_FRtoBR_Move2_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state6))) begin
        m_axi_FRtoBR_Move2_ARVALID = 1'b1;
    end else begin
        m_axi_FRtoBR_Move2_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URtoDF_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_FRtoBR_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URFtoDLF_Move2_RVALID == 1'b0))) & (ap_predicate_op180_read_state13 == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        m_axi_FRtoBR_Move2_RREADY = 1'b1;
    end else begin
        m_axi_FRtoBR_Move2_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_m_axi_URFtoDLF_Move2_ARREADY == 1'b0)) begin
        if ((1'b1 == ap_condition_1130)) begin
            m_axi_URFtoDLF_Move2_ARADDR = Slice_URFtoDLF_Parit_15_reg_2752;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            m_axi_URFtoDLF_Move2_ARADDR = Slice_URFtoDLF_Parit_12_reg_2303;
        end else begin
            m_axi_URFtoDLF_Move2_ARADDR = 'bx;
        end
    end else begin
        m_axi_URFtoDLF_Move2_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_m_axi_URFtoDLF_Move2_ARREADY == 1'b0)) begin
        if ((1'b1 == ap_condition_1130)) begin
            m_axi_URFtoDLF_Move2_ARLEN = 32'd1;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            m_axi_URFtoDLF_Move2_ARLEN = 32'd18;
        end else begin
            m_axi_URFtoDLF_Move2_ARLEN = 'bx;
        end
    end else begin
        m_axi_URFtoDLF_Move2_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op377_readreq_state26 == 1'b1) & (ap_reg_ioackin_m_axi_URFtoDLF_Move2_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_01001)) | ((ap_reg_ioackin_m_axi_URFtoDLF_Move2_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state6)))) begin
        m_axi_URFtoDLF_Move2_ARVALID = 1'b1;
    end else begin
        m_axi_URFtoDLF_Move2_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op391_read_state33 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | (~(((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URtoDF_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_FRtoBR_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URFtoDLF_Move2_RVALID == 1'b0))) & (ap_predicate_op180_read_state13 == 1'b1) & (1'b1 == ap_CS_fsm_state13)))) begin
        m_axi_URFtoDLF_Move2_RREADY = 1'b1;
    end else begin
        m_axi_URFtoDLF_Move2_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_m_axi_URtoDF_Move2_ARREADY == 1'b0)) begin
        if ((1'b1 == ap_condition_1130)) begin
            m_axi_URtoDF_Move2_ARADDR = Slice_URtoDF_Parity_10_reg_2741;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            m_axi_URtoDF_Move2_ARADDR = Slice_URtoDF_Parity_7_reg_2315;
        end else begin
            m_axi_URtoDF_Move2_ARADDR = 'bx;
        end
    end else begin
        m_axi_URtoDF_Move2_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_m_axi_URtoDF_Move2_ARREADY == 1'b0)) begin
        if ((1'b1 == ap_condition_1130)) begin
            m_axi_URtoDF_Move2_ARLEN = 32'd1;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            m_axi_URtoDF_Move2_ARLEN = 32'd18;
        end else begin
            m_axi_URtoDF_Move2_ARLEN = 'bx;
        end
    end else begin
        m_axi_URtoDF_Move2_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op377_readreq_state26 == 1'b1) & (ap_reg_ioackin_m_axi_URtoDF_Move2_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_01001)) | ((ap_reg_ioackin_m_axi_URtoDF_Move2_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state6)))) begin
        m_axi_URtoDF_Move2_ARVALID = 1'b1;
    end else begin
        m_axi_URtoDF_Move2_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op391_read_state33 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | (~(((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URtoDF_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_FRtoBR_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URFtoDLF_Move2_RVALID == 1'b0))) & (ap_predicate_op180_read_state13 == 1'b1) & (1'b1 == ap_CS_fsm_state13)))) begin
        m_axi_URtoDF_Move2_RREADY = 1'b1;
    end else begin
        m_axi_URtoDF_Move2_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        parityMove_ce0 = 1'b1;
    end else begin
        parityMove_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        search_0_i_address0 = tmp_62_4_i_fu_1283_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        search_0_i_address0 = tmp_62_3_i_fu_1263_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        search_0_i_address0 = tmp_62_2_i_fu_1243_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        search_0_i_address0 = tmp_62_1_i_fu_1223_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        search_0_i_address0 = tmp_61_i4_fu_1200_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        search_0_i_address0 = tmp_232_fu_1179_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        search_0_i_address0 = tmp_64_i_fu_1143_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        search_0_i_address0 = tmp_63_i_fu_1139_p1;
    end else begin
        search_0_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        search_0_i_address1 = tmp_263_fu_2124_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        search_0_i_address1 = tmp_262_fu_2099_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        search_0_i_address1 = tmp_61_4_i_fu_1278_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        search_0_i_address1 = tmp_61_3_i_fu_1258_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        search_0_i_address1 = tmp_61_2_i_fu_1238_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        search_0_i_address1 = tmp_61_1_i_fu_1218_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        search_0_i_address1 = tmp_62_i8_fu_1204_p1;
    end else begin
        search_0_i_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state4) | (~(((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URtoDF_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_FRtoBR_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URFtoDLF_Move2_RVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state13)))) begin
        search_0_i_ce0 = 1'b1;
    end else begin
        search_0_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15))) begin
        search_0_i_ce1 = 1'b1;
    end else begin
        search_0_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        search_0_i_d0 = P3Buffer_0_i_load_1_reg_2321;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        search_0_i_d0 = P3Buffer_0_i_q0;
    end else begin
        search_0_i_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        search_0_i_we0 = 1'b1;
    end else begin
        search_0_i_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_01001) & (((tmp_260_fu_1857_p2 == 1'd1) & (or_cond_reg_2653_pp0_iter1_reg == 1'd0)) | ((tmp_260_fu_1857_p2 == 1'd1) & (tmp_233_reg_2519 == 1'd1))))) begin
        search_sol_depthPhas_ap_vld = 1'b1;
    end else begin
        search_sol_depthPhas_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        search_sol_i_address0 = tmp_263_reg_2848;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        search_sol_i_address0 = tmp_262_reg_2838;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        search_sol_i_address0 = search_sol_i_addr_reg_2549;
    end else begin
        search_sol_i_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48))) begin
        search_sol_i_ce0 = 1'b1;
    end else begin
        search_sol_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49))) begin
        search_sol_i_d0 = search_0_i_q1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        search_sol_i_d0 = iSol_s_fu_220;
    end else begin
        search_sol_i_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | ((exitcond_fu_2065_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48) & (tmp_240_reg_2816 == 1'd0)))) begin
        search_sol_i_we0 = 1'b1;
    end else begin
        search_sol_i_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((tmp_226_fu_981_p2 == 1'd1) & (exitcond_i_fu_908_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else if (((exitcond_i_fu_908_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (tmp_226_fu_981_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6_io))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if ((~(((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URtoDF_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_FRtoBR_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URFtoDLF_Move2_RVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state13) & ((exitcond3_fu_1147_p2 == 1'd1) | (tmp_226_reg_2299 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else if ((~(((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URtoDF_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_FRtoBR_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URFtoDLF_Move2_RVALID == 1'b0))) & (1'b1 == ap_CS_fsm_state13) & (exitcond3_fu_1147_p2 == 1'd0) & (tmp_226_reg_2299 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (exitcond2_fu_1398_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (exitcond2_fu_1398_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((~((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            if (((1'b1 == ap_CS_fsm_state48) & ((exitcond_fu_2065_p2 == 1'd1) | (tmp_240_reg_2816 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign P3Buffer_0_FRtoBR_d0 = FRtoBR_reg_2689_pp0_iter1_reg;

assign P3Buffer_0_URFtoDLF_d0 = URFtoDLF_reg_2684_pp0_iter1_reg;

assign P3Buffer_0_URtoDF_d0 = URtoDF_reg_2701_pp0_iter1_reg;

assign P3Buffer_0_n_d0 = n_3_reg_2369;

assign P3Buffer_0_parity_d0 = parity_reg_2694_pp0_iter1_reg;

assign Slice_URFtoDLF_Parit_8_fu_1819_p2 = Slice_URFtoDLF_Parit_17_reg_2763 >> tmp_275_fu_1815_p1;

assign Slice_URtoDF_Parity_5_fu_1782_p2 = Slice_URtoDF_Parity_12_reg_2758 >> tmp_258_fu_1778_p1;

assign a_1_fu_1801_p3 = ((parity_reg_2694[0:0] === 1'b1) ? tmp_270_fu_1787_p4 : tmp_200_fu_1797_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op391_read_state33 == 1'b1) & (m_axi_URtoDF_Move2_RVALID == 1'b0)) | ((ap_predicate_op391_read_state33 == 1'b1) & (m_axi_URFtoDLF_Move2_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op391_read_state33 == 1'b1) & (m_axi_URtoDF_Move2_RVALID == 1'b0)) | ((ap_predicate_op391_read_state33 == 1'b1) & (m_axi_URFtoDLF_Move2_RVALID == 1'b0))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((1'b1 == ap_block_state26_io) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((1'b1 == ap_block_state26_io) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13 = (((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URtoDF_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_FRtoBR_Move2_RVALID == 1'b0)) | ((ap_predicate_op180_read_state13 == 1'b1) & (m_axi_URFtoDLF_Move2_RVALID == 1'b0)));
end

assign ap_block_state21_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state26_io = (((ap_predicate_op377_readreq_state26 == 1'b1) & (ap_sig_ioackin_m_axi_URtoDF_Move2_ARREADY == 1'b0)) | ((ap_predicate_op377_readreq_state26 == 1'b1) & (ap_sig_ioackin_m_axi_URFtoDLF_Move2_ARREADY == 1'b0)));
end

assign ap_block_state26_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state33_pp0_stage1_iter1 = (((ap_predicate_op391_read_state33 == 1'b1) & (m_axi_URtoDF_Move2_RVALID == 1'b0)) | ((ap_predicate_op391_read_state33 == 1'b1) & (m_axi_URFtoDLF_Move2_RVALID == 1'b0)));
end

assign ap_block_state34_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = ((ap_sig_ioackin_m_axi_URtoDF_Move2_ARREADY == 1'b0) | (ap_sig_ioackin_m_axi_FRtoBR_Move2_ARREADY == 1'b0) | (ap_sig_ioackin_m_axi_URFtoDLF_Move2_ARREADY == 1'b0));
end

always @ (*) begin
    ap_condition_1130 = ((ap_predicate_op377_readreq_state26 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_01001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op180_read_state13 = ((exitcond3_fu_1147_p2 == 1'd0) & (tmp_226_reg_2299 == 1'd0));
end

always @ (*) begin
    ap_predicate_op377_readreq_state26 = (((or_cond_reg_2653 == 1'd0) & (exitcond2_reg_2634 == 1'd0)) | ((tmp_233_reg_2519 == 1'd1) & (exitcond2_reg_2634 == 1'd0)));
end

always @ (*) begin
    ap_predicate_op391_read_state33 = ((tmp_233_reg_2519 == 1'd1) | (or_cond_reg_2653 == 1'd0));
end

assign ap_return_0 = tmp_265_fu_2108_p1;

assign ap_return_1 = P3Start_fu_228;

assign ax_cast1_fu_1422_p1 = label3_0_q0;

assign ax_cast_fu_1426_p1 = label3_0_q0;

assign b_fu_1838_p3 = ((parity_reg_2694[0:0] === 1'b1) ? tmp_276_fu_1824_p4 : tmp_205_fu_1834_p1);

assign exitcond2_fu_1398_p2 = ((ap_phi_mux_i1_phi_fu_837_p4 == 4'd11) ? 1'b1 : 1'b0);

assign exitcond3_fu_1147_p2 = ((i_reg_821 == 5'd18) ? 1'b1 : 1'b0);

assign exitcond_fu_2065_p2 = ((i2_reg_844 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond_i_fu_908_p2 = ((i_i_reg_810 == 3'd5) ? 1'b1 : 1'b0);

assign i1_1_fu_2089_p2 = (tmp_324_cast_fu_2085_p1 + tmp5_reg_2820);

assign i1_1_i_fu_1208_p2 = ($signed(tmp_i_cast_reg_2246) + $signed(9'd2));

assign i1_2_fu_932_p2 = ($signed(tmp_61_i_cast_fu_928_p1) + $signed(tmp_i_cast_reg_2246));

assign i1_2_i_fu_1228_p2 = ($signed(tmp_i_cast_reg_2246) + $signed(9'd4));

assign i1_3_i_fu_1248_p2 = ($signed(tmp_i_cast_reg_2246) + $signed(9'd6));

assign i1_4_i_fu_1268_p2 = ($signed(tmp_i_cast_reg_2246) + $signed(9'd8));

assign i2_1_fu_2094_p2 = ($signed(tmp_292_cast_reg_2533) + $signed(tmp_324_cast_fu_2085_p1));

assign i2_1_i_fu_1213_p2 = ($signed(tmp_i_cast_reg_2246) + $signed(9'd3));

assign i2_2_fu_937_p2 = ($signed(tmp_61_i_cast_fu_928_p1) + $signed(tmp_62_i_reg_2259));

assign i2_2_i_fu_1233_p2 = ($signed(tmp_i_cast_reg_2246) + $signed(9'd5));

assign i2_3_i_fu_1253_p2 = ($signed(tmp_i_cast_reg_2246) + $signed(9'd7));

assign i2_4_i_fu_1273_p2 = ($signed(tmp_i_cast_reg_2246) + $signed(9'd9));

assign i_32_fu_914_p2 = (i_i_reg_810 + 3'd1);

assign i_33_fu_1153_p2 = (i_reg_821 + 5'd1);

assign i_34_fu_2071_p2 = (i2_reg_844 + 3'd1);

assign i_35_fu_1416_p2 = (ap_phi_mux_i1_phi_fu_837_p4 + 4'd1);

assign index1_cast_fu_1599_p1 = $signed(tmp_76_fu_1591_p3);

assign index_cast_fu_1551_p1 = $signed(tmp_75_fu_1543_p3);

assign label3_0_address0 = tmp_242_fu_1410_p1;

assign label3_1_address0 = tmp_242_fu_1410_p1;

assign m_axi_FRtoBR_Move2_ARADDR = FRtoBR_Move2_addr_reg_2309;

assign m_axi_FRtoBR_Move2_ARBURST = 2'd0;

assign m_axi_FRtoBR_Move2_ARCACHE = 4'd0;

assign m_axi_FRtoBR_Move2_ARID = 1'd0;

assign m_axi_FRtoBR_Move2_ARLEN = 32'd18;

assign m_axi_FRtoBR_Move2_ARLOCK = 2'd0;

assign m_axi_FRtoBR_Move2_ARPROT = 3'd0;

assign m_axi_FRtoBR_Move2_ARQOS = 4'd0;

assign m_axi_FRtoBR_Move2_ARREGION = 4'd0;

assign m_axi_FRtoBR_Move2_ARSIZE = 3'd0;

assign m_axi_FRtoBR_Move2_ARUSER = 1'd0;

assign m_axi_FRtoBR_Move2_AWADDR = 32'd0;

assign m_axi_FRtoBR_Move2_AWBURST = 2'd0;

assign m_axi_FRtoBR_Move2_AWCACHE = 4'd0;

assign m_axi_FRtoBR_Move2_AWID = 1'd0;

assign m_axi_FRtoBR_Move2_AWLEN = 32'd0;

assign m_axi_FRtoBR_Move2_AWLOCK = 2'd0;

assign m_axi_FRtoBR_Move2_AWPROT = 3'd0;

assign m_axi_FRtoBR_Move2_AWQOS = 4'd0;

assign m_axi_FRtoBR_Move2_AWREGION = 4'd0;

assign m_axi_FRtoBR_Move2_AWSIZE = 3'd0;

assign m_axi_FRtoBR_Move2_AWUSER = 1'd0;

assign m_axi_FRtoBR_Move2_AWVALID = 1'b0;

assign m_axi_FRtoBR_Move2_BREADY = 1'b0;

assign m_axi_FRtoBR_Move2_WDATA = 16'd0;

assign m_axi_FRtoBR_Move2_WID = 1'd0;

assign m_axi_FRtoBR_Move2_WLAST = 1'b0;

assign m_axi_FRtoBR_Move2_WSTRB = 2'd0;

assign m_axi_FRtoBR_Move2_WUSER = 1'd0;

assign m_axi_FRtoBR_Move2_WVALID = 1'b0;

assign m_axi_URFtoDLF_Move2_ARBURST = 2'd0;

assign m_axi_URFtoDLF_Move2_ARCACHE = 4'd0;

assign m_axi_URFtoDLF_Move2_ARID = 1'd0;

assign m_axi_URFtoDLF_Move2_ARLOCK = 2'd0;

assign m_axi_URFtoDLF_Move2_ARPROT = 3'd0;

assign m_axi_URFtoDLF_Move2_ARQOS = 4'd0;

assign m_axi_URFtoDLF_Move2_ARREGION = 4'd0;

assign m_axi_URFtoDLF_Move2_ARSIZE = 3'd0;

assign m_axi_URFtoDLF_Move2_ARUSER = 1'd0;

assign m_axi_URFtoDLF_Move2_AWADDR = 32'd0;

assign m_axi_URFtoDLF_Move2_AWBURST = 2'd0;

assign m_axi_URFtoDLF_Move2_AWCACHE = 4'd0;

assign m_axi_URFtoDLF_Move2_AWID = 1'd0;

assign m_axi_URFtoDLF_Move2_AWLEN = 32'd0;

assign m_axi_URFtoDLF_Move2_AWLOCK = 2'd0;

assign m_axi_URFtoDLF_Move2_AWPROT = 3'd0;

assign m_axi_URFtoDLF_Move2_AWQOS = 4'd0;

assign m_axi_URFtoDLF_Move2_AWREGION = 4'd0;

assign m_axi_URFtoDLF_Move2_AWSIZE = 3'd0;

assign m_axi_URFtoDLF_Move2_AWUSER = 1'd0;

assign m_axi_URFtoDLF_Move2_AWVALID = 1'b0;

assign m_axi_URFtoDLF_Move2_BREADY = 1'b0;

assign m_axi_URFtoDLF_Move2_WDATA = 16'd0;

assign m_axi_URFtoDLF_Move2_WID = 1'd0;

assign m_axi_URFtoDLF_Move2_WLAST = 1'b0;

assign m_axi_URFtoDLF_Move2_WSTRB = 2'd0;

assign m_axi_URFtoDLF_Move2_WUSER = 1'd0;

assign m_axi_URFtoDLF_Move2_WVALID = 1'b0;

assign m_axi_URtoDF_Move2_ARBURST = 2'd0;

assign m_axi_URtoDF_Move2_ARCACHE = 4'd0;

assign m_axi_URtoDF_Move2_ARID = 1'd0;

assign m_axi_URtoDF_Move2_ARLOCK = 2'd0;

assign m_axi_URtoDF_Move2_ARPROT = 3'd0;

assign m_axi_URtoDF_Move2_ARQOS = 4'd0;

assign m_axi_URtoDF_Move2_ARREGION = 4'd0;

assign m_axi_URtoDF_Move2_ARSIZE = 3'd0;

assign m_axi_URtoDF_Move2_ARUSER = 1'd0;

assign m_axi_URtoDF_Move2_AWADDR = 32'd0;

assign m_axi_URtoDF_Move2_AWBURST = 2'd0;

assign m_axi_URtoDF_Move2_AWCACHE = 4'd0;

assign m_axi_URtoDF_Move2_AWID = 1'd0;

assign m_axi_URtoDF_Move2_AWLEN = 32'd0;

assign m_axi_URtoDF_Move2_AWLOCK = 2'd0;

assign m_axi_URtoDF_Move2_AWPROT = 3'd0;

assign m_axi_URtoDF_Move2_AWQOS = 4'd0;

assign m_axi_URtoDF_Move2_AWREGION = 4'd0;

assign m_axi_URtoDF_Move2_AWSIZE = 3'd0;

assign m_axi_URtoDF_Move2_AWUSER = 1'd0;

assign m_axi_URtoDF_Move2_AWVALID = 1'b0;

assign m_axi_URtoDF_Move2_BREADY = 1'b0;

assign m_axi_URtoDF_Move2_WDATA = 16'd0;

assign m_axi_URtoDF_Move2_WID = 1'd0;

assign m_axi_URtoDF_Move2_WLAST = 1'b0;

assign m_axi_URtoDF_Move2_WSTRB = 2'd0;

assign m_axi_URtoDF_Move2_WUSER = 1'd0;

assign m_axi_URtoDF_Move2_WVALID = 1'b0;

assign minDistPhase2_fu_1850_p3 = ((tmp_259_fu_1845_p2[0:0] === 1'b1) ? a_1_reg_2768 : b_fu_1838_p3);

assign mv_cast_fu_2041_p1 = mv_reg_2657_pp0_iter2_reg;

assign mv_fu_1478_p2 = (po_cast_fu_1430_p1 + tmp4_fu_1472_p2);

assign n_3_fu_1164_p2 = (n_reg_2210 + 8'd1);

assign or_cond_fu_1448_p2 = (tmp_244_fu_1443_p2 | tmp_243_fu_1434_p2);

assign p_lshr1_fu_1711_p1 = $signed(tmp_202_reg_2731);

assign p_lshr_f1_fu_1727_p1 = $unsigned(tmp_87_fu_1724_p1);

assign p_lshr_f_fu_1667_p1 = $unsigned(tmp_81_fu_1664_p1);

assign p_lshr_fu_1651_p1 = $signed(tmp_197_reg_2721);

assign p_neg1_fu_1635_p2 = ($signed(24'd0) - $signed(index1_cast_fu_1599_p1));

assign p_neg_fu_1611_p2 = ($signed(24'd0) - $signed(index_cast_fu_1551_p1));

assign p_neg_t1_fu_1718_p2 = (32'd0 - tmp_271_fu_1714_p1);

assign p_neg_t_fu_1658_p2 = (32'd0 - tmp_252_fu_1654_p1);

assign p_op_fu_1379_p0 = P3End_read;

assign p_op_fu_1379_p2 = ($signed(p_op_fu_1379_p0) + $signed(32'd4294967295));

assign p_s_fu_1933_p3 = ((tmp_268_fu_1927_p2[0:0] === 1'b1) ? 32'd0 : tmp_267_fu_1921_p2);

assign p_shl10_cast_fu_1575_p1 = $signed(p_shl10_fu_1567_p3);

assign p_shl10_fu_1567_p3 = {{URFtoDLF_Move3_q0}, {3'd0}};

assign p_shl12_cast_fu_1462_p1 = p_shl12_fu_1454_p3;

assign p_shl12_fu_1454_p3 = {{label3_0_q0}, {2'd0}};

assign p_shl13_cast_fu_1511_p1 = $signed(p_shl13_fu_1503_p3);

assign p_shl13_fu_1503_p3 = {{URtoDF_Move3_q0}, {5'd0}};

assign p_shl14_cast_fu_1523_p1 = $signed(p_shl14_fu_1515_p3);

assign p_shl14_fu_1515_p3 = {{URtoDF_Move3_q0}, {3'd0}};

assign p_shl15_cast_fu_878_p3 = {{tmp_194_fu_874_p1}, {5'd0}};

assign p_shl16_cast_fu_1897_p3 = {{tmp_207_fu_1893_p1}, {5'd0}};

assign p_shl2_fu_1033_p3 = {{search_0_URtoDF_reg_2240}, {1'd0}};

assign p_shl3_cast_fu_1011_p1 = $signed(p_shl3_fu_1004_p3);

assign p_shl3_fu_1004_p3 = {{search_0_FRtoBR_reg_2234}, {4'd0}};

assign p_shl4_fu_1015_p3 = {{search_0_FRtoBR_reg_2234}, {1'd0}};

assign p_shl5_cast_fu_993_p1 = $signed(p_shl5_fu_986_p3);

assign p_shl5_fu_986_p3 = {{search_0_URFtoDLF_reg_2226}, {4'd0}};

assign p_shl6_fu_997_p3 = {{search_0_URFtoDLF_reg_2226}, {1'd0}};

assign p_shl9_cast_fu_1563_p1 = $signed(p_shl9_fu_1555_p3);

assign p_shl9_fu_1555_p3 = {{URFtoDLF_Move3_q0}, {5'd0}};

assign p_shl_cast_fu_1029_p1 = $signed(p_shl_fu_1022_p3);

assign p_shl_fu_1022_p3 = {{search_0_URtoDF_reg_2240}, {4'd0}};

assign parityMove_address0 = tmp_272_cast_fu_1498_p1;

assign po_cast_fu_1430_p1 = label3_1_q0;

assign s_4_fu_1302_p0 = depthPhase2;

assign s_4_fu_1302_p1 = depthPhase1;

assign s_4_fu_1302_p2 = ($signed(s_4_fu_1302_p0) + $signed(s_4_fu_1302_p1));

assign search_sol_depthPhas = depthPhase1;

assign sext4_cast_fu_1082_p1 = URFtoDLF_Move2_offset;

assign sext5_fu_1392_p1 = Slice_URtoDF_Parity_Prun2_offset;

assign sext6_fu_1395_p1 = Slice_URFtoDLF_Parity_Prun2_offset;

assign sext9_cast_fu_1120_p1 = URtoDF_Move2_offset;

assign sext_cast_fu_1101_p1 = FRtoBR_Move2_offset;

assign start_assign_fu_892_p1 = depthPhase1;

assign start_assign_fu_892_p2 = ($signed(8'd255) + $signed(start_assign_fu_892_p1));

assign sum4_fu_1700_p2 = (tmp_256_fu_1692_p1 + sext5_reg_2624);

assign sum5_cast_fu_1091_p1 = $signed(sum5_fu_1085_p2);

assign sum5_fu_1085_p2 = ($signed(tmp_60_cast_fu_1050_p1) + $signed(sext4_cast_fu_1082_p1));

assign sum6_fu_1760_p2 = (tmp_274_fu_1752_p1 + sext6_reg_2629);

assign sum9_cast_fu_1129_p1 = $signed(sum9_fu_1123_p2);

assign sum9_fu_1123_p2 = ($signed(tmp_70_cast_fu_1078_p1) + $signed(sext9_cast_fu_1120_p1));

assign sum_cast_fu_1110_p1 = $signed(sum_fu_1104_p2);

assign sum_fu_1104_p2 = ($signed(tmp_65_cast_fu_1064_p1) + $signed(sext_cast_fu_1101_p1));

assign tmp4_fu_1472_p2 = ($signed(6'd63) + $signed(tmp_245_fu_1466_p2));

assign tmp5_fu_2060_p2 = ($signed(tmp_292_cast_reg_2533) + $signed(9'd511));

assign tmp_193_fu_870_p0 = P3End_read;

assign tmp_193_fu_870_p1 = tmp_193_fu_870_p0[15:0];

assign tmp_194_fu_874_p0 = P3End_read;

assign tmp_194_fu_874_p1 = tmp_194_fu_874_p0[10:0];

assign tmp_195_fu_977_p1 = nOld[15:0];

assign tmp_198_fu_1696_p1 = tmp_253_fu_1671_p3[0:0];

assign tmp_199_fu_1771_p3 = {{tmp_198_reg_2736}, {3'd0}};

assign tmp_200_fu_1797_p1 = Slice_URtoDF_Parity_5_fu_1782_p2[3:0];

assign tmp_203_fu_1756_p1 = tmp_257_fu_1731_p3[0:0];

assign tmp_204_fu_1808_p3 = {{tmp_203_reg_2747}, {3'd0}};

assign tmp_205_fu_1834_p1 = Slice_URFtoDLF_Parit_8_fu_1819_p2[3:0];

assign tmp_206_fu_1889_p0 = P3Start_fu_228;

assign tmp_206_fu_1889_p1 = tmp_206_fu_1889_p0[15:0];

assign tmp_207_fu_1893_p0 = P3Start_fu_228;

assign tmp_207_fu_1893_p1 = tmp_207_fu_1893_p0[10:0];

assign tmp_226_fu_981_p2 = ((search_0_URFtoDLF_reg_2226 == tmp_195_fu_977_p1) ? 1'b1 : 1'b0);

assign tmp_227_fu_886_p2 = (p_shl15_cast_fu_878_p3 - tmp_193_fu_870_p1);

assign tmp_228_fu_946_p2 = ($signed(tmp_63_i_cast_fu_942_p1) + $signed(tmp_227_reg_2135));

assign tmp_229_fu_1193_p1 = i_reg_821;

assign tmp_230_fu_960_p2 = ($signed(tmp_64_i_cast_fu_956_p1) + $signed(tmp_227_reg_2135));

assign tmp_231_fu_1173_p2 = ($signed(tmp_287_cast1_fu_1169_p1) + $signed(9'd511));

assign tmp_232_fu_1179_p1 = $signed(tmp_231_fu_1173_p2);

assign tmp_233_fu_1291_p1 = depthPhase1;

assign tmp_233_fu_1291_p2 = ((n_3_reg_2369 == tmp_233_fu_1291_p1) ? 1'b1 : 1'b0);

assign tmp_234_fu_1312_p2 = ($signed(tmp_293_cast_fu_1309_p1) + $signed(tmp_292_cast_fu_1306_p1));

assign tmp_235_fu_1322_p2 = ($signed(tmp_294_cast_fu_1318_p1) - $signed(tmp_287_cast_fu_1288_p1));

assign tmp_236_fu_1328_p1 = n_3_reg_2369;

assign tmp_237_fu_1338_p2 = ($signed(tmp_297_cast_fu_1335_p1) + $signed(9'd509));

assign tmp_238_fu_1374_p0 = P3End_read;

assign tmp_238_fu_1374_p2 = ((tmp_238_fu_1374_p0 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_239_fu_1384_p3 = ((tmp_238_fu_1374_p2[0:0] === 1'b1) ? 32'd999 : p_op_fu_1379_p2);

assign tmp_240_cast_fu_1332_p1 = n_3_reg_2369;

assign tmp_240_fu_2054_p2 = ((s_fu_224 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_241_fu_1404_p2 = ($signed(ap_phi_mux_i1_phi_fu_837_p4) + $signed(4'd15));

assign tmp_242_fu_1410_p1 = tmp_241_fu_1404_p2;

assign tmp_243_fu_1434_p2 = ((axOld_reg_2383 == ax_cast_fu_1426_p1) ? 1'b1 : 1'b0);

assign tmp_244_fu_1443_p2 = ((tmp_237_reg_2554 == tmp_306_cast_fu_1439_p1) ? 1'b1 : 1'b0);

assign tmp_245_fu_1466_p2 = (p_shl12_cast_fu_1462_p1 - ax_cast1_fu_1422_p1);

assign tmp_246_fu_1484_p1 = mv_reg_2657;

assign tmp_247_fu_1493_p2 = ($signed(tmp_250_cast_fu_1490_p1) + $signed(tmp_271_cast_reg_2523));

assign tmp_248_fu_1527_p2 = ($signed(p_shl13_cast_fu_1511_p1) - $signed(p_shl14_cast_fu_1523_p1));

assign tmp_249_fu_1537_p2 = ($signed(tmp_75_cast_fu_1533_p1) + $signed(tmp_248_fu_1527_p2));

assign tmp_250_cast_fu_1490_p1 = mv_reg_2657;

assign tmp_250_fu_1579_p2 = ($signed(p_shl9_cast_fu_1563_p1) - $signed(p_shl10_cast_fu_1575_p1));

assign tmp_251_fu_1585_p2 = ($signed(tmp_75_cast_fu_1533_p1) + $signed(tmp_250_fu_1579_p2));

assign tmp_252_fu_1654_p1 = $unsigned(p_lshr_fu_1651_p1);

assign tmp_253_fu_1671_p3 = ((tmp_196_reg_2716[0:0] === 1'b1) ? p_neg_t_fu_1658_p2 : p_lshr_f_fu_1667_p1);

assign tmp_254_fu_1678_p4 = {{tmp_253_fu_1671_p3[31:1]}};

assign tmp_255_fu_1688_p1 = $signed(tmp_254_fu_1678_p4);

assign tmp_256_fu_1692_p1 = $unsigned(tmp_255_fu_1688_p1);

assign tmp_257_fu_1731_p3 = ((tmp_201_reg_2726[0:0] === 1'b1) ? p_neg_t1_fu_1718_p2 : p_lshr_f1_fu_1727_p1);

assign tmp_258_cast_fu_951_p1 = $signed(tmp_228_fu_946_p2);

assign tmp_258_fu_1778_p1 = tmp_199_fu_1771_p3;

assign tmp_259_fu_1845_p2 = ((a_1_reg_2768 > b_fu_1838_p3) ? 1'b1 : 1'b0);

assign tmp_260_fu_1857_p2 = ((minDistPhase2_fu_1850_p3 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_261_fu_2077_p3 = {{i2_reg_844}, {1'd0}};

assign tmp_262_fu_2099_p1 = $signed(i1_1_fu_2089_p2);

assign tmp_263_fu_2124_p1 = $signed(i2_1_reg_2833);

assign tmp_264_fu_1875_p2 = (($signed(tmp_235_reg_2539) > $signed(tmp_327_cast_fu_1872_p1)) ? 1'b1 : 1'b0);

assign tmp_265_fu_2108_p1 = $signed(s_fu_224);

assign tmp_266_fu_1880_p0 = P3Start_fu_228;

assign tmp_266_fu_1880_p1 = tmp_266_fu_1880_p0;

assign tmp_267_fu_1921_p1 = P3Start_fu_228;

assign tmp_267_fu_1921_p2 = ($signed(32'd1) + $signed(tmp_267_fu_1921_p1));

assign tmp_268_fu_1927_p2 = ((tmp_267_fu_1921_p2 == 32'd1000) ? 1'b1 : 1'b0);

assign tmp_269_fu_1941_p1 = P3End_read;

assign tmp_269_fu_1941_p2 = ((p_s_fu_1933_p3 == tmp_269_fu_1941_p1) ? 1'b1 : 1'b0);

assign tmp_270_cast_fu_965_p1 = $signed(tmp_230_fu_960_p2);

assign tmp_270_fu_1787_p4 = {{Slice_URtoDF_Parity_5_fu_1782_p2[7:4]}};

assign tmp_271_cast_fu_1295_p3 = ((parityOld_reg_2221[0:0] === 1'b1) ? 7'd18 : 7'd0);

assign tmp_271_fu_1714_p1 = $unsigned(p_lshr1_fu_1711_p1);

assign tmp_272_cast_fu_1498_p1 = $signed(tmp_247_fu_1493_p2);

assign tmp_272_fu_1738_p4 = {{tmp_257_fu_1731_p3[31:1]}};

assign tmp_273_fu_1748_p1 = $signed(tmp_272_fu_1738_p4);

assign tmp_274_fu_1752_p1 = $unsigned(tmp_273_fu_1748_p1);

assign tmp_275_fu_1815_p1 = tmp_204_fu_1808_p3;

assign tmp_276_fu_1824_p4 = {{Slice_URFtoDLF_Parit_8_fu_1819_p2[7:4]}};

assign tmp_277_fu_1905_p2 = (p_shl16_cast_fu_1897_p3 - tmp_206_fu_1889_p1);

assign tmp_278_fu_1911_p2 = ($signed(tmp_61_i4_cast_reg_2559) + $signed(tmp_277_fu_1905_p2));

assign tmp_279_fu_1946_p2 = ($signed(tmp_62_i8_cast_reg_2564) + $signed(tmp_277_reg_2787));

assign tmp_280_fu_1965_p2 = ($signed(tmp_61_1_i_cast_reg_2569) + $signed(tmp_277_reg_2787));

assign tmp_281_fu_1974_p2 = ($signed(tmp_62_1_i_cast_reg_2574) + $signed(tmp_277_reg_2787));

assign tmp_282_fu_1983_p2 = ($signed(tmp_61_2_i_cast_reg_2579) + $signed(tmp_277_reg_2787));

assign tmp_283_fu_1992_p2 = ($signed(tmp_62_2_i_cast_reg_2584) + $signed(tmp_277_reg_2787));

assign tmp_284_fu_2001_p2 = ($signed(tmp_61_3_i_cast_reg_2589) + $signed(tmp_277_reg_2787));

assign tmp_285_fu_2010_p2 = ($signed(tmp_62_3_i_cast_reg_2594) + $signed(tmp_277_reg_2787));

assign tmp_286_fu_2019_p2 = ($signed(tmp_61_4_i_cast_reg_2599) + $signed(tmp_277_reg_2787));

assign tmp_287_cast1_fu_1169_p1 = n_3_fu_1164_p2;

assign tmp_287_cast_fu_1288_p1 = n_3_reg_2369;

assign tmp_287_fu_2028_p2 = ($signed(tmp_62_4_i_cast_reg_2609) + $signed(tmp_277_reg_2787));

assign tmp_288_fu_2037_p2 = ($signed(tmp_240_cast_reg_2544) + $signed(tmp_277_reg_2787));

assign tmp_292_cast_fu_1306_p0 = depthPhase1;

assign tmp_292_cast_fu_1306_p1 = tmp_292_cast_fu_1306_p0;

assign tmp_293_cast_fu_1309_p0 = depthPhase2;

assign tmp_293_cast_fu_1309_p1 = tmp_293_cast_fu_1309_p0;

assign tmp_294_cast_fu_1318_p1 = $signed(tmp_234_fu_1312_p2);

assign tmp_296_cast_fu_1916_p1 = $signed(tmp_278_fu_1911_p2);

assign tmp_297_cast1_fu_1950_p1 = $signed(tmp_279_fu_1946_p2);

assign tmp_297_cast_fu_1335_p1 = axOld_reg_2383;

assign tmp_298_cast_fu_1969_p1 = $signed(tmp_280_fu_1965_p2);

assign tmp_299_cast_fu_1978_p1 = $signed(tmp_281_fu_1974_p2);

assign tmp_300_cast_fu_1987_p1 = $signed(tmp_282_fu_1983_p2);

assign tmp_301_cast_fu_1996_p1 = $signed(tmp_283_fu_1992_p2);

assign tmp_302_cast_fu_2005_p1 = $signed(tmp_284_fu_2001_p2);

assign tmp_303_cast_fu_2014_p1 = $signed(tmp_285_fu_2010_p2);

assign tmp_304_cast_fu_2023_p1 = $signed(tmp_286_fu_2019_p2);

assign tmp_305_cast_fu_2032_p1 = $signed(tmp_287_fu_2028_p2);

assign tmp_306_cast1_fu_2050_p1 = $signed(tmp_288_reg_2811);

assign tmp_306_cast_fu_1439_p1 = label3_0_q0;

assign tmp_324_cast_fu_2085_p1 = tmp_261_fu_2077_p3;

assign tmp_327_cast_fu_1872_p1 = minDistPhase2_reg_2774;

assign tmp_378_s_fu_1955_p3 = ((tmp_269_reg_2806[0:0] === 1'b1) ? tmp_239_reg_2619 : p_s_reg_2801);

assign tmp_58_fu_1040_p1 = $signed(p_shl6_fu_997_p3);

assign tmp_59_fu_1044_p2 = ($signed(tmp_58_fu_1040_p1) + $signed(p_shl5_cast_fu_993_p1));

assign tmp_60_cast_fu_1050_p1 = $signed(tmp_59_fu_1044_p2);

assign tmp_61_1_i_cast_fu_1350_p1 = i1_1_i_reg_2409;

assign tmp_61_1_i_fu_1218_p1 = i1_1_i_fu_1208_p2;

assign tmp_61_2_i_cast_fu_1356_p1 = i1_2_i_reg_2439;

assign tmp_61_2_i_fu_1238_p1 = i1_2_i_fu_1228_p2;

assign tmp_61_3_i_cast_fu_1362_p1 = i1_3_i_reg_2469;

assign tmp_61_3_i_fu_1258_p1 = i1_3_i_fu_1248_p2;

assign tmp_61_4_i_cast_fu_1368_p1 = i1_4_i_reg_2499;

assign tmp_61_4_i_fu_1278_p1 = i1_4_i_fu_1268_p2;

assign tmp_61_i4_cast_fu_1344_p1 = start_assign_reg_2215;

assign tmp_61_i4_fu_1200_p1 = start_assign_reg_2215;

assign tmp_61_i_cast_fu_928_p1 = tmp_61_i_fu_920_p3;

assign tmp_61_i_fu_920_p3 = {{i_i_reg_810}, {1'd0}};

assign tmp_62_1_i_cast_fu_1353_p1 = i2_1_i_reg_2414;

assign tmp_62_1_i_fu_1223_p1 = i2_1_i_fu_1213_p2;

assign tmp_62_2_i_cast_fu_1359_p1 = i2_2_i_reg_2444;

assign tmp_62_2_i_fu_1243_p1 = i2_2_i_fu_1233_p2;

assign tmp_62_3_i_cast_fu_1365_p1 = i2_3_i_reg_2474;

assign tmp_62_3_i_fu_1263_p1 = i2_3_i_fu_1253_p2;

assign tmp_62_4_i_cast_fu_1371_p1 = i2_4_i_reg_2504;

assign tmp_62_4_i_fu_1283_p1 = i2_4_i_fu_1273_p2;

assign tmp_62_i8_cast_fu_1347_p1 = tmp_62_i_reg_2259;

assign tmp_62_i8_fu_1204_p1 = tmp_62_i_reg_2259;

assign tmp_62_i_fu_902_p2 = ($signed(9'd1) + $signed(tmp_i_cast_fu_898_p1));

assign tmp_63_fu_1054_p1 = $signed(p_shl4_fu_1015_p3);

assign tmp_63_i_cast_fu_942_p1 = i1_2_fu_932_p2;

assign tmp_63_i_fu_1139_p1 = i1_2_reg_2274;

assign tmp_64_fu_1058_p2 = ($signed(tmp_63_fu_1054_p1) + $signed(p_shl3_cast_fu_1011_p1));

assign tmp_64_i_cast_fu_956_p1 = i2_2_fu_937_p2;

assign tmp_64_i_fu_1143_p1 = i2_2_reg_2279;

assign tmp_65_cast_fu_1064_p1 = $signed(tmp_64_fu_1058_p2);

assign tmp_68_fu_1068_p1 = $signed(p_shl2_fu_1033_p3);

assign tmp_69_fu_1072_p2 = ($signed(tmp_68_fu_1068_p1) + $signed(p_shl_cast_fu_1029_p1));

assign tmp_70_cast_fu_1078_p1 = $signed(tmp_69_fu_1072_p2);

assign tmp_75_cast_fu_1533_p0 = FRtoBR_Move3_2_q0;

assign tmp_75_cast_fu_1533_p1 = tmp_75_cast_fu_1533_p0;

assign tmp_75_fu_1543_p3 = {{tmp_249_fu_1537_p2}, {parityMove_q0}};

assign tmp_76_fu_1591_p3 = {{tmp_251_fu_1585_p2}, {parityMove_q0}};

assign tmp_81_fu_1664_p1 = tmp_249_reg_2706;

assign tmp_87_fu_1724_p1 = tmp_251_reg_2711;

assign tmp_fu_861_p0 = P3End_read;

assign tmp_fu_861_p1 = tmp_fu_861_p0;

assign tmp_i_cast_fu_898_p1 = start_assign_fu_892_p2;

assign tmp_s_fu_970_p1 = search_0_URFtoDLF_reg_2226;

always @ (posedge ap_clk) begin
    tmp_271_cast_reg_2523[0] <= 1'b0;
    tmp_271_cast_reg_2523[3:2] <= 2'b00;
    tmp_271_cast_reg_2523[6:5] <= 2'b00;
    sext5_reg_2624[63:31] <= 33'b000000000000000000000000000000000;
    sext6_reg_2629[63:31] <= 33'b000000000000000000000000000000000;
end

endmodule //P2
