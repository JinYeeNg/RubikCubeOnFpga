-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity convert_edge is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r : IN STD_LOGIC_VECTOR (3 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of convert_edge is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_0_reg_34 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_96_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_205_fu_108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_206_fu_114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_207_fu_120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_208_fu_126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_209_fu_132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_210_fu_138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_211_fu_144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_212_fu_150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_213_fu_156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal merge_reg_84 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_return_preg : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_condition_46 : BOOLEAN;
    signal ap_condition_54 : BOOLEAN;
    signal ap_condition_63 : BOOLEAN;
    signal ap_condition_73 : BOOLEAN;
    signal ap_condition_84 : BOOLEAN;
    signal ap_condition_96 : BOOLEAN;
    signal ap_condition_109 : BOOLEAN;
    signal ap_condition_123 : BOOLEAN;
    signal ap_condition_138 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv4_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_return_preg <= merge_reg_84;
                end if; 
            end if;
        end if;
    end process;


    merge_reg_84_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (tmp_211_fu_144_p2 = ap_const_lv1_0) and (tmp_210_fu_138_p2 = ap_const_lv1_0) and (tmp_209_fu_132_p2 = ap_const_lv1_0) and (tmp_208_fu_126_p2 = ap_const_lv1_0) and (tmp_207_fu_120_p2 = ap_const_lv1_0) and (tmp_206_fu_114_p2 = ap_const_lv1_0) and (tmp_205_fu_108_p2 = ap_const_lv1_0) and (tmp_213_fu_156_p2 = ap_const_lv1_0) and (tmp_212_fu_150_p2 = ap_const_lv1_0) and (tmp_s_fu_102_p2 = ap_const_lv1_0) and (tmp_fu_96_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                merge_reg_84 <= ap_const_lv4_B;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                merge_reg_84 <= p_0_reg_34;
            end if; 
        end if;
    end process;

    p_0_reg_34_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if ((ap_const_boolean_1 = ap_condition_138)) then 
                    p_0_reg_34 <= ap_const_lv4_A;
                elsif ((ap_const_boolean_1 = ap_condition_123)) then 
                    p_0_reg_34 <= ap_const_lv4_9;
                elsif ((ap_const_boolean_1 = ap_condition_109)) then 
                    p_0_reg_34 <= ap_const_lv4_8;
                elsif ((ap_const_boolean_1 = ap_condition_96)) then 
                    p_0_reg_34 <= ap_const_lv4_7;
                elsif ((ap_const_boolean_1 = ap_condition_84)) then 
                    p_0_reg_34 <= ap_const_lv4_6;
                elsif ((ap_const_boolean_1 = ap_condition_73)) then 
                    p_0_reg_34 <= ap_const_lv4_5;
                elsif ((ap_const_boolean_1 = ap_condition_63)) then 
                    p_0_reg_34 <= ap_const_lv4_4;
                elsif ((ap_const_boolean_1 = ap_condition_54)) then 
                    p_0_reg_34 <= ap_const_lv4_3;
                elsif ((ap_const_boolean_1 = ap_condition_46)) then 
                    p_0_reg_34 <= ap_const_lv4_2;
                elsif (((tmp_s_fu_102_p2 = ap_const_lv1_1) and (tmp_fu_96_p2 = ap_const_lv1_0))) then 
                    p_0_reg_34 <= ap_const_lv4_1;
                elsif ((tmp_fu_96_p2 = ap_const_lv1_1)) then 
                    p_0_reg_34 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, tmp_fu_96_p2, tmp_s_fu_102_p2, tmp_205_fu_108_p2, tmp_206_fu_114_p2, tmp_207_fu_120_p2, tmp_208_fu_126_p2, tmp_209_fu_132_p2, tmp_210_fu_138_p2, tmp_211_fu_144_p2, tmp_212_fu_150_p2, tmp_213_fu_156_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (tmp_211_fu_144_p2 = ap_const_lv1_0) and (tmp_210_fu_138_p2 = ap_const_lv1_0) and (tmp_209_fu_132_p2 = ap_const_lv1_0) and (tmp_208_fu_126_p2 = ap_const_lv1_0) and (tmp_207_fu_120_p2 = ap_const_lv1_0) and (tmp_206_fu_114_p2 = ap_const_lv1_0) and (tmp_205_fu_108_p2 = ap_const_lv1_0) and (tmp_213_fu_156_p2 = ap_const_lv1_0) and (tmp_212_fu_150_p2 = ap_const_lv1_0) and (tmp_s_fu_102_p2 = ap_const_lv1_0) and (tmp_fu_96_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and ((tmp_211_fu_144_p2 = ap_const_lv1_1) or (tmp_210_fu_138_p2 = ap_const_lv1_1) or (tmp_209_fu_132_p2 = ap_const_lv1_1) or (tmp_208_fu_126_p2 = ap_const_lv1_1) or (tmp_207_fu_120_p2 = ap_const_lv1_1) or (tmp_206_fu_114_p2 = ap_const_lv1_1) or (tmp_205_fu_108_p2 = ap_const_lv1_1) or (tmp_s_fu_102_p2 = ap_const_lv1_1) or (tmp_213_fu_156_p2 = ap_const_lv1_1) or (tmp_212_fu_150_p2 = ap_const_lv1_1) or (tmp_fu_96_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_condition_109_assign_proc : process(tmp_fu_96_p2, tmp_s_fu_102_p2, tmp_205_fu_108_p2, tmp_206_fu_114_p2, tmp_207_fu_120_p2, tmp_208_fu_126_p2, tmp_209_fu_132_p2, tmp_210_fu_138_p2, tmp_211_fu_144_p2)
    begin
                ap_condition_109 <= ((tmp_210_fu_138_p2 = ap_const_lv1_0) and (tmp_209_fu_132_p2 = ap_const_lv1_0) and (tmp_208_fu_126_p2 = ap_const_lv1_0) and (tmp_207_fu_120_p2 = ap_const_lv1_0) and (tmp_206_fu_114_p2 = ap_const_lv1_0) and (tmp_205_fu_108_p2 = ap_const_lv1_0) and (tmp_s_fu_102_p2 = ap_const_lv1_0) and (tmp_211_fu_144_p2 = ap_const_lv1_1) and (tmp_fu_96_p2 = ap_const_lv1_0));
    end process;


    ap_condition_123_assign_proc : process(tmp_fu_96_p2, tmp_s_fu_102_p2, tmp_205_fu_108_p2, tmp_206_fu_114_p2, tmp_207_fu_120_p2, tmp_208_fu_126_p2, tmp_209_fu_132_p2, tmp_210_fu_138_p2, tmp_211_fu_144_p2, tmp_212_fu_150_p2)
    begin
                ap_condition_123 <= ((tmp_211_fu_144_p2 = ap_const_lv1_0) and (tmp_210_fu_138_p2 = ap_const_lv1_0) and (tmp_209_fu_132_p2 = ap_const_lv1_0) and (tmp_208_fu_126_p2 = ap_const_lv1_0) and (tmp_207_fu_120_p2 = ap_const_lv1_0) and (tmp_206_fu_114_p2 = ap_const_lv1_0) and (tmp_205_fu_108_p2 = ap_const_lv1_0) and (tmp_s_fu_102_p2 = ap_const_lv1_0) and (tmp_212_fu_150_p2 = ap_const_lv1_1) and (tmp_fu_96_p2 = ap_const_lv1_0));
    end process;


    ap_condition_138_assign_proc : process(tmp_fu_96_p2, tmp_s_fu_102_p2, tmp_205_fu_108_p2, tmp_206_fu_114_p2, tmp_207_fu_120_p2, tmp_208_fu_126_p2, tmp_209_fu_132_p2, tmp_210_fu_138_p2, tmp_211_fu_144_p2, tmp_212_fu_150_p2, tmp_213_fu_156_p2)
    begin
                ap_condition_138 <= ((tmp_211_fu_144_p2 = ap_const_lv1_0) and (tmp_210_fu_138_p2 = ap_const_lv1_0) and (tmp_209_fu_132_p2 = ap_const_lv1_0) and (tmp_208_fu_126_p2 = ap_const_lv1_0) and (tmp_207_fu_120_p2 = ap_const_lv1_0) and (tmp_206_fu_114_p2 = ap_const_lv1_0) and (tmp_205_fu_108_p2 = ap_const_lv1_0) and (tmp_212_fu_150_p2 = ap_const_lv1_0) and (tmp_s_fu_102_p2 = ap_const_lv1_0) and (tmp_213_fu_156_p2 = ap_const_lv1_1) and (tmp_fu_96_p2 = ap_const_lv1_0));
    end process;


    ap_condition_46_assign_proc : process(tmp_fu_96_p2, tmp_s_fu_102_p2, tmp_205_fu_108_p2)
    begin
                ap_condition_46 <= ((tmp_s_fu_102_p2 = ap_const_lv1_0) and (tmp_205_fu_108_p2 = ap_const_lv1_1) and (tmp_fu_96_p2 = ap_const_lv1_0));
    end process;


    ap_condition_54_assign_proc : process(tmp_fu_96_p2, tmp_s_fu_102_p2, tmp_205_fu_108_p2, tmp_206_fu_114_p2)
    begin
                ap_condition_54 <= ((tmp_205_fu_108_p2 = ap_const_lv1_0) and (tmp_s_fu_102_p2 = ap_const_lv1_0) and (tmp_206_fu_114_p2 = ap_const_lv1_1) and (tmp_fu_96_p2 = ap_const_lv1_0));
    end process;


    ap_condition_63_assign_proc : process(tmp_fu_96_p2, tmp_s_fu_102_p2, tmp_205_fu_108_p2, tmp_206_fu_114_p2, tmp_207_fu_120_p2)
    begin
                ap_condition_63 <= ((tmp_206_fu_114_p2 = ap_const_lv1_0) and (tmp_205_fu_108_p2 = ap_const_lv1_0) and (tmp_s_fu_102_p2 = ap_const_lv1_0) and (tmp_207_fu_120_p2 = ap_const_lv1_1) and (tmp_fu_96_p2 = ap_const_lv1_0));
    end process;


    ap_condition_73_assign_proc : process(tmp_fu_96_p2, tmp_s_fu_102_p2, tmp_205_fu_108_p2, tmp_206_fu_114_p2, tmp_207_fu_120_p2, tmp_208_fu_126_p2)
    begin
                ap_condition_73 <= ((tmp_207_fu_120_p2 = ap_const_lv1_0) and (tmp_206_fu_114_p2 = ap_const_lv1_0) and (tmp_205_fu_108_p2 = ap_const_lv1_0) and (tmp_s_fu_102_p2 = ap_const_lv1_0) and (tmp_208_fu_126_p2 = ap_const_lv1_1) and (tmp_fu_96_p2 = ap_const_lv1_0));
    end process;


    ap_condition_84_assign_proc : process(tmp_fu_96_p2, tmp_s_fu_102_p2, tmp_205_fu_108_p2, tmp_206_fu_114_p2, tmp_207_fu_120_p2, tmp_208_fu_126_p2, tmp_209_fu_132_p2)
    begin
                ap_condition_84 <= ((tmp_208_fu_126_p2 = ap_const_lv1_0) and (tmp_207_fu_120_p2 = ap_const_lv1_0) and (tmp_206_fu_114_p2 = ap_const_lv1_0) and (tmp_205_fu_108_p2 = ap_const_lv1_0) and (tmp_s_fu_102_p2 = ap_const_lv1_0) and (tmp_209_fu_132_p2 = ap_const_lv1_1) and (tmp_fu_96_p2 = ap_const_lv1_0));
    end process;


    ap_condition_96_assign_proc : process(tmp_fu_96_p2, tmp_s_fu_102_p2, tmp_205_fu_108_p2, tmp_206_fu_114_p2, tmp_207_fu_120_p2, tmp_208_fu_126_p2, tmp_209_fu_132_p2, tmp_210_fu_138_p2)
    begin
                ap_condition_96 <= ((tmp_209_fu_132_p2 = ap_const_lv1_0) and (tmp_208_fu_126_p2 = ap_const_lv1_0) and (tmp_207_fu_120_p2 = ap_const_lv1_0) and (tmp_206_fu_114_p2 = ap_const_lv1_0) and (tmp_205_fu_108_p2 = ap_const_lv1_0) and (tmp_s_fu_102_p2 = ap_const_lv1_0) and (tmp_210_fu_138_p2 = ap_const_lv1_1) and (tmp_fu_96_p2 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(merge_reg_84, ap_return_preg, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ap_return <= merge_reg_84;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    tmp_205_fu_108_p2 <= "1" when (in_r = ap_const_lv4_2) else "0";
    tmp_206_fu_114_p2 <= "1" when (in_r = ap_const_lv4_3) else "0";
    tmp_207_fu_120_p2 <= "1" when (in_r = ap_const_lv4_4) else "0";
    tmp_208_fu_126_p2 <= "1" when (in_r = ap_const_lv4_5) else "0";
    tmp_209_fu_132_p2 <= "1" when (in_r = ap_const_lv4_6) else "0";
    tmp_210_fu_138_p2 <= "1" when (in_r = ap_const_lv4_7) else "0";
    tmp_211_fu_144_p2 <= "1" when (in_r = ap_const_lv4_8) else "0";
    tmp_212_fu_150_p2 <= "1" when (in_r = ap_const_lv4_9) else "0";
    tmp_213_fu_156_p2 <= "1" when (in_r = ap_const_lv4_A) else "0";
    tmp_fu_96_p2 <= "1" when (in_r = ap_const_lv4_0) else "0";
    tmp_s_fu_102_p2 <= "1" when (in_r = ap_const_lv4_1) else "0";
end behav;
