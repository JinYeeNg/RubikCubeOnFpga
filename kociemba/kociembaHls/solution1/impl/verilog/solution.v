// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="solution,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.902312,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=231,HLS_SYN_DSP=33,HLS_SYN_FF=14581,HLS_SYN_LUT=28213,HLS_VERSION=2018_2}" *)

module solution (
        ap_clk,
        ap_rst_n,
        m_axi_CTRL_BUS1_AWVALID,
        m_axi_CTRL_BUS1_AWREADY,
        m_axi_CTRL_BUS1_AWADDR,
        m_axi_CTRL_BUS1_AWID,
        m_axi_CTRL_BUS1_AWLEN,
        m_axi_CTRL_BUS1_AWSIZE,
        m_axi_CTRL_BUS1_AWBURST,
        m_axi_CTRL_BUS1_AWLOCK,
        m_axi_CTRL_BUS1_AWCACHE,
        m_axi_CTRL_BUS1_AWPROT,
        m_axi_CTRL_BUS1_AWQOS,
        m_axi_CTRL_BUS1_AWREGION,
        m_axi_CTRL_BUS1_AWUSER,
        m_axi_CTRL_BUS1_WVALID,
        m_axi_CTRL_BUS1_WREADY,
        m_axi_CTRL_BUS1_WDATA,
        m_axi_CTRL_BUS1_WSTRB,
        m_axi_CTRL_BUS1_WLAST,
        m_axi_CTRL_BUS1_WID,
        m_axi_CTRL_BUS1_WUSER,
        m_axi_CTRL_BUS1_ARVALID,
        m_axi_CTRL_BUS1_ARREADY,
        m_axi_CTRL_BUS1_ARADDR,
        m_axi_CTRL_BUS1_ARID,
        m_axi_CTRL_BUS1_ARLEN,
        m_axi_CTRL_BUS1_ARSIZE,
        m_axi_CTRL_BUS1_ARBURST,
        m_axi_CTRL_BUS1_ARLOCK,
        m_axi_CTRL_BUS1_ARCACHE,
        m_axi_CTRL_BUS1_ARPROT,
        m_axi_CTRL_BUS1_ARQOS,
        m_axi_CTRL_BUS1_ARREGION,
        m_axi_CTRL_BUS1_ARUSER,
        m_axi_CTRL_BUS1_RVALID,
        m_axi_CTRL_BUS1_RREADY,
        m_axi_CTRL_BUS1_RDATA,
        m_axi_CTRL_BUS1_RLAST,
        m_axi_CTRL_BUS1_RID,
        m_axi_CTRL_BUS1_RUSER,
        m_axi_CTRL_BUS1_RRESP,
        m_axi_CTRL_BUS1_BVALID,
        m_axi_CTRL_BUS1_BREADY,
        m_axi_CTRL_BUS1_BRESP,
        m_axi_CTRL_BUS1_BID,
        m_axi_CTRL_BUS1_BUSER,
        m_axi_CTRL_BUS2_AWVALID,
        m_axi_CTRL_BUS2_AWREADY,
        m_axi_CTRL_BUS2_AWADDR,
        m_axi_CTRL_BUS2_AWID,
        m_axi_CTRL_BUS2_AWLEN,
        m_axi_CTRL_BUS2_AWSIZE,
        m_axi_CTRL_BUS2_AWBURST,
        m_axi_CTRL_BUS2_AWLOCK,
        m_axi_CTRL_BUS2_AWCACHE,
        m_axi_CTRL_BUS2_AWPROT,
        m_axi_CTRL_BUS2_AWQOS,
        m_axi_CTRL_BUS2_AWREGION,
        m_axi_CTRL_BUS2_AWUSER,
        m_axi_CTRL_BUS2_WVALID,
        m_axi_CTRL_BUS2_WREADY,
        m_axi_CTRL_BUS2_WDATA,
        m_axi_CTRL_BUS2_WSTRB,
        m_axi_CTRL_BUS2_WLAST,
        m_axi_CTRL_BUS2_WID,
        m_axi_CTRL_BUS2_WUSER,
        m_axi_CTRL_BUS2_ARVALID,
        m_axi_CTRL_BUS2_ARREADY,
        m_axi_CTRL_BUS2_ARADDR,
        m_axi_CTRL_BUS2_ARID,
        m_axi_CTRL_BUS2_ARLEN,
        m_axi_CTRL_BUS2_ARSIZE,
        m_axi_CTRL_BUS2_ARBURST,
        m_axi_CTRL_BUS2_ARLOCK,
        m_axi_CTRL_BUS2_ARCACHE,
        m_axi_CTRL_BUS2_ARPROT,
        m_axi_CTRL_BUS2_ARQOS,
        m_axi_CTRL_BUS2_ARREGION,
        m_axi_CTRL_BUS2_ARUSER,
        m_axi_CTRL_BUS2_RVALID,
        m_axi_CTRL_BUS2_RREADY,
        m_axi_CTRL_BUS2_RDATA,
        m_axi_CTRL_BUS2_RLAST,
        m_axi_CTRL_BUS2_RID,
        m_axi_CTRL_BUS2_RUSER,
        m_axi_CTRL_BUS2_RRESP,
        m_axi_CTRL_BUS2_BVALID,
        m_axi_CTRL_BUS2_BREADY,
        m_axi_CTRL_BUS2_BRESP,
        m_axi_CTRL_BUS2_BID,
        m_axi_CTRL_BUS2_BUSER,
        m_axi_CTRL_BUS3_AWVALID,
        m_axi_CTRL_BUS3_AWREADY,
        m_axi_CTRL_BUS3_AWADDR,
        m_axi_CTRL_BUS3_AWID,
        m_axi_CTRL_BUS3_AWLEN,
        m_axi_CTRL_BUS3_AWSIZE,
        m_axi_CTRL_BUS3_AWBURST,
        m_axi_CTRL_BUS3_AWLOCK,
        m_axi_CTRL_BUS3_AWCACHE,
        m_axi_CTRL_BUS3_AWPROT,
        m_axi_CTRL_BUS3_AWQOS,
        m_axi_CTRL_BUS3_AWREGION,
        m_axi_CTRL_BUS3_AWUSER,
        m_axi_CTRL_BUS3_WVALID,
        m_axi_CTRL_BUS3_WREADY,
        m_axi_CTRL_BUS3_WDATA,
        m_axi_CTRL_BUS3_WSTRB,
        m_axi_CTRL_BUS3_WLAST,
        m_axi_CTRL_BUS3_WID,
        m_axi_CTRL_BUS3_WUSER,
        m_axi_CTRL_BUS3_ARVALID,
        m_axi_CTRL_BUS3_ARREADY,
        m_axi_CTRL_BUS3_ARADDR,
        m_axi_CTRL_BUS3_ARID,
        m_axi_CTRL_BUS3_ARLEN,
        m_axi_CTRL_BUS3_ARSIZE,
        m_axi_CTRL_BUS3_ARBURST,
        m_axi_CTRL_BUS3_ARLOCK,
        m_axi_CTRL_BUS3_ARCACHE,
        m_axi_CTRL_BUS3_ARPROT,
        m_axi_CTRL_BUS3_ARQOS,
        m_axi_CTRL_BUS3_ARREGION,
        m_axi_CTRL_BUS3_ARUSER,
        m_axi_CTRL_BUS3_RVALID,
        m_axi_CTRL_BUS3_RREADY,
        m_axi_CTRL_BUS3_RDATA,
        m_axi_CTRL_BUS3_RLAST,
        m_axi_CTRL_BUS3_RID,
        m_axi_CTRL_BUS3_RUSER,
        m_axi_CTRL_BUS3_RRESP,
        m_axi_CTRL_BUS3_BVALID,
        m_axi_CTRL_BUS3_BREADY,
        m_axi_CTRL_BUS3_BRESP,
        m_axi_CTRL_BUS3_BID,
        m_axi_CTRL_BUS3_BUSER,
        s_axi_CTRL_BUS_AWVALID,
        s_axi_CTRL_BUS_AWREADY,
        s_axi_CTRL_BUS_AWADDR,
        s_axi_CTRL_BUS_WVALID,
        s_axi_CTRL_BUS_WREADY,
        s_axi_CTRL_BUS_WDATA,
        s_axi_CTRL_BUS_WSTRB,
        s_axi_CTRL_BUS_ARVALID,
        s_axi_CTRL_BUS_ARREADY,
        s_axi_CTRL_BUS_ARADDR,
        s_axi_CTRL_BUS_RVALID,
        s_axi_CTRL_BUS_RREADY,
        s_axi_CTRL_BUS_RDATA,
        s_axi_CTRL_BUS_RRESP,
        s_axi_CTRL_BUS_BVALID,
        s_axi_CTRL_BUS_BREADY,
        s_axi_CTRL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 30'd1;
parameter    ap_ST_fsm_state2 = 30'd2;
parameter    ap_ST_fsm_state3 = 30'd4;
parameter    ap_ST_fsm_state4 = 30'd8;
parameter    ap_ST_fsm_state5 = 30'd16;
parameter    ap_ST_fsm_state6 = 30'd32;
parameter    ap_ST_fsm_state7 = 30'd64;
parameter    ap_ST_fsm_state8 = 30'd128;
parameter    ap_ST_fsm_state9 = 30'd256;
parameter    ap_ST_fsm_state10 = 30'd512;
parameter    ap_ST_fsm_state11 = 30'd1024;
parameter    ap_ST_fsm_state12 = 30'd2048;
parameter    ap_ST_fsm_state13 = 30'd4096;
parameter    ap_ST_fsm_state14 = 30'd8192;
parameter    ap_ST_fsm_state15 = 30'd16384;
parameter    ap_ST_fsm_state16 = 30'd32768;
parameter    ap_ST_fsm_state17 = 30'd65536;
parameter    ap_ST_fsm_state18 = 30'd131072;
parameter    ap_ST_fsm_state19 = 30'd262144;
parameter    ap_ST_fsm_state20 = 30'd524288;
parameter    ap_ST_fsm_state21 = 30'd1048576;
parameter    ap_ST_fsm_state22 = 30'd2097152;
parameter    ap_ST_fsm_state23 = 30'd4194304;
parameter    ap_ST_fsm_state24 = 30'd8388608;
parameter    ap_ST_fsm_state25 = 30'd16777216;
parameter    ap_ST_fsm_state26 = 30'd33554432;
parameter    ap_ST_fsm_state27 = 30'd67108864;
parameter    ap_ST_fsm_state28 = 30'd134217728;
parameter    ap_ST_fsm_state29 = 30'd268435456;
parameter    ap_ST_fsm_state30 = 30'd536870912;
parameter    C_S_AXI_CTRL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_BUS_ADDR_WIDTH = 8;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_CTRL_BUS1_ID_WIDTH = 1;
parameter    C_M_AXI_CTRL_BUS1_ADDR_WIDTH = 32;
parameter    C_M_AXI_CTRL_BUS1_DATA_WIDTH = 32;
parameter    C_M_AXI_CTRL_BUS1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_CTRL_BUS1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_CTRL_BUS1_WUSER_WIDTH = 1;
parameter    C_M_AXI_CTRL_BUS1_RUSER_WIDTH = 1;
parameter    C_M_AXI_CTRL_BUS1_BUSER_WIDTH = 1;
parameter    C_M_AXI_CTRL_BUS1_USER_VALUE = 0;
parameter    C_M_AXI_CTRL_BUS1_PROT_VALUE = 0;
parameter    C_M_AXI_CTRL_BUS1_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_CTRL_BUS2_ID_WIDTH = 1;
parameter    C_M_AXI_CTRL_BUS2_ADDR_WIDTH = 32;
parameter    C_M_AXI_CTRL_BUS2_DATA_WIDTH = 32;
parameter    C_M_AXI_CTRL_BUS2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_CTRL_BUS2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_CTRL_BUS2_WUSER_WIDTH = 1;
parameter    C_M_AXI_CTRL_BUS2_RUSER_WIDTH = 1;
parameter    C_M_AXI_CTRL_BUS2_BUSER_WIDTH = 1;
parameter    C_M_AXI_CTRL_BUS2_USER_VALUE = 0;
parameter    C_M_AXI_CTRL_BUS2_PROT_VALUE = 0;
parameter    C_M_AXI_CTRL_BUS2_CACHE_VALUE = 3;
parameter    C_M_AXI_CTRL_BUS3_ID_WIDTH = 1;
parameter    C_M_AXI_CTRL_BUS3_ADDR_WIDTH = 32;
parameter    C_M_AXI_CTRL_BUS3_DATA_WIDTH = 32;
parameter    C_M_AXI_CTRL_BUS3_AWUSER_WIDTH = 1;
parameter    C_M_AXI_CTRL_BUS3_ARUSER_WIDTH = 1;
parameter    C_M_AXI_CTRL_BUS3_WUSER_WIDTH = 1;
parameter    C_M_AXI_CTRL_BUS3_RUSER_WIDTH = 1;
parameter    C_M_AXI_CTRL_BUS3_BUSER_WIDTH = 1;
parameter    C_M_AXI_CTRL_BUS3_USER_VALUE = 0;
parameter    C_M_AXI_CTRL_BUS3_PROT_VALUE = 0;
parameter    C_M_AXI_CTRL_BUS3_CACHE_VALUE = 3;

parameter C_S_AXI_CTRL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_CTRL_BUS1_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_CTRL_BUS2_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_CTRL_BUS3_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_CTRL_BUS1_AWVALID;
input   m_axi_CTRL_BUS1_AWREADY;
output  [C_M_AXI_CTRL_BUS1_ADDR_WIDTH - 1:0] m_axi_CTRL_BUS1_AWADDR;
output  [C_M_AXI_CTRL_BUS1_ID_WIDTH - 1:0] m_axi_CTRL_BUS1_AWID;
output  [7:0] m_axi_CTRL_BUS1_AWLEN;
output  [2:0] m_axi_CTRL_BUS1_AWSIZE;
output  [1:0] m_axi_CTRL_BUS1_AWBURST;
output  [1:0] m_axi_CTRL_BUS1_AWLOCK;
output  [3:0] m_axi_CTRL_BUS1_AWCACHE;
output  [2:0] m_axi_CTRL_BUS1_AWPROT;
output  [3:0] m_axi_CTRL_BUS1_AWQOS;
output  [3:0] m_axi_CTRL_BUS1_AWREGION;
output  [C_M_AXI_CTRL_BUS1_AWUSER_WIDTH - 1:0] m_axi_CTRL_BUS1_AWUSER;
output   m_axi_CTRL_BUS1_WVALID;
input   m_axi_CTRL_BUS1_WREADY;
output  [C_M_AXI_CTRL_BUS1_DATA_WIDTH - 1:0] m_axi_CTRL_BUS1_WDATA;
output  [C_M_AXI_CTRL_BUS1_WSTRB_WIDTH - 1:0] m_axi_CTRL_BUS1_WSTRB;
output   m_axi_CTRL_BUS1_WLAST;
output  [C_M_AXI_CTRL_BUS1_ID_WIDTH - 1:0] m_axi_CTRL_BUS1_WID;
output  [C_M_AXI_CTRL_BUS1_WUSER_WIDTH - 1:0] m_axi_CTRL_BUS1_WUSER;
output   m_axi_CTRL_BUS1_ARVALID;
input   m_axi_CTRL_BUS1_ARREADY;
output  [C_M_AXI_CTRL_BUS1_ADDR_WIDTH - 1:0] m_axi_CTRL_BUS1_ARADDR;
output  [C_M_AXI_CTRL_BUS1_ID_WIDTH - 1:0] m_axi_CTRL_BUS1_ARID;
output  [7:0] m_axi_CTRL_BUS1_ARLEN;
output  [2:0] m_axi_CTRL_BUS1_ARSIZE;
output  [1:0] m_axi_CTRL_BUS1_ARBURST;
output  [1:0] m_axi_CTRL_BUS1_ARLOCK;
output  [3:0] m_axi_CTRL_BUS1_ARCACHE;
output  [2:0] m_axi_CTRL_BUS1_ARPROT;
output  [3:0] m_axi_CTRL_BUS1_ARQOS;
output  [3:0] m_axi_CTRL_BUS1_ARREGION;
output  [C_M_AXI_CTRL_BUS1_ARUSER_WIDTH - 1:0] m_axi_CTRL_BUS1_ARUSER;
input   m_axi_CTRL_BUS1_RVALID;
output   m_axi_CTRL_BUS1_RREADY;
input  [C_M_AXI_CTRL_BUS1_DATA_WIDTH - 1:0] m_axi_CTRL_BUS1_RDATA;
input   m_axi_CTRL_BUS1_RLAST;
input  [C_M_AXI_CTRL_BUS1_ID_WIDTH - 1:0] m_axi_CTRL_BUS1_RID;
input  [C_M_AXI_CTRL_BUS1_RUSER_WIDTH - 1:0] m_axi_CTRL_BUS1_RUSER;
input  [1:0] m_axi_CTRL_BUS1_RRESP;
input   m_axi_CTRL_BUS1_BVALID;
output   m_axi_CTRL_BUS1_BREADY;
input  [1:0] m_axi_CTRL_BUS1_BRESP;
input  [C_M_AXI_CTRL_BUS1_ID_WIDTH - 1:0] m_axi_CTRL_BUS1_BID;
input  [C_M_AXI_CTRL_BUS1_BUSER_WIDTH - 1:0] m_axi_CTRL_BUS1_BUSER;
output   m_axi_CTRL_BUS2_AWVALID;
input   m_axi_CTRL_BUS2_AWREADY;
output  [C_M_AXI_CTRL_BUS2_ADDR_WIDTH - 1:0] m_axi_CTRL_BUS2_AWADDR;
output  [C_M_AXI_CTRL_BUS2_ID_WIDTH - 1:0] m_axi_CTRL_BUS2_AWID;
output  [7:0] m_axi_CTRL_BUS2_AWLEN;
output  [2:0] m_axi_CTRL_BUS2_AWSIZE;
output  [1:0] m_axi_CTRL_BUS2_AWBURST;
output  [1:0] m_axi_CTRL_BUS2_AWLOCK;
output  [3:0] m_axi_CTRL_BUS2_AWCACHE;
output  [2:0] m_axi_CTRL_BUS2_AWPROT;
output  [3:0] m_axi_CTRL_BUS2_AWQOS;
output  [3:0] m_axi_CTRL_BUS2_AWREGION;
output  [C_M_AXI_CTRL_BUS2_AWUSER_WIDTH - 1:0] m_axi_CTRL_BUS2_AWUSER;
output   m_axi_CTRL_BUS2_WVALID;
input   m_axi_CTRL_BUS2_WREADY;
output  [C_M_AXI_CTRL_BUS2_DATA_WIDTH - 1:0] m_axi_CTRL_BUS2_WDATA;
output  [C_M_AXI_CTRL_BUS2_WSTRB_WIDTH - 1:0] m_axi_CTRL_BUS2_WSTRB;
output   m_axi_CTRL_BUS2_WLAST;
output  [C_M_AXI_CTRL_BUS2_ID_WIDTH - 1:0] m_axi_CTRL_BUS2_WID;
output  [C_M_AXI_CTRL_BUS2_WUSER_WIDTH - 1:0] m_axi_CTRL_BUS2_WUSER;
output   m_axi_CTRL_BUS2_ARVALID;
input   m_axi_CTRL_BUS2_ARREADY;
output  [C_M_AXI_CTRL_BUS2_ADDR_WIDTH - 1:0] m_axi_CTRL_BUS2_ARADDR;
output  [C_M_AXI_CTRL_BUS2_ID_WIDTH - 1:0] m_axi_CTRL_BUS2_ARID;
output  [7:0] m_axi_CTRL_BUS2_ARLEN;
output  [2:0] m_axi_CTRL_BUS2_ARSIZE;
output  [1:0] m_axi_CTRL_BUS2_ARBURST;
output  [1:0] m_axi_CTRL_BUS2_ARLOCK;
output  [3:0] m_axi_CTRL_BUS2_ARCACHE;
output  [2:0] m_axi_CTRL_BUS2_ARPROT;
output  [3:0] m_axi_CTRL_BUS2_ARQOS;
output  [3:0] m_axi_CTRL_BUS2_ARREGION;
output  [C_M_AXI_CTRL_BUS2_ARUSER_WIDTH - 1:0] m_axi_CTRL_BUS2_ARUSER;
input   m_axi_CTRL_BUS2_RVALID;
output   m_axi_CTRL_BUS2_RREADY;
input  [C_M_AXI_CTRL_BUS2_DATA_WIDTH - 1:0] m_axi_CTRL_BUS2_RDATA;
input   m_axi_CTRL_BUS2_RLAST;
input  [C_M_AXI_CTRL_BUS2_ID_WIDTH - 1:0] m_axi_CTRL_BUS2_RID;
input  [C_M_AXI_CTRL_BUS2_RUSER_WIDTH - 1:0] m_axi_CTRL_BUS2_RUSER;
input  [1:0] m_axi_CTRL_BUS2_RRESP;
input   m_axi_CTRL_BUS2_BVALID;
output   m_axi_CTRL_BUS2_BREADY;
input  [1:0] m_axi_CTRL_BUS2_BRESP;
input  [C_M_AXI_CTRL_BUS2_ID_WIDTH - 1:0] m_axi_CTRL_BUS2_BID;
input  [C_M_AXI_CTRL_BUS2_BUSER_WIDTH - 1:0] m_axi_CTRL_BUS2_BUSER;
output   m_axi_CTRL_BUS3_AWVALID;
input   m_axi_CTRL_BUS3_AWREADY;
output  [C_M_AXI_CTRL_BUS3_ADDR_WIDTH - 1:0] m_axi_CTRL_BUS3_AWADDR;
output  [C_M_AXI_CTRL_BUS3_ID_WIDTH - 1:0] m_axi_CTRL_BUS3_AWID;
output  [7:0] m_axi_CTRL_BUS3_AWLEN;
output  [2:0] m_axi_CTRL_BUS3_AWSIZE;
output  [1:0] m_axi_CTRL_BUS3_AWBURST;
output  [1:0] m_axi_CTRL_BUS3_AWLOCK;
output  [3:0] m_axi_CTRL_BUS3_AWCACHE;
output  [2:0] m_axi_CTRL_BUS3_AWPROT;
output  [3:0] m_axi_CTRL_BUS3_AWQOS;
output  [3:0] m_axi_CTRL_BUS3_AWREGION;
output  [C_M_AXI_CTRL_BUS3_AWUSER_WIDTH - 1:0] m_axi_CTRL_BUS3_AWUSER;
output   m_axi_CTRL_BUS3_WVALID;
input   m_axi_CTRL_BUS3_WREADY;
output  [C_M_AXI_CTRL_BUS3_DATA_WIDTH - 1:0] m_axi_CTRL_BUS3_WDATA;
output  [C_M_AXI_CTRL_BUS3_WSTRB_WIDTH - 1:0] m_axi_CTRL_BUS3_WSTRB;
output   m_axi_CTRL_BUS3_WLAST;
output  [C_M_AXI_CTRL_BUS3_ID_WIDTH - 1:0] m_axi_CTRL_BUS3_WID;
output  [C_M_AXI_CTRL_BUS3_WUSER_WIDTH - 1:0] m_axi_CTRL_BUS3_WUSER;
output   m_axi_CTRL_BUS3_ARVALID;
input   m_axi_CTRL_BUS3_ARREADY;
output  [C_M_AXI_CTRL_BUS3_ADDR_WIDTH - 1:0] m_axi_CTRL_BUS3_ARADDR;
output  [C_M_AXI_CTRL_BUS3_ID_WIDTH - 1:0] m_axi_CTRL_BUS3_ARID;
output  [7:0] m_axi_CTRL_BUS3_ARLEN;
output  [2:0] m_axi_CTRL_BUS3_ARSIZE;
output  [1:0] m_axi_CTRL_BUS3_ARBURST;
output  [1:0] m_axi_CTRL_BUS3_ARLOCK;
output  [3:0] m_axi_CTRL_BUS3_ARCACHE;
output  [2:0] m_axi_CTRL_BUS3_ARPROT;
output  [3:0] m_axi_CTRL_BUS3_ARQOS;
output  [3:0] m_axi_CTRL_BUS3_ARREGION;
output  [C_M_AXI_CTRL_BUS3_ARUSER_WIDTH - 1:0] m_axi_CTRL_BUS3_ARUSER;
input   m_axi_CTRL_BUS3_RVALID;
output   m_axi_CTRL_BUS3_RREADY;
input  [C_M_AXI_CTRL_BUS3_DATA_WIDTH - 1:0] m_axi_CTRL_BUS3_RDATA;
input   m_axi_CTRL_BUS3_RLAST;
input  [C_M_AXI_CTRL_BUS3_ID_WIDTH - 1:0] m_axi_CTRL_BUS3_RID;
input  [C_M_AXI_CTRL_BUS3_RUSER_WIDTH - 1:0] m_axi_CTRL_BUS3_RUSER;
input  [1:0] m_axi_CTRL_BUS3_RRESP;
input   m_axi_CTRL_BUS3_BVALID;
output   m_axi_CTRL_BUS3_BREADY;
input  [1:0] m_axi_CTRL_BUS3_BRESP;
input  [C_M_AXI_CTRL_BUS3_ID_WIDTH - 1:0] m_axi_CTRL_BUS3_BID;
input  [C_M_AXI_CTRL_BUS3_BUSER_WIDTH - 1:0] m_axi_CTRL_BUS3_BUSER;
input   s_axi_CTRL_BUS_AWVALID;
output   s_axi_CTRL_BUS_AWREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1:0] s_axi_CTRL_BUS_AWADDR;
input   s_axi_CTRL_BUS_WVALID;
output   s_axi_CTRL_BUS_WREADY;
input  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1:0] s_axi_CTRL_BUS_WDATA;
input  [C_S_AXI_CTRL_BUS_WSTRB_WIDTH - 1:0] s_axi_CTRL_BUS_WSTRB;
input   s_axi_CTRL_BUS_ARVALID;
output   s_axi_CTRL_BUS_ARREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1:0] s_axi_CTRL_BUS_ARADDR;
output   s_axi_CTRL_BUS_RVALID;
input   s_axi_CTRL_BUS_RREADY;
output  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1:0] s_axi_CTRL_BUS_RDATA;
output  [1:0] s_axi_CTRL_BUS_RRESP;
output   s_axi_CTRL_BUS_BVALID;
input   s_axi_CTRL_BUS_BREADY;
output  [1:0] s_axi_CTRL_BUS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [29:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [5:0] facelets_address0;
reg    facelets_ce0;
wire   [7:0] facelets_q0;
wire   [7:0] maxDepth;
reg    unsolvable;
reg    unsolvable_ap_vld;
reg   [7:0] encode_length;
reg    encode_length_ap_vld;
wire   [31:0] twistMove2;
wire   [31:0] flipMove2;
wire   [31:0] FRtoBR_Move2;
wire   [31:0] URFtoDLF_Move2;
wire   [31:0] URtoDF_Move2;
wire   [31:0] URtoUL_Move2;
wire   [31:0] UBtoDF_Move2;
wire   [31:0] MergeURtoULandUBtoDF2;
wire   [31:0] Slice_URFtoDLF_Parity_Prun2;
wire   [31:0] Slice_URtoDF_Parity_Prun2;
wire   [31:0] Slice_Twist_Prun2;
wire   [31:0] Slice_Flip_Prun2;
reg   [5:0] res_f_0_address0;
reg    res_f_0_ce0;
reg    res_f_0_we0;
wire   [2:0] res_f_0_q0;
reg    res_f_0_ce1;
wire   [2:0] res_f_0_q1;
reg   [2:0] ccRet_cp_0_address0;
reg    ccRet_cp_0_ce0;
reg    ccRet_cp_0_we0;
wire   [2:0] ccRet_cp_0_q0;
reg   [3:0] ccRet_ep_0_address0;
reg    ccRet_ep_0_ce0;
reg    ccRet_ep_0_we0;
wire   [3:0] ccRet_ep_0_q0;
reg   [2:0] ccRet_co_0_address0;
reg    ccRet_co_0_ce0;
reg    ccRet_co_0_we0;
wire   [1:0] ccRet_co_0_q0;
reg   [3:0] ccRet_eo_0_address0;
reg    ccRet_eo_0_ce0;
reg    ccRet_eo_0_we0;
wire   [0:0] ccRet_eo_0_q0;
reg   [15:0] result_twist_0;
reg   [15:0] result_flip_0;
reg   [15:0] result_parity_0;
reg  signed [15:0] result_FRtoBR_0;
reg   [15:0] result_URFtoDLF_0;
reg   [15:0] result_URtoUL_0;
reg   [15:0] result_UBtoDF_0;
reg   [31:0] a;
wire    CTRL_BUS1_AWREADY;
wire    CTRL_BUS1_WREADY;
reg    CTRL_BUS1_ARVALID;
wire    CTRL_BUS1_ARREADY;
wire    CTRL_BUS1_RVALID;
reg    CTRL_BUS1_RREADY;
wire   [15:0] CTRL_BUS1_RDATA;
wire    CTRL_BUS1_RLAST;
wire   [0:0] CTRL_BUS1_RID;
wire   [0:0] CTRL_BUS1_RUSER;
wire   [1:0] CTRL_BUS1_RRESP;
wire    CTRL_BUS1_BVALID;
wire   [1:0] CTRL_BUS1_BRESP;
wire   [0:0] CTRL_BUS1_BID;
wire   [0:0] CTRL_BUS1_BUSER;
wire    CTRL_BUS2_AWREADY;
wire    CTRL_BUS2_WREADY;
reg    CTRL_BUS2_ARVALID;
wire    CTRL_BUS2_ARREADY;
wire    CTRL_BUS2_RVALID;
reg    CTRL_BUS2_RREADY;
wire   [15:0] CTRL_BUS2_RDATA;
wire    CTRL_BUS2_RLAST;
wire   [0:0] CTRL_BUS2_RID;
wire   [0:0] CTRL_BUS2_RUSER;
wire   [1:0] CTRL_BUS2_RRESP;
wire    CTRL_BUS2_BVALID;
wire   [1:0] CTRL_BUS2_BRESP;
wire   [0:0] CTRL_BUS2_BID;
wire   [0:0] CTRL_BUS2_BUSER;
wire    CTRL_BUS3_AWREADY;
wire    CTRL_BUS3_WREADY;
reg    CTRL_BUS3_ARVALID;
wire    CTRL_BUS3_ARREADY;
wire    CTRL_BUS3_RVALID;
reg    CTRL_BUS3_RREADY;
wire   [15:0] CTRL_BUS3_RDATA;
wire    CTRL_BUS3_RLAST;
wire   [0:0] CTRL_BUS3_RID;
wire   [0:0] CTRL_BUS3_RUSER;
wire   [1:0] CTRL_BUS3_RRESP;
wire    CTRL_BUS3_BVALID;
wire   [1:0] CTRL_BUS3_BRESP;
wire   [0:0] CTRL_BUS3_BID;
wire   [0:0] CTRL_BUS3_BUSER;
reg   [7:0] reg_1527;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state14;
reg   [7:0] maxDepth_read_reg_1997;
reg   [30:0] Slice_Flip_Prun_reg_2002;
reg   [30:0] Slice_Twist_Prun_reg_2007;
reg   [30:0] Slice_URtoDF_Parity_s_reg_2012;
reg   [30:0] Slice_URFtoDLF_Parit_reg_2017;
reg   [30:0] MergeURtoULandUBtoDF_reg_2022;
reg   [30:0] UBtoDF_Move_reg_2027;
reg   [30:0] URtoUL_Move_reg_2032;
reg   [30:0] URtoDF_Move_reg_2037;
reg   [30:0] URFtoDLF_Move_reg_2042;
reg   [30:0] FRtoBR_Move_reg_2047;
reg   [30:0] flipMove_reg_2052;
reg   [30:0] twistMove_reg_2057;
wire   [2:0] indvarinc_fu_1652_p2;
wire    ap_CS_fsm_state2;
wire   [2:0] i_11_fu_1675_p2;
reg   [2:0] i_11_reg_2073;
wire    ap_CS_fsm_state3;
wire   [5:0] tmp_49_fu_1681_p3;
reg   [5:0] tmp_49_reg_2078;
wire   [0:0] exitcond1_fu_1669_p2;
wire   [0:0] ap_phi_mux_complete_phi_fu_1234_p4;
wire   [0:0] grp_fu_1515_p2;
reg   [0:0] tmp_53_reg_2130;
wire    ap_CS_fsm_state5;
reg   [0:0] tmp_56_reg_2140;
wire    ap_CS_fsm_state6;
reg   [0:0] tmp_59_reg_2150;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire   [0:0] tmp8_fu_1753_p2;
reg   [0:0] tmp8_reg_2165;
reg   [0:0] tmp_65_reg_2170;
wire    ap_CS_fsm_state9;
reg   [0:0] tmp_69_reg_2180;
wire    ap_CS_fsm_state10;
reg   [0:0] tmp_79_reg_2190;
wire    ap_CS_fsm_state11;
wire   [0:0] complete_1_fu_1809_p2;
wire    ap_CS_fsm_state12;
wire   [5:0] i_12_fu_1821_p2;
reg   [5:0] i_12_reg_2208;
wire    ap_CS_fsm_state13;
wire   [0:0] exitcond_fu_1815_p2;
wire   [0:0] tmp_71_fu_1832_p2;
reg   [0:0] tmp_71_reg_2218;
wire    ap_CS_fsm_state16;
wire   [2:0] i_5_fu_1838_p2;
reg   [2:0] i_5_reg_2222;
wire   [0:0] tmp_83_fu_1855_p2;
reg   [0:0] tmp_83_reg_2235;
wire    ap_CS_fsm_state22;
wire    grp_verify_fu_1495_ap_idle;
wire    grp_verify_fu_1495_ap_ready;
wire    grp_verify_fu_1495_ap_done;
reg   [15:0] FRtoBR_reg_2239;
wire    ap_CS_fsm_state25;
wire   [32:0] tmp_89_fu_1869_p1;
reg   [32:0] tmp_89_reg_2244;
reg   [0:0] tmp_90_reg_2249;
reg   [12:0] tmp_93_reg_2255;
reg   [15:0] flip_reg_2260;
wire    ap_CS_fsm_state26;
reg   [15:0] twist_reg_2265;
wire   [15:0] slice_fu_1936_p3;
reg   [15:0] slice_reg_2270;
reg   [15:0] URFtoDLF_reg_2275;
reg   [15:0] URtoUL_reg_2280;
reg   [15:0] UBtoDF_reg_2285;
wire   [0:0] tmp_86_fu_1955_p2;
reg   [0:0] tmp_86_reg_2290;
wire   [0:0] tmp_87_fu_1961_p2;
reg   [0:0] tmp_87_reg_2295;
wire    ap_CS_fsm_state27;
wire   [4:0] depthPhase1_1_fu_1983_p2;
wire    ap_CS_fsm_state30;
reg   [0:0] complete_reg_1230;
wire   [0:0] tmp_88_fu_1977_p2;
reg   [2:0] count_address0;
reg    count_ce0;
reg    count_we0;
reg   [31:0] count_d0;
wire   [31:0] count_q0;
wire   [15:0] P1Buffer_flip_0_q0;
wire   [15:0] P1Buffer_twist_0_q0;
wire   [15:0] P1Buffer_slice_0_q0;
wire   [7:0] P1Buffer_depthPhase1_q0;
wire   [7:0] P1Buffer_n_0_q0;
wire   [7:0] P1Buffer_0_i_q0;
wire   [0:0] P3Buffer_parity_0_q0;
wire   [15:0] P3Buffer_URFtoDLF_0_q0;
wire   [15:0] P3Buffer_FRtoBR_0_q0;
wire   [15:0] P3Buffer_URtoDF_0_q0;
wire   [7:0] P3Buffer_n_0_q0;
wire   [7:0] P3Buffer_0_i_q0;
wire   [7:0] P3Buffer_0_i_q1;
wire    grp_blockP1_fu_1276_ap_start;
wire    grp_blockP1_fu_1276_ap_done;
wire    grp_blockP1_fu_1276_ap_idle;
wire    grp_blockP1_fu_1276_ap_ready;
wire   [12:0] grp_blockP1_fu_1276_P1Buffer_0_flip_address0;
wire    grp_blockP1_fu_1276_P1Buffer_0_flip_ce0;
wire    grp_blockP1_fu_1276_P1Buffer_0_flip_we0;
wire   [15:0] grp_blockP1_fu_1276_P1Buffer_0_flip_d0;
wire   [12:0] grp_blockP1_fu_1276_P1Buffer_0_twist_address0;
wire    grp_blockP1_fu_1276_P1Buffer_0_twist_ce0;
wire    grp_blockP1_fu_1276_P1Buffer_0_twist_we0;
wire   [15:0] grp_blockP1_fu_1276_P1Buffer_0_twist_d0;
wire   [12:0] grp_blockP1_fu_1276_P1Buffer_0_slice_address0;
wire    grp_blockP1_fu_1276_P1Buffer_0_slice_ce0;
wire    grp_blockP1_fu_1276_P1Buffer_0_slice_we0;
wire   [15:0] grp_blockP1_fu_1276_P1Buffer_0_slice_d0;
wire   [12:0] grp_blockP1_fu_1276_P1Buffer_0_depthPha_address0;
wire    grp_blockP1_fu_1276_P1Buffer_0_depthPha_ce0;
wire    grp_blockP1_fu_1276_P1Buffer_0_depthPha_we0;
wire   [7:0] grp_blockP1_fu_1276_P1Buffer_0_depthPha_d0;
wire   [12:0] grp_blockP1_fu_1276_P1Buffer_0_n_address0;
wire    grp_blockP1_fu_1276_P1Buffer_0_n_ce0;
wire    grp_blockP1_fu_1276_P1Buffer_0_n_we0;
wire   [7:0] grp_blockP1_fu_1276_P1Buffer_0_n_d0;
wire   [17:0] grp_blockP1_fu_1276_P1Buffer_0_i_address0;
wire    grp_blockP1_fu_1276_P1Buffer_0_i_ce0;
wire    grp_blockP1_fu_1276_P1Buffer_0_i_we0;
wire   [7:0] grp_blockP1_fu_1276_P1Buffer_0_i_d0;
wire    grp_blockP1_fu_1276_parity;
wire   [9:0] grp_blockP1_fu_1276_P3Buffer_0_parity_address0;
wire    grp_blockP1_fu_1276_P3Buffer_0_parity_ce0;
wire    grp_blockP1_fu_1276_P3Buffer_0_parity_we0;
wire   [0:0] grp_blockP1_fu_1276_P3Buffer_0_parity_d0;
wire   [9:0] grp_blockP1_fu_1276_P3Buffer_0_URFtoDLF_address0;
wire    grp_blockP1_fu_1276_P3Buffer_0_URFtoDLF_ce0;
wire    grp_blockP1_fu_1276_P3Buffer_0_URFtoDLF_we0;
wire   [15:0] grp_blockP1_fu_1276_P3Buffer_0_URFtoDLF_d0;
wire   [9:0] grp_blockP1_fu_1276_P3Buffer_0_FRtoBR_address0;
wire    grp_blockP1_fu_1276_P3Buffer_0_FRtoBR_ce0;
wire    grp_blockP1_fu_1276_P3Buffer_0_FRtoBR_we0;
wire   [15:0] grp_blockP1_fu_1276_P3Buffer_0_FRtoBR_d0;
wire   [9:0] grp_blockP1_fu_1276_P3Buffer_0_URtoDF_address0;
wire    grp_blockP1_fu_1276_P3Buffer_0_URtoDF_ce0;
wire    grp_blockP1_fu_1276_P3Buffer_0_URtoDF_we0;
wire   [15:0] grp_blockP1_fu_1276_P3Buffer_0_URtoDF_d0;
wire   [9:0] grp_blockP1_fu_1276_P3Buffer_0_n_address0;
wire    grp_blockP1_fu_1276_P3Buffer_0_n_ce0;
wire    grp_blockP1_fu_1276_P3Buffer_0_n_we0;
wire   [7:0] grp_blockP1_fu_1276_P3Buffer_0_n_d0;
wire   [14:0] grp_blockP1_fu_1276_P3Buffer_0_i_address0;
wire    grp_blockP1_fu_1276_P3Buffer_0_i_ce0;
wire    grp_blockP1_fu_1276_P3Buffer_0_i_we0;
wire   [7:0] grp_blockP1_fu_1276_P3Buffer_0_i_d0;
wire   [14:0] grp_blockP1_fu_1276_P3Buffer_0_i_address1;
wire    grp_blockP1_fu_1276_P3Buffer_0_i_ce1;
wire    grp_blockP1_fu_1276_P3Buffer_0_i_we1;
wire   [7:0] grp_blockP1_fu_1276_P3Buffer_0_i_d1;
wire   [7:0] grp_blockP1_fu_1276_encode_length;
wire    grp_blockP1_fu_1276_encode_length_ap_vld;
wire   [4:0] grp_blockP1_fu_1276_encode_array_address0;
wire    grp_blockP1_fu_1276_encode_array_ce0;
wire    grp_blockP1_fu_1276_encode_array_we0;
wire   [7:0] grp_blockP1_fu_1276_encode_array_d0;
wire    grp_blockP1_fu_1276_m_axi_twistMove2_AWVALID;
wire   [31:0] grp_blockP1_fu_1276_m_axi_twistMove2_AWADDR;
wire   [0:0] grp_blockP1_fu_1276_m_axi_twistMove2_AWID;
wire   [31:0] grp_blockP1_fu_1276_m_axi_twistMove2_AWLEN;
wire   [2:0] grp_blockP1_fu_1276_m_axi_twistMove2_AWSIZE;
wire   [1:0] grp_blockP1_fu_1276_m_axi_twistMove2_AWBURST;
wire   [1:0] grp_blockP1_fu_1276_m_axi_twistMove2_AWLOCK;
wire   [3:0] grp_blockP1_fu_1276_m_axi_twistMove2_AWCACHE;
wire   [2:0] grp_blockP1_fu_1276_m_axi_twistMove2_AWPROT;
wire   [3:0] grp_blockP1_fu_1276_m_axi_twistMove2_AWQOS;
wire   [3:0] grp_blockP1_fu_1276_m_axi_twistMove2_AWREGION;
wire   [0:0] grp_blockP1_fu_1276_m_axi_twistMove2_AWUSER;
wire    grp_blockP1_fu_1276_m_axi_twistMove2_WVALID;
wire   [15:0] grp_blockP1_fu_1276_m_axi_twistMove2_WDATA;
wire   [1:0] grp_blockP1_fu_1276_m_axi_twistMove2_WSTRB;
wire    grp_blockP1_fu_1276_m_axi_twistMove2_WLAST;
wire   [0:0] grp_blockP1_fu_1276_m_axi_twistMove2_WID;
wire   [0:0] grp_blockP1_fu_1276_m_axi_twistMove2_WUSER;
wire    grp_blockP1_fu_1276_m_axi_twistMove2_ARVALID;
wire   [31:0] grp_blockP1_fu_1276_m_axi_twistMove2_ARADDR;
wire   [0:0] grp_blockP1_fu_1276_m_axi_twistMove2_ARID;
wire   [31:0] grp_blockP1_fu_1276_m_axi_twistMove2_ARLEN;
wire   [2:0] grp_blockP1_fu_1276_m_axi_twistMove2_ARSIZE;
wire   [1:0] grp_blockP1_fu_1276_m_axi_twistMove2_ARBURST;
wire   [1:0] grp_blockP1_fu_1276_m_axi_twistMove2_ARLOCK;
wire   [3:0] grp_blockP1_fu_1276_m_axi_twistMove2_ARCACHE;
wire   [2:0] grp_blockP1_fu_1276_m_axi_twistMove2_ARPROT;
wire   [3:0] grp_blockP1_fu_1276_m_axi_twistMove2_ARQOS;
wire   [3:0] grp_blockP1_fu_1276_m_axi_twistMove2_ARREGION;
wire   [0:0] grp_blockP1_fu_1276_m_axi_twistMove2_ARUSER;
wire    grp_blockP1_fu_1276_m_axi_twistMove2_RREADY;
wire    grp_blockP1_fu_1276_m_axi_twistMove2_BREADY;
wire    grp_blockP1_fu_1276_m_axi_flipMove2_AWVALID;
wire   [31:0] grp_blockP1_fu_1276_m_axi_flipMove2_AWADDR;
wire   [0:0] grp_blockP1_fu_1276_m_axi_flipMove2_AWID;
wire   [31:0] grp_blockP1_fu_1276_m_axi_flipMove2_AWLEN;
wire   [2:0] grp_blockP1_fu_1276_m_axi_flipMove2_AWSIZE;
wire   [1:0] grp_blockP1_fu_1276_m_axi_flipMove2_AWBURST;
wire   [1:0] grp_blockP1_fu_1276_m_axi_flipMove2_AWLOCK;
wire   [3:0] grp_blockP1_fu_1276_m_axi_flipMove2_AWCACHE;
wire   [2:0] grp_blockP1_fu_1276_m_axi_flipMove2_AWPROT;
wire   [3:0] grp_blockP1_fu_1276_m_axi_flipMove2_AWQOS;
wire   [3:0] grp_blockP1_fu_1276_m_axi_flipMove2_AWREGION;
wire   [0:0] grp_blockP1_fu_1276_m_axi_flipMove2_AWUSER;
wire    grp_blockP1_fu_1276_m_axi_flipMove2_WVALID;
wire   [15:0] grp_blockP1_fu_1276_m_axi_flipMove2_WDATA;
wire   [1:0] grp_blockP1_fu_1276_m_axi_flipMove2_WSTRB;
wire    grp_blockP1_fu_1276_m_axi_flipMove2_WLAST;
wire   [0:0] grp_blockP1_fu_1276_m_axi_flipMove2_WID;
wire   [0:0] grp_blockP1_fu_1276_m_axi_flipMove2_WUSER;
wire    grp_blockP1_fu_1276_m_axi_flipMove2_ARVALID;
wire   [31:0] grp_blockP1_fu_1276_m_axi_flipMove2_ARADDR;
wire   [0:0] grp_blockP1_fu_1276_m_axi_flipMove2_ARID;
wire   [31:0] grp_blockP1_fu_1276_m_axi_flipMove2_ARLEN;
wire   [2:0] grp_blockP1_fu_1276_m_axi_flipMove2_ARSIZE;
wire   [1:0] grp_blockP1_fu_1276_m_axi_flipMove2_ARBURST;
wire   [1:0] grp_blockP1_fu_1276_m_axi_flipMove2_ARLOCK;
wire   [3:0] grp_blockP1_fu_1276_m_axi_flipMove2_ARCACHE;
wire   [2:0] grp_blockP1_fu_1276_m_axi_flipMove2_ARPROT;
wire   [3:0] grp_blockP1_fu_1276_m_axi_flipMove2_ARQOS;
wire   [3:0] grp_blockP1_fu_1276_m_axi_flipMove2_ARREGION;
wire   [0:0] grp_blockP1_fu_1276_m_axi_flipMove2_ARUSER;
wire    grp_blockP1_fu_1276_m_axi_flipMove2_RREADY;
wire    grp_blockP1_fu_1276_m_axi_flipMove2_BREADY;
wire    grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_AWVALID;
wire   [31:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_AWADDR;
wire   [0:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_AWID;
wire   [31:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_AWLEN;
wire   [2:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_AWSIZE;
wire   [1:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_AWBURST;
wire   [1:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_AWLOCK;
wire   [3:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_AWCACHE;
wire   [2:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_AWPROT;
wire   [3:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_AWQOS;
wire   [3:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_AWREGION;
wire   [0:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_AWUSER;
wire    grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_WVALID;
wire   [15:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_WDATA;
wire   [1:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_WSTRB;
wire    grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_WLAST;
wire   [0:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_WID;
wire   [0:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_WUSER;
wire    grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARVALID;
wire   [31:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARADDR;
wire   [0:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARID;
wire   [31:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARLEN;
wire   [2:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARSIZE;
wire   [1:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARBURST;
wire   [1:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARLOCK;
wire   [3:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARCACHE;
wire   [2:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARPROT;
wire   [3:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARQOS;
wire   [3:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARREGION;
wire   [0:0] grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARUSER;
wire    grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_RREADY;
wire    grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_BREADY;
wire   [31:0] grp_blockP1_fu_1276_a_o;
wire    grp_blockP1_fu_1276_a_o_ap_vld;
wire    grp_get_coordcube_fu_1441_ap_start;
wire    grp_get_coordcube_fu_1441_ap_done;
wire    grp_get_coordcube_fu_1441_ap_idle;
wire    grp_get_coordcube_fu_1441_ap_ready;
wire   [2:0] grp_get_coordcube_fu_1441_cubiecube_0_cp_address0;
wire    grp_get_coordcube_fu_1441_cubiecube_0_cp_ce0;
wire   [2:0] grp_get_coordcube_fu_1441_cubiecube_0_co_address0;
wire    grp_get_coordcube_fu_1441_cubiecube_0_co_ce0;
wire   [3:0] grp_get_coordcube_fu_1441_cubiecube_0_ep_address0;
wire    grp_get_coordcube_fu_1441_cubiecube_0_ep_ce0;
wire   [3:0] grp_get_coordcube_fu_1441_cubiecube_0_eo_address0;
wire    grp_get_coordcube_fu_1441_cubiecube_0_eo_ce0;
wire   [15:0] grp_get_coordcube_fu_1441_result_twist_0;
wire    grp_get_coordcube_fu_1441_result_twist_0_ap_vld;
wire   [15:0] grp_get_coordcube_fu_1441_result_flip_0;
wire    grp_get_coordcube_fu_1441_result_flip_0_ap_vld;
wire   [15:0] grp_get_coordcube_fu_1441_result_parity_0;
wire    grp_get_coordcube_fu_1441_result_parity_0_ap_vld;
wire   [15:0] grp_get_coordcube_fu_1441_result_FRtoBR_0;
wire    grp_get_coordcube_fu_1441_result_FRtoBR_0_ap_vld;
wire   [15:0] grp_get_coordcube_fu_1441_result_URFtoDLF_0;
wire    grp_get_coordcube_fu_1441_result_URFtoDLF_0_ap_vld;
wire   [15:0] grp_get_coordcube_fu_1441_result_URtoUL_0;
wire    grp_get_coordcube_fu_1441_result_URtoUL_0_ap_vld;
wire   [15:0] grp_get_coordcube_fu_1441_result_UBtoDF_0;
wire    grp_get_coordcube_fu_1441_result_UBtoDF_0_ap_vld;
wire    grp_toCubieCube_fu_1467_ap_start;
wire    grp_toCubieCube_fu_1467_ap_done;
wire    grp_toCubieCube_fu_1467_ap_idle;
wire    grp_toCubieCube_fu_1467_ap_ready;
wire   [5:0] grp_toCubieCube_fu_1467_facecube_0_f_address0;
wire    grp_toCubieCube_fu_1467_facecube_0_f_ce0;
wire   [5:0] grp_toCubieCube_fu_1467_facecube_0_f_address1;
wire    grp_toCubieCube_fu_1467_facecube_0_f_ce1;
wire   [2:0] grp_toCubieCube_fu_1467_ccRet_cp_0_address0;
wire    grp_toCubieCube_fu_1467_ccRet_cp_0_ce0;
wire    grp_toCubieCube_fu_1467_ccRet_cp_0_we0;
wire   [2:0] grp_toCubieCube_fu_1467_ccRet_cp_0_d0;
wire   [3:0] grp_toCubieCube_fu_1467_ccRet_ep_0_address0;
wire    grp_toCubieCube_fu_1467_ccRet_ep_0_ce0;
wire    grp_toCubieCube_fu_1467_ccRet_ep_0_we0;
wire   [3:0] grp_toCubieCube_fu_1467_ccRet_ep_0_d0;
wire   [2:0] grp_toCubieCube_fu_1467_ccRet_co_0_address0;
wire    grp_toCubieCube_fu_1467_ccRet_co_0_ce0;
wire    grp_toCubieCube_fu_1467_ccRet_co_0_we0;
wire   [1:0] grp_toCubieCube_fu_1467_ccRet_co_0_d0;
wire   [3:0] grp_toCubieCube_fu_1467_ccRet_eo_0_address0;
wire    grp_toCubieCube_fu_1467_ccRet_eo_0_ce0;
wire    grp_toCubieCube_fu_1467_ccRet_eo_0_we0;
wire   [0:0] grp_toCubieCube_fu_1467_ccRet_eo_0_d0;
wire    grp_verify_fu_1495_ap_start;
wire   [2:0] grp_verify_fu_1495_cubiecube_0_cp_address0;
wire    grp_verify_fu_1495_cubiecube_0_cp_ce0;
wire   [2:0] grp_verify_fu_1495_cubiecube_0_co_address0;
wire    grp_verify_fu_1495_cubiecube_0_co_ce0;
wire   [3:0] grp_verify_fu_1495_cubiecube_0_ep_address0;
wire    grp_verify_fu_1495_cubiecube_0_ep_ce0;
wire   [3:0] grp_verify_fu_1495_cubiecube_0_eo_address0;
wire    grp_verify_fu_1495_cubiecube_0_eo_ce0;
wire   [3:0] grp_verify_fu_1495_ap_return;
wire    grp_get_facecube_fromstr_fu_1507_ap_start;
wire    grp_get_facecube_fromstr_fu_1507_ap_done;
wire    grp_get_facecube_fromstr_fu_1507_ap_idle;
wire    grp_get_facecube_fromstr_fu_1507_ap_ready;
wire   [5:0] grp_get_facecube_fromstr_fu_1507_cubeString_address0;
wire    grp_get_facecube_fromstr_fu_1507_cubeString_ce0;
wire   [5:0] grp_get_facecube_fromstr_fu_1507_res_f_0_address0;
wire    grp_get_facecube_fromstr_fu_1507_res_f_0_ce0;
wire    grp_get_facecube_fromstr_fu_1507_res_f_0_we0;
wire   [2:0] grp_get_facecube_fromstr_fu_1507_res_f_0_d0;
reg   [2:0] invdar_reg_1208;
wire   [0:0] tmp_48_fu_1663_p2;
reg   [2:0] i_reg_1219;
reg   [5:0] i_1_reg_1242;
wire    ap_CS_fsm_state15;
reg   [2:0] i_2_reg_1253;
wire    ap_CS_fsm_state17;
wire   [0:0] tmp_82_fu_1849_p2;
reg   [4:0] depthPhase1_reg_1264;
reg    grp_blockP1_fu_1276_ap_start_reg;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
reg    grp_get_coordcube_fu_1441_ap_start_reg;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
reg    grp_toCubieCube_fu_1467_ap_start_reg;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
reg    grp_verify_fu_1495_ap_start_reg;
wire    ap_CS_fsm_state21;
reg    grp_get_facecube_fromstr_fu_1507_ap_start_reg;
wire    ap_CS_fsm_state18;
wire   [63:0] tmp_s_fu_1658_p1;
wire   [63:0] tmp_50_fu_1689_p1;
wire   [63:0] tmp_52_fu_1699_p1;
wire   [63:0] tmp_55_fu_1709_p1;
wire   [63:0] tmp_58_fu_1719_p1;
wire   [63:0] tmp_61_fu_1729_p1;
wire   [63:0] tmp_64_fu_1739_p1;
wire   [63:0] tmp_68_fu_1764_p1;
wire   [63:0] tmp_78_fu_1774_p1;
wire   [63:0] tmp_84_fu_1784_p1;
wire   [63:0] tmp_66_fu_1827_p1;
wire   [63:0] tmp_81_fu_1844_p1;
wire   [31:0] grp_fu_1520_p2;
wire   [5:0] tmp_51_fu_1694_p2;
wire   [5:0] tmp_54_fu_1704_p2;
wire   [5:0] tmp_57_fu_1714_p2;
wire   [5:0] tmp_60_fu_1724_p2;
wire   [5:0] tmp_63_fu_1734_p2;
wire   [0:0] tmp10_fu_1748_p2;
wire   [0:0] tmp9_fu_1744_p2;
wire   [5:0] tmp_67_fu_1759_p2;
wire   [5:0] tmp_70_fu_1769_p2;
wire   [5:0] tmp_80_fu_1779_p2;
wire   [0:0] tmp13_fu_1793_p2;
wire   [0:0] tmp12_fu_1789_p2;
wire   [0:0] tmp11_fu_1798_p2;
wire   [0:0] tmp_21_fu_1804_p2;
wire  signed [33:0] mul_fu_1989_p2;
wire  signed [15:0] tmp_90_fu_1872_p1;
wire   [32:0] neg_mul_fu_1901_p2;
wire   [11:0] tmp_91_fu_1906_p4;
wire  signed [15:0] tmp_92_fu_1916_p1;
wire  signed [15:0] tmp_94_fu_1920_p1;
wire   [15:0] tmp_95_fu_1923_p3;
wire   [15:0] neg_ti_fu_1930_p2;
wire   [17:0] mul_fu_1989_p0;
reg   [29:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 30'd1;
#0 result_twist_0 = 16'd0;
#0 result_flip_0 = 16'd0;
#0 result_parity_0 = 16'd0;
#0 result_FRtoBR_0 = 16'd0;
#0 result_URFtoDLF_0 = 16'd0;
#0 result_URtoUL_0 = 16'd0;
#0 result_UBtoDF_0 = 16'd0;
#0 a = 32'd0;
#0 grp_blockP1_fu_1276_ap_start_reg = 1'b0;
#0 grp_get_coordcube_fu_1441_ap_start_reg = 1'b0;
#0 grp_toCubieCube_fu_1467_ap_start_reg = 1'b0;
#0 grp_verify_fu_1495_ap_start_reg = 1'b0;
#0 grp_get_facecube_fromstr_fu_1507_ap_start_reg = 1'b0;
end

solution_res_f_0 #(
    .DataWidth( 3 ),
    .AddressRange( 54 ),
    .AddressWidth( 6 ))
res_f_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(res_f_0_address0),
    .ce0(res_f_0_ce0),
    .we0(res_f_0_we0),
    .d0(grp_get_facecube_fromstr_fu_1507_res_f_0_d0),
    .q0(res_f_0_q0),
    .address1(grp_toCubieCube_fu_1467_facecube_0_f_address1),
    .ce1(res_f_0_ce1),
    .q1(res_f_0_q1)
);

solution_ccRet_cp_0 #(
    .DataWidth( 3 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
ccRet_cp_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ccRet_cp_0_address0),
    .ce0(ccRet_cp_0_ce0),
    .we0(ccRet_cp_0_we0),
    .d0(grp_toCubieCube_fu_1467_ccRet_cp_0_d0),
    .q0(ccRet_cp_0_q0)
);

solution_ccRet_ep_0 #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ccRet_ep_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ccRet_ep_0_address0),
    .ce0(ccRet_ep_0_ce0),
    .we0(ccRet_ep_0_we0),
    .d0(grp_toCubieCube_fu_1467_ccRet_ep_0_d0),
    .q0(ccRet_ep_0_q0)
);

solution_ccRet_co_0 #(
    .DataWidth( 2 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
ccRet_co_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ccRet_co_0_address0),
    .ce0(ccRet_co_0_ce0),
    .we0(ccRet_co_0_we0),
    .d0(grp_toCubieCube_fu_1467_ccRet_co_0_d0),
    .q0(ccRet_co_0_q0)
);

solution_ccRet_eo_0 #(
    .DataWidth( 1 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
ccRet_eo_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ccRet_eo_0_address0),
    .ce0(ccRet_eo_0_ce0),
    .we0(ccRet_eo_0_we0),
    .d0(grp_toCubieCube_fu_1467_ccRet_eo_0_d0),
    .q0(ccRet_eo_0_q0)
);

solution_CTRL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_BUS_DATA_WIDTH ))
solution_CTRL_BUS_s_axi_U(
    .AWVALID(s_axi_CTRL_BUS_AWVALID),
    .AWREADY(s_axi_CTRL_BUS_AWREADY),
    .AWADDR(s_axi_CTRL_BUS_AWADDR),
    .WVALID(s_axi_CTRL_BUS_WVALID),
    .WREADY(s_axi_CTRL_BUS_WREADY),
    .WDATA(s_axi_CTRL_BUS_WDATA),
    .WSTRB(s_axi_CTRL_BUS_WSTRB),
    .ARVALID(s_axi_CTRL_BUS_ARVALID),
    .ARREADY(s_axi_CTRL_BUS_ARREADY),
    .ARADDR(s_axi_CTRL_BUS_ARADDR),
    .RVALID(s_axi_CTRL_BUS_RVALID),
    .RREADY(s_axi_CTRL_BUS_RREADY),
    .RDATA(s_axi_CTRL_BUS_RDATA),
    .RRESP(s_axi_CTRL_BUS_RRESP),
    .BVALID(s_axi_CTRL_BUS_BVALID),
    .BREADY(s_axi_CTRL_BUS_BREADY),
    .BRESP(s_axi_CTRL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .facelets_address0(facelets_address0),
    .facelets_ce0(facelets_ce0),
    .facelets_q0(facelets_q0),
    .maxDepth(maxDepth),
    .unsolvable(unsolvable),
    .unsolvable_ap_vld(unsolvable_ap_vld),
    .encode_length(encode_length),
    .encode_length_ap_vld(encode_length_ap_vld),
    .encode_array_address0(grp_blockP1_fu_1276_encode_array_address0),
    .encode_array_ce0(grp_blockP1_fu_1276_encode_array_ce0),
    .encode_array_we0(grp_blockP1_fu_1276_encode_array_we0),
    .encode_array_d0(grp_blockP1_fu_1276_encode_array_d0),
    .twistMove2(twistMove2),
    .flipMove2(flipMove2),
    .FRtoBR_Move2(FRtoBR_Move2),
    .URFtoDLF_Move2(URFtoDLF_Move2),
    .URtoDF_Move2(URtoDF_Move2),
    .URtoUL_Move2(URtoUL_Move2),
    .UBtoDF_Move2(UBtoDF_Move2),
    .MergeURtoULandUBtoDF2(MergeURtoULandUBtoDF2),
    .Slice_URFtoDLF_Parity_Prun2(Slice_URFtoDLF_Parity_Prun2),
    .Slice_URtoDF_Parity_Prun2(Slice_URtoDF_Parity_Prun2),
    .Slice_Twist_Prun2(Slice_Twist_Prun2),
    .Slice_Flip_Prun2(Slice_Flip_Prun2)
);

solution_CTRL_BUS1_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_CTRL_BUS1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_CTRL_BUS1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_CTRL_BUS1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_CTRL_BUS1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_CTRL_BUS1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_CTRL_BUS1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_CTRL_BUS1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_CTRL_BUS1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_CTRL_BUS1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_CTRL_BUS1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_CTRL_BUS1_CACHE_VALUE ))
solution_CTRL_BUS1_m_axi_U(
    .AWVALID(m_axi_CTRL_BUS1_AWVALID),
    .AWREADY(m_axi_CTRL_BUS1_AWREADY),
    .AWADDR(m_axi_CTRL_BUS1_AWADDR),
    .AWID(m_axi_CTRL_BUS1_AWID),
    .AWLEN(m_axi_CTRL_BUS1_AWLEN),
    .AWSIZE(m_axi_CTRL_BUS1_AWSIZE),
    .AWBURST(m_axi_CTRL_BUS1_AWBURST),
    .AWLOCK(m_axi_CTRL_BUS1_AWLOCK),
    .AWCACHE(m_axi_CTRL_BUS1_AWCACHE),
    .AWPROT(m_axi_CTRL_BUS1_AWPROT),
    .AWQOS(m_axi_CTRL_BUS1_AWQOS),
    .AWREGION(m_axi_CTRL_BUS1_AWREGION),
    .AWUSER(m_axi_CTRL_BUS1_AWUSER),
    .WVALID(m_axi_CTRL_BUS1_WVALID),
    .WREADY(m_axi_CTRL_BUS1_WREADY),
    .WDATA(m_axi_CTRL_BUS1_WDATA),
    .WSTRB(m_axi_CTRL_BUS1_WSTRB),
    .WLAST(m_axi_CTRL_BUS1_WLAST),
    .WID(m_axi_CTRL_BUS1_WID),
    .WUSER(m_axi_CTRL_BUS1_WUSER),
    .ARVALID(m_axi_CTRL_BUS1_ARVALID),
    .ARREADY(m_axi_CTRL_BUS1_ARREADY),
    .ARADDR(m_axi_CTRL_BUS1_ARADDR),
    .ARID(m_axi_CTRL_BUS1_ARID),
    .ARLEN(m_axi_CTRL_BUS1_ARLEN),
    .ARSIZE(m_axi_CTRL_BUS1_ARSIZE),
    .ARBURST(m_axi_CTRL_BUS1_ARBURST),
    .ARLOCK(m_axi_CTRL_BUS1_ARLOCK),
    .ARCACHE(m_axi_CTRL_BUS1_ARCACHE),
    .ARPROT(m_axi_CTRL_BUS1_ARPROT),
    .ARQOS(m_axi_CTRL_BUS1_ARQOS),
    .ARREGION(m_axi_CTRL_BUS1_ARREGION),
    .ARUSER(m_axi_CTRL_BUS1_ARUSER),
    .RVALID(m_axi_CTRL_BUS1_RVALID),
    .RREADY(m_axi_CTRL_BUS1_RREADY),
    .RDATA(m_axi_CTRL_BUS1_RDATA),
    .RLAST(m_axi_CTRL_BUS1_RLAST),
    .RID(m_axi_CTRL_BUS1_RID),
    .RUSER(m_axi_CTRL_BUS1_RUSER),
    .RRESP(m_axi_CTRL_BUS1_RRESP),
    .BVALID(m_axi_CTRL_BUS1_BVALID),
    .BREADY(m_axi_CTRL_BUS1_BREADY),
    .BRESP(m_axi_CTRL_BUS1_BRESP),
    .BID(m_axi_CTRL_BUS1_BID),
    .BUSER(m_axi_CTRL_BUS1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(CTRL_BUS1_ARVALID),
    .I_ARREADY(CTRL_BUS1_ARREADY),
    .I_ARADDR(grp_blockP1_fu_1276_m_axi_twistMove2_ARADDR),
    .I_ARID(grp_blockP1_fu_1276_m_axi_twistMove2_ARID),
    .I_ARLEN(grp_blockP1_fu_1276_m_axi_twistMove2_ARLEN),
    .I_ARSIZE(grp_blockP1_fu_1276_m_axi_twistMove2_ARSIZE),
    .I_ARLOCK(grp_blockP1_fu_1276_m_axi_twistMove2_ARLOCK),
    .I_ARCACHE(grp_blockP1_fu_1276_m_axi_twistMove2_ARCACHE),
    .I_ARQOS(grp_blockP1_fu_1276_m_axi_twistMove2_ARQOS),
    .I_ARPROT(grp_blockP1_fu_1276_m_axi_twistMove2_ARPROT),
    .I_ARUSER(grp_blockP1_fu_1276_m_axi_twistMove2_ARUSER),
    .I_ARBURST(grp_blockP1_fu_1276_m_axi_twistMove2_ARBURST),
    .I_ARREGION(grp_blockP1_fu_1276_m_axi_twistMove2_ARREGION),
    .I_RVALID(CTRL_BUS1_RVALID),
    .I_RREADY(CTRL_BUS1_RREADY),
    .I_RDATA(CTRL_BUS1_RDATA),
    .I_RID(CTRL_BUS1_RID),
    .I_RUSER(CTRL_BUS1_RUSER),
    .I_RRESP(CTRL_BUS1_RRESP),
    .I_RLAST(CTRL_BUS1_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(CTRL_BUS1_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(CTRL_BUS1_WREADY),
    .I_WDATA(16'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd0),
    .I_BVALID(CTRL_BUS1_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(CTRL_BUS1_BRESP),
    .I_BID(CTRL_BUS1_BID),
    .I_BUSER(CTRL_BUS1_BUSER)
);

solution_CTRL_BUS2_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_CTRL_BUS2_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_CTRL_BUS2_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_CTRL_BUS2_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_CTRL_BUS2_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_CTRL_BUS2_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_CTRL_BUS2_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_CTRL_BUS2_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_CTRL_BUS2_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_CTRL_BUS2_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_CTRL_BUS2_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_CTRL_BUS2_CACHE_VALUE ))
solution_CTRL_BUS2_m_axi_U(
    .AWVALID(m_axi_CTRL_BUS2_AWVALID),
    .AWREADY(m_axi_CTRL_BUS2_AWREADY),
    .AWADDR(m_axi_CTRL_BUS2_AWADDR),
    .AWID(m_axi_CTRL_BUS2_AWID),
    .AWLEN(m_axi_CTRL_BUS2_AWLEN),
    .AWSIZE(m_axi_CTRL_BUS2_AWSIZE),
    .AWBURST(m_axi_CTRL_BUS2_AWBURST),
    .AWLOCK(m_axi_CTRL_BUS2_AWLOCK),
    .AWCACHE(m_axi_CTRL_BUS2_AWCACHE),
    .AWPROT(m_axi_CTRL_BUS2_AWPROT),
    .AWQOS(m_axi_CTRL_BUS2_AWQOS),
    .AWREGION(m_axi_CTRL_BUS2_AWREGION),
    .AWUSER(m_axi_CTRL_BUS2_AWUSER),
    .WVALID(m_axi_CTRL_BUS2_WVALID),
    .WREADY(m_axi_CTRL_BUS2_WREADY),
    .WDATA(m_axi_CTRL_BUS2_WDATA),
    .WSTRB(m_axi_CTRL_BUS2_WSTRB),
    .WLAST(m_axi_CTRL_BUS2_WLAST),
    .WID(m_axi_CTRL_BUS2_WID),
    .WUSER(m_axi_CTRL_BUS2_WUSER),
    .ARVALID(m_axi_CTRL_BUS2_ARVALID),
    .ARREADY(m_axi_CTRL_BUS2_ARREADY),
    .ARADDR(m_axi_CTRL_BUS2_ARADDR),
    .ARID(m_axi_CTRL_BUS2_ARID),
    .ARLEN(m_axi_CTRL_BUS2_ARLEN),
    .ARSIZE(m_axi_CTRL_BUS2_ARSIZE),
    .ARBURST(m_axi_CTRL_BUS2_ARBURST),
    .ARLOCK(m_axi_CTRL_BUS2_ARLOCK),
    .ARCACHE(m_axi_CTRL_BUS2_ARCACHE),
    .ARPROT(m_axi_CTRL_BUS2_ARPROT),
    .ARQOS(m_axi_CTRL_BUS2_ARQOS),
    .ARREGION(m_axi_CTRL_BUS2_ARREGION),
    .ARUSER(m_axi_CTRL_BUS2_ARUSER),
    .RVALID(m_axi_CTRL_BUS2_RVALID),
    .RREADY(m_axi_CTRL_BUS2_RREADY),
    .RDATA(m_axi_CTRL_BUS2_RDATA),
    .RLAST(m_axi_CTRL_BUS2_RLAST),
    .RID(m_axi_CTRL_BUS2_RID),
    .RUSER(m_axi_CTRL_BUS2_RUSER),
    .RRESP(m_axi_CTRL_BUS2_RRESP),
    .BVALID(m_axi_CTRL_BUS2_BVALID),
    .BREADY(m_axi_CTRL_BUS2_BREADY),
    .BRESP(m_axi_CTRL_BUS2_BRESP),
    .BID(m_axi_CTRL_BUS2_BID),
    .BUSER(m_axi_CTRL_BUS2_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(CTRL_BUS2_ARVALID),
    .I_ARREADY(CTRL_BUS2_ARREADY),
    .I_ARADDR(grp_blockP1_fu_1276_m_axi_flipMove2_ARADDR),
    .I_ARID(grp_blockP1_fu_1276_m_axi_flipMove2_ARID),
    .I_ARLEN(grp_blockP1_fu_1276_m_axi_flipMove2_ARLEN),
    .I_ARSIZE(grp_blockP1_fu_1276_m_axi_flipMove2_ARSIZE),
    .I_ARLOCK(grp_blockP1_fu_1276_m_axi_flipMove2_ARLOCK),
    .I_ARCACHE(grp_blockP1_fu_1276_m_axi_flipMove2_ARCACHE),
    .I_ARQOS(grp_blockP1_fu_1276_m_axi_flipMove2_ARQOS),
    .I_ARPROT(grp_blockP1_fu_1276_m_axi_flipMove2_ARPROT),
    .I_ARUSER(grp_blockP1_fu_1276_m_axi_flipMove2_ARUSER),
    .I_ARBURST(grp_blockP1_fu_1276_m_axi_flipMove2_ARBURST),
    .I_ARREGION(grp_blockP1_fu_1276_m_axi_flipMove2_ARREGION),
    .I_RVALID(CTRL_BUS2_RVALID),
    .I_RREADY(CTRL_BUS2_RREADY),
    .I_RDATA(CTRL_BUS2_RDATA),
    .I_RID(CTRL_BUS2_RID),
    .I_RUSER(CTRL_BUS2_RUSER),
    .I_RRESP(CTRL_BUS2_RRESP),
    .I_RLAST(CTRL_BUS2_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(CTRL_BUS2_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(CTRL_BUS2_WREADY),
    .I_WDATA(16'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd0),
    .I_BVALID(CTRL_BUS2_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(CTRL_BUS2_BRESP),
    .I_BID(CTRL_BUS2_BID),
    .I_BUSER(CTRL_BUS2_BUSER)
);

solution_CTRL_BUS3_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_CTRL_BUS3_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_CTRL_BUS3_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_CTRL_BUS3_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_CTRL_BUS3_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_CTRL_BUS3_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_CTRL_BUS3_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_CTRL_BUS3_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_CTRL_BUS3_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_CTRL_BUS3_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_CTRL_BUS3_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_CTRL_BUS3_CACHE_VALUE ))
solution_CTRL_BUS3_m_axi_U(
    .AWVALID(m_axi_CTRL_BUS3_AWVALID),
    .AWREADY(m_axi_CTRL_BUS3_AWREADY),
    .AWADDR(m_axi_CTRL_BUS3_AWADDR),
    .AWID(m_axi_CTRL_BUS3_AWID),
    .AWLEN(m_axi_CTRL_BUS3_AWLEN),
    .AWSIZE(m_axi_CTRL_BUS3_AWSIZE),
    .AWBURST(m_axi_CTRL_BUS3_AWBURST),
    .AWLOCK(m_axi_CTRL_BUS3_AWLOCK),
    .AWCACHE(m_axi_CTRL_BUS3_AWCACHE),
    .AWPROT(m_axi_CTRL_BUS3_AWPROT),
    .AWQOS(m_axi_CTRL_BUS3_AWQOS),
    .AWREGION(m_axi_CTRL_BUS3_AWREGION),
    .AWUSER(m_axi_CTRL_BUS3_AWUSER),
    .WVALID(m_axi_CTRL_BUS3_WVALID),
    .WREADY(m_axi_CTRL_BUS3_WREADY),
    .WDATA(m_axi_CTRL_BUS3_WDATA),
    .WSTRB(m_axi_CTRL_BUS3_WSTRB),
    .WLAST(m_axi_CTRL_BUS3_WLAST),
    .WID(m_axi_CTRL_BUS3_WID),
    .WUSER(m_axi_CTRL_BUS3_WUSER),
    .ARVALID(m_axi_CTRL_BUS3_ARVALID),
    .ARREADY(m_axi_CTRL_BUS3_ARREADY),
    .ARADDR(m_axi_CTRL_BUS3_ARADDR),
    .ARID(m_axi_CTRL_BUS3_ARID),
    .ARLEN(m_axi_CTRL_BUS3_ARLEN),
    .ARSIZE(m_axi_CTRL_BUS3_ARSIZE),
    .ARBURST(m_axi_CTRL_BUS3_ARBURST),
    .ARLOCK(m_axi_CTRL_BUS3_ARLOCK),
    .ARCACHE(m_axi_CTRL_BUS3_ARCACHE),
    .ARPROT(m_axi_CTRL_BUS3_ARPROT),
    .ARQOS(m_axi_CTRL_BUS3_ARQOS),
    .ARREGION(m_axi_CTRL_BUS3_ARREGION),
    .ARUSER(m_axi_CTRL_BUS3_ARUSER),
    .RVALID(m_axi_CTRL_BUS3_RVALID),
    .RREADY(m_axi_CTRL_BUS3_RREADY),
    .RDATA(m_axi_CTRL_BUS3_RDATA),
    .RLAST(m_axi_CTRL_BUS3_RLAST),
    .RID(m_axi_CTRL_BUS3_RID),
    .RUSER(m_axi_CTRL_BUS3_RUSER),
    .RRESP(m_axi_CTRL_BUS3_RRESP),
    .BVALID(m_axi_CTRL_BUS3_BVALID),
    .BREADY(m_axi_CTRL_BUS3_BREADY),
    .BRESP(m_axi_CTRL_BUS3_BRESP),
    .BID(m_axi_CTRL_BUS3_BID),
    .BUSER(m_axi_CTRL_BUS3_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(CTRL_BUS3_ARVALID),
    .I_ARREADY(CTRL_BUS3_ARREADY),
    .I_ARADDR(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARADDR),
    .I_ARID(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARID),
    .I_ARLEN(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARLEN),
    .I_ARSIZE(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARSIZE),
    .I_ARLOCK(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARLOCK),
    .I_ARCACHE(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARCACHE),
    .I_ARQOS(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARQOS),
    .I_ARPROT(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARPROT),
    .I_ARUSER(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARUSER),
    .I_ARBURST(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARBURST),
    .I_ARREGION(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARREGION),
    .I_RVALID(CTRL_BUS3_RVALID),
    .I_RREADY(CTRL_BUS3_RREADY),
    .I_RDATA(CTRL_BUS3_RDATA),
    .I_RID(CTRL_BUS3_RID),
    .I_RUSER(CTRL_BUS3_RUSER),
    .I_RRESP(CTRL_BUS3_RRESP),
    .I_RLAST(CTRL_BUS3_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(CTRL_BUS3_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(CTRL_BUS3_WREADY),
    .I_WDATA(16'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd0),
    .I_BVALID(CTRL_BUS3_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(CTRL_BUS3_BRESP),
    .I_BID(CTRL_BUS3_BID),
    .I_BUSER(CTRL_BUS3_BUSER)
);

solution_count #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
count_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(count_address0),
    .ce0(count_ce0),
    .we0(count_we0),
    .d0(count_d0),
    .q0(count_q0)
);

solution_P1Buffervdy #(
    .DataWidth( 16 ),
    .AddressRange( 8000 ),
    .AddressWidth( 13 ))
P1Buffer_flip_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_blockP1_fu_1276_P1Buffer_0_flip_address0),
    .ce0(grp_blockP1_fu_1276_P1Buffer_0_flip_ce0),
    .we0(grp_blockP1_fu_1276_P1Buffer_0_flip_we0),
    .d0(grp_blockP1_fu_1276_P1Buffer_0_flip_d0),
    .q0(P1Buffer_flip_0_q0)
);

solution_P1Buffervdy #(
    .DataWidth( 16 ),
    .AddressRange( 8000 ),
    .AddressWidth( 13 ))
P1Buffer_twist_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_blockP1_fu_1276_P1Buffer_0_twist_address0),
    .ce0(grp_blockP1_fu_1276_P1Buffer_0_twist_ce0),
    .we0(grp_blockP1_fu_1276_P1Buffer_0_twist_we0),
    .d0(grp_blockP1_fu_1276_P1Buffer_0_twist_d0),
    .q0(P1Buffer_twist_0_q0)
);

solution_P1Buffervdy #(
    .DataWidth( 16 ),
    .AddressRange( 8000 ),
    .AddressWidth( 13 ))
P1Buffer_slice_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_blockP1_fu_1276_P1Buffer_0_slice_address0),
    .ce0(grp_blockP1_fu_1276_P1Buffer_0_slice_ce0),
    .we0(grp_blockP1_fu_1276_P1Buffer_0_slice_we0),
    .d0(grp_blockP1_fu_1276_P1Buffer_0_slice_d0),
    .q0(P1Buffer_slice_0_q0)
);

solution_P1Bufferyd2 #(
    .DataWidth( 8 ),
    .AddressRange( 8000 ),
    .AddressWidth( 13 ))
P1Buffer_depthPhase1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_blockP1_fu_1276_P1Buffer_0_depthPha_address0),
    .ce0(grp_blockP1_fu_1276_P1Buffer_0_depthPha_ce0),
    .we0(grp_blockP1_fu_1276_P1Buffer_0_depthPha_we0),
    .d0(grp_blockP1_fu_1276_P1Buffer_0_depthPha_d0),
    .q0(P1Buffer_depthPhase1_q0)
);

solution_P1Bufferyd2 #(
    .DataWidth( 8 ),
    .AddressRange( 8000 ),
    .AddressWidth( 13 ))
P1Buffer_n_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_blockP1_fu_1276_P1Buffer_0_n_address0),
    .ce0(grp_blockP1_fu_1276_P1Buffer_0_n_ce0),
    .we0(grp_blockP1_fu_1276_P1Buffer_0_n_we0),
    .d0(grp_blockP1_fu_1276_P1Buffer_0_n_d0),
    .q0(P1Buffer_n_0_q0)
);

solution_P1BufferAem #(
    .DataWidth( 8 ),
    .AddressRange( 248000 ),
    .AddressWidth( 18 ))
P1Buffer_0_i_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_blockP1_fu_1276_P1Buffer_0_i_address0),
    .ce0(grp_blockP1_fu_1276_P1Buffer_0_i_ce0),
    .we0(grp_blockP1_fu_1276_P1Buffer_0_i_we0),
    .d0(grp_blockP1_fu_1276_P1Buffer_0_i_d0),
    .q0(P1Buffer_0_i_q0)
);

solution_P3BufferBew #(
    .DataWidth( 1 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
P3Buffer_parity_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_blockP1_fu_1276_P3Buffer_0_parity_address0),
    .ce0(grp_blockP1_fu_1276_P3Buffer_0_parity_ce0),
    .we0(grp_blockP1_fu_1276_P3Buffer_0_parity_we0),
    .d0(grp_blockP1_fu_1276_P3Buffer_0_parity_d0),
    .q0(P3Buffer_parity_0_q0)
);

solution_P3BufferCeG #(
    .DataWidth( 16 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
P3Buffer_URFtoDLF_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_blockP1_fu_1276_P3Buffer_0_URFtoDLF_address0),
    .ce0(grp_blockP1_fu_1276_P3Buffer_0_URFtoDLF_ce0),
    .we0(grp_blockP1_fu_1276_P3Buffer_0_URFtoDLF_we0),
    .d0(grp_blockP1_fu_1276_P3Buffer_0_URFtoDLF_d0),
    .q0(P3Buffer_URFtoDLF_0_q0)
);

solution_P3BufferCeG #(
    .DataWidth( 16 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
P3Buffer_FRtoBR_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_blockP1_fu_1276_P3Buffer_0_FRtoBR_address0),
    .ce0(grp_blockP1_fu_1276_P3Buffer_0_FRtoBR_ce0),
    .we0(grp_blockP1_fu_1276_P3Buffer_0_FRtoBR_we0),
    .d0(grp_blockP1_fu_1276_P3Buffer_0_FRtoBR_d0),
    .q0(P3Buffer_FRtoBR_0_q0)
);

solution_P3BufferCeG #(
    .DataWidth( 16 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
P3Buffer_URtoDF_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_blockP1_fu_1276_P3Buffer_0_URtoDF_address0),
    .ce0(grp_blockP1_fu_1276_P3Buffer_0_URtoDF_ce0),
    .we0(grp_blockP1_fu_1276_P3Buffer_0_URtoDF_we0),
    .d0(grp_blockP1_fu_1276_P3Buffer_0_URtoDF_d0),
    .q0(P3Buffer_URtoDF_0_q0)
);

solution_P3BufferFfa #(
    .DataWidth( 8 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
P3Buffer_n_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_blockP1_fu_1276_P3Buffer_0_n_address0),
    .ce0(grp_blockP1_fu_1276_P3Buffer_0_n_ce0),
    .we0(grp_blockP1_fu_1276_P3Buffer_0_n_we0),
    .d0(grp_blockP1_fu_1276_P3Buffer_0_n_d0),
    .q0(P3Buffer_n_0_q0)
);

solution_P3BufferGfk #(
    .DataWidth( 8 ),
    .AddressRange( 31000 ),
    .AddressWidth( 15 ))
P3Buffer_0_i_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_blockP1_fu_1276_P3Buffer_0_i_address0),
    .ce0(grp_blockP1_fu_1276_P3Buffer_0_i_ce0),
    .we0(grp_blockP1_fu_1276_P3Buffer_0_i_we0),
    .d0(grp_blockP1_fu_1276_P3Buffer_0_i_d0),
    .q0(P3Buffer_0_i_q0),
    .address1(grp_blockP1_fu_1276_P3Buffer_0_i_address1),
    .ce1(grp_blockP1_fu_1276_P3Buffer_0_i_ce1),
    .we1(grp_blockP1_fu_1276_P3Buffer_0_i_we1),
    .d1(grp_blockP1_fu_1276_P3Buffer_0_i_d1),
    .q1(P3Buffer_0_i_q1)
);

blockP1 grp_blockP1_fu_1276(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_blockP1_fu_1276_ap_start),
    .ap_done(grp_blockP1_fu_1276_ap_done),
    .ap_idle(grp_blockP1_fu_1276_ap_idle),
    .ap_ready(grp_blockP1_fu_1276_ap_ready),
    .flip(flip_reg_2260),
    .twist(twist_reg_2265),
    .slice(slice_reg_2270),
    .P1Buffer_0_flip_address0(grp_blockP1_fu_1276_P1Buffer_0_flip_address0),
    .P1Buffer_0_flip_ce0(grp_blockP1_fu_1276_P1Buffer_0_flip_ce0),
    .P1Buffer_0_flip_we0(grp_blockP1_fu_1276_P1Buffer_0_flip_we0),
    .P1Buffer_0_flip_d0(grp_blockP1_fu_1276_P1Buffer_0_flip_d0),
    .P1Buffer_0_flip_q0(P1Buffer_flip_0_q0),
    .P1Buffer_0_twist_address0(grp_blockP1_fu_1276_P1Buffer_0_twist_address0),
    .P1Buffer_0_twist_ce0(grp_blockP1_fu_1276_P1Buffer_0_twist_ce0),
    .P1Buffer_0_twist_we0(grp_blockP1_fu_1276_P1Buffer_0_twist_we0),
    .P1Buffer_0_twist_d0(grp_blockP1_fu_1276_P1Buffer_0_twist_d0),
    .P1Buffer_0_twist_q0(P1Buffer_twist_0_q0),
    .P1Buffer_0_slice_address0(grp_blockP1_fu_1276_P1Buffer_0_slice_address0),
    .P1Buffer_0_slice_ce0(grp_blockP1_fu_1276_P1Buffer_0_slice_ce0),
    .P1Buffer_0_slice_we0(grp_blockP1_fu_1276_P1Buffer_0_slice_we0),
    .P1Buffer_0_slice_d0(grp_blockP1_fu_1276_P1Buffer_0_slice_d0),
    .P1Buffer_0_slice_q0(P1Buffer_slice_0_q0),
    .P1Buffer_0_depthPha_address0(grp_blockP1_fu_1276_P1Buffer_0_depthPha_address0),
    .P1Buffer_0_depthPha_ce0(grp_blockP1_fu_1276_P1Buffer_0_depthPha_ce0),
    .P1Buffer_0_depthPha_we0(grp_blockP1_fu_1276_P1Buffer_0_depthPha_we0),
    .P1Buffer_0_depthPha_d0(grp_blockP1_fu_1276_P1Buffer_0_depthPha_d0),
    .P1Buffer_0_depthPha_q0(P1Buffer_depthPhase1_q0),
    .P1Buffer_0_n_address0(grp_blockP1_fu_1276_P1Buffer_0_n_address0),
    .P1Buffer_0_n_ce0(grp_blockP1_fu_1276_P1Buffer_0_n_ce0),
    .P1Buffer_0_n_we0(grp_blockP1_fu_1276_P1Buffer_0_n_we0),
    .P1Buffer_0_n_d0(grp_blockP1_fu_1276_P1Buffer_0_n_d0),
    .P1Buffer_0_n_q0(P1Buffer_n_0_q0),
    .P1Buffer_0_i_address0(grp_blockP1_fu_1276_P1Buffer_0_i_address0),
    .P1Buffer_0_i_ce0(grp_blockP1_fu_1276_P1Buffer_0_i_ce0),
    .P1Buffer_0_i_we0(grp_blockP1_fu_1276_P1Buffer_0_i_we0),
    .P1Buffer_0_i_d0(grp_blockP1_fu_1276_P1Buffer_0_i_d0),
    .P1Buffer_0_i_q0(P1Buffer_0_i_q0),
    .depthPhase1(depthPhase1_reg_1264),
    .maxDepth(maxDepth_read_reg_1997),
    .URFtoDLF(URFtoDLF_reg_2275),
    .FRtoBR(FRtoBR_reg_2239),
    .parity(grp_blockP1_fu_1276_parity),
    .URtoUL(URtoUL_reg_2280),
    .UBtoDF(UBtoDF_reg_2285),
    .P3Buffer_0_parity_address0(grp_blockP1_fu_1276_P3Buffer_0_parity_address0),
    .P3Buffer_0_parity_ce0(grp_blockP1_fu_1276_P3Buffer_0_parity_ce0),
    .P3Buffer_0_parity_we0(grp_blockP1_fu_1276_P3Buffer_0_parity_we0),
    .P3Buffer_0_parity_d0(grp_blockP1_fu_1276_P3Buffer_0_parity_d0),
    .P3Buffer_0_parity_q0(P3Buffer_parity_0_q0),
    .P3Buffer_0_URFtoDLF_address0(grp_blockP1_fu_1276_P3Buffer_0_URFtoDLF_address0),
    .P3Buffer_0_URFtoDLF_ce0(grp_blockP1_fu_1276_P3Buffer_0_URFtoDLF_ce0),
    .P3Buffer_0_URFtoDLF_we0(grp_blockP1_fu_1276_P3Buffer_0_URFtoDLF_we0),
    .P3Buffer_0_URFtoDLF_d0(grp_blockP1_fu_1276_P3Buffer_0_URFtoDLF_d0),
    .P3Buffer_0_URFtoDLF_q0(P3Buffer_URFtoDLF_0_q0),
    .P3Buffer_0_FRtoBR_address0(grp_blockP1_fu_1276_P3Buffer_0_FRtoBR_address0),
    .P3Buffer_0_FRtoBR_ce0(grp_blockP1_fu_1276_P3Buffer_0_FRtoBR_ce0),
    .P3Buffer_0_FRtoBR_we0(grp_blockP1_fu_1276_P3Buffer_0_FRtoBR_we0),
    .P3Buffer_0_FRtoBR_d0(grp_blockP1_fu_1276_P3Buffer_0_FRtoBR_d0),
    .P3Buffer_0_FRtoBR_q0(P3Buffer_FRtoBR_0_q0),
    .P3Buffer_0_URtoDF_address0(grp_blockP1_fu_1276_P3Buffer_0_URtoDF_address0),
    .P3Buffer_0_URtoDF_ce0(grp_blockP1_fu_1276_P3Buffer_0_URtoDF_ce0),
    .P3Buffer_0_URtoDF_we0(grp_blockP1_fu_1276_P3Buffer_0_URtoDF_we0),
    .P3Buffer_0_URtoDF_d0(grp_blockP1_fu_1276_P3Buffer_0_URtoDF_d0),
    .P3Buffer_0_URtoDF_q0(P3Buffer_URtoDF_0_q0),
    .P3Buffer_0_n_address0(grp_blockP1_fu_1276_P3Buffer_0_n_address0),
    .P3Buffer_0_n_ce0(grp_blockP1_fu_1276_P3Buffer_0_n_ce0),
    .P3Buffer_0_n_we0(grp_blockP1_fu_1276_P3Buffer_0_n_we0),
    .P3Buffer_0_n_d0(grp_blockP1_fu_1276_P3Buffer_0_n_d0),
    .P3Buffer_0_n_q0(P3Buffer_n_0_q0),
    .P3Buffer_0_i_address0(grp_blockP1_fu_1276_P3Buffer_0_i_address0),
    .P3Buffer_0_i_ce0(grp_blockP1_fu_1276_P3Buffer_0_i_ce0),
    .P3Buffer_0_i_we0(grp_blockP1_fu_1276_P3Buffer_0_i_we0),
    .P3Buffer_0_i_d0(grp_blockP1_fu_1276_P3Buffer_0_i_d0),
    .P3Buffer_0_i_q0(P3Buffer_0_i_q0),
    .P3Buffer_0_i_address1(grp_blockP1_fu_1276_P3Buffer_0_i_address1),
    .P3Buffer_0_i_ce1(grp_blockP1_fu_1276_P3Buffer_0_i_ce1),
    .P3Buffer_0_i_we1(grp_blockP1_fu_1276_P3Buffer_0_i_we1),
    .P3Buffer_0_i_d1(grp_blockP1_fu_1276_P3Buffer_0_i_d1),
    .P3Buffer_0_i_q1(P3Buffer_0_i_q1),
    .encode_length(grp_blockP1_fu_1276_encode_length),
    .encode_length_ap_vld(grp_blockP1_fu_1276_encode_length_ap_vld),
    .encode_array_address0(grp_blockP1_fu_1276_encode_array_address0),
    .encode_array_ce0(grp_blockP1_fu_1276_encode_array_ce0),
    .encode_array_we0(grp_blockP1_fu_1276_encode_array_we0),
    .encode_array_d0(grp_blockP1_fu_1276_encode_array_d0),
    .m_axi_twistMove2_AWVALID(grp_blockP1_fu_1276_m_axi_twistMove2_AWVALID),
    .m_axi_twistMove2_AWREADY(1'b0),
    .m_axi_twistMove2_AWADDR(grp_blockP1_fu_1276_m_axi_twistMove2_AWADDR),
    .m_axi_twistMove2_AWID(grp_blockP1_fu_1276_m_axi_twistMove2_AWID),
    .m_axi_twistMove2_AWLEN(grp_blockP1_fu_1276_m_axi_twistMove2_AWLEN),
    .m_axi_twistMove2_AWSIZE(grp_blockP1_fu_1276_m_axi_twistMove2_AWSIZE),
    .m_axi_twistMove2_AWBURST(grp_blockP1_fu_1276_m_axi_twistMove2_AWBURST),
    .m_axi_twistMove2_AWLOCK(grp_blockP1_fu_1276_m_axi_twistMove2_AWLOCK),
    .m_axi_twistMove2_AWCACHE(grp_blockP1_fu_1276_m_axi_twistMove2_AWCACHE),
    .m_axi_twistMove2_AWPROT(grp_blockP1_fu_1276_m_axi_twistMove2_AWPROT),
    .m_axi_twistMove2_AWQOS(grp_blockP1_fu_1276_m_axi_twistMove2_AWQOS),
    .m_axi_twistMove2_AWREGION(grp_blockP1_fu_1276_m_axi_twistMove2_AWREGION),
    .m_axi_twistMove2_AWUSER(grp_blockP1_fu_1276_m_axi_twistMove2_AWUSER),
    .m_axi_twistMove2_WVALID(grp_blockP1_fu_1276_m_axi_twistMove2_WVALID),
    .m_axi_twistMove2_WREADY(1'b0),
    .m_axi_twistMove2_WDATA(grp_blockP1_fu_1276_m_axi_twistMove2_WDATA),
    .m_axi_twistMove2_WSTRB(grp_blockP1_fu_1276_m_axi_twistMove2_WSTRB),
    .m_axi_twistMove2_WLAST(grp_blockP1_fu_1276_m_axi_twistMove2_WLAST),
    .m_axi_twistMove2_WID(grp_blockP1_fu_1276_m_axi_twistMove2_WID),
    .m_axi_twistMove2_WUSER(grp_blockP1_fu_1276_m_axi_twistMove2_WUSER),
    .m_axi_twistMove2_ARVALID(grp_blockP1_fu_1276_m_axi_twistMove2_ARVALID),
    .m_axi_twistMove2_ARREADY(CTRL_BUS1_ARREADY),
    .m_axi_twistMove2_ARADDR(grp_blockP1_fu_1276_m_axi_twistMove2_ARADDR),
    .m_axi_twistMove2_ARID(grp_blockP1_fu_1276_m_axi_twistMove2_ARID),
    .m_axi_twistMove2_ARLEN(grp_blockP1_fu_1276_m_axi_twistMove2_ARLEN),
    .m_axi_twistMove2_ARSIZE(grp_blockP1_fu_1276_m_axi_twistMove2_ARSIZE),
    .m_axi_twistMove2_ARBURST(grp_blockP1_fu_1276_m_axi_twistMove2_ARBURST),
    .m_axi_twistMove2_ARLOCK(grp_blockP1_fu_1276_m_axi_twistMove2_ARLOCK),
    .m_axi_twistMove2_ARCACHE(grp_blockP1_fu_1276_m_axi_twistMove2_ARCACHE),
    .m_axi_twistMove2_ARPROT(grp_blockP1_fu_1276_m_axi_twistMove2_ARPROT),
    .m_axi_twistMove2_ARQOS(grp_blockP1_fu_1276_m_axi_twistMove2_ARQOS),
    .m_axi_twistMove2_ARREGION(grp_blockP1_fu_1276_m_axi_twistMove2_ARREGION),
    .m_axi_twistMove2_ARUSER(grp_blockP1_fu_1276_m_axi_twistMove2_ARUSER),
    .m_axi_twistMove2_RVALID(CTRL_BUS1_RVALID),
    .m_axi_twistMove2_RREADY(grp_blockP1_fu_1276_m_axi_twistMove2_RREADY),
    .m_axi_twistMove2_RDATA(CTRL_BUS1_RDATA),
    .m_axi_twistMove2_RLAST(CTRL_BUS1_RLAST),
    .m_axi_twistMove2_RID(CTRL_BUS1_RID),
    .m_axi_twistMove2_RUSER(CTRL_BUS1_RUSER),
    .m_axi_twistMove2_RRESP(CTRL_BUS1_RRESP),
    .m_axi_twistMove2_BVALID(1'b0),
    .m_axi_twistMove2_BREADY(grp_blockP1_fu_1276_m_axi_twistMove2_BREADY),
    .m_axi_twistMove2_BRESP(2'd0),
    .m_axi_twistMove2_BID(1'd0),
    .m_axi_twistMove2_BUSER(1'd0),
    .twistMove2_offset(twistMove_reg_2057),
    .m_axi_flipMove2_AWVALID(grp_blockP1_fu_1276_m_axi_flipMove2_AWVALID),
    .m_axi_flipMove2_AWREADY(1'b0),
    .m_axi_flipMove2_AWADDR(grp_blockP1_fu_1276_m_axi_flipMove2_AWADDR),
    .m_axi_flipMove2_AWID(grp_blockP1_fu_1276_m_axi_flipMove2_AWID),
    .m_axi_flipMove2_AWLEN(grp_blockP1_fu_1276_m_axi_flipMove2_AWLEN),
    .m_axi_flipMove2_AWSIZE(grp_blockP1_fu_1276_m_axi_flipMove2_AWSIZE),
    .m_axi_flipMove2_AWBURST(grp_blockP1_fu_1276_m_axi_flipMove2_AWBURST),
    .m_axi_flipMove2_AWLOCK(grp_blockP1_fu_1276_m_axi_flipMove2_AWLOCK),
    .m_axi_flipMove2_AWCACHE(grp_blockP1_fu_1276_m_axi_flipMove2_AWCACHE),
    .m_axi_flipMove2_AWPROT(grp_blockP1_fu_1276_m_axi_flipMove2_AWPROT),
    .m_axi_flipMove2_AWQOS(grp_blockP1_fu_1276_m_axi_flipMove2_AWQOS),
    .m_axi_flipMove2_AWREGION(grp_blockP1_fu_1276_m_axi_flipMove2_AWREGION),
    .m_axi_flipMove2_AWUSER(grp_blockP1_fu_1276_m_axi_flipMove2_AWUSER),
    .m_axi_flipMove2_WVALID(grp_blockP1_fu_1276_m_axi_flipMove2_WVALID),
    .m_axi_flipMove2_WREADY(1'b0),
    .m_axi_flipMove2_WDATA(grp_blockP1_fu_1276_m_axi_flipMove2_WDATA),
    .m_axi_flipMove2_WSTRB(grp_blockP1_fu_1276_m_axi_flipMove2_WSTRB),
    .m_axi_flipMove2_WLAST(grp_blockP1_fu_1276_m_axi_flipMove2_WLAST),
    .m_axi_flipMove2_WID(grp_blockP1_fu_1276_m_axi_flipMove2_WID),
    .m_axi_flipMove2_WUSER(grp_blockP1_fu_1276_m_axi_flipMove2_WUSER),
    .m_axi_flipMove2_ARVALID(grp_blockP1_fu_1276_m_axi_flipMove2_ARVALID),
    .m_axi_flipMove2_ARREADY(CTRL_BUS2_ARREADY),
    .m_axi_flipMove2_ARADDR(grp_blockP1_fu_1276_m_axi_flipMove2_ARADDR),
    .m_axi_flipMove2_ARID(grp_blockP1_fu_1276_m_axi_flipMove2_ARID),
    .m_axi_flipMove2_ARLEN(grp_blockP1_fu_1276_m_axi_flipMove2_ARLEN),
    .m_axi_flipMove2_ARSIZE(grp_blockP1_fu_1276_m_axi_flipMove2_ARSIZE),
    .m_axi_flipMove2_ARBURST(grp_blockP1_fu_1276_m_axi_flipMove2_ARBURST),
    .m_axi_flipMove2_ARLOCK(grp_blockP1_fu_1276_m_axi_flipMove2_ARLOCK),
    .m_axi_flipMove2_ARCACHE(grp_blockP1_fu_1276_m_axi_flipMove2_ARCACHE),
    .m_axi_flipMove2_ARPROT(grp_blockP1_fu_1276_m_axi_flipMove2_ARPROT),
    .m_axi_flipMove2_ARQOS(grp_blockP1_fu_1276_m_axi_flipMove2_ARQOS),
    .m_axi_flipMove2_ARREGION(grp_blockP1_fu_1276_m_axi_flipMove2_ARREGION),
    .m_axi_flipMove2_ARUSER(grp_blockP1_fu_1276_m_axi_flipMove2_ARUSER),
    .m_axi_flipMove2_RVALID(CTRL_BUS2_RVALID),
    .m_axi_flipMove2_RREADY(grp_blockP1_fu_1276_m_axi_flipMove2_RREADY),
    .m_axi_flipMove2_RDATA(CTRL_BUS2_RDATA),
    .m_axi_flipMove2_RLAST(CTRL_BUS2_RLAST),
    .m_axi_flipMove2_RID(CTRL_BUS2_RID),
    .m_axi_flipMove2_RUSER(CTRL_BUS2_RUSER),
    .m_axi_flipMove2_RRESP(CTRL_BUS2_RRESP),
    .m_axi_flipMove2_BVALID(1'b0),
    .m_axi_flipMove2_BREADY(grp_blockP1_fu_1276_m_axi_flipMove2_BREADY),
    .m_axi_flipMove2_BRESP(2'd0),
    .m_axi_flipMove2_BID(1'd0),
    .m_axi_flipMove2_BUSER(1'd0),
    .flipMove2_offset(flipMove_reg_2052),
    .m_axi_FRtoBR_Move2_AWVALID(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_AWVALID),
    .m_axi_FRtoBR_Move2_AWREADY(1'b0),
    .m_axi_FRtoBR_Move2_AWADDR(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_AWADDR),
    .m_axi_FRtoBR_Move2_AWID(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_AWID),
    .m_axi_FRtoBR_Move2_AWLEN(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_AWLEN),
    .m_axi_FRtoBR_Move2_AWSIZE(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_AWSIZE),
    .m_axi_FRtoBR_Move2_AWBURST(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_AWBURST),
    .m_axi_FRtoBR_Move2_AWLOCK(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_AWLOCK),
    .m_axi_FRtoBR_Move2_AWCACHE(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_AWCACHE),
    .m_axi_FRtoBR_Move2_AWPROT(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_AWPROT),
    .m_axi_FRtoBR_Move2_AWQOS(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_AWQOS),
    .m_axi_FRtoBR_Move2_AWREGION(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_AWREGION),
    .m_axi_FRtoBR_Move2_AWUSER(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_AWUSER),
    .m_axi_FRtoBR_Move2_WVALID(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_WVALID),
    .m_axi_FRtoBR_Move2_WREADY(1'b0),
    .m_axi_FRtoBR_Move2_WDATA(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_WDATA),
    .m_axi_FRtoBR_Move2_WSTRB(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_WSTRB),
    .m_axi_FRtoBR_Move2_WLAST(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_WLAST),
    .m_axi_FRtoBR_Move2_WID(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_WID),
    .m_axi_FRtoBR_Move2_WUSER(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_WUSER),
    .m_axi_FRtoBR_Move2_ARVALID(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARVALID),
    .m_axi_FRtoBR_Move2_ARREADY(CTRL_BUS3_ARREADY),
    .m_axi_FRtoBR_Move2_ARADDR(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARADDR),
    .m_axi_FRtoBR_Move2_ARID(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARID),
    .m_axi_FRtoBR_Move2_ARLEN(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARLEN),
    .m_axi_FRtoBR_Move2_ARSIZE(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARSIZE),
    .m_axi_FRtoBR_Move2_ARBURST(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARBURST),
    .m_axi_FRtoBR_Move2_ARLOCK(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARLOCK),
    .m_axi_FRtoBR_Move2_ARCACHE(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARCACHE),
    .m_axi_FRtoBR_Move2_ARPROT(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARPROT),
    .m_axi_FRtoBR_Move2_ARQOS(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARQOS),
    .m_axi_FRtoBR_Move2_ARREGION(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARREGION),
    .m_axi_FRtoBR_Move2_ARUSER(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARUSER),
    .m_axi_FRtoBR_Move2_RVALID(CTRL_BUS3_RVALID),
    .m_axi_FRtoBR_Move2_RREADY(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_RREADY),
    .m_axi_FRtoBR_Move2_RDATA(CTRL_BUS3_RDATA),
    .m_axi_FRtoBR_Move2_RLAST(CTRL_BUS3_RLAST),
    .m_axi_FRtoBR_Move2_RID(CTRL_BUS3_RID),
    .m_axi_FRtoBR_Move2_RUSER(CTRL_BUS3_RUSER),
    .m_axi_FRtoBR_Move2_RRESP(CTRL_BUS3_RRESP),
    .m_axi_FRtoBR_Move2_BVALID(1'b0),
    .m_axi_FRtoBR_Move2_BREADY(grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_BREADY),
    .m_axi_FRtoBR_Move2_BRESP(2'd0),
    .m_axi_FRtoBR_Move2_BID(1'd0),
    .m_axi_FRtoBR_Move2_BUSER(1'd0),
    .FRtoBR_Move2_offset(FRtoBR_Move_reg_2047),
    .Slice_Twist_Prun2_offset(Slice_Twist_Prun_reg_2007),
    .Slice_Flip_Prun2_offset(Slice_Flip_Prun_reg_2002),
    .URFtoDLF_Move2_offset(URFtoDLF_Move_reg_2042),
    .URtoDF_Move2_offset(URtoDF_Move_reg_2037),
    .URtoUL_Move2_offset(URtoUL_Move_reg_2032),
    .UBtoDF_Move2_offset(UBtoDF_Move_reg_2027),
    .MergeURtoULandUBtoDF2_offset(MergeURtoULandUBtoDF_reg_2022),
    .Slice_URFtoDLF_Parity_Prun2_offset(Slice_URFtoDLF_Parit_reg_2017),
    .Slice_URtoDF_Parity_Prun2_offset(Slice_URtoDF_Parity_s_reg_2012),
    .a_i(a),
    .a_o(grp_blockP1_fu_1276_a_o),
    .a_o_ap_vld(grp_blockP1_fu_1276_a_o_ap_vld)
);

get_coordcube grp_get_coordcube_fu_1441(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_get_coordcube_fu_1441_ap_start),
    .ap_done(grp_get_coordcube_fu_1441_ap_done),
    .ap_idle(grp_get_coordcube_fu_1441_ap_idle),
    .ap_ready(grp_get_coordcube_fu_1441_ap_ready),
    .cubiecube_0_cp_address0(grp_get_coordcube_fu_1441_cubiecube_0_cp_address0),
    .cubiecube_0_cp_ce0(grp_get_coordcube_fu_1441_cubiecube_0_cp_ce0),
    .cubiecube_0_cp_q0(ccRet_cp_0_q0),
    .cubiecube_0_co_address0(grp_get_coordcube_fu_1441_cubiecube_0_co_address0),
    .cubiecube_0_co_ce0(grp_get_coordcube_fu_1441_cubiecube_0_co_ce0),
    .cubiecube_0_co_q0(ccRet_co_0_q0),
    .cubiecube_0_ep_address0(grp_get_coordcube_fu_1441_cubiecube_0_ep_address0),
    .cubiecube_0_ep_ce0(grp_get_coordcube_fu_1441_cubiecube_0_ep_ce0),
    .cubiecube_0_ep_q0(ccRet_ep_0_q0),
    .cubiecube_0_eo_address0(grp_get_coordcube_fu_1441_cubiecube_0_eo_address0),
    .cubiecube_0_eo_ce0(grp_get_coordcube_fu_1441_cubiecube_0_eo_ce0),
    .cubiecube_0_eo_q0(ccRet_eo_0_q0),
    .result_twist_0(grp_get_coordcube_fu_1441_result_twist_0),
    .result_twist_0_ap_vld(grp_get_coordcube_fu_1441_result_twist_0_ap_vld),
    .result_flip_0(grp_get_coordcube_fu_1441_result_flip_0),
    .result_flip_0_ap_vld(grp_get_coordcube_fu_1441_result_flip_0_ap_vld),
    .result_parity_0(grp_get_coordcube_fu_1441_result_parity_0),
    .result_parity_0_ap_vld(grp_get_coordcube_fu_1441_result_parity_0_ap_vld),
    .result_FRtoBR_0(grp_get_coordcube_fu_1441_result_FRtoBR_0),
    .result_FRtoBR_0_ap_vld(grp_get_coordcube_fu_1441_result_FRtoBR_0_ap_vld),
    .result_URFtoDLF_0(grp_get_coordcube_fu_1441_result_URFtoDLF_0),
    .result_URFtoDLF_0_ap_vld(grp_get_coordcube_fu_1441_result_URFtoDLF_0_ap_vld),
    .result_URtoUL_0(grp_get_coordcube_fu_1441_result_URtoUL_0),
    .result_URtoUL_0_ap_vld(grp_get_coordcube_fu_1441_result_URtoUL_0_ap_vld),
    .result_UBtoDF_0(grp_get_coordcube_fu_1441_result_UBtoDF_0),
    .result_UBtoDF_0_ap_vld(grp_get_coordcube_fu_1441_result_UBtoDF_0_ap_vld)
);

toCubieCube grp_toCubieCube_fu_1467(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_toCubieCube_fu_1467_ap_start),
    .ap_done(grp_toCubieCube_fu_1467_ap_done),
    .ap_idle(grp_toCubieCube_fu_1467_ap_idle),
    .ap_ready(grp_toCubieCube_fu_1467_ap_ready),
    .facecube_0_f_address0(grp_toCubieCube_fu_1467_facecube_0_f_address0),
    .facecube_0_f_ce0(grp_toCubieCube_fu_1467_facecube_0_f_ce0),
    .facecube_0_f_q0(res_f_0_q0),
    .facecube_0_f_address1(grp_toCubieCube_fu_1467_facecube_0_f_address1),
    .facecube_0_f_ce1(grp_toCubieCube_fu_1467_facecube_0_f_ce1),
    .facecube_0_f_q1(res_f_0_q1),
    .ccRet_cp_0_address0(grp_toCubieCube_fu_1467_ccRet_cp_0_address0),
    .ccRet_cp_0_ce0(grp_toCubieCube_fu_1467_ccRet_cp_0_ce0),
    .ccRet_cp_0_we0(grp_toCubieCube_fu_1467_ccRet_cp_0_we0),
    .ccRet_cp_0_d0(grp_toCubieCube_fu_1467_ccRet_cp_0_d0),
    .ccRet_ep_0_address0(grp_toCubieCube_fu_1467_ccRet_ep_0_address0),
    .ccRet_ep_0_ce0(grp_toCubieCube_fu_1467_ccRet_ep_0_ce0),
    .ccRet_ep_0_we0(grp_toCubieCube_fu_1467_ccRet_ep_0_we0),
    .ccRet_ep_0_d0(grp_toCubieCube_fu_1467_ccRet_ep_0_d0),
    .ccRet_co_0_address0(grp_toCubieCube_fu_1467_ccRet_co_0_address0),
    .ccRet_co_0_ce0(grp_toCubieCube_fu_1467_ccRet_co_0_ce0),
    .ccRet_co_0_we0(grp_toCubieCube_fu_1467_ccRet_co_0_we0),
    .ccRet_co_0_d0(grp_toCubieCube_fu_1467_ccRet_co_0_d0),
    .ccRet_eo_0_address0(grp_toCubieCube_fu_1467_ccRet_eo_0_address0),
    .ccRet_eo_0_ce0(grp_toCubieCube_fu_1467_ccRet_eo_0_ce0),
    .ccRet_eo_0_we0(grp_toCubieCube_fu_1467_ccRet_eo_0_we0),
    .ccRet_eo_0_d0(grp_toCubieCube_fu_1467_ccRet_eo_0_d0)
);

verify grp_verify_fu_1495(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_verify_fu_1495_ap_start),
    .ap_done(grp_verify_fu_1495_ap_done),
    .ap_idle(grp_verify_fu_1495_ap_idle),
    .ap_ready(grp_verify_fu_1495_ap_ready),
    .cubiecube_0_cp_address0(grp_verify_fu_1495_cubiecube_0_cp_address0),
    .cubiecube_0_cp_ce0(grp_verify_fu_1495_cubiecube_0_cp_ce0),
    .cubiecube_0_cp_q0(ccRet_cp_0_q0),
    .cubiecube_0_co_address0(grp_verify_fu_1495_cubiecube_0_co_address0),
    .cubiecube_0_co_ce0(grp_verify_fu_1495_cubiecube_0_co_ce0),
    .cubiecube_0_co_q0(ccRet_co_0_q0),
    .cubiecube_0_ep_address0(grp_verify_fu_1495_cubiecube_0_ep_address0),
    .cubiecube_0_ep_ce0(grp_verify_fu_1495_cubiecube_0_ep_ce0),
    .cubiecube_0_ep_q0(ccRet_ep_0_q0),
    .cubiecube_0_eo_address0(grp_verify_fu_1495_cubiecube_0_eo_address0),
    .cubiecube_0_eo_ce0(grp_verify_fu_1495_cubiecube_0_eo_ce0),
    .cubiecube_0_eo_q0(ccRet_eo_0_q0),
    .ap_return(grp_verify_fu_1495_ap_return)
);

get_facecube_fromstr grp_get_facecube_fromstr_fu_1507(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_get_facecube_fromstr_fu_1507_ap_start),
    .ap_done(grp_get_facecube_fromstr_fu_1507_ap_done),
    .ap_idle(grp_get_facecube_fromstr_fu_1507_ap_idle),
    .ap_ready(grp_get_facecube_fromstr_fu_1507_ap_ready),
    .cubeString_address0(grp_get_facecube_fromstr_fu_1507_cubeString_address0),
    .cubeString_ce0(grp_get_facecube_fromstr_fu_1507_cubeString_ce0),
    .cubeString_q0(facelets_q0),
    .res_f_0_address0(grp_get_facecube_fromstr_fu_1507_res_f_0_address0),
    .res_f_0_ce0(grp_get_facecube_fromstr_fu_1507_res_f_0_ce0),
    .res_f_0_we0(grp_get_facecube_fromstr_fu_1507_res_f_0_we0),
    .res_f_0_d0(grp_get_facecube_fromstr_fu_1507_res_f_0_d0)
);

solution_mul_mul_rcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 34 ))
solution_mul_mul_rcU_U378(
    .din0(mul_fu_1989_p0),
    .din1(result_FRtoBR_0),
    .dout(mul_fu_1989_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_blockP1_fu_1276_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state28)) begin
            grp_blockP1_fu_1276_ap_start_reg <= 1'b1;
        end else if ((grp_blockP1_fu_1276_ap_ready == 1'b1)) begin
            grp_blockP1_fu_1276_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_get_coordcube_fu_1441_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state23)) begin
            grp_get_coordcube_fu_1441_ap_start_reg <= 1'b1;
        end else if ((grp_get_coordcube_fu_1441_ap_ready == 1'b1)) begin
            grp_get_coordcube_fu_1441_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_get_facecube_fromstr_fu_1507_ap_start_reg <= 1'b0;
    end else begin
        if (((tmp_71_fu_1832_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
            grp_get_facecube_fromstr_fu_1507_ap_start_reg <= 1'b1;
        end else if ((grp_get_facecube_fromstr_fu_1507_ap_ready == 1'b1)) begin
            grp_get_facecube_fromstr_fu_1507_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_toCubieCube_fu_1467_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state19)) begin
            grp_toCubieCube_fu_1467_ap_start_reg <= 1'b1;
        end else if ((grp_toCubieCube_fu_1467_ap_ready == 1'b1)) begin
            grp_toCubieCube_fu_1467_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_verify_fu_1495_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            grp_verify_fu_1495_ap_start_reg <= 1'b1;
        end else if ((grp_verify_fu_1495_ap_ready == 1'b1)) begin
            grp_verify_fu_1495_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_87_fu_1961_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        a <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state29) & (grp_blockP1_fu_1276_a_o_ap_vld == 1'b1))) begin
        a <= grp_blockP1_fu_1276_a_o;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_48_fu_1663_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        complete_reg_1230 <= 1'd1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        complete_reg_1230 <= complete_1_fu_1809_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_87_reg_2295 == 1'd1) & (tmp_83_reg_2235 == 1'd1) & (tmp_88_fu_1977_p2 == 1'd0) & (complete_reg_1230 == 1'd0) & (tmp_71_reg_2218 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        depthPhase1_reg_1264 <= depthPhase1_1_fu_1983_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        depthPhase1_reg_1264 <= 5'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_complete_phi_fu_1234_p4 == 1'd0) & (exitcond1_fu_1669_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_1_reg_1242 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        i_1_reg_1242 <= i_12_reg_2208;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_1815_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        i_2_reg_1253 <= 3'd0;
    end else if (((tmp_82_fu_1849_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        i_2_reg_1253 <= i_5_reg_2222;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_48_fu_1663_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_1219 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        i_reg_1219 <= i_11_reg_2073;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_48_fu_1663_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        invdar_reg_1208 <= indvarinc_fu_1652_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        invdar_reg_1208 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        FRtoBR_Move_reg_2047 <= {{FRtoBR_Move2[31:1]}};
        MergeURtoULandUBtoDF_reg_2022 <= {{MergeURtoULandUBtoDF2[31:1]}};
        Slice_Flip_Prun_reg_2002 <= {{Slice_Flip_Prun2[31:1]}};
        Slice_Twist_Prun_reg_2007 <= {{Slice_Twist_Prun2[31:1]}};
        Slice_URFtoDLF_Parit_reg_2017 <= {{Slice_URFtoDLF_Parity_Prun2[31:1]}};
        Slice_URtoDF_Parity_s_reg_2012 <= {{Slice_URtoDF_Parity_Prun2[31:1]}};
        UBtoDF_Move_reg_2027 <= {{UBtoDF_Move2[31:1]}};
        URFtoDLF_Move_reg_2042 <= {{URFtoDLF_Move2[31:1]}};
        URtoDF_Move_reg_2037 <= {{URtoDF_Move2[31:1]}};
        URtoUL_Move_reg_2032 <= {{URtoUL_Move2[31:1]}};
        flipMove_reg_2052 <= {{flipMove2[31:1]}};
        maxDepth_read_reg_1997 <= maxDepth;
        twistMove_reg_2057 <= {{twistMove2[31:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        FRtoBR_reg_2239 <= result_FRtoBR_0;
        tmp_89_reg_2244 <= tmp_89_fu_1869_p1;
        tmp_90_reg_2249 <= tmp_90_fu_1872_p1[32'd15];
        tmp_93_reg_2255 <= {{mul_fu_1989_p2[33:21]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        UBtoDF_reg_2285 <= result_UBtoDF_0;
        URFtoDLF_reg_2275 <= result_URFtoDLF_0;
        URtoUL_reg_2280 <= result_URtoUL_0;
        flip_reg_2260 <= result_flip_0;
        slice_reg_2270 <= slice_fu_1936_p3;
        tmp_86_reg_2290 <= tmp_86_fu_1955_p2;
        twist_reg_2265 <= result_twist_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_11_reg_2073 <= i_11_fu_1675_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_12_reg_2208 <= i_12_fu_1821_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        i_5_reg_2222 <= i_5_fu_1838_p2;
        tmp_71_reg_2218 <= tmp_71_fu_1832_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_1527 <= facelets_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (grp_get_coordcube_fu_1441_result_FRtoBR_0_ap_vld == 1'b1))) begin
        result_FRtoBR_0 <= grp_get_coordcube_fu_1441_result_FRtoBR_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (grp_get_coordcube_fu_1441_result_UBtoDF_0_ap_vld == 1'b1))) begin
        result_UBtoDF_0 <= grp_get_coordcube_fu_1441_result_UBtoDF_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (grp_get_coordcube_fu_1441_result_URFtoDLF_0_ap_vld == 1'b1))) begin
        result_URFtoDLF_0 <= grp_get_coordcube_fu_1441_result_URFtoDLF_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (grp_get_coordcube_fu_1441_result_URtoUL_0_ap_vld == 1'b1))) begin
        result_URtoUL_0 <= grp_get_coordcube_fu_1441_result_URtoUL_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (grp_get_coordcube_fu_1441_result_flip_0_ap_vld == 1'b1))) begin
        result_flip_0 <= grp_get_coordcube_fu_1441_result_flip_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (grp_get_coordcube_fu_1441_result_parity_0_ap_vld == 1'b1))) begin
        result_parity_0 <= grp_get_coordcube_fu_1441_result_parity_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (grp_get_coordcube_fu_1441_result_twist_0_ap_vld == 1'b1))) begin
        result_twist_0 <= grp_get_coordcube_fu_1441_result_twist_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp8_reg_2165 <= tmp8_fu_1753_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1669_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_49_reg_2078 <= tmp_49_fu_1681_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_53_reg_2130 <= grp_fu_1515_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_56_reg_2140 <= grp_fu_1515_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_59_reg_2150 <= grp_fu_1515_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_65_reg_2170 <= grp_fu_1515_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_69_reg_2180 <= grp_fu_1515_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_79_reg_2190 <= grp_fu_1515_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_verify_fu_1495_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
        tmp_83_reg_2235 <= tmp_83_fu_1855_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        tmp_87_reg_2295 <= tmp_87_fu_1961_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        CTRL_BUS1_ARVALID = grp_blockP1_fu_1276_m_axi_twistMove2_ARVALID;
    end else begin
        CTRL_BUS1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        CTRL_BUS1_RREADY = grp_blockP1_fu_1276_m_axi_twistMove2_RREADY;
    end else begin
        CTRL_BUS1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        CTRL_BUS2_ARVALID = grp_blockP1_fu_1276_m_axi_flipMove2_ARVALID;
    end else begin
        CTRL_BUS2_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        CTRL_BUS2_RREADY = grp_blockP1_fu_1276_m_axi_flipMove2_RREADY;
    end else begin
        CTRL_BUS2_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        CTRL_BUS3_ARVALID = grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_ARVALID;
    end else begin
        CTRL_BUS3_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        CTRL_BUS3_RREADY = grp_blockP1_fu_1276_m_axi_FRtoBR_Move2_RREADY;
    end else begin
        CTRL_BUS3_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) & ((tmp_88_fu_1977_p2 == 1'd1) | (complete_reg_1230 == 1'd1) | (tmp_71_reg_2218 == 1'd1) | (tmp_87_reg_2295 == 1'd0) | (tmp_83_reg_2235 == 1'd0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) & ((tmp_88_fu_1977_p2 == 1'd1) | (complete_reg_1230 == 1'd1) | (tmp_71_reg_2218 == 1'd1) | (tmp_87_reg_2295 == 1'd0) | (tmp_83_reg_2235 == 1'd0)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ccRet_co_0_address0 = grp_verify_fu_1495_cubiecube_0_co_address0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        ccRet_co_0_address0 = grp_toCubieCube_fu_1467_ccRet_co_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        ccRet_co_0_address0 = grp_get_coordcube_fu_1441_cubiecube_0_co_address0;
    end else begin
        ccRet_co_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ccRet_co_0_ce0 = grp_verify_fu_1495_cubiecube_0_co_ce0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        ccRet_co_0_ce0 = grp_toCubieCube_fu_1467_ccRet_co_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        ccRet_co_0_ce0 = grp_get_coordcube_fu_1441_cubiecube_0_co_ce0;
    end else begin
        ccRet_co_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ccRet_co_0_we0 = grp_toCubieCube_fu_1467_ccRet_co_0_we0;
    end else begin
        ccRet_co_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ccRet_cp_0_address0 = grp_verify_fu_1495_cubiecube_0_cp_address0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        ccRet_cp_0_address0 = grp_toCubieCube_fu_1467_ccRet_cp_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        ccRet_cp_0_address0 = grp_get_coordcube_fu_1441_cubiecube_0_cp_address0;
    end else begin
        ccRet_cp_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ccRet_cp_0_ce0 = grp_verify_fu_1495_cubiecube_0_cp_ce0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        ccRet_cp_0_ce0 = grp_toCubieCube_fu_1467_ccRet_cp_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        ccRet_cp_0_ce0 = grp_get_coordcube_fu_1441_cubiecube_0_cp_ce0;
    end else begin
        ccRet_cp_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ccRet_cp_0_we0 = grp_toCubieCube_fu_1467_ccRet_cp_0_we0;
    end else begin
        ccRet_cp_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ccRet_eo_0_address0 = grp_verify_fu_1495_cubiecube_0_eo_address0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        ccRet_eo_0_address0 = grp_toCubieCube_fu_1467_ccRet_eo_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        ccRet_eo_0_address0 = grp_get_coordcube_fu_1441_cubiecube_0_eo_address0;
    end else begin
        ccRet_eo_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ccRet_eo_0_ce0 = grp_verify_fu_1495_cubiecube_0_eo_ce0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        ccRet_eo_0_ce0 = grp_toCubieCube_fu_1467_ccRet_eo_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        ccRet_eo_0_ce0 = grp_get_coordcube_fu_1441_cubiecube_0_eo_ce0;
    end else begin
        ccRet_eo_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ccRet_eo_0_we0 = grp_toCubieCube_fu_1467_ccRet_eo_0_we0;
    end else begin
        ccRet_eo_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ccRet_ep_0_address0 = grp_verify_fu_1495_cubiecube_0_ep_address0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        ccRet_ep_0_address0 = grp_toCubieCube_fu_1467_ccRet_ep_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        ccRet_ep_0_address0 = grp_get_coordcube_fu_1441_cubiecube_0_ep_address0;
    end else begin
        ccRet_ep_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        ccRet_ep_0_ce0 = grp_verify_fu_1495_cubiecube_0_ep_ce0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        ccRet_ep_0_ce0 = grp_toCubieCube_fu_1467_ccRet_ep_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        ccRet_ep_0_ce0 = grp_get_coordcube_fu_1441_cubiecube_0_ep_ce0;
    end else begin
        ccRet_ep_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ccRet_ep_0_we0 = grp_toCubieCube_fu_1467_ccRet_ep_0_we0;
    end else begin
        ccRet_ep_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        count_address0 = tmp_81_fu_1844_p1;
    end else if ((((facelets_q0 == 8'd85) & (1'b1 == ap_CS_fsm_state14)) | ((reg_1527 == 8'd85) & (1'b1 == ap_CS_fsm_state15)))) begin
        count_address0 = 64'd0;
    end else if ((((facelets_q0 == 8'd82) & (1'b1 == ap_CS_fsm_state14)) | ((reg_1527 == 8'd82) & (1'b1 == ap_CS_fsm_state15)))) begin
        count_address0 = 64'd1;
    end else if ((((facelets_q0 == 8'd70) & (1'b1 == ap_CS_fsm_state14)) | ((reg_1527 == 8'd70) & (1'b1 == ap_CS_fsm_state15)))) begin
        count_address0 = 64'd2;
    end else if ((((facelets_q0 == 8'd68) & (1'b1 == ap_CS_fsm_state14)) | ((reg_1527 == 8'd68) & (1'b1 == ap_CS_fsm_state15)))) begin
        count_address0 = 64'd3;
    end else if ((((facelets_q0 == 8'd76) & (1'b1 == ap_CS_fsm_state14)) | ((reg_1527 == 8'd76) & (1'b1 == ap_CS_fsm_state15)))) begin
        count_address0 = 64'd4;
    end else if ((((facelets_q0 == 8'd66) & (1'b1 == ap_CS_fsm_state14)) | ((reg_1527 == 8'd66) & (1'b1 == ap_CS_fsm_state15)))) begin
        count_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        count_address0 = tmp_s_fu_1658_p1;
    end else begin
        count_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state2) | ((facelets_q0 == 8'd85) & (1'b1 == ap_CS_fsm_state14)) | ((facelets_q0 == 8'd82) & (1'b1 == ap_CS_fsm_state14)) | ((facelets_q0 == 8'd70) & (1'b1 == ap_CS_fsm_state14)) | ((facelets_q0 == 8'd68) & (1'b1 == ap_CS_fsm_state14)) | ((facelets_q0 == 8'd76) & (1'b1 == ap_CS_fsm_state14)) | ((facelets_q0 == 8'd66) & (1'b1 == ap_CS_fsm_state14)) | ((reg_1527 == 8'd85) & (1'b1 == ap_CS_fsm_state15)) | ((reg_1527 == 8'd82) & (1'b1 == ap_CS_fsm_state15)) | ((reg_1527 == 8'd70) & (1'b1 == ap_CS_fsm_state15)) | ((reg_1527 == 8'd68) & (1'b1 == ap_CS_fsm_state15)) | ((reg_1527 == 8'd76) & (1'b1 == ap_CS_fsm_state15)) | ((reg_1527 == 8'd66) & (1'b1 == ap_CS_fsm_state15)))) begin
        count_ce0 = 1'b1;
    end else begin
        count_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((reg_1527 == 8'd85) & (1'b1 == ap_CS_fsm_state15)) | ((reg_1527 == 8'd82) & (1'b1 == ap_CS_fsm_state15)) | ((reg_1527 == 8'd70) & (1'b1 == ap_CS_fsm_state15)) | ((reg_1527 == 8'd68) & (1'b1 == ap_CS_fsm_state15)) | ((reg_1527 == 8'd76) & (1'b1 == ap_CS_fsm_state15)) | ((reg_1527 == 8'd66) & (1'b1 == ap_CS_fsm_state15)))) begin
        count_d0 = grp_fu_1520_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        count_d0 = 32'd0;
    end else begin
        count_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((reg_1527 == 8'd85) & (1'b1 == ap_CS_fsm_state15)) | ((reg_1527 == 8'd82) & (1'b1 == ap_CS_fsm_state15)) | ((reg_1527 == 8'd70) & (1'b1 == ap_CS_fsm_state15)) | ((reg_1527 == 8'd68) & (1'b1 == ap_CS_fsm_state15)) | ((reg_1527 == 8'd76) & (1'b1 == ap_CS_fsm_state15)) | ((reg_1527 == 8'd66) & (1'b1 == ap_CS_fsm_state15)))) begin
        count_we0 = 1'b1;
    end else begin
        count_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        encode_length = 8'd0;
    end else if (((grp_blockP1_fu_1276_encode_length_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
        encode_length = grp_blockP1_fu_1276_encode_length;
    end else begin
        encode_length = 'bx;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        encode_length_ap_vld = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        encode_length_ap_vld = grp_blockP1_fu_1276_encode_length_ap_vld;
    end else begin
        encode_length_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        facelets_address0 = tmp_66_fu_1827_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        facelets_address0 = tmp_84_fu_1784_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        facelets_address0 = tmp_78_fu_1774_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        facelets_address0 = tmp_68_fu_1764_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        facelets_address0 = tmp_64_fu_1739_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        facelets_address0 = tmp_61_fu_1729_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        facelets_address0 = tmp_58_fu_1719_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        facelets_address0 = tmp_55_fu_1709_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        facelets_address0 = tmp_52_fu_1699_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        facelets_address0 = tmp_50_fu_1689_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        facelets_address0 = grp_get_facecube_fromstr_fu_1507_cubeString_address0;
    end else begin
        facelets_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4))) begin
        facelets_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        facelets_ce0 = grp_get_facecube_fromstr_fu_1507_cubeString_ce0;
    end else begin
        facelets_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        res_f_0_address0 = grp_get_facecube_fromstr_fu_1507_res_f_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        res_f_0_address0 = grp_toCubieCube_fu_1467_facecube_0_f_address0;
    end else begin
        res_f_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        res_f_0_ce0 = grp_get_facecube_fromstr_fu_1507_res_f_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        res_f_0_ce0 = grp_toCubieCube_fu_1467_facecube_0_f_ce0;
    end else begin
        res_f_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        res_f_0_ce1 = grp_toCubieCube_fu_1467_facecube_0_f_ce1;
    end else begin
        res_f_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        res_f_0_we0 = grp_get_facecube_fromstr_fu_1507_res_f_0_we0;
    end else begin
        res_f_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_verify_fu_1495_ap_done == 1'b1) & (tmp_83_fu_1855_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22)) | ((tmp_82_fu_1849_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        unsolvable = 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        unsolvable = 1'd0;
    end else begin
        unsolvable = 'bx;
    end
end

always @ (*) begin
    if ((((grp_verify_fu_1495_ap_done == 1'b1) & (tmp_83_fu_1855_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_82_fu_1849_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        unsolvable_ap_vld = 1'b1;
    end else begin
        unsolvable_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_48_fu_1663_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((ap_phi_mux_complete_phi_fu_1234_p4 == 1'd0) & (exitcond1_fu_1669_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else if (((ap_phi_mux_complete_phi_fu_1234_p4 == 1'd1) & (exitcond1_fu_1669_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state13 : begin
            if (((exitcond_fu_1815_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state16 : begin
            if (((tmp_71_fu_1832_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((tmp_82_fu_1849_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (grp_get_facecube_fromstr_fu_1507_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (grp_toCubieCube_fu_1467_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((grp_verify_fu_1495_ap_done == 1'b1) & (tmp_83_fu_1855_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else if (((grp_verify_fu_1495_ap_done == 1'b1) & (tmp_83_fu_1855_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (grp_get_coordcube_fu_1441_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((tmp_87_fu_1961_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((grp_blockP1_fu_1276_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & ((tmp_88_fu_1977_p2 == 1'd1) | (complete_reg_1230 == 1'd1) | (tmp_71_reg_2218 == 1'd1) | (tmp_87_reg_2295 == 1'd0) | (tmp_83_reg_2235 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_phi_mux_complete_phi_fu_1234_p4 = complete_reg_1230;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign complete_1_fu_1809_p2 = (tmp_21_fu_1804_p2 & complete_reg_1230);

assign depthPhase1_1_fu_1983_p2 = (depthPhase1_reg_1264 + 5'd1);

assign exitcond1_fu_1669_p2 = ((i_reg_1219 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond_fu_1815_p2 = ((i_1_reg_1242 == 6'd54) ? 1'b1 : 1'b0);

assign grp_blockP1_fu_1276_ap_start = grp_blockP1_fu_1276_ap_start_reg;

assign grp_blockP1_fu_1276_parity = tmp_86_reg_2290;

assign grp_fu_1515_p2 = ((reg_1527 == facelets_q0) ? 1'b1 : 1'b0);

assign grp_fu_1520_p2 = (count_q0 + 32'd1);

assign grp_get_coordcube_fu_1441_ap_start = grp_get_coordcube_fu_1441_ap_start_reg;

assign grp_get_facecube_fromstr_fu_1507_ap_start = grp_get_facecube_fromstr_fu_1507_ap_start_reg;

assign grp_toCubieCube_fu_1467_ap_start = grp_toCubieCube_fu_1467_ap_start_reg;

assign grp_verify_fu_1495_ap_start = grp_verify_fu_1495_ap_start_reg;

assign i_11_fu_1675_p2 = (i_reg_1219 + 3'd1);

assign i_12_fu_1821_p2 = (i_1_reg_1242 + 6'd1);

assign i_5_fu_1838_p2 = (i_2_reg_1253 + 3'd1);

assign indvarinc_fu_1652_p2 = (invdar_reg_1208 + 3'd1);

assign mul_fu_1989_p0 = 34'd87382;

assign neg_mul_fu_1901_p2 = (33'd0 - tmp_89_reg_2244);

assign neg_ti_fu_1930_p2 = (16'd0 - tmp_95_fu_1923_p3);

assign slice_fu_1936_p3 = ((tmp_90_reg_2249[0:0] === 1'b1) ? neg_ti_fu_1930_p2 : tmp_94_fu_1920_p1);

assign tmp10_fu_1748_p2 = (tmp_59_reg_2150 & grp_fu_1515_p2);

assign tmp11_fu_1798_p2 = (tmp13_fu_1793_p2 & tmp12_fu_1789_p2);

assign tmp12_fu_1789_p2 = (tmp_69_reg_2180 & tmp_65_reg_2170);

assign tmp13_fu_1793_p2 = (tmp_79_reg_2190 & grp_fu_1515_p2);

assign tmp8_fu_1753_p2 = (tmp9_fu_1744_p2 & tmp10_fu_1748_p2);

assign tmp9_fu_1744_p2 = (tmp_56_reg_2140 & tmp_53_reg_2130);

assign tmp_21_fu_1804_p2 = (tmp8_reg_2165 & tmp11_fu_1798_p2);

assign tmp_48_fu_1663_p2 = ((invdar_reg_1208 == 3'd5) ? 1'b1 : 1'b0);

assign tmp_49_fu_1681_p3 = {{i_reg_1219}, {i_reg_1219}};

assign tmp_50_fu_1689_p1 = tmp_49_fu_1681_p3;

assign tmp_51_fu_1694_p2 = (tmp_49_reg_2078 + 6'd1);

assign tmp_52_fu_1699_p1 = tmp_51_fu_1694_p2;

assign tmp_54_fu_1704_p2 = (tmp_49_reg_2078 + 6'd2);

assign tmp_55_fu_1709_p1 = tmp_54_fu_1704_p2;

assign tmp_57_fu_1714_p2 = (tmp_49_reg_2078 + 6'd3);

assign tmp_58_fu_1719_p1 = tmp_57_fu_1714_p2;

assign tmp_60_fu_1724_p2 = (tmp_49_reg_2078 + 6'd4);

assign tmp_61_fu_1729_p1 = tmp_60_fu_1724_p2;

assign tmp_63_fu_1734_p2 = (tmp_49_reg_2078 + 6'd5);

assign tmp_64_fu_1739_p1 = tmp_63_fu_1734_p2;

assign tmp_66_fu_1827_p1 = i_1_reg_1242;

assign tmp_67_fu_1759_p2 = (tmp_49_reg_2078 + 6'd6);

assign tmp_68_fu_1764_p1 = tmp_67_fu_1759_p2;

assign tmp_70_fu_1769_p2 = (tmp_49_reg_2078 + 6'd7);

assign tmp_71_fu_1832_p2 = ((i_2_reg_1253 < 3'd6) ? 1'b1 : 1'b0);

assign tmp_78_fu_1774_p1 = tmp_70_fu_1769_p2;

assign tmp_80_fu_1779_p2 = (tmp_49_reg_2078 + 6'd8);

assign tmp_81_fu_1844_p1 = i_2_reg_1253;

assign tmp_82_fu_1849_p2 = ((count_q0 == 32'd9) ? 1'b1 : 1'b0);

assign tmp_83_fu_1855_p2 = ((grp_verify_fu_1495_ap_return == 4'd0) ? 1'b1 : 1'b0);

assign tmp_84_fu_1784_p1 = tmp_80_fu_1779_p2;

assign tmp_86_fu_1955_p2 = ((result_parity_0 != 16'd0) ? 1'b1 : 1'b0);

assign tmp_87_fu_1961_p2 = ((depthPhase1_reg_1264 < 5'd19) ? 1'b1 : 1'b0);

assign tmp_88_fu_1977_p2 = ((a == 32'd4294967294) ? 1'b1 : 1'b0);

assign tmp_89_fu_1869_p1 = mul_fu_1989_p2[32:0];

assign tmp_90_fu_1872_p1 = result_FRtoBR_0;

assign tmp_91_fu_1906_p4 = {{neg_mul_fu_1901_p2[32:21]}};

assign tmp_92_fu_1916_p1 = $signed(tmp_91_fu_1906_p4);

assign tmp_94_fu_1920_p1 = $signed(tmp_93_reg_2255);

assign tmp_95_fu_1923_p3 = ((tmp_90_reg_2249[0:0] === 1'b1) ? tmp_92_fu_1916_p1 : tmp_94_fu_1920_p1);

assign tmp_s_fu_1658_p1 = invdar_reg_1208;

endmodule //solution
