// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _convert_edge_HH_
#define _convert_edge_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct convert_edge : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<4> > in_r;
    sc_out< sc_lv<4> > ap_return;


    // Module declarations
    convert_edge(sc_module_name name);
    SC_HAS_PROCESS(convert_edge);

    ~convert_edge();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > p_0_reg_34;
    sc_signal< sc_lv<1> > tmp_fu_96_p2;
    sc_signal< sc_lv<1> > tmp_s_fu_102_p2;
    sc_signal< sc_lv<1> > tmp_205_fu_108_p2;
    sc_signal< sc_lv<1> > tmp_206_fu_114_p2;
    sc_signal< sc_lv<1> > tmp_207_fu_120_p2;
    sc_signal< sc_lv<1> > tmp_208_fu_126_p2;
    sc_signal< sc_lv<1> > tmp_209_fu_132_p2;
    sc_signal< sc_lv<1> > tmp_210_fu_138_p2;
    sc_signal< sc_lv<1> > tmp_211_fu_144_p2;
    sc_signal< sc_lv<1> > tmp_212_fu_150_p2;
    sc_signal< sc_lv<1> > tmp_213_fu_156_p2;
    sc_signal< sc_lv<4> > merge_reg_84;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > ap_return_preg;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< bool > ap_condition_46;
    sc_signal< bool > ap_condition_54;
    sc_signal< bool > ap_condition_63;
    sc_signal< bool > ap_condition_73;
    sc_signal< bool > ap_condition_84;
    sc_signal< bool > ap_condition_96;
    sc_signal< bool > ap_condition_109;
    sc_signal< bool > ap_condition_123;
    sc_signal< bool > ap_condition_138;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_state2;
    static const sc_lv<3> ap_ST_fsm_state3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_condition_109();
    void thread_ap_condition_123();
    void thread_ap_condition_138();
    void thread_ap_condition_46();
    void thread_ap_condition_54();
    void thread_ap_condition_63();
    void thread_ap_condition_73();
    void thread_ap_condition_84();
    void thread_ap_condition_96();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_tmp_205_fu_108_p2();
    void thread_tmp_206_fu_114_p2();
    void thread_tmp_207_fu_120_p2();
    void thread_tmp_208_fu_126_p2();
    void thread_tmp_209_fu_132_p2();
    void thread_tmp_210_fu_138_p2();
    void thread_tmp_211_fu_144_p2();
    void thread_tmp_212_fu_150_p2();
    void thread_tmp_213_fu_156_p2();
    void thread_tmp_fu_96_p2();
    void thread_tmp_s_fu_102_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
