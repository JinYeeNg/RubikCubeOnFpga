// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "toCubieCube.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic toCubieCube::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic toCubieCube::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<22> toCubieCube::ap_ST_fsm_state1 = "1";
const sc_lv<22> toCubieCube::ap_ST_fsm_state2 = "10";
const sc_lv<22> toCubieCube::ap_ST_fsm_state3 = "100";
const sc_lv<22> toCubieCube::ap_ST_fsm_state4 = "1000";
const sc_lv<22> toCubieCube::ap_ST_fsm_state5 = "10000";
const sc_lv<22> toCubieCube::ap_ST_fsm_state6 = "100000";
const sc_lv<22> toCubieCube::ap_ST_fsm_state7 = "1000000";
const sc_lv<22> toCubieCube::ap_ST_fsm_state8 = "10000000";
const sc_lv<22> toCubieCube::ap_ST_fsm_state9 = "100000000";
const sc_lv<22> toCubieCube::ap_ST_fsm_state10 = "1000000000";
const sc_lv<22> toCubieCube::ap_ST_fsm_state11 = "10000000000";
const sc_lv<22> toCubieCube::ap_ST_fsm_state12 = "100000000000";
const sc_lv<22> toCubieCube::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<22> toCubieCube::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<22> toCubieCube::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<22> toCubieCube::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<22> toCubieCube::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<22> toCubieCube::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<22> toCubieCube::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<22> toCubieCube::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<22> toCubieCube::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<22> toCubieCube::ap_ST_fsm_state22 = "1000000000000000000000";
const bool toCubieCube::ap_const_boolean_1 = true;
const sc_lv<32> toCubieCube::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> toCubieCube::ap_const_lv32_8 = "1000";
const sc_lv<32> toCubieCube::ap_const_lv32_F = "1111";
const sc_lv<32> toCubieCube::ap_const_lv32_1 = "1";
const sc_lv<32> toCubieCube::ap_const_lv32_2 = "10";
const sc_lv<32> toCubieCube::ap_const_lv32_3 = "11";
const sc_lv<1> toCubieCube::ap_const_lv1_0 = "0";
const sc_lv<32> toCubieCube::ap_const_lv32_4 = "100";
const sc_lv<32> toCubieCube::ap_const_lv32_5 = "101";
const sc_lv<32> toCubieCube::ap_const_lv32_6 = "110";
const sc_lv<1> toCubieCube::ap_const_lv1_1 = "1";
const sc_lv<32> toCubieCube::ap_const_lv32_7 = "111";
const sc_lv<32> toCubieCube::ap_const_lv32_9 = "1001";
const sc_lv<32> toCubieCube::ap_const_lv32_A = "1010";
const sc_lv<32> toCubieCube::ap_const_lv32_B = "1011";
const sc_lv<32> toCubieCube::ap_const_lv32_D = "1101";
const sc_lv<32> toCubieCube::ap_const_lv32_E = "1110";
const sc_lv<32> toCubieCube::ap_const_lv32_10 = "10000";
const sc_lv<32> toCubieCube::ap_const_lv32_11 = "10001";
const sc_lv<32> toCubieCube::ap_const_lv32_12 = "10010";
const sc_lv<4> toCubieCube::ap_const_lv4_0 = "0000";
const sc_lv<32> toCubieCube::ap_const_lv32_C = "1100";
const sc_lv<2> toCubieCube::ap_const_lv2_0 = "00";
const sc_lv<32> toCubieCube::ap_const_lv32_14 = "10100";
const bool toCubieCube::ap_const_boolean_0 = false;
const sc_lv<32> toCubieCube::ap_const_lv32_13 = "10011";
const sc_lv<32> toCubieCube::ap_const_lv32_15 = "10101";
const sc_lv<3> toCubieCube::ap_const_lv3_0 = "000";
const sc_lv<4> toCubieCube::ap_const_lv4_8 = "1000";
const sc_lv<4> toCubieCube::ap_const_lv4_1 = "1";
const sc_lv<4> toCubieCube::ap_const_lv4_C = "1100";
const sc_lv<2> toCubieCube::ap_const_lv2_3 = "11";
const sc_lv<2> toCubieCube::ap_const_lv2_1 = "1";
const sc_lv<3> toCubieCube::ap_const_lv3_3 = "11";
const sc_lv<3> toCubieCube::ap_const_lv3_1 = "1";
const sc_lv<2> toCubieCube::ap_const_lv2_2 = "10";
const sc_lv<3> toCubieCube::ap_const_lv3_2 = "10";
const sc_lv<3> toCubieCube::ap_const_lv3_7 = "111";
const sc_lv<4> toCubieCube::ap_const_lv4_2 = "10";
const sc_lv<4> toCubieCube::ap_const_lv4_3 = "11";
const sc_lv<4> toCubieCube::ap_const_lv4_4 = "100";
const sc_lv<4> toCubieCube::ap_const_lv4_5 = "101";
const sc_lv<4> toCubieCube::ap_const_lv4_6 = "110";
const sc_lv<3> toCubieCube::ap_const_lv3_5 = "101";
const sc_lv<3> toCubieCube::ap_const_lv3_4 = "100";

toCubieCube::toCubieCube(sc_module_name name) : sc_module(name), mVcdFile(0) {
    cornerFacelet_U = new toCubieCube_cornebkb("cornerFacelet_U");
    cornerFacelet_U->clk(ap_clk);
    cornerFacelet_U->reset(ap_rst);
    cornerFacelet_U->address0(cornerFacelet_address0);
    cornerFacelet_U->ce0(cornerFacelet_ce0);
    cornerFacelet_U->q0(cornerFacelet_q0);
    cornerFacelet_U->address1(cornerFacelet_address1);
    cornerFacelet_U->ce1(cornerFacelet_ce1);
    cornerFacelet_U->q1(cornerFacelet_q1);
    cornerColor_1_U = new toCubieCube_cornecud("cornerColor_1_U");
    cornerColor_1_U->clk(ap_clk);
    cornerColor_1_U->reset(ap_rst);
    cornerColor_1_U->address0(cornerColor_1_address0);
    cornerColor_1_U->ce0(cornerColor_1_ce0);
    cornerColor_1_U->q0(cornerColor_1_q0);
    cornerColor_2_U = new toCubieCube_cornedEe("cornerColor_2_U");
    cornerColor_2_U->clk(ap_clk);
    cornerColor_2_U->reset(ap_rst);
    cornerColor_2_U->address0(cornerColor_2_address0);
    cornerColor_2_U->ce0(cornerColor_2_ce0);
    cornerColor_2_U->q0(cornerColor_2_q0);
    edgeFacelet_0_U = new toCubieCube_edgeFeOg("edgeFacelet_0_U");
    edgeFacelet_0_U->clk(ap_clk);
    edgeFacelet_0_U->reset(ap_rst);
    edgeFacelet_0_U->address0(edgeFacelet_0_address0);
    edgeFacelet_0_U->ce0(edgeFacelet_0_ce0);
    edgeFacelet_0_U->q0(edgeFacelet_0_q0);
    edgeFacelet_1_U = new toCubieCube_edgeFfYi("edgeFacelet_1_U");
    edgeFacelet_1_U->clk(ap_clk);
    edgeFacelet_1_U->reset(ap_rst);
    edgeFacelet_1_U->address0(edgeFacelet_1_address0);
    edgeFacelet_1_U->ce0(edgeFacelet_1_ce0);
    edgeFacelet_1_U->q0(edgeFacelet_1_q0);
    edgeColor_0_U = new toCubieCube_edgeCg8j("edgeColor_0_U");
    edgeColor_0_U->clk(ap_clk);
    edgeColor_0_U->reset(ap_rst);
    edgeColor_0_U->address0(edgeColor_0_address0);
    edgeColor_0_U->ce0(edgeColor_0_ce0);
    edgeColor_0_U->q0(edgeColor_0_q0);
    edgeColor_1_U = new toCubieCube_edgeChbi("edgeColor_1_U");
    edgeColor_1_U->clk(ap_clk);
    edgeColor_1_U->reset(ap_rst);
    edgeColor_1_U->address0(edgeColor_1_address0);
    edgeColor_1_U->ce0(edgeColor_1_ce0);
    edgeColor_1_U->q0(edgeColor_1_q0);
    grp_convert_edge_fu_430 = new convert_edge("grp_convert_edge_fu_430");
    grp_convert_edge_fu_430->ap_clk(ap_clk);
    grp_convert_edge_fu_430->ap_rst(ap_rst);
    grp_convert_edge_fu_430->ap_start(grp_convert_edge_fu_430_ap_start);
    grp_convert_edge_fu_430->ap_done(grp_convert_edge_fu_430_ap_done);
    grp_convert_edge_fu_430->ap_idle(grp_convert_edge_fu_430_ap_idle);
    grp_convert_edge_fu_430->ap_ready(grp_convert_edge_fu_430_ap_ready);
    grp_convert_edge_fu_430->in_r(j_1_reg_418);
    grp_convert_edge_fu_430->ap_return(grp_convert_edge_fu_430_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state21_on_subcall_done);
    sensitive << ( grp_convert_edge_fu_430_ap_done );
    sensitive << ( ap_predicate_op213_call_state21 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( exitcond_fu_919_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_predicate_op213_call_state21);
    sensitive << ( tmp_28_reg_1144 );
    sensitive << ( tmp_37_reg_1169 );
    sensitive << ( tmp_40_reg_1178 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( exitcond_fu_919_p2 );

    SC_METHOD(thread_ccRet_co_0_address0);
    sensitive << ( tmp_20_reg_1016 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ccRet_co_0_ce0);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ccRet_co_0_d0);
    sensitive << ( ori_1_reg_1033 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ori_reg_383 );
    sensitive << ( tmp_57_fu_905_p2 );

    SC_METHOD(thread_ccRet_co_0_we0);
    sensitive << ( tmp_44_reg_1091 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_47_fu_687_p2 );

    SC_METHOD(thread_ccRet_cp_0_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_20_reg_1016 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_fu_459_p1 );

    SC_METHOD(thread_ccRet_cp_0_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ccRet_cp_0_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( merge_i_reg_1103 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ccRet_cp_0_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_58_reg_1072 );
    sensitive << ( exitcond1_fu_447_p2 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ccRet_eo_0_addr_gep_fu_341_p3);
    sensitive << ( tmp_22_reg_1116 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_ccRet_eo_0_address0);
    sensitive << ( tmp_22_reg_1116 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ccRet_eo_0_addr_gep_fu_341_p3 );

    SC_METHOD(thread_ccRet_eo_0_ce0);
    sensitive << ( grp_convert_edge_fu_430_ap_done );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_block_state21_on_subcall_done );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_ccRet_eo_0_d0);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_ccRet_eo_0_we0);
    sensitive << ( grp_convert_edge_fu_430_ap_done );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_predicate_op213_call_state21 );
    sensitive << ( ap_block_state21_on_subcall_done );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_ccRet_ep_0_addr_1_gep_fu_333_p3);
    sensitive << ( tmp_22_reg_1116 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_ccRet_ep_0_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_22_reg_1116 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( tmp_s_fu_476_p1 );
    sensitive << ( ccRet_ep_0_addr_1_gep_fu_333_p3 );

    SC_METHOD(thread_ccRet_ep_0_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_convert_edge_fu_430_ap_done );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_block_state21_on_subcall_done );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_ccRet_ep_0_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_convert_edge_fu_430_ap_return );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_ccRet_ep_0_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_convert_edge_fu_430_ap_done );
    sensitive << ( exitcond9_fu_464_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_predicate_op213_call_state21 );
    sensitive << ( ap_block_state21_on_subcall_done );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_cornerColor_1_address0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_43_fu_676_p1 );

    SC_METHOD(thread_cornerColor_1_ce0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_cornerColor_2_address0);
    sensitive << ( tmp_43_reg_1081 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_cornerColor_2_ce0);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_cornerFacelet_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_50_cast_fu_536_p1 );
    sensitive << ( tmp_53_cast_fu_607_p1 );

    SC_METHOD(thread_cornerFacelet_address1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_56_cast_fu_647_p1 );

    SC_METHOD(thread_cornerFacelet_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_cornerFacelet_ce1);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_edgeColor_0_address0);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_36_fu_959_p1 );

    SC_METHOD(thread_edgeColor_0_ce0);
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_edgeColor_1_addr_1_gep_fu_303_p3);
    sensitive << ( tmp_36_reg_1153 );
    sensitive << ( tmp_37_reg_1169 );
    sensitive << ( tmp_40_fu_970_p2 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_edgeColor_1_address0);
    sensitive << ( tmp_36_reg_1153 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( edgeColor_1_addr_1_gep_fu_303_p3 );

    SC_METHOD(thread_edgeColor_1_ce0);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_edgeFacelet_0_address0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_22_fu_931_p1 );

    SC_METHOD(thread_edgeFacelet_0_ce0);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_edgeFacelet_1_address0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_22_fu_931_p1 );

    SC_METHOD(thread_edgeFacelet_1_ce0);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_exitcond1_fu_447_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_350 );

    SC_METHOD(thread_exitcond8_fu_481_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_2_reg_372 );

    SC_METHOD(thread_exitcond9_fu_464_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_1_reg_361 );

    SC_METHOD(thread_exitcond_fu_919_p2);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( i_3_reg_407 );

    SC_METHOD(thread_facecube_0_f_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_27_fu_541_p1 );
    sensitive << ( tmp_32_fu_652_p1 );
    sensitive << ( tmp_24_fu_942_p1 );

    SC_METHOD(thread_facecube_0_f_address1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_38_fu_657_p1 );
    sensitive << ( tmp_23_fu_937_p1 );

    SC_METHOD(thread_facecube_0_f_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_facecube_0_f_ce1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_grp_convert_edge_fu_430_ap_start);
    sensitive << ( grp_convert_edge_fu_430_ap_start_reg );

    SC_METHOD(thread_i_10_fu_487_p2);
    sensitive << ( i_2_reg_372 );

    SC_METHOD(thread_i_4_fu_925_p2);
    sensitive << ( i_3_reg_407 );

    SC_METHOD(thread_i_8_fu_453_p2);
    sensitive << ( i_reg_350 );

    SC_METHOD(thread_i_9_fu_470_p2);
    sensitive << ( i_1_reg_361 );

    SC_METHOD(thread_j_2_fu_670_p2);
    sensitive << ( in_assign_reg_395 );

    SC_METHOD(thread_j_fu_953_p2);
    sensitive << ( j_1_reg_418 );

    SC_METHOD(thread_merge_i_fu_897_p3);
    sensitive << ( sel_tmp14_fu_891_p2 );
    sensitive << ( p_0_i_fu_877_p3 );

    SC_METHOD(thread_or_cond_fu_987_p2);
    sensitive << ( tmp_42_reg_1187 );
    sensitive << ( tmp_41_fu_981_p2 );

    SC_METHOD(thread_ori_1_fu_521_p2);
    sensitive << ( ori_reg_383 );

    SC_METHOD(thread_p_0_i_fu_877_p3);
    sensitive << ( tmp_19_fu_871_p2 );
    sensitive << ( sel_tmp13_fu_863_p3 );
    sensitive << ( sel_tmp9_fu_819_p3 );

    SC_METHOD(thread_sel_tmp10_fu_839_p2);
    sensitive << ( tmp_299_i_fu_717_p2 );
    sensitive << ( sel_tmp8_fu_833_p2 );

    SC_METHOD(thread_sel_tmp11_fu_851_p2);
    sensitive << ( sel_tmp33_demorgan_fu_845_p2 );

    SC_METHOD(thread_sel_tmp12_fu_857_p2);
    sensitive << ( tmp_300_i_fu_723_p2 );
    sensitive << ( sel_tmp11_fu_851_p2 );

    SC_METHOD(thread_sel_tmp13_demorgan_fu_787_p2);
    sensitive << ( sel_tmp6_demorgan_fu_769_p2 );
    sensitive << ( tmp_297_i_fu_705_p2 );

    SC_METHOD(thread_sel_tmp13_fu_863_p3);
    sensitive << ( sel_tmp12_fu_857_p2 );

    SC_METHOD(thread_sel_tmp14_fu_891_p2);
    sensitive << ( sel_tmp33_demorgan_fu_845_p2 );
    sensitive << ( tmp20_fu_885_p2 );

    SC_METHOD(thread_sel_tmp1_fu_735_p2);
    sensitive << ( tmp_i_fu_693_p2 );

    SC_METHOD(thread_sel_tmp22_demorgan_fu_827_p2);
    sensitive << ( sel_tmp13_demorgan_fu_787_p2 );
    sensitive << ( tmp_298_i_fu_711_p2 );

    SC_METHOD(thread_sel_tmp2_fu_741_p2);
    sensitive << ( tmp_i_29_fu_699_p2 );
    sensitive << ( sel_tmp1_fu_735_p2 );

    SC_METHOD(thread_sel_tmp33_demorgan_fu_845_p2);
    sensitive << ( sel_tmp22_demorgan_fu_827_p2 );
    sensitive << ( tmp_299_i_fu_717_p2 );

    SC_METHOD(thread_sel_tmp3_cast_fu_765_p1);
    sensitive << ( sel_tmp3_fu_757_p3 );

    SC_METHOD(thread_sel_tmp3_fu_757_p3);
    sensitive << ( tmp_17_fu_751_p2 );
    sensitive << ( sel_tmp_fu_747_p1 );

    SC_METHOD(thread_sel_tmp4_fu_793_p2);
    sensitive << ( sel_tmp13_demorgan_fu_787_p2 );

    SC_METHOD(thread_sel_tmp5_fu_799_p2);
    sensitive << ( tmp_298_i_fu_711_p2 );
    sensitive << ( sel_tmp4_fu_793_p2 );

    SC_METHOD(thread_sel_tmp6_demorgan_fu_769_p2);
    sensitive << ( tmp_i_fu_693_p2 );
    sensitive << ( tmp_i_29_fu_699_p2 );

    SC_METHOD(thread_sel_tmp6_fu_775_p2);
    sensitive << ( sel_tmp6_demorgan_fu_769_p2 );

    SC_METHOD(thread_sel_tmp7_fu_781_p2);
    sensitive << ( tmp_297_i_fu_705_p2 );
    sensitive << ( sel_tmp6_fu_775_p2 );

    SC_METHOD(thread_sel_tmp8_cast_fu_805_p3);
    sensitive << ( sel_tmp5_fu_799_p2 );

    SC_METHOD(thread_sel_tmp8_fu_833_p2);
    sensitive << ( sel_tmp22_demorgan_fu_827_p2 );

    SC_METHOD(thread_sel_tmp9_fu_819_p3);
    sensitive << ( tmp_18_fu_813_p2 );
    sensitive << ( sel_tmp8_cast_fu_805_p3 );
    sensitive << ( sel_tmp3_cast_fu_765_p1 );

    SC_METHOD(thread_sel_tmp_fu_747_p1);
    sensitive << ( sel_tmp2_fu_741_p2 );

    SC_METHOD(thread_tmp20_fu_885_p2);
    sensitive << ( tmp_300_i_fu_723_p2 );
    sensitive << ( tmp_301_i_fu_729_p2 );

    SC_METHOD(thread_tmp_17_fu_751_p2);
    sensitive << ( tmp_i_fu_693_p2 );
    sensitive << ( sel_tmp2_fu_741_p2 );

    SC_METHOD(thread_tmp_18_fu_813_p2);
    sensitive << ( sel_tmp5_fu_799_p2 );
    sensitive << ( sel_tmp7_fu_781_p2 );

    SC_METHOD(thread_tmp_19_fu_871_p2);
    sensitive << ( sel_tmp12_fu_857_p2 );
    sensitive << ( sel_tmp10_fu_839_p2 );

    SC_METHOD(thread_tmp_20_cast_fu_497_p1);
    sensitive << ( i_2_reg_372 );

    SC_METHOD(thread_tmp_20_fu_493_p1);
    sensitive << ( i_2_reg_372 );

    SC_METHOD(thread_tmp_21_fu_515_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ori_reg_383 );

    SC_METHOD(thread_tmp_22_fu_931_p1);
    sensitive << ( i_3_reg_407 );

    SC_METHOD(thread_tmp_23_fu_937_p1);
    sensitive << ( edgeFacelet_0_q0 );

    SC_METHOD(thread_tmp_24_fu_942_p1);
    sensitive << ( edgeFacelet_1_q0 );

    SC_METHOD(thread_tmp_26_cast_fu_527_p1);
    sensitive << ( ori_reg_383 );

    SC_METHOD(thread_tmp_27_fu_541_p1);
    sensitive << ( cornerFacelet_q0 );

    SC_METHOD(thread_tmp_28_fu_947_p2);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( j_1_reg_418 );

    SC_METHOD(thread_tmp_297_i_fu_705_p2);
    sensitive << ( tmp_44_reg_1091 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_47_fu_687_p2 );
    sensitive << ( in_assign_reg_395 );

    SC_METHOD(thread_tmp_298_i_fu_711_p2);
    sensitive << ( tmp_44_reg_1091 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_47_fu_687_p2 );
    sensitive << ( in_assign_reg_395 );

    SC_METHOD(thread_tmp_299_i_fu_717_p2);
    sensitive << ( tmp_44_reg_1091 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_47_fu_687_p2 );
    sensitive << ( in_assign_reg_395 );

    SC_METHOD(thread_tmp_29_fu_568_p2);
    sensitive << ( tmp_32_cast_fu_564_p1 );

    SC_METHOD(thread_tmp_300_i_fu_723_p2);
    sensitive << ( tmp_44_reg_1091 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_47_fu_687_p2 );
    sensitive << ( in_assign_reg_395 );

    SC_METHOD(thread_tmp_301_i_fu_729_p2);
    sensitive << ( tmp_44_reg_1091 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_47_fu_687_p2 );
    sensitive << ( in_assign_reg_395 );

    SC_METHOD(thread_tmp_30_fu_501_p3);
    sensitive << ( i_2_reg_372 );

    SC_METHOD(thread_tmp_31_cast_fu_598_p1);
    sensitive << ( tmp_51_fu_590_p3 );

    SC_METHOD(thread_tmp_31_fu_509_p2);
    sensitive << ( tmp_30_fu_501_p3 );
    sensitive << ( tmp_20_cast_fu_497_p1 );

    SC_METHOD(thread_tmp_32_cast_fu_564_p1);
    sensitive << ( ori_reg_383 );

    SC_METHOD(thread_tmp_32_fu_652_p1);
    sensitive << ( cornerFacelet_q0 );

    SC_METHOD(thread_tmp_33_fu_612_p2);
    sensitive << ( tmp_32_cast_fu_564_p1 );

    SC_METHOD(thread_tmp_34_fu_531_p2);
    sensitive << ( tmp_31_reg_1022 );
    sensitive << ( tmp_26_cast_fu_527_p1 );

    SC_METHOD(thread_tmp_35_cast_fu_638_p1);
    sensitive << ( tmp_55_fu_630_p3 );

    SC_METHOD(thread_tmp_35_fu_574_p2);
    sensitive << ( tmp_21_reg_1029 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_49_fu_558_p2 );
    sensitive << ( tmp_29_fu_568_p2 );

    SC_METHOD(thread_tmp_36_fu_959_p1);
    sensitive << ( j_1_reg_418 );

    SC_METHOD(thread_tmp_37_fu_964_p2);
    sensitive << ( edgeColor_0_q0 );
    sensitive << ( reg_437 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_tmp_38_fu_657_p1);
    sensitive << ( cornerFacelet_q1 );

    SC_METHOD(thread_tmp_39_fu_546_p2);
    sensitive << ( facecube_0_f_q0 );
    sensitive << ( tmp_21_reg_1029 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tmp_40_fu_970_p2);
    sensitive << ( edgeColor_1_q0 );
    sensitive << ( reg_442 );
    sensitive << ( tmp_37_reg_1169 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_tmp_41_fu_981_p2);
    sensitive << ( edgeColor_1_q0 );
    sensitive << ( reg_437 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_tmp_42_fu_976_p2);
    sensitive << ( reg_442 );
    sensitive << ( edgeColor_0_load_reg_1164 );
    sensitive << ( tmp_37_reg_1169 );
    sensitive << ( tmp_40_fu_970_p2 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_tmp_43_fu_676_p1);
    sensitive << ( in_assign_reg_395 );

    SC_METHOD(thread_tmp_44_fu_681_p2);
    sensitive << ( cornerColor_1_q0 );
    sensitive << ( reg_437 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_tmp_47_fu_687_p2);
    sensitive << ( cornerColor_2_q0 );
    sensitive << ( reg_442 );
    sensitive << ( tmp_44_reg_1091 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_tmp_48_fu_552_p2);
    sensitive << ( facecube_0_f_q0 );
    sensitive << ( tmp_21_reg_1029 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tmp_49_fu_558_p2);
    sensitive << ( tmp_48_fu_552_p2 );
    sensitive << ( tmp_39_fu_546_p2 );

    SC_METHOD(thread_tmp_50_cast_fu_536_p1);
    sensitive << ( tmp_34_fu_531_p2 );

    SC_METHOD(thread_tmp_50_fu_580_p2);
    sensitive << ( ori_reg_383 );

    SC_METHOD(thread_tmp_51_fu_590_p3);
    sensitive << ( tmp_29_fu_568_p2 );
    sensitive << ( tmp_35_fu_574_p2 );
    sensitive << ( tmp_52_cast_fu_586_p1 );

    SC_METHOD(thread_tmp_52_cast_fu_586_p1);
    sensitive << ( tmp_50_fu_580_p2 );

    SC_METHOD(thread_tmp_52_fu_602_p2);
    sensitive << ( tmp_31_reg_1022 );
    sensitive << ( tmp_31_cast_fu_598_p1 );

    SC_METHOD(thread_tmp_53_cast_fu_607_p1);
    sensitive << ( tmp_52_fu_602_p2 );

    SC_METHOD(thread_tmp_53_fu_618_p2);
    sensitive << ( tmp_21_reg_1029 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_49_fu_558_p2 );
    sensitive << ( tmp_33_fu_612_p2 );

    SC_METHOD(thread_tmp_54_fu_624_p2);
    sensitive << ( tmp_32_cast_fu_564_p1 );

    SC_METHOD(thread_tmp_55_fu_630_p3);
    sensitive << ( tmp_33_fu_612_p2 );
    sensitive << ( tmp_53_fu_618_p2 );
    sensitive << ( tmp_54_fu_624_p2 );

    SC_METHOD(thread_tmp_56_cast_fu_647_p1);
    sensitive << ( tmp_56_fu_642_p2 );

    SC_METHOD(thread_tmp_56_fu_642_p2);
    sensitive << ( tmp_31_reg_1022 );
    sensitive << ( tmp_35_cast_fu_638_p1 );

    SC_METHOD(thread_tmp_57_fu_905_p2);
    sensitive << ( tmp_44_reg_1091 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_47_fu_687_p2 );
    sensitive << ( ori_reg_383 );

    SC_METHOD(thread_tmp_58_fu_662_p3);
    sensitive << ( in_assign_reg_395 );

    SC_METHOD(thread_tmp_fu_459_p1);
    sensitive << ( i_reg_350 );

    SC_METHOD(thread_tmp_i_29_fu_699_p2);
    sensitive << ( tmp_44_reg_1091 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_47_fu_687_p2 );
    sensitive << ( in_assign_reg_395 );

    SC_METHOD(thread_tmp_i_fu_693_p2);
    sensitive << ( tmp_44_reg_1091 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_47_fu_687_p2 );
    sensitive << ( in_assign_reg_395 );

    SC_METHOD(thread_tmp_s_fu_476_p1);
    sensitive << ( i_1_reg_361 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond8_fu_481_p2 );
    sensitive << ( tmp_21_fu_515_p2 );
    sensitive << ( tmp_21_reg_1029 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_49_fu_558_p2 );
    sensitive << ( tmp_58_fu_662_p3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_44_reg_1091 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_47_fu_687_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( exitcond_fu_919_p2 );
    sensitive << ( tmp_28_fu_947_p2 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( tmp_37_reg_1169 );
    sensitive << ( tmp_40_fu_970_p2 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( grp_convert_edge_fu_430_ap_done );
    sensitive << ( exitcond1_fu_447_p2 );
    sensitive << ( exitcond9_fu_464_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_block_state21_on_subcall_done );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( or_cond_fu_987_p2 );
    sensitive << ( ap_CS_fsm_state22 );

    ap_CS_fsm = "0000000000000000000001";
    grp_convert_edge_fu_430_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "toCubieCube_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, facecube_0_f_address0, "(port)facecube_0_f_address0");
    sc_trace(mVcdFile, facecube_0_f_ce0, "(port)facecube_0_f_ce0");
    sc_trace(mVcdFile, facecube_0_f_q0, "(port)facecube_0_f_q0");
    sc_trace(mVcdFile, facecube_0_f_address1, "(port)facecube_0_f_address1");
    sc_trace(mVcdFile, facecube_0_f_ce1, "(port)facecube_0_f_ce1");
    sc_trace(mVcdFile, facecube_0_f_q1, "(port)facecube_0_f_q1");
    sc_trace(mVcdFile, ccRet_cp_0_address0, "(port)ccRet_cp_0_address0");
    sc_trace(mVcdFile, ccRet_cp_0_ce0, "(port)ccRet_cp_0_ce0");
    sc_trace(mVcdFile, ccRet_cp_0_we0, "(port)ccRet_cp_0_we0");
    sc_trace(mVcdFile, ccRet_cp_0_d0, "(port)ccRet_cp_0_d0");
    sc_trace(mVcdFile, ccRet_ep_0_address0, "(port)ccRet_ep_0_address0");
    sc_trace(mVcdFile, ccRet_ep_0_ce0, "(port)ccRet_ep_0_ce0");
    sc_trace(mVcdFile, ccRet_ep_0_we0, "(port)ccRet_ep_0_we0");
    sc_trace(mVcdFile, ccRet_ep_0_d0, "(port)ccRet_ep_0_d0");
    sc_trace(mVcdFile, ccRet_co_0_address0, "(port)ccRet_co_0_address0");
    sc_trace(mVcdFile, ccRet_co_0_ce0, "(port)ccRet_co_0_ce0");
    sc_trace(mVcdFile, ccRet_co_0_we0, "(port)ccRet_co_0_we0");
    sc_trace(mVcdFile, ccRet_co_0_d0, "(port)ccRet_co_0_d0");
    sc_trace(mVcdFile, ccRet_eo_0_address0, "(port)ccRet_eo_0_address0");
    sc_trace(mVcdFile, ccRet_eo_0_ce0, "(port)ccRet_eo_0_ce0");
    sc_trace(mVcdFile, ccRet_eo_0_we0, "(port)ccRet_eo_0_we0");
    sc_trace(mVcdFile, ccRet_eo_0_d0, "(port)ccRet_eo_0_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, cornerFacelet_address0, "cornerFacelet_address0");
    sc_trace(mVcdFile, cornerFacelet_ce0, "cornerFacelet_ce0");
    sc_trace(mVcdFile, cornerFacelet_q0, "cornerFacelet_q0");
    sc_trace(mVcdFile, cornerFacelet_address1, "cornerFacelet_address1");
    sc_trace(mVcdFile, cornerFacelet_ce1, "cornerFacelet_ce1");
    sc_trace(mVcdFile, cornerFacelet_q1, "cornerFacelet_q1");
    sc_trace(mVcdFile, cornerColor_1_address0, "cornerColor_1_address0");
    sc_trace(mVcdFile, cornerColor_1_ce0, "cornerColor_1_ce0");
    sc_trace(mVcdFile, cornerColor_1_q0, "cornerColor_1_q0");
    sc_trace(mVcdFile, cornerColor_2_address0, "cornerColor_2_address0");
    sc_trace(mVcdFile, cornerColor_2_ce0, "cornerColor_2_ce0");
    sc_trace(mVcdFile, cornerColor_2_q0, "cornerColor_2_q0");
    sc_trace(mVcdFile, edgeFacelet_0_address0, "edgeFacelet_0_address0");
    sc_trace(mVcdFile, edgeFacelet_0_ce0, "edgeFacelet_0_ce0");
    sc_trace(mVcdFile, edgeFacelet_0_q0, "edgeFacelet_0_q0");
    sc_trace(mVcdFile, edgeFacelet_1_address0, "edgeFacelet_1_address0");
    sc_trace(mVcdFile, edgeFacelet_1_ce0, "edgeFacelet_1_ce0");
    sc_trace(mVcdFile, edgeFacelet_1_q0, "edgeFacelet_1_q0");
    sc_trace(mVcdFile, edgeColor_0_address0, "edgeColor_0_address0");
    sc_trace(mVcdFile, edgeColor_0_ce0, "edgeColor_0_ce0");
    sc_trace(mVcdFile, edgeColor_0_q0, "edgeColor_0_q0");
    sc_trace(mVcdFile, edgeColor_1_address0, "edgeColor_1_address0");
    sc_trace(mVcdFile, edgeColor_1_ce0, "edgeColor_1_ce0");
    sc_trace(mVcdFile, edgeColor_1_q0, "edgeColor_1_q0");
    sc_trace(mVcdFile, reg_437, "reg_437");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, reg_442, "reg_442");
    sc_trace(mVcdFile, i_8_fu_453_p2, "i_8_fu_453_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_9_fu_470_p2, "i_9_fu_470_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_10_fu_487_p2, "i_10_fu_487_p2");
    sc_trace(mVcdFile, i_10_reg_1011, "i_10_reg_1011");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_20_fu_493_p1, "tmp_20_fu_493_p1");
    sc_trace(mVcdFile, tmp_20_reg_1016, "tmp_20_reg_1016");
    sc_trace(mVcdFile, exitcond8_fu_481_p2, "exitcond8_fu_481_p2");
    sc_trace(mVcdFile, tmp_31_fu_509_p2, "tmp_31_fu_509_p2");
    sc_trace(mVcdFile, tmp_31_reg_1022, "tmp_31_reg_1022");
    sc_trace(mVcdFile, tmp_21_fu_515_p2, "tmp_21_fu_515_p2");
    sc_trace(mVcdFile, tmp_21_reg_1029, "tmp_21_reg_1029");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ori_1_fu_521_p2, "ori_1_fu_521_p2");
    sc_trace(mVcdFile, ori_1_reg_1033, "ori_1_reg_1033");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_49_fu_558_p2, "tmp_49_fu_558_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_58_fu_662_p3, "tmp_58_fu_662_p3");
    sc_trace(mVcdFile, tmp_58_reg_1072, "tmp_58_reg_1072");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, j_2_fu_670_p2, "j_2_fu_670_p2");
    sc_trace(mVcdFile, j_2_reg_1076, "j_2_reg_1076");
    sc_trace(mVcdFile, tmp_43_fu_676_p1, "tmp_43_fu_676_p1");
    sc_trace(mVcdFile, tmp_43_reg_1081, "tmp_43_reg_1081");
    sc_trace(mVcdFile, tmp_44_fu_681_p2, "tmp_44_fu_681_p2");
    sc_trace(mVcdFile, tmp_44_reg_1091, "tmp_44_reg_1091");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, merge_i_fu_897_p3, "merge_i_fu_897_p3");
    sc_trace(mVcdFile, merge_i_reg_1103, "merge_i_reg_1103");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tmp_47_fu_687_p2, "tmp_47_fu_687_p2");
    sc_trace(mVcdFile, i_4_fu_925_p2, "i_4_fu_925_p2");
    sc_trace(mVcdFile, i_4_reg_1111, "i_4_reg_1111");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, tmp_22_fu_931_p1, "tmp_22_fu_931_p1");
    sc_trace(mVcdFile, tmp_22_reg_1116, "tmp_22_reg_1116");
    sc_trace(mVcdFile, exitcond_fu_919_p2, "exitcond_fu_919_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, tmp_28_fu_947_p2, "tmp_28_fu_947_p2");
    sc_trace(mVcdFile, tmp_28_reg_1144, "tmp_28_reg_1144");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, j_fu_953_p2, "j_fu_953_p2");
    sc_trace(mVcdFile, j_reg_1148, "j_reg_1148");
    sc_trace(mVcdFile, tmp_36_fu_959_p1, "tmp_36_fu_959_p1");
    sc_trace(mVcdFile, tmp_36_reg_1153, "tmp_36_reg_1153");
    sc_trace(mVcdFile, edgeColor_0_load_reg_1164, "edgeColor_0_load_reg_1164");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, tmp_37_fu_964_p2, "tmp_37_fu_964_p2");
    sc_trace(mVcdFile, tmp_37_reg_1169, "tmp_37_reg_1169");
    sc_trace(mVcdFile, tmp_40_fu_970_p2, "tmp_40_fu_970_p2");
    sc_trace(mVcdFile, tmp_40_reg_1178, "tmp_40_reg_1178");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, edgeColor_1_addr_1_gep_fu_303_p3, "edgeColor_1_addr_1_gep_fu_303_p3");
    sc_trace(mVcdFile, tmp_42_fu_976_p2, "tmp_42_fu_976_p2");
    sc_trace(mVcdFile, tmp_42_reg_1187, "tmp_42_reg_1187");
    sc_trace(mVcdFile, grp_convert_edge_fu_430_ap_start, "grp_convert_edge_fu_430_ap_start");
    sc_trace(mVcdFile, grp_convert_edge_fu_430_ap_done, "grp_convert_edge_fu_430_ap_done");
    sc_trace(mVcdFile, grp_convert_edge_fu_430_ap_idle, "grp_convert_edge_fu_430_ap_idle");
    sc_trace(mVcdFile, grp_convert_edge_fu_430_ap_ready, "grp_convert_edge_fu_430_ap_ready");
    sc_trace(mVcdFile, grp_convert_edge_fu_430_ap_return, "grp_convert_edge_fu_430_ap_return");
    sc_trace(mVcdFile, i_reg_350, "i_reg_350");
    sc_trace(mVcdFile, exitcond1_fu_447_p2, "exitcond1_fu_447_p2");
    sc_trace(mVcdFile, i_1_reg_361, "i_1_reg_361");
    sc_trace(mVcdFile, exitcond9_fu_464_p2, "exitcond9_fu_464_p2");
    sc_trace(mVcdFile, i_2_reg_372, "i_2_reg_372");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ori_reg_383, "ori_reg_383");
    sc_trace(mVcdFile, in_assign_reg_395, "in_assign_reg_395");
    sc_trace(mVcdFile, i_3_reg_407, "i_3_reg_407");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_predicate_op213_call_state21, "ap_predicate_op213_call_state21");
    sc_trace(mVcdFile, ap_block_state21_on_subcall_done, "ap_block_state21_on_subcall_done");
    sc_trace(mVcdFile, j_1_reg_418, "j_1_reg_418");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, or_cond_fu_987_p2, "or_cond_fu_987_p2");
    sc_trace(mVcdFile, grp_convert_edge_fu_430_ap_start_reg, "grp_convert_edge_fu_430_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, tmp_fu_459_p1, "tmp_fu_459_p1");
    sc_trace(mVcdFile, tmp_s_fu_476_p1, "tmp_s_fu_476_p1");
    sc_trace(mVcdFile, tmp_50_cast_fu_536_p1, "tmp_50_cast_fu_536_p1");
    sc_trace(mVcdFile, tmp_27_fu_541_p1, "tmp_27_fu_541_p1");
    sc_trace(mVcdFile, tmp_53_cast_fu_607_p1, "tmp_53_cast_fu_607_p1");
    sc_trace(mVcdFile, tmp_56_cast_fu_647_p1, "tmp_56_cast_fu_647_p1");
    sc_trace(mVcdFile, tmp_32_fu_652_p1, "tmp_32_fu_652_p1");
    sc_trace(mVcdFile, tmp_38_fu_657_p1, "tmp_38_fu_657_p1");
    sc_trace(mVcdFile, tmp_23_fu_937_p1, "tmp_23_fu_937_p1");
    sc_trace(mVcdFile, tmp_24_fu_942_p1, "tmp_24_fu_942_p1");
    sc_trace(mVcdFile, ccRet_ep_0_addr_1_gep_fu_333_p3, "ccRet_ep_0_addr_1_gep_fu_333_p3");
    sc_trace(mVcdFile, ccRet_eo_0_addr_gep_fu_341_p3, "ccRet_eo_0_addr_gep_fu_341_p3");
    sc_trace(mVcdFile, tmp_30_fu_501_p3, "tmp_30_fu_501_p3");
    sc_trace(mVcdFile, tmp_20_cast_fu_497_p1, "tmp_20_cast_fu_497_p1");
    sc_trace(mVcdFile, tmp_26_cast_fu_527_p1, "tmp_26_cast_fu_527_p1");
    sc_trace(mVcdFile, tmp_34_fu_531_p2, "tmp_34_fu_531_p2");
    sc_trace(mVcdFile, tmp_48_fu_552_p2, "tmp_48_fu_552_p2");
    sc_trace(mVcdFile, tmp_39_fu_546_p2, "tmp_39_fu_546_p2");
    sc_trace(mVcdFile, tmp_32_cast_fu_564_p1, "tmp_32_cast_fu_564_p1");
    sc_trace(mVcdFile, tmp_29_fu_568_p2, "tmp_29_fu_568_p2");
    sc_trace(mVcdFile, tmp_50_fu_580_p2, "tmp_50_fu_580_p2");
    sc_trace(mVcdFile, tmp_35_fu_574_p2, "tmp_35_fu_574_p2");
    sc_trace(mVcdFile, tmp_52_cast_fu_586_p1, "tmp_52_cast_fu_586_p1");
    sc_trace(mVcdFile, tmp_51_fu_590_p3, "tmp_51_fu_590_p3");
    sc_trace(mVcdFile, tmp_31_cast_fu_598_p1, "tmp_31_cast_fu_598_p1");
    sc_trace(mVcdFile, tmp_52_fu_602_p2, "tmp_52_fu_602_p2");
    sc_trace(mVcdFile, tmp_33_fu_612_p2, "tmp_33_fu_612_p2");
    sc_trace(mVcdFile, tmp_53_fu_618_p2, "tmp_53_fu_618_p2");
    sc_trace(mVcdFile, tmp_54_fu_624_p2, "tmp_54_fu_624_p2");
    sc_trace(mVcdFile, tmp_55_fu_630_p3, "tmp_55_fu_630_p3");
    sc_trace(mVcdFile, tmp_35_cast_fu_638_p1, "tmp_35_cast_fu_638_p1");
    sc_trace(mVcdFile, tmp_56_fu_642_p2, "tmp_56_fu_642_p2");
    sc_trace(mVcdFile, tmp_i_fu_693_p2, "tmp_i_fu_693_p2");
    sc_trace(mVcdFile, tmp_i_29_fu_699_p2, "tmp_i_29_fu_699_p2");
    sc_trace(mVcdFile, sel_tmp1_fu_735_p2, "sel_tmp1_fu_735_p2");
    sc_trace(mVcdFile, sel_tmp2_fu_741_p2, "sel_tmp2_fu_741_p2");
    sc_trace(mVcdFile, tmp_17_fu_751_p2, "tmp_17_fu_751_p2");
    sc_trace(mVcdFile, sel_tmp_fu_747_p1, "sel_tmp_fu_747_p1");
    sc_trace(mVcdFile, sel_tmp3_fu_757_p3, "sel_tmp3_fu_757_p3");
    sc_trace(mVcdFile, sel_tmp6_demorgan_fu_769_p2, "sel_tmp6_demorgan_fu_769_p2");
    sc_trace(mVcdFile, tmp_297_i_fu_705_p2, "tmp_297_i_fu_705_p2");
    sc_trace(mVcdFile, sel_tmp6_fu_775_p2, "sel_tmp6_fu_775_p2");
    sc_trace(mVcdFile, sel_tmp13_demorgan_fu_787_p2, "sel_tmp13_demorgan_fu_787_p2");
    sc_trace(mVcdFile, tmp_298_i_fu_711_p2, "tmp_298_i_fu_711_p2");
    sc_trace(mVcdFile, sel_tmp4_fu_793_p2, "sel_tmp4_fu_793_p2");
    sc_trace(mVcdFile, sel_tmp5_fu_799_p2, "sel_tmp5_fu_799_p2");
    sc_trace(mVcdFile, sel_tmp7_fu_781_p2, "sel_tmp7_fu_781_p2");
    sc_trace(mVcdFile, tmp_18_fu_813_p2, "tmp_18_fu_813_p2");
    sc_trace(mVcdFile, sel_tmp8_cast_fu_805_p3, "sel_tmp8_cast_fu_805_p3");
    sc_trace(mVcdFile, sel_tmp3_cast_fu_765_p1, "sel_tmp3_cast_fu_765_p1");
    sc_trace(mVcdFile, sel_tmp22_demorgan_fu_827_p2, "sel_tmp22_demorgan_fu_827_p2");
    sc_trace(mVcdFile, tmp_299_i_fu_717_p2, "tmp_299_i_fu_717_p2");
    sc_trace(mVcdFile, sel_tmp8_fu_833_p2, "sel_tmp8_fu_833_p2");
    sc_trace(mVcdFile, sel_tmp33_demorgan_fu_845_p2, "sel_tmp33_demorgan_fu_845_p2");
    sc_trace(mVcdFile, tmp_300_i_fu_723_p2, "tmp_300_i_fu_723_p2");
    sc_trace(mVcdFile, sel_tmp11_fu_851_p2, "sel_tmp11_fu_851_p2");
    sc_trace(mVcdFile, sel_tmp12_fu_857_p2, "sel_tmp12_fu_857_p2");
    sc_trace(mVcdFile, sel_tmp10_fu_839_p2, "sel_tmp10_fu_839_p2");
    sc_trace(mVcdFile, tmp_19_fu_871_p2, "tmp_19_fu_871_p2");
    sc_trace(mVcdFile, sel_tmp13_fu_863_p3, "sel_tmp13_fu_863_p3");
    sc_trace(mVcdFile, sel_tmp9_fu_819_p3, "sel_tmp9_fu_819_p3");
    sc_trace(mVcdFile, tmp_301_i_fu_729_p2, "tmp_301_i_fu_729_p2");
    sc_trace(mVcdFile, tmp20_fu_885_p2, "tmp20_fu_885_p2");
    sc_trace(mVcdFile, sel_tmp14_fu_891_p2, "sel_tmp14_fu_891_p2");
    sc_trace(mVcdFile, p_0_i_fu_877_p3, "p_0_i_fu_877_p3");
    sc_trace(mVcdFile, tmp_57_fu_905_p2, "tmp_57_fu_905_p2");
    sc_trace(mVcdFile, tmp_41_fu_981_p2, "tmp_41_fu_981_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

toCubieCube::~toCubieCube() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete cornerFacelet_U;
    delete cornerColor_1_U;
    delete cornerColor_2_U;
    delete edgeFacelet_0_U;
    delete edgeFacelet_1_U;
    delete edgeColor_0_U;
    delete edgeColor_1_U;
    delete grp_convert_edge_fu_430;
}

void toCubieCube::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_convert_edge_fu_430_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(tmp_40_fu_970_p2.read(), ap_const_lv1_1) && 
              esl_seteq<1,1,1>(tmp_37_reg_1169.read(), ap_const_lv1_1) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) || 
             (esl_seteq<1,1,1>(or_cond_fu_987_p2.read(), ap_const_lv1_1) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())))) {
            grp_convert_edge_fu_430_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_convert_edge_fu_430_ap_ready.read())) {
            grp_convert_edge_fu_430_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(exitcond1_fu_447_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        i_1_reg_361 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(exitcond9_fu_464_p2.read(), ap_const_lv1_0))) {
        i_1_reg_361 = i_9_fu_470_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond9_fu_464_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        i_2_reg_372 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        i_2_reg_372 = i_10_reg_1011.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond8_fu_481_p2.read(), ap_const_lv1_1))) {
        i_3_reg_407 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state21_on_subcall_done.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        i_3_reg_407 = i_4_reg_1111.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_447_p2.read(), ap_const_lv1_0))) {
        i_reg_350 = i_8_fu_453_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        i_reg_350 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         (esl_seteq<1,1,1>(tmp_47_fu_687_p2.read(), ap_const_lv1_0) || 
          esl_seteq<1,1,1>(tmp_44_reg_1091.read(), ap_const_lv1_0)))) {
        in_assign_reg_395 = j_2_reg_1076.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        in_assign_reg_395 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
         esl_seteq<1,1,1>(or_cond_fu_987_p2.read(), ap_const_lv1_0))) {
        j_1_reg_418 = j_reg_1148.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        j_1_reg_418 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(tmp_49_fu_558_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(tmp_21_reg_1029.read(), ap_const_lv1_0))) {
        ori_reg_383 = ori_1_reg_1033.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(exitcond8_fu_481_p2.read(), ap_const_lv1_0))) {
        ori_reg_383 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        reg_437 = facecube_0_f_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        reg_437 = facecube_0_f_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        reg_442 = facecube_0_f_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        reg_442 = facecube_0_f_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        edgeColor_0_load_reg_1164 = edgeColor_0_q0.read();
        tmp_37_reg_1169 = tmp_37_fu_964_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_10_reg_1011 = i_10_fu_487_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        i_4_reg_1111 = i_4_fu_925_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        j_2_reg_1076 = j_2_fu_670_p2.read();
        tmp_58_reg_1072 = in_assign_reg_395.read().range(3, 3);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        j_reg_1148 = j_fu_953_p2.read();
        tmp_28_reg_1144 = tmp_28_fu_947_p2.read();
    }
    if ((esl_seteq<1,1,1>(tmp_47_fu_687_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(tmp_44_reg_1091.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        merge_i_reg_1103 = merge_i_fu_897_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ori_1_reg_1033 = ori_1_fu_521_p2.read();
        tmp_21_reg_1029 = tmp_21_fu_515_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond8_fu_481_p2.read(), ap_const_lv1_0))) {
        tmp_20_reg_1016 = tmp_20_fu_493_p1.read();
        tmp_31_reg_1022 = tmp_31_fu_509_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(exitcond_fu_919_p2.read(), ap_const_lv1_0))) {
        tmp_22_reg_1116 = tmp_22_fu_931_p1.read();
    }
    if ((esl_seteq<1,1,1>(tmp_28_fu_947_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        tmp_36_reg_1153 = tmp_36_fu_959_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(tmp_37_reg_1169.read(), ap_const_lv1_1))) {
        tmp_40_reg_1178 = tmp_40_fu_970_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && (esl_seteq<1,1,1>(tmp_40_fu_970_p2.read(), ap_const_lv1_0) || 
  esl_seteq<1,1,1>(tmp_37_reg_1169.read(), ap_const_lv1_0)))) {
        tmp_42_reg_1187 = tmp_42_fu_976_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(tmp_58_fu_662_p3.read(), ap_const_lv1_0))) {
        tmp_43_reg_1081 = tmp_43_fu_676_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        tmp_44_reg_1091 = tmp_44_fu_681_p2.read();
    }
}

void toCubieCube::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void toCubieCube::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void toCubieCube::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void toCubieCube::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void toCubieCube::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void toCubieCube::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void toCubieCube::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void toCubieCube::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void toCubieCube::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void toCubieCube::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void toCubieCube::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void toCubieCube::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void toCubieCube::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void toCubieCube::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void toCubieCube::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void toCubieCube::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void toCubieCube::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void toCubieCube::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void toCubieCube::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void toCubieCube::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void toCubieCube::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void toCubieCube::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void toCubieCube::thread_ap_block_state21_on_subcall_done() {
    ap_block_state21_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_convert_edge_fu_430_ap_done.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op213_call_state21.read()));
}

void toCubieCube::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(exitcond_fu_919_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void toCubieCube::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void toCubieCube::thread_ap_predicate_op213_call_state21() {
    ap_predicate_op213_call_state21 = ((esl_seteq<1,1,1>(tmp_37_reg_1169.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_28_reg_1144.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_28_reg_1144.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_40_reg_1178.read())));
}

void toCubieCube::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(exitcond_fu_919_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void toCubieCube::thread_ccRet_co_0_address0() {
    ccRet_co_0_address0 =  (sc_lv<3>) (tmp_20_reg_1016.read());
}

void toCubieCube::thread_ccRet_co_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ccRet_co_0_ce0 = ap_const_logic_1;
    } else {
        ccRet_co_0_ce0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_ccRet_co_0_d0() {
    ccRet_co_0_d0 = (!tmp_57_fu_905_p2.read()[0].is_01())? sc_lv<2>(): ((tmp_57_fu_905_p2.read()[0].to_bool())? ori_reg_383.read(): ori_1_reg_1033.read());
}

void toCubieCube::thread_ccRet_co_0_we0() {
    if ((esl_seteq<1,1,1>(tmp_47_fu_687_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(tmp_44_reg_1091.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        ccRet_co_0_we0 = ap_const_logic_1;
    } else {
        ccRet_co_0_we0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_ccRet_cp_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        ccRet_cp_0_address0 =  (sc_lv<3>) (tmp_20_reg_1016.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ccRet_cp_0_address0 =  (sc_lv<3>) (tmp_fu_459_p1.read());
    } else {
        ccRet_cp_0_address0 = "XXX";
    }
}

void toCubieCube::thread_ccRet_cp_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        ccRet_cp_0_ce0 = ap_const_logic_1;
    } else {
        ccRet_cp_0_ce0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_ccRet_cp_0_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        ccRet_cp_0_d0 = merge_i_reg_1103.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ccRet_cp_0_d0 = ap_const_lv3_0;
    } else {
        ccRet_cp_0_d0 = "XXX";
    }
}

void toCubieCube::thread_ccRet_cp_0_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond1_fu_447_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_58_reg_1072.read())))) {
        ccRet_cp_0_we0 = ap_const_logic_1;
    } else {
        ccRet_cp_0_we0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_ccRet_eo_0_addr_gep_fu_341_p3() {
    ccRet_eo_0_addr_gep_fu_341_p3 =  (sc_lv<4>) (tmp_22_reg_1116.read());
}

void toCubieCube::thread_ccRet_eo_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        ccRet_eo_0_address0 = ccRet_eo_0_addr_gep_fu_341_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        ccRet_eo_0_address0 =  (sc_lv<4>) (tmp_22_reg_1116.read());
    } else {
        ccRet_eo_0_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void toCubieCube::thread_ccRet_eo_0_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state21_on_subcall_done.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) || 
         (esl_seteq<1,1,1>(grp_convert_edge_fu_430_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())))) {
        ccRet_eo_0_ce0 = ap_const_logic_1;
    } else {
        ccRet_eo_0_ce0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_ccRet_eo_0_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        ccRet_eo_0_d0 = ap_const_lv1_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        ccRet_eo_0_d0 = ap_const_lv1_1;
    } else {
        ccRet_eo_0_d0 =  (sc_lv<1>) ("X");
    }
}

void toCubieCube::thread_ccRet_eo_0_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op213_call_state21.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state21_on_subcall_done.read())) || 
         (esl_seteq<1,1,1>(grp_convert_edge_fu_430_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())))) {
        ccRet_eo_0_we0 = ap_const_logic_1;
    } else {
        ccRet_eo_0_we0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_ccRet_ep_0_addr_1_gep_fu_333_p3() {
    ccRet_ep_0_addr_1_gep_fu_333_p3 =  (sc_lv<4>) (tmp_22_reg_1116.read());
}

void toCubieCube::thread_ccRet_ep_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        ccRet_ep_0_address0 = ccRet_ep_0_addr_1_gep_fu_333_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        ccRet_ep_0_address0 =  (sc_lv<4>) (tmp_22_reg_1116.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ccRet_ep_0_address0 =  (sc_lv<4>) (tmp_s_fu_476_p1.read());
    } else {
        ccRet_ep_0_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void toCubieCube::thread_ccRet_ep_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state21_on_subcall_done.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) || 
         (esl_seteq<1,1,1>(grp_convert_edge_fu_430_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())))) {
        ccRet_ep_0_ce0 = ap_const_logic_1;
    } else {
        ccRet_ep_0_ce0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_ccRet_ep_0_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        ccRet_ep_0_d0 = grp_convert_edge_fu_430_ap_return.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ccRet_ep_0_d0 = ap_const_lv4_0;
    } else {
        ccRet_ep_0_d0 =  (sc_lv<4>) ("XXXX");
    }
}

void toCubieCube::thread_ccRet_ep_0_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(exitcond9_fu_464_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op213_call_state21.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state21_on_subcall_done.read())) || 
         (esl_seteq<1,1,1>(grp_convert_edge_fu_430_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())))) {
        ccRet_ep_0_we0 = ap_const_logic_1;
    } else {
        ccRet_ep_0_we0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_cornerColor_1_address0() {
    cornerColor_1_address0 =  (sc_lv<3>) (tmp_43_fu_676_p1.read());
}

void toCubieCube::thread_cornerColor_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        cornerColor_1_ce0 = ap_const_logic_1;
    } else {
        cornerColor_1_ce0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_cornerColor_2_address0() {
    cornerColor_2_address0 =  (sc_lv<3>) (tmp_43_reg_1081.read());
}

void toCubieCube::thread_cornerColor_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        cornerColor_2_ce0 = ap_const_logic_1;
    } else {
        cornerColor_2_ce0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_cornerFacelet_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        cornerFacelet_address0 =  (sc_lv<5>) (tmp_53_cast_fu_607_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        cornerFacelet_address0 =  (sc_lv<5>) (tmp_50_cast_fu_536_p1.read());
    } else {
        cornerFacelet_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void toCubieCube::thread_cornerFacelet_address1() {
    cornerFacelet_address1 =  (sc_lv<5>) (tmp_56_cast_fu_647_p1.read());
}

void toCubieCube::thread_cornerFacelet_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        cornerFacelet_ce0 = ap_const_logic_1;
    } else {
        cornerFacelet_ce0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_cornerFacelet_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        cornerFacelet_ce1 = ap_const_logic_1;
    } else {
        cornerFacelet_ce1 = ap_const_logic_0;
    }
}

void toCubieCube::thread_edgeColor_0_address0() {
    edgeColor_0_address0 =  (sc_lv<4>) (tmp_36_fu_959_p1.read());
}

void toCubieCube::thread_edgeColor_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        edgeColor_0_ce0 = ap_const_logic_1;
    } else {
        edgeColor_0_ce0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_edgeColor_1_addr_1_gep_fu_303_p3() {
    edgeColor_1_addr_1_gep_fu_303_p3 =  (sc_lv<4>) (tmp_36_reg_1153.read());
}

void toCubieCube::thread_edgeColor_1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        edgeColor_1_address0 = edgeColor_1_addr_1_gep_fu_303_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        edgeColor_1_address0 =  (sc_lv<4>) (tmp_36_reg_1153.read());
    } else {
        edgeColor_1_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void toCubieCube::thread_edgeColor_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        edgeColor_1_ce0 = ap_const_logic_1;
    } else {
        edgeColor_1_ce0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_edgeFacelet_0_address0() {
    edgeFacelet_0_address0 =  (sc_lv<4>) (tmp_22_fu_931_p1.read());
}

void toCubieCube::thread_edgeFacelet_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        edgeFacelet_0_ce0 = ap_const_logic_1;
    } else {
        edgeFacelet_0_ce0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_edgeFacelet_1_address0() {
    edgeFacelet_1_address0 =  (sc_lv<4>) (tmp_22_fu_931_p1.read());
}

void toCubieCube::thread_edgeFacelet_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        edgeFacelet_1_ce0 = ap_const_logic_1;
    } else {
        edgeFacelet_1_ce0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_exitcond1_fu_447_p2() {
    exitcond1_fu_447_p2 = (!i_reg_350.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_350.read() == ap_const_lv4_8);
}

void toCubieCube::thread_exitcond8_fu_481_p2() {
    exitcond8_fu_481_p2 = (!i_2_reg_372.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_372.read() == ap_const_lv4_8);
}

void toCubieCube::thread_exitcond9_fu_464_p2() {
    exitcond9_fu_464_p2 = (!i_1_reg_361.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_361.read() == ap_const_lv4_C);
}

void toCubieCube::thread_exitcond_fu_919_p2() {
    exitcond_fu_919_p2 = (!i_3_reg_407.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(i_3_reg_407.read() == ap_const_lv4_C);
}

void toCubieCube::thread_facecube_0_f_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        facecube_0_f_address0 =  (sc_lv<6>) (tmp_24_fu_942_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        facecube_0_f_address0 =  (sc_lv<6>) (tmp_32_fu_652_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        facecube_0_f_address0 =  (sc_lv<6>) (tmp_27_fu_541_p1.read());
    } else {
        facecube_0_f_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void toCubieCube::thread_facecube_0_f_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        facecube_0_f_address1 =  (sc_lv<6>) (tmp_23_fu_937_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        facecube_0_f_address1 =  (sc_lv<6>) (tmp_38_fu_657_p1.read());
    } else {
        facecube_0_f_address1 =  (sc_lv<6>) ("XXXXXX");
    }
}

void toCubieCube::thread_facecube_0_f_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        facecube_0_f_ce0 = ap_const_logic_1;
    } else {
        facecube_0_f_ce0 = ap_const_logic_0;
    }
}

void toCubieCube::thread_facecube_0_f_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        facecube_0_f_ce1 = ap_const_logic_1;
    } else {
        facecube_0_f_ce1 = ap_const_logic_0;
    }
}

void toCubieCube::thread_grp_convert_edge_fu_430_ap_start() {
    grp_convert_edge_fu_430_ap_start = grp_convert_edge_fu_430_ap_start_reg.read();
}

void toCubieCube::thread_i_10_fu_487_p2() {
    i_10_fu_487_p2 = (!i_2_reg_372.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_2_reg_372.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void toCubieCube::thread_i_4_fu_925_p2() {
    i_4_fu_925_p2 = (!i_3_reg_407.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_3_reg_407.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void toCubieCube::thread_i_8_fu_453_p2() {
    i_8_fu_453_p2 = (!i_reg_350.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_350.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void toCubieCube::thread_i_9_fu_470_p2() {
    i_9_fu_470_p2 = (!i_1_reg_361.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_1_reg_361.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void toCubieCube::thread_j_2_fu_670_p2() {
    j_2_fu_670_p2 = (!in_assign_reg_395.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(in_assign_reg_395.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void toCubieCube::thread_j_fu_953_p2() {
    j_fu_953_p2 = (!j_1_reg_418.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_1_reg_418.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void toCubieCube::thread_merge_i_fu_897_p3() {
    merge_i_fu_897_p3 = (!sel_tmp14_fu_891_p2.read()[0].is_01())? sc_lv<3>(): ((sel_tmp14_fu_891_p2.read()[0].to_bool())? p_0_i_fu_877_p3.read(): ap_const_lv3_7);
}

void toCubieCube::thread_or_cond_fu_987_p2() {
    or_cond_fu_987_p2 = (tmp_41_fu_981_p2.read() & tmp_42_reg_1187.read());
}

void toCubieCube::thread_ori_1_fu_521_p2() {
    ori_1_fu_521_p2 = (!ori_reg_383.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(ori_reg_383.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void toCubieCube::thread_p_0_i_fu_877_p3() {
    p_0_i_fu_877_p3 = (!tmp_19_fu_871_p2.read()[0].is_01())? sc_lv<3>(): ((tmp_19_fu_871_p2.read()[0].to_bool())? sel_tmp13_fu_863_p3.read(): sel_tmp9_fu_819_p3.read());
}

void toCubieCube::thread_sel_tmp10_fu_839_p2() {
    sel_tmp10_fu_839_p2 = (tmp_299_i_fu_717_p2.read() & sel_tmp8_fu_833_p2.read());
}

void toCubieCube::thread_sel_tmp11_fu_851_p2() {
    sel_tmp11_fu_851_p2 = (sel_tmp33_demorgan_fu_845_p2.read() ^ ap_const_lv1_1);
}

void toCubieCube::thread_sel_tmp12_fu_857_p2() {
    sel_tmp12_fu_857_p2 = (tmp_300_i_fu_723_p2.read() & sel_tmp11_fu_851_p2.read());
}

void toCubieCube::thread_sel_tmp13_demorgan_fu_787_p2() {
    sel_tmp13_demorgan_fu_787_p2 = (sel_tmp6_demorgan_fu_769_p2.read() | tmp_297_i_fu_705_p2.read());
}

void toCubieCube::thread_sel_tmp13_fu_863_p3() {
    sel_tmp13_fu_863_p3 = (!sel_tmp12_fu_857_p2.read()[0].is_01())? sc_lv<3>(): ((sel_tmp12_fu_857_p2.read()[0].to_bool())? ap_const_lv3_5: ap_const_lv3_4);
}

void toCubieCube::thread_sel_tmp14_fu_891_p2() {
    sel_tmp14_fu_891_p2 = (tmp20_fu_885_p2.read() | sel_tmp33_demorgan_fu_845_p2.read());
}

void toCubieCube::thread_sel_tmp1_fu_735_p2() {
    sel_tmp1_fu_735_p2 = (tmp_i_fu_693_p2.read() ^ ap_const_lv1_1);
}

void toCubieCube::thread_sel_tmp22_demorgan_fu_827_p2() {
    sel_tmp22_demorgan_fu_827_p2 = (sel_tmp13_demorgan_fu_787_p2.read() | tmp_298_i_fu_711_p2.read());
}

void toCubieCube::thread_sel_tmp2_fu_741_p2() {
    sel_tmp2_fu_741_p2 = (tmp_i_29_fu_699_p2.read() & sel_tmp1_fu_735_p2.read());
}

void toCubieCube::thread_sel_tmp33_demorgan_fu_845_p2() {
    sel_tmp33_demorgan_fu_845_p2 = (sel_tmp22_demorgan_fu_827_p2.read() | tmp_299_i_fu_717_p2.read());
}

void toCubieCube::thread_sel_tmp3_cast_fu_765_p1() {
    sel_tmp3_cast_fu_765_p1 = esl_sext<3,2>(sel_tmp3_fu_757_p3.read());
}

void toCubieCube::thread_sel_tmp3_fu_757_p3() {
    sel_tmp3_fu_757_p3 = (!tmp_17_fu_751_p2.read()[0].is_01())? sc_lv<2>(): ((tmp_17_fu_751_p2.read()[0].to_bool())? sel_tmp_fu_747_p1.read(): ap_const_lv2_2);
}

void toCubieCube::thread_sel_tmp4_fu_793_p2() {
    sel_tmp4_fu_793_p2 = (sel_tmp13_demorgan_fu_787_p2.read() ^ ap_const_lv1_1);
}

void toCubieCube::thread_sel_tmp5_fu_799_p2() {
    sel_tmp5_fu_799_p2 = (tmp_298_i_fu_711_p2.read() & sel_tmp4_fu_793_p2.read());
}

void toCubieCube::thread_sel_tmp6_demorgan_fu_769_p2() {
    sel_tmp6_demorgan_fu_769_p2 = (tmp_i_fu_693_p2.read() | tmp_i_29_fu_699_p2.read());
}

void toCubieCube::thread_sel_tmp6_fu_775_p2() {
    sel_tmp6_fu_775_p2 = (sel_tmp6_demorgan_fu_769_p2.read() ^ ap_const_lv1_1);
}

void toCubieCube::thread_sel_tmp7_fu_781_p2() {
    sel_tmp7_fu_781_p2 = (tmp_297_i_fu_705_p2.read() & sel_tmp6_fu_775_p2.read());
}

void toCubieCube::thread_sel_tmp8_cast_fu_805_p3() {
    sel_tmp8_cast_fu_805_p3 = (!sel_tmp5_fu_799_p2.read()[0].is_01())? sc_lv<3>(): ((sel_tmp5_fu_799_p2.read()[0].to_bool())? ap_const_lv3_3: ap_const_lv3_2);
}

void toCubieCube::thread_sel_tmp8_fu_833_p2() {
    sel_tmp8_fu_833_p2 = (sel_tmp22_demorgan_fu_827_p2.read() ^ ap_const_lv1_1);
}

void toCubieCube::thread_sel_tmp9_fu_819_p3() {
    sel_tmp9_fu_819_p3 = (!tmp_18_fu_813_p2.read()[0].is_01())? sc_lv<3>(): ((tmp_18_fu_813_p2.read()[0].to_bool())? sel_tmp8_cast_fu_805_p3.read(): sel_tmp3_cast_fu_765_p1.read());
}

void toCubieCube::thread_sel_tmp_fu_747_p1() {
    sel_tmp_fu_747_p1 = esl_zext<2,1>(sel_tmp2_fu_741_p2.read());
}

void toCubieCube::thread_tmp20_fu_885_p2() {
    tmp20_fu_885_p2 = (tmp_300_i_fu_723_p2.read() | tmp_301_i_fu_729_p2.read());
}

void toCubieCube::thread_tmp_17_fu_751_p2() {
    tmp_17_fu_751_p2 = (sel_tmp2_fu_741_p2.read() | tmp_i_fu_693_p2.read());
}

void toCubieCube::thread_tmp_18_fu_813_p2() {
    tmp_18_fu_813_p2 = (sel_tmp5_fu_799_p2.read() | sel_tmp7_fu_781_p2.read());
}

void toCubieCube::thread_tmp_19_fu_871_p2() {
    tmp_19_fu_871_p2 = (sel_tmp12_fu_857_p2.read() | sel_tmp10_fu_839_p2.read());
}

void toCubieCube::thread_tmp_20_cast_fu_497_p1() {
    tmp_20_cast_fu_497_p1 = esl_zext<6,4>(i_2_reg_372.read());
}

void toCubieCube::thread_tmp_20_fu_493_p1() {
    tmp_20_fu_493_p1 = esl_zext<64,4>(i_2_reg_372.read());
}

void toCubieCube::thread_tmp_21_fu_515_p2() {
    tmp_21_fu_515_p2 = (!ori_reg_383.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(ori_reg_383.read() == ap_const_lv2_3);
}

void toCubieCube::thread_tmp_22_fu_931_p1() {
    tmp_22_fu_931_p1 = esl_zext<64,4>(i_3_reg_407.read());
}

void toCubieCube::thread_tmp_23_fu_937_p1() {
    tmp_23_fu_937_p1 = esl_zext<64,6>(edgeFacelet_0_q0.read());
}

void toCubieCube::thread_tmp_24_fu_942_p1() {
    tmp_24_fu_942_p1 = esl_zext<64,6>(edgeFacelet_1_q0.read());
}

void toCubieCube::thread_tmp_26_cast_fu_527_p1() {
    tmp_26_cast_fu_527_p1 = esl_zext<6,2>(ori_reg_383.read());
}

void toCubieCube::thread_tmp_27_fu_541_p1() {
    tmp_27_fu_541_p1 = esl_zext<64,6>(cornerFacelet_q0.read());
}

void toCubieCube::thread_tmp_28_fu_947_p2() {
    tmp_28_fu_947_p2 = (!j_1_reg_418.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): (sc_biguint<4>(j_1_reg_418.read()) < sc_biguint<4>(ap_const_lv4_C));
}

void toCubieCube::thread_tmp_297_i_fu_705_p2() {
    tmp_297_i_fu_705_p2 = (!in_assign_reg_395.read().is_01() || !ap_const_lv4_2.is_01())? sc_lv<1>(): sc_lv<1>(in_assign_reg_395.read() == ap_const_lv4_2);
}

void toCubieCube::thread_tmp_298_i_fu_711_p2() {
    tmp_298_i_fu_711_p2 = (!in_assign_reg_395.read().is_01() || !ap_const_lv4_3.is_01())? sc_lv<1>(): sc_lv<1>(in_assign_reg_395.read() == ap_const_lv4_3);
}

void toCubieCube::thread_tmp_299_i_fu_717_p2() {
    tmp_299_i_fu_717_p2 = (!in_assign_reg_395.read().is_01() || !ap_const_lv4_4.is_01())? sc_lv<1>(): sc_lv<1>(in_assign_reg_395.read() == ap_const_lv4_4);
}

void toCubieCube::thread_tmp_29_fu_568_p2() {
    tmp_29_fu_568_p2 = (!tmp_32_cast_fu_564_p1.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(tmp_32_cast_fu_564_p1.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void toCubieCube::thread_tmp_300_i_fu_723_p2() {
    tmp_300_i_fu_723_p2 = (!in_assign_reg_395.read().is_01() || !ap_const_lv4_5.is_01())? sc_lv<1>(): sc_lv<1>(in_assign_reg_395.read() == ap_const_lv4_5);
}

void toCubieCube::thread_tmp_301_i_fu_729_p2() {
    tmp_301_i_fu_729_p2 = (!in_assign_reg_395.read().is_01() || !ap_const_lv4_6.is_01())? sc_lv<1>(): sc_lv<1>(in_assign_reg_395.read() == ap_const_lv4_6);
}

void toCubieCube::thread_tmp_30_fu_501_p3() {
    tmp_30_fu_501_p3 = esl_concat<4,2>(i_2_reg_372.read(), ap_const_lv2_0);
}

void toCubieCube::thread_tmp_31_cast_fu_598_p1() {
    tmp_31_cast_fu_598_p1 = esl_zext<6,3>(tmp_51_fu_590_p3.read());
}

void toCubieCube::thread_tmp_31_fu_509_p2() {
    tmp_31_fu_509_p2 = (!tmp_30_fu_501_p3.read().is_01() || !tmp_20_cast_fu_497_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_30_fu_501_p3.read()) - sc_biguint<6>(tmp_20_cast_fu_497_p1.read()));
}

void toCubieCube::thread_tmp_32_cast_fu_564_p1() {
    tmp_32_cast_fu_564_p1 = esl_zext<3,2>(ori_reg_383.read());
}

void toCubieCube::thread_tmp_32_fu_652_p1() {
    tmp_32_fu_652_p1 = esl_zext<64,6>(cornerFacelet_q0.read());
}

void toCubieCube::thread_tmp_33_fu_612_p2() {
    tmp_33_fu_612_p2 = (!tmp_32_cast_fu_564_p1.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<3>(): (sc_biguint<3>(tmp_32_cast_fu_564_p1.read()) + sc_biguint<3>(ap_const_lv3_2));
}

void toCubieCube::thread_tmp_34_fu_531_p2() {
    tmp_34_fu_531_p2 = (!tmp_31_reg_1022.read().is_01() || !tmp_26_cast_fu_527_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_31_reg_1022.read()) + sc_biguint<6>(tmp_26_cast_fu_527_p1.read()));
}

void toCubieCube::thread_tmp_35_cast_fu_638_p1() {
    tmp_35_cast_fu_638_p1 = esl_zext<6,3>(tmp_55_fu_630_p3.read());
}

void toCubieCube::thread_tmp_35_fu_574_p2() {
    tmp_35_fu_574_p2 = (!tmp_29_fu_568_p2.read().is_01() || !ap_const_lv3_3.is_01())? sc_lv<1>(): (sc_biguint<3>(tmp_29_fu_568_p2.read()) < sc_biguint<3>(ap_const_lv3_3));
}

void toCubieCube::thread_tmp_36_fu_959_p1() {
    tmp_36_fu_959_p1 = esl_zext<64,4>(j_1_reg_418.read());
}

void toCubieCube::thread_tmp_37_fu_964_p2() {
    tmp_37_fu_964_p2 = (!reg_437.read().is_01() || !edgeColor_0_q0.read().is_01())? sc_lv<1>(): sc_lv<1>(reg_437.read() == edgeColor_0_q0.read());
}

void toCubieCube::thread_tmp_38_fu_657_p1() {
    tmp_38_fu_657_p1 = esl_zext<64,6>(cornerFacelet_q1.read());
}

void toCubieCube::thread_tmp_39_fu_546_p2() {
    tmp_39_fu_546_p2 = (!facecube_0_f_q0.read().is_01() || !ap_const_lv3_3.is_01())? sc_lv<1>(): sc_lv<1>(facecube_0_f_q0.read() == ap_const_lv3_3);
}

void toCubieCube::thread_tmp_40_fu_970_p2() {
    tmp_40_fu_970_p2 = (!reg_442.read().is_01() || !edgeColor_1_q0.read().is_01())? sc_lv<1>(): sc_lv<1>(reg_442.read() == edgeColor_1_q0.read());
}

void toCubieCube::thread_tmp_41_fu_981_p2() {
    tmp_41_fu_981_p2 = (!reg_437.read().is_01() || !edgeColor_1_q0.read().is_01())? sc_lv<1>(): sc_lv<1>(reg_437.read() == edgeColor_1_q0.read());
}

void toCubieCube::thread_tmp_42_fu_976_p2() {
    tmp_42_fu_976_p2 = (!reg_442.read().is_01() || !edgeColor_0_load_reg_1164.read().is_01())? sc_lv<1>(): sc_lv<1>(reg_442.read() == edgeColor_0_load_reg_1164.read());
}

void toCubieCube::thread_tmp_43_fu_676_p1() {
    tmp_43_fu_676_p1 = esl_zext<64,4>(in_assign_reg_395.read());
}

void toCubieCube::thread_tmp_44_fu_681_p2() {
    tmp_44_fu_681_p2 = (!reg_437.read().is_01() || !cornerColor_1_q0.read().is_01())? sc_lv<1>(): sc_lv<1>(reg_437.read() == cornerColor_1_q0.read());
}

void toCubieCube::thread_tmp_47_fu_687_p2() {
    tmp_47_fu_687_p2 = (!reg_442.read().is_01() || !cornerColor_2_q0.read().is_01())? sc_lv<1>(): sc_lv<1>(reg_442.read() == cornerColor_2_q0.read());
}

void toCubieCube::thread_tmp_48_fu_552_p2() {
    tmp_48_fu_552_p2 = (!facecube_0_f_q0.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(facecube_0_f_q0.read() == ap_const_lv3_0);
}

void toCubieCube::thread_tmp_49_fu_558_p2() {
    tmp_49_fu_558_p2 = (tmp_48_fu_552_p2.read() | tmp_39_fu_546_p2.read());
}

void toCubieCube::thread_tmp_50_cast_fu_536_p1() {
    tmp_50_cast_fu_536_p1 = esl_sext<64,6>(tmp_34_fu_531_p2.read());
}

void toCubieCube::thread_tmp_50_fu_580_p2() {
    tmp_50_fu_580_p2 = (ori_reg_383.read() ^ ap_const_lv2_2);
}

void toCubieCube::thread_tmp_51_fu_590_p3() {
    tmp_51_fu_590_p3 = (!tmp_35_fu_574_p2.read()[0].is_01())? sc_lv<3>(): ((tmp_35_fu_574_p2.read()[0].to_bool())? tmp_29_fu_568_p2.read(): tmp_52_cast_fu_586_p1.read());
}

void toCubieCube::thread_tmp_52_cast_fu_586_p1() {
    tmp_52_cast_fu_586_p1 = esl_sext<3,2>(tmp_50_fu_580_p2.read());
}

void toCubieCube::thread_tmp_52_fu_602_p2() {
    tmp_52_fu_602_p2 = (!tmp_31_cast_fu_598_p1.read().is_01() || !tmp_31_reg_1022.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_31_cast_fu_598_p1.read()) + sc_biguint<6>(tmp_31_reg_1022.read()));
}

void toCubieCube::thread_tmp_53_cast_fu_607_p1() {
    tmp_53_cast_fu_607_p1 = esl_sext<64,6>(tmp_52_fu_602_p2.read());
}

void toCubieCube::thread_tmp_53_fu_618_p2() {
    tmp_53_fu_618_p2 = (!tmp_33_fu_612_p2.read().is_01() || !ap_const_lv3_3.is_01())? sc_lv<1>(): (sc_biguint<3>(tmp_33_fu_612_p2.read()) < sc_biguint<3>(ap_const_lv3_3));
}

void toCubieCube::thread_tmp_54_fu_624_p2() {
    tmp_54_fu_624_p2 = (!tmp_32_cast_fu_564_p1.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<3>(): (sc_biguint<3>(tmp_32_cast_fu_564_p1.read()) + sc_bigint<3>(ap_const_lv3_7));
}

void toCubieCube::thread_tmp_55_fu_630_p3() {
    tmp_55_fu_630_p3 = (!tmp_53_fu_618_p2.read()[0].is_01())? sc_lv<3>(): ((tmp_53_fu_618_p2.read()[0].to_bool())? tmp_33_fu_612_p2.read(): tmp_54_fu_624_p2.read());
}

void toCubieCube::thread_tmp_56_cast_fu_647_p1() {
    tmp_56_cast_fu_647_p1 = esl_sext<64,6>(tmp_56_fu_642_p2.read());
}

void toCubieCube::thread_tmp_56_fu_642_p2() {
    tmp_56_fu_642_p2 = (!tmp_35_cast_fu_638_p1.read().is_01() || !tmp_31_reg_1022.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_35_cast_fu_638_p1.read()) + sc_biguint<6>(tmp_31_reg_1022.read()));
}

void toCubieCube::thread_tmp_57_fu_905_p2() {
    tmp_57_fu_905_p2 = (!ori_reg_383.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(ori_reg_383.read() != ap_const_lv2_3);
}

void toCubieCube::thread_tmp_58_fu_662_p3() {
    tmp_58_fu_662_p3 = in_assign_reg_395.read().range(3, 3);
}

void toCubieCube::thread_tmp_fu_459_p1() {
    tmp_fu_459_p1 = esl_zext<64,4>(i_reg_350.read());
}

void toCubieCube::thread_tmp_i_29_fu_699_p2() {
    tmp_i_29_fu_699_p2 = (!in_assign_reg_395.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<1>(): sc_lv<1>(in_assign_reg_395.read() == ap_const_lv4_1);
}

void toCubieCube::thread_tmp_i_fu_693_p2() {
    tmp_i_fu_693_p2 = (!in_assign_reg_395.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(in_assign_reg_395.read() == ap_const_lv4_0);
}

void toCubieCube::thread_tmp_s_fu_476_p1() {
    tmp_s_fu_476_p1 = esl_zext<64,4>(i_1_reg_361.read());
}

void toCubieCube::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(exitcond1_fu_447_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(exitcond9_fu_464_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond8_fu_481_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(tmp_21_fu_515_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && (esl_seteq<1,1,1>(tmp_49_fu_558_p2.read(), ap_const_lv1_1) || 
  esl_seteq<1,1,1>(tmp_21_reg_1029.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(tmp_58_fu_662_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && (esl_seteq<1,1,1>(tmp_47_fu_687_p2.read(), ap_const_lv1_0) || 
  esl_seteq<1,1,1>(tmp_44_reg_1091.read(), ap_const_lv1_0)))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(exitcond_fu_919_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(tmp_28_fu_947_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            if ((esl_seteq<1,1,1>(tmp_40_fu_970_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(tmp_37_reg_1169.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
                ap_NS_fsm = ap_ST_fsm_state22;
            } else {
                ap_NS_fsm = ap_ST_fsm_state20;
            }
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(or_cond_fu_987_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 1048576 : 
            if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state21_on_subcall_done.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state21;
            }
            break;
        case 2097152 : 
            if ((esl_seteq<1,1,1>(grp_convert_edge_fu_430_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<22>) ("XXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

