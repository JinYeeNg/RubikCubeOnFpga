// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _getUBtoDF_HH_
#define _getUBtoDF_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "solution_sdiv_32nkbM.h"

namespace ap_rtl {

struct getUBtoDF : public sc_module {
    // Port declarations 10
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > cubiecube_0_ep_address0;
    sc_out< sc_logic > cubiecube_0_ep_ce0;
    sc_in< sc_lv<4> > cubiecube_0_ep_q0;
    sc_out< sc_lv<16> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    getUBtoDF(sc_module_name name);
    SC_HAS_PROCESS(getUBtoDF);

    ~getUBtoDF();

    sc_trace_file* mVcdFile;

    solution_sdiv_32nkbM<1,36,32,32,32>* solution_sdiv_32nkbM_U43;
    sc_signal< sc_lv<47> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > n_assign_cast4_fu_377_p1;
    sc_signal< sc_lv<32> > n_assign_cast4_reg_751;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > j_10_fu_387_p2;
    sc_signal< sc_lv<4> > j_10_reg_761;
    sc_signal< sc_lv<1> > exitcond_fu_381_p2;
    sc_signal< sc_lv<4> > edge3_0_reg_792;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > or_cond_fu_425_p2;
    sc_signal< sc_lv<1> > or_cond_reg_799;
    sc_signal< sc_lv<32> > x_4_fu_431_p2;
    sc_signal< sc_lv<32> > x_4_reg_803;
    sc_signal< sc_lv<32> > tmp_380_i_fu_475_p2;
    sc_signal< sc_lv<32> > tmp_380_i_reg_811;
    sc_signal< sc_lv<1> > tmp_i_fu_437_p2;
    sc_signal< sc_lv<32> > s_fu_486_p2;
    sc_signal< sc_lv<32> > s_reg_819;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > exitcond_i_fu_481_p2;
    sc_signal< sc_lv<32> > i_28_fu_492_p2;
    sc_signal< sc_lv<32> > i_28_reg_824;
    sc_signal< sc_lv<32> > j_9_fu_503_p2;
    sc_signal< sc_lv<32> > j_9_reg_829;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > grp_fu_498_p2;
    sc_signal< sc_logic > ap_CS_fsm_state40;
    sc_signal< sc_lv<5> > tmp_225_cast_fu_548_p1;
    sc_signal< sc_lv<5> > tmp_225_cast_reg_845;
    sc_signal< sc_logic > ap_CS_fsm_state42;
    sc_signal< sc_lv<1> > tmp_184_fu_536_p2;
    sc_signal< sc_lv<1> > cond2_fu_552_p2;
    sc_signal< sc_lv<1> > cond2_reg_850;
    sc_signal< sc_logic > ap_CS_fsm_state43;
    sc_signal< sc_lv<32> > k_3_fu_612_p2;
    sc_signal< sc_lv<32> > k_3_reg_870;
    sc_signal< sc_lv<2> > tmp_189_fu_618_p2;
    sc_signal< sc_lv<2> > tmp_189_reg_875;
    sc_signal< sc_lv<1> > tmp_188_fu_607_p2;
    sc_signal< sc_lv<2> > j_fu_624_p2;
    sc_signal< sc_lv<2> > j_reg_880;
    sc_signal< sc_lv<2> > i_29_fu_636_p2;
    sc_signal< sc_lv<2> > i_29_reg_888;
    sc_signal< sc_logic > ap_CS_fsm_state44;
    sc_signal< sc_lv<4> > arr_load_phi_i_fu_648_p3;
    sc_signal< sc_lv<1> > exitcond1_fu_630_p2;
    sc_signal< sc_lv<32> > tmp_190_fu_699_p2;
    sc_signal< sc_lv<32> > tmp_190_reg_900;
    sc_signal< sc_logic > ap_CS_fsm_state46;
    sc_signal< sc_lv<2> > indvars_iv_next_fu_705_p2;
    sc_signal< sc_lv<2> > indvars_iv_next_reg_905;
    sc_signal< sc_lv<32> > b_3_fu_711_p2;
    sc_signal< sc_logic > ap_CS_fsm_state47;
    sc_signal< sc_lv<4> > i_reg_107;
    sc_signal< sc_logic > ap_CS_fsm_state41;
    sc_signal< sc_lv<32> > j_i_reg_119;
    sc_signal< sc_lv<32> > i_i_reg_131;
    sc_signal< sc_lv<32> > s_i_reg_140;
    sc_signal< sc_lv<32> > p_0_i_reg_152;
    sc_signal< sc_lv<2> > indvars_iv_reg_164;
    sc_signal< sc_lv<2> > r_assign_reg_176;
    sc_signal< sc_lv<32> > b_reg_188;
    sc_signal< sc_lv<32> > k_reg_200;
    sc_signal< sc_lv<4> > arr2_i_reg_212;
    sc_signal< sc_logic > ap_CS_fsm_state45;
    sc_signal< sc_lv<1> > write_flag_i_reg_222;
    sc_signal< sc_lv<4> > arr1_i_reg_234;
    sc_signal< sc_lv<4> > arr_i_reg_244;
    sc_signal< sc_lv<2> > ap_phi_mux_i_i1_phi_fu_260_p4;
    sc_signal< sc_lv<2> > i_i1_reg_256;
    sc_signal< sc_lv<4> > arr2_i_be_reg_267;
    sc_signal< sc_lv<1> > write_flag_i_be_reg_282;
    sc_signal< sc_lv<4> > arr1_i_be_reg_299;
    sc_signal< sc_lv<4> > arr_i_be_reg_314;
    sc_signal< sc_lv<64> > tmp_s_fu_393_p1;
    sc_signal< sc_lv<4> > edge3_2_6_fu_62;
    sc_signal< sc_lv<2> > tmp_126_fu_516_p1;
    sc_signal< sc_lv<4> > edge3_2_7_fu_66;
    sc_signal< sc_lv<4> > edge3_2_8_fu_70;
    sc_signal< sc_lv<32> > a_1_fu_74;
    sc_signal< sc_lv<32> > a_3_fu_509_p2;
    sc_signal< sc_lv<32> > x_fu_78;
    sc_signal< sc_lv<4> > temp_fu_82;
    sc_signal< sc_lv<4> > edge3_0_2_fu_673_p3;
    sc_signal< sc_lv<4> > edge3_1_3_fu_86;
    sc_signal< sc_lv<4> > edge3_1_fu_666_p3;
    sc_signal< sc_lv<4> > edge3_2_9_fu_90;
    sc_signal< sc_lv<4> > edge3_2_fu_659_p3;
    sc_signal< sc_lv<1> > tmp_182_fu_413_p2;
    sc_signal< sc_lv<1> > tmp_183_fu_419_p2;
    sc_signal< sc_lv<3> > p_lshr_f_i_cast_fu_442_p4;
    sc_signal< sc_lv<32> > tmp_i_cast_fu_452_p1;
    sc_signal< sc_lv<1> > tmp_379_i_fu_456_p2;
    sc_signal< sc_lv<32> > k_assign_3_fu_462_p2;
    sc_signal< sc_lv<32> > p_k_i_fu_467_p3;
    sc_signal< sc_lv<3> > j_1_cast_fu_532_p1;
    sc_signal< sc_lv<3> > tmp_187_fu_542_p2;
    sc_signal< sc_lv<32> > tmp_fu_558_p2;
    sc_signal< sc_lv<32> > tmp_123_fu_564_p2;
    sc_signal< sc_lv<32> > tmp_185_fu_570_p2;
    sc_signal< sc_lv<16> > tmp_125_fu_580_p1;
    sc_signal< sc_lv<16> > tmp_124_fu_576_p1;
    sc_signal< sc_lv<4> > edge3_load_phi_fu_596_p3;
    sc_signal< sc_lv<5> > tmp_228_cast_fu_603_p1;
    sc_signal< sc_lv<1> > cond_i_fu_642_p2;
    sc_signal< sc_lv<2> > tmp_190_fu_699_p0;
    sc_signal< sc_logic > grp_fu_498_ap_start;
    sc_signal< sc_logic > grp_fu_498_ap_done;
    sc_signal< sc_lv<16> > tmp_186_fu_584_p2;
    sc_signal< sc_lv<16> > ap_return_preg;
    sc_signal< sc_lv<47> > ap_NS_fsm;
    sc_signal< sc_lv<32> > tmp_190_fu_699_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<47> ap_ST_fsm_state1;
    static const sc_lv<47> ap_ST_fsm_state2;
    static const sc_lv<47> ap_ST_fsm_state3;
    static const sc_lv<47> ap_ST_fsm_state4;
    static const sc_lv<47> ap_ST_fsm_state5;
    static const sc_lv<47> ap_ST_fsm_state6;
    static const sc_lv<47> ap_ST_fsm_state7;
    static const sc_lv<47> ap_ST_fsm_state8;
    static const sc_lv<47> ap_ST_fsm_state9;
    static const sc_lv<47> ap_ST_fsm_state10;
    static const sc_lv<47> ap_ST_fsm_state11;
    static const sc_lv<47> ap_ST_fsm_state12;
    static const sc_lv<47> ap_ST_fsm_state13;
    static const sc_lv<47> ap_ST_fsm_state14;
    static const sc_lv<47> ap_ST_fsm_state15;
    static const sc_lv<47> ap_ST_fsm_state16;
    static const sc_lv<47> ap_ST_fsm_state17;
    static const sc_lv<47> ap_ST_fsm_state18;
    static const sc_lv<47> ap_ST_fsm_state19;
    static const sc_lv<47> ap_ST_fsm_state20;
    static const sc_lv<47> ap_ST_fsm_state21;
    static const sc_lv<47> ap_ST_fsm_state22;
    static const sc_lv<47> ap_ST_fsm_state23;
    static const sc_lv<47> ap_ST_fsm_state24;
    static const sc_lv<47> ap_ST_fsm_state25;
    static const sc_lv<47> ap_ST_fsm_state26;
    static const sc_lv<47> ap_ST_fsm_state27;
    static const sc_lv<47> ap_ST_fsm_state28;
    static const sc_lv<47> ap_ST_fsm_state29;
    static const sc_lv<47> ap_ST_fsm_state30;
    static const sc_lv<47> ap_ST_fsm_state31;
    static const sc_lv<47> ap_ST_fsm_state32;
    static const sc_lv<47> ap_ST_fsm_state33;
    static const sc_lv<47> ap_ST_fsm_state34;
    static const sc_lv<47> ap_ST_fsm_state35;
    static const sc_lv<47> ap_ST_fsm_state36;
    static const sc_lv<47> ap_ST_fsm_state37;
    static const sc_lv<47> ap_ST_fsm_state38;
    static const sc_lv<47> ap_ST_fsm_state39;
    static const sc_lv<47> ap_ST_fsm_state40;
    static const sc_lv<47> ap_ST_fsm_state41;
    static const sc_lv<47> ap_ST_fsm_state42;
    static const sc_lv<47> ap_ST_fsm_state43;
    static const sc_lv<47> ap_ST_fsm_state44;
    static const sc_lv<47> ap_ST_fsm_state45;
    static const sc_lv<47> ap_ST_fsm_state46;
    static const sc_lv<47> ap_ST_fsm_state47;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<32> ap_const_lv32_2A;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<32> ap_const_lv32_2D;
    static const sc_lv<32> ap_const_lv32_2E;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<32> ap_const_lv32_2C;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<16> ap_const_lv16_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_a_3_fu_509_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state40();
    void thread_ap_CS_fsm_state41();
    void thread_ap_CS_fsm_state42();
    void thread_ap_CS_fsm_state43();
    void thread_ap_CS_fsm_state44();
    void thread_ap_CS_fsm_state45();
    void thread_ap_CS_fsm_state46();
    void thread_ap_CS_fsm_state47();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_i_i1_phi_fu_260_p4();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_arr_load_phi_i_fu_648_p3();
    void thread_b_3_fu_711_p2();
    void thread_cond2_fu_552_p2();
    void thread_cond_i_fu_642_p2();
    void thread_cubiecube_0_ep_address0();
    void thread_cubiecube_0_ep_ce0();
    void thread_edge3_0_2_fu_673_p3();
    void thread_edge3_1_fu_666_p3();
    void thread_edge3_2_fu_659_p3();
    void thread_edge3_load_phi_fu_596_p3();
    void thread_exitcond1_fu_630_p2();
    void thread_exitcond_fu_381_p2();
    void thread_exitcond_i_fu_481_p2();
    void thread_grp_fu_498_ap_start();
    void thread_i_28_fu_492_p2();
    void thread_i_29_fu_636_p2();
    void thread_indvars_iv_next_fu_705_p2();
    void thread_j_10_fu_387_p2();
    void thread_j_1_cast_fu_532_p1();
    void thread_j_9_fu_503_p2();
    void thread_j_fu_624_p2();
    void thread_k_3_fu_612_p2();
    void thread_k_assign_3_fu_462_p2();
    void thread_n_assign_cast4_fu_377_p1();
    void thread_or_cond_fu_425_p2();
    void thread_p_k_i_fu_467_p3();
    void thread_p_lshr_f_i_cast_fu_442_p4();
    void thread_s_fu_486_p2();
    void thread_tmp_123_fu_564_p2();
    void thread_tmp_124_fu_576_p1();
    void thread_tmp_125_fu_580_p1();
    void thread_tmp_126_fu_516_p1();
    void thread_tmp_182_fu_413_p2();
    void thread_tmp_183_fu_419_p2();
    void thread_tmp_184_fu_536_p2();
    void thread_tmp_185_fu_570_p2();
    void thread_tmp_186_fu_584_p2();
    void thread_tmp_187_fu_542_p2();
    void thread_tmp_188_fu_607_p2();
    void thread_tmp_189_fu_618_p2();
    void thread_tmp_190_fu_699_p0();
    void thread_tmp_190_fu_699_p00();
    void thread_tmp_190_fu_699_p2();
    void thread_tmp_225_cast_fu_548_p1();
    void thread_tmp_228_cast_fu_603_p1();
    void thread_tmp_379_i_fu_456_p2();
    void thread_tmp_380_i_fu_475_p2();
    void thread_tmp_fu_558_p2();
    void thread_tmp_i_cast_fu_452_p1();
    void thread_tmp_i_fu_437_p2();
    void thread_tmp_s_fu_393_p1();
    void thread_x_4_fu_431_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
