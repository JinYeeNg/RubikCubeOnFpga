// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module findCorner (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sCC_V,
        tCC_V,
        cubieColor_V_address0,
        cubieColor_V_ce0,
        cubieColor_V_q0,
        cubieColor_V_address1,
        cubieColor_V_ce1,
        cubieColor_V_q1,
        ap_return
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_state2 = 13'd2;
parameter    ap_ST_fsm_state3 = 13'd4;
parameter    ap_ST_fsm_state4 = 13'd8;
parameter    ap_ST_fsm_state5 = 13'd16;
parameter    ap_ST_fsm_state6 = 13'd32;
parameter    ap_ST_fsm_state7 = 13'd64;
parameter    ap_ST_fsm_state8 = 13'd128;
parameter    ap_ST_fsm_state9 = 13'd256;
parameter    ap_ST_fsm_state10 = 13'd512;
parameter    ap_ST_fsm_state11 = 13'd1024;
parameter    ap_ST_fsm_state12 = 13'd2048;
parameter    ap_ST_fsm_state13 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [2:0] sCC_V;
input  [2:0] tCC_V;
output  [5:0] cubieColor_V_address0;
output   cubieColor_V_ce0;
input  [2:0] cubieColor_V_q0;
output  [5:0] cubieColor_V_address1;
output   cubieColor_V_ce1;
input  [2:0] cubieColor_V_q1;
output  [3:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] cubieColor_V_address0;
reg cubieColor_V_ce0;
reg[5:0] cubieColor_V_address1;
reg cubieColor_V_ce1;
reg[3:0] ap_return;

(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] reg_151;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state12;
reg   [2:0] cubieColor_V_load_108_reg_641;
wire   [0:0] agg_result_V_fu_231_p2;
reg   [0:0] agg_result_V_reg_662;
wire   [1:0] agg_result_V_1_fu_290_p3;
reg   [1:0] agg_result_V_1_reg_667;
wire    ap_CS_fsm_state4;
wire   [0:0] sel_tmp10_fu_322_p2;
reg   [0:0] sel_tmp10_reg_673;
wire    ap_CS_fsm_state5;
wire   [1:0] agg_result_V_2_fu_347_p3;
reg   [1:0] agg_result_V_2_reg_678;
wire   [2:0] agg_result_V_3_fu_406_p3;
reg   [2:0] agg_result_V_3_reg_683;
wire    ap_CS_fsm_state7;
wire   [0:0] sel_tmp12_fu_438_p2;
reg   [0:0] sel_tmp12_reg_689;
wire    ap_CS_fsm_state8;
wire   [2:0] agg_result_V_4_fu_463_p3;
reg   [2:0] agg_result_V_4_reg_694;
wire   [2:0] agg_result_V_5_fu_518_p3;
reg   [2:0] agg_result_V_5_reg_700;
wire    ap_CS_fsm_state10;
wire   [0:0] sel_tmp14_fu_549_p2;
reg   [0:0] sel_tmp14_reg_706;
wire    ap_CS_fsm_state11;
wire   [2:0] agg_result_V_6_fu_574_p3;
reg   [2:0] agg_result_V_6_reg_711;
wire    ap_CS_fsm_state13;
wire   [0:0] grp_fu_162_p2;
wire   [0:0] grp_fu_168_p2;
wire   [0:0] tmp1_fu_174_p2;
wire   [0:0] grp_fu_156_p2;
wire   [0:0] tmp_133_fu_191_p2;
wire   [0:0] tmp_134_fu_196_p2;
wire   [0:0] tmp2_fu_201_p2;
wire   [0:0] tmp_132_fu_186_p2;
wire   [0:0] grp_fu_123_p2;
wire   [0:0] grp_fu_129_p2;
wire   [0:0] tmp3_fu_213_p2;
wire   [0:0] grp_fu_117_p2;
wire   [0:0] or_cond1_fu_180_p2;
wire   [0:0] or_cond3_fu_207_p2;
wire   [0:0] sel_tmp2_fu_225_p2;
wire   [0:0] or_cond5_fu_219_p2;
wire   [0:0] tmp4_fu_240_p2;
wire   [0:0] tmp5_fu_252_p2;
wire   [0:0] grp_fu_141_p2;
wire   [0:0] grp_fu_146_p2;
wire   [0:0] tmp6_fu_264_p2;
wire   [0:0] grp_fu_135_p2;
wire   [0:0] or_cond11_fu_270_p2;
wire   [1:0] agg_result_V_cast_fu_237_p1;
wire   [0:0] or_cond7_fu_246_p2;
wire   [0:0] or_cond9_fu_258_p2;
wire   [0:0] sel_tmp6_fu_284_p2;
wire   [1:0] p_agg_result_V_fu_276_p3;
wire   [0:0] tmp7_fu_298_p2;
wire   [0:0] tmp8_fu_310_p2;
wire   [0:0] or_cond13_fu_304_p2;
wire   [0:0] or_cond15_fu_316_p2;
wire   [0:0] tmp9_fu_328_p2;
wire   [0:0] or_cond17_fu_334_p2;
wire   [1:0] p_agg_result_V_1_fu_340_p3;
wire   [0:0] tmp10_fu_356_p2;
wire   [0:0] tmp11_fu_368_p2;
wire   [0:0] tmp12_fu_380_p2;
wire   [0:0] or_cond23_fu_386_p2;
wire   [2:0] agg_result_V_2_cast_fu_353_p1;
wire   [0:0] or_cond19_fu_362_p2;
wire   [0:0] or_cond21_fu_374_p2;
wire   [0:0] sel_tmp_fu_400_p2;
wire   [2:0] p_agg_result_V_2_fu_392_p3;
wire   [0:0] tmp13_fu_414_p2;
wire   [0:0] tmp14_fu_426_p2;
wire   [0:0] or_cond_fu_420_p2;
wire   [0:0] or_cond24_fu_432_p2;
wire   [0:0] tmp15_fu_444_p2;
wire   [0:0] or_cond25_fu_450_p2;
wire   [2:0] p_agg_result_V_3_fu_456_p3;
wire   [0:0] tmp16_fu_469_p2;
wire   [0:0] tmp17_fu_481_p2;
wire   [0:0] tmp18_fu_493_p2;
wire   [0:0] or_cond28_fu_499_p2;
wire   [0:0] or_cond26_fu_475_p2;
wire   [0:0] or_cond27_fu_487_p2;
wire   [0:0] sel_tmp13_fu_512_p2;
wire   [2:0] p_agg_result_V_4_fu_505_p3;
wire   [0:0] tmp19_fu_525_p2;
wire   [0:0] tmp20_fu_537_p2;
wire   [0:0] or_cond29_fu_531_p2;
wire   [0:0] or_cond30_fu_543_p2;
wire   [0:0] tmp21_fu_555_p2;
wire   [0:0] or_cond31_fu_561_p2;
wire   [2:0] p_agg_result_V_5_fu_567_p3;
wire   [0:0] tmp22_fu_583_p2;
wire   [0:0] tmp23_fu_595_p2;
wire   [0:0] tmp24_fu_607_p2;
wire   [0:0] or_cond34_fu_613_p2;
wire   [3:0] agg_result_V_6_cast_fu_580_p1;
wire   [0:0] or_cond32_fu_589_p2;
wire   [0:0] or_cond33_fu_601_p2;
wire   [0:0] sel_tmp15_fu_627_p2;
wire   [3:0] p_agg_result_V_6_fu_619_p3;
wire   [3:0] UnifiedRetVal_fu_633_p3;
reg   [3:0] ap_return_preg;
reg   [12:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
#0 ap_return_preg = 4'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 4'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_return_preg <= UnifiedRetVal_fu_633_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_151 <= cubieColor_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        reg_151 <= cubieColor_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        agg_result_V_1_reg_667 <= agg_result_V_1_fu_290_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        agg_result_V_2_reg_678 <= agg_result_V_2_fu_347_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        agg_result_V_3_reg_683 <= agg_result_V_3_fu_406_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        agg_result_V_4_reg_694 <= agg_result_V_4_fu_463_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        agg_result_V_5_reg_700 <= agg_result_V_5_fu_518_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        agg_result_V_6_reg_711 <= agg_result_V_6_fu_574_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        agg_result_V_reg_662 <= agg_result_V_fu_231_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        cubieColor_V_load_108_reg_641 <= cubieColor_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        sel_tmp10_reg_673 <= sel_tmp10_fu_322_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        sel_tmp12_reg_689 <= sel_tmp12_fu_438_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        sel_tmp14_reg_706 <= sel_tmp14_fu_549_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_return = UnifiedRetVal_fu_633_p3;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        cubieColor_V_address0 = 6'd35;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        cubieColor_V_address0 = 6'd53;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        cubieColor_V_address0 = 6'd17;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        cubieColor_V_address0 = 6'd26;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        cubieColor_V_address0 = 6'd44;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        cubieColor_V_address0 = 6'd9;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        cubieColor_V_address0 = 6'd29;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        cubieColor_V_address0 = 6'd47;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        cubieColor_V_address0 = 6'd2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        cubieColor_V_address0 = 6'd20;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        cubieColor_V_address0 = 6'd27;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        cubieColor_V_address0 = 6'd6;
    end else begin
        cubieColor_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        cubieColor_V_address1 = 6'd51;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        cubieColor_V_address1 = 6'd11;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        cubieColor_V_address1 = 6'd24;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        cubieColor_V_address1 = 6'd42;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        cubieColor_V_address1 = 6'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        cubieColor_V_address1 = 6'd33;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        cubieColor_V_address1 = 6'd45;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        cubieColor_V_address1 = 6'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        cubieColor_V_address1 = 6'd18;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        cubieColor_V_address1 = 6'd36;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        cubieColor_V_address1 = 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        cubieColor_V_address1 = 6'd38;
    end else begin
        cubieColor_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        cubieColor_V_ce0 = 1'b1;
    end else begin
        cubieColor_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        cubieColor_V_ce1 = 1'b1;
    end else begin
        cubieColor_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign UnifiedRetVal_fu_633_p3 = ((sel_tmp15_fu_627_p2[0:0] === 1'b1) ? p_agg_result_V_6_fu_619_p3 : agg_result_V_6_cast_fu_580_p1);

assign agg_result_V_1_fu_290_p3 = ((sel_tmp6_fu_284_p2[0:0] === 1'b1) ? p_agg_result_V_fu_276_p3 : agg_result_V_cast_fu_237_p1);

assign agg_result_V_2_cast_fu_353_p1 = agg_result_V_2_reg_678;

assign agg_result_V_2_fu_347_p3 = ((sel_tmp10_reg_673[0:0] === 1'b1) ? p_agg_result_V_1_fu_340_p3 : agg_result_V_1_reg_667);

assign agg_result_V_3_fu_406_p3 = ((sel_tmp_fu_400_p2[0:0] === 1'b1) ? p_agg_result_V_2_fu_392_p3 : agg_result_V_2_cast_fu_353_p1);

assign agg_result_V_4_fu_463_p3 = ((sel_tmp12_reg_689[0:0] === 1'b1) ? p_agg_result_V_3_fu_456_p3 : agg_result_V_3_reg_683);

assign agg_result_V_5_fu_518_p3 = ((sel_tmp13_fu_512_p2[0:0] === 1'b1) ? p_agg_result_V_4_fu_505_p3 : agg_result_V_4_reg_694);

assign agg_result_V_6_cast_fu_580_p1 = agg_result_V_6_reg_711;

assign agg_result_V_6_fu_574_p3 = ((sel_tmp14_reg_706[0:0] === 1'b1) ? p_agg_result_V_5_fu_567_p3 : agg_result_V_5_reg_700);

assign agg_result_V_cast_fu_237_p1 = agg_result_V_reg_662;

assign agg_result_V_fu_231_p2 = (sel_tmp2_fu_225_p2 & or_cond5_fu_219_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_fu_117_p2 = ((cubieColor_V_q0 == 3'd0) ? 1'b1 : 1'b0);

assign grp_fu_123_p2 = ((cubieColor_V_q0 == sCC_V) ? 1'b1 : 1'b0);

assign grp_fu_129_p2 = ((cubieColor_V_q0 == tCC_V) ? 1'b1 : 1'b0);

assign grp_fu_135_p2 = ((cubieColor_V_q1 == 3'd0) ? 1'b1 : 1'b0);

assign grp_fu_141_p2 = ((cubieColor_V_q1 == sCC_V) ? 1'b1 : 1'b0);

assign grp_fu_146_p2 = ((cubieColor_V_q1 == tCC_V) ? 1'b1 : 1'b0);

assign grp_fu_156_p2 = ((reg_151 == 3'd0) ? 1'b1 : 1'b0);

assign grp_fu_162_p2 = ((reg_151 == sCC_V) ? 1'b1 : 1'b0);

assign grp_fu_168_p2 = ((reg_151 == tCC_V) ? 1'b1 : 1'b0);

assign or_cond11_fu_270_p2 = (tmp6_fu_264_p2 | grp_fu_135_p2);

assign or_cond13_fu_304_p2 = (tmp7_fu_298_p2 | grp_fu_117_p2);

assign or_cond15_fu_316_p2 = (tmp8_fu_310_p2 | grp_fu_135_p2);

assign or_cond17_fu_334_p2 = (tmp9_fu_328_p2 | grp_fu_117_p2);

assign or_cond19_fu_362_p2 = (tmp10_fu_356_p2 | grp_fu_156_p2);

assign or_cond1_fu_180_p2 = (tmp1_fu_174_p2 | grp_fu_156_p2);

assign or_cond21_fu_374_p2 = (tmp11_fu_368_p2 | grp_fu_117_p2);

assign or_cond23_fu_386_p2 = (tmp12_fu_380_p2 | grp_fu_135_p2);

assign or_cond24_fu_432_p2 = (tmp14_fu_426_p2 | grp_fu_135_p2);

assign or_cond25_fu_450_p2 = (tmp15_fu_444_p2 | grp_fu_117_p2);

assign or_cond26_fu_475_p2 = (tmp16_fu_469_p2 | grp_fu_156_p2);

assign or_cond27_fu_487_p2 = (tmp17_fu_481_p2 | grp_fu_117_p2);

assign or_cond28_fu_499_p2 = (tmp18_fu_493_p2 | grp_fu_135_p2);

assign or_cond29_fu_531_p2 = (tmp19_fu_525_p2 | grp_fu_117_p2);

assign or_cond30_fu_543_p2 = (tmp20_fu_537_p2 | grp_fu_135_p2);

assign or_cond31_fu_561_p2 = (tmp21_fu_555_p2 | grp_fu_117_p2);

assign or_cond32_fu_589_p2 = (tmp22_fu_583_p2 | grp_fu_156_p2);

assign or_cond33_fu_601_p2 = (tmp23_fu_595_p2 | grp_fu_117_p2);

assign or_cond34_fu_613_p2 = (tmp24_fu_607_p2 | grp_fu_135_p2);

assign or_cond3_fu_207_p2 = (tmp_132_fu_186_p2 | tmp2_fu_201_p2);

assign or_cond5_fu_219_p2 = (tmp3_fu_213_p2 | grp_fu_117_p2);

assign or_cond7_fu_246_p2 = (tmp4_fu_240_p2 | grp_fu_156_p2);

assign or_cond9_fu_258_p2 = (tmp5_fu_252_p2 | grp_fu_117_p2);

assign or_cond_fu_420_p2 = (tmp13_fu_414_p2 | grp_fu_117_p2);

assign p_agg_result_V_1_fu_340_p3 = ((or_cond17_fu_334_p2[0:0] === 1'b1) ? 2'd3 : agg_result_V_1_reg_667);

assign p_agg_result_V_2_fu_392_p3 = ((or_cond23_fu_386_p2[0:0] === 1'b1) ? 3'd4 : agg_result_V_2_cast_fu_353_p1);

assign p_agg_result_V_3_fu_456_p3 = ((or_cond25_fu_450_p2[0:0] === 1'b1) ? 3'd5 : agg_result_V_3_reg_683);

assign p_agg_result_V_4_fu_505_p3 = ((or_cond28_fu_499_p2[0:0] === 1'b1) ? 3'd6 : agg_result_V_4_reg_694);

assign p_agg_result_V_5_fu_567_p3 = ((or_cond31_fu_561_p2[0:0] === 1'b1) ? 3'd7 : agg_result_V_5_reg_700);

assign p_agg_result_V_6_fu_619_p3 = ((or_cond34_fu_613_p2[0:0] === 1'b1) ? 4'd8 : agg_result_V_6_cast_fu_580_p1);

assign p_agg_result_V_fu_276_p3 = ((or_cond11_fu_270_p2[0:0] === 1'b1) ? 2'd2 : agg_result_V_cast_fu_237_p1);

assign sel_tmp10_fu_322_p2 = (or_cond15_fu_316_p2 & or_cond13_fu_304_p2);

assign sel_tmp12_fu_438_p2 = (or_cond_fu_420_p2 & or_cond24_fu_432_p2);

assign sel_tmp13_fu_512_p2 = (or_cond27_fu_487_p2 & or_cond26_fu_475_p2);

assign sel_tmp14_fu_549_p2 = (or_cond30_fu_543_p2 & or_cond29_fu_531_p2);

assign sel_tmp15_fu_627_p2 = (or_cond33_fu_601_p2 & or_cond32_fu_589_p2);

assign sel_tmp2_fu_225_p2 = (or_cond3_fu_207_p2 & or_cond1_fu_180_p2);

assign sel_tmp6_fu_284_p2 = (or_cond9_fu_258_p2 & or_cond7_fu_246_p2);

assign sel_tmp_fu_400_p2 = (or_cond21_fu_374_p2 & or_cond19_fu_362_p2);

assign tmp10_fu_356_p2 = (grp_fu_168_p2 | grp_fu_162_p2);

assign tmp11_fu_368_p2 = (grp_fu_129_p2 | grp_fu_123_p2);

assign tmp12_fu_380_p2 = (grp_fu_146_p2 | grp_fu_141_p2);

assign tmp13_fu_414_p2 = (grp_fu_129_p2 | grp_fu_123_p2);

assign tmp14_fu_426_p2 = (grp_fu_146_p2 | grp_fu_141_p2);

assign tmp15_fu_444_p2 = (grp_fu_129_p2 | grp_fu_123_p2);

assign tmp16_fu_469_p2 = (grp_fu_168_p2 | grp_fu_162_p2);

assign tmp17_fu_481_p2 = (grp_fu_129_p2 | grp_fu_123_p2);

assign tmp18_fu_493_p2 = (grp_fu_146_p2 | grp_fu_141_p2);

assign tmp19_fu_525_p2 = (grp_fu_129_p2 | grp_fu_123_p2);

assign tmp1_fu_174_p2 = (grp_fu_168_p2 | grp_fu_162_p2);

assign tmp20_fu_537_p2 = (grp_fu_146_p2 | grp_fu_141_p2);

assign tmp21_fu_555_p2 = (grp_fu_129_p2 | grp_fu_123_p2);

assign tmp22_fu_583_p2 = (grp_fu_168_p2 | grp_fu_162_p2);

assign tmp23_fu_595_p2 = (grp_fu_129_p2 | grp_fu_123_p2);

assign tmp24_fu_607_p2 = (grp_fu_146_p2 | grp_fu_141_p2);

assign tmp2_fu_201_p2 = (tmp_134_fu_196_p2 | tmp_133_fu_191_p2);

assign tmp3_fu_213_p2 = (grp_fu_129_p2 | grp_fu_123_p2);

assign tmp4_fu_240_p2 = (grp_fu_168_p2 | grp_fu_162_p2);

assign tmp5_fu_252_p2 = (grp_fu_129_p2 | grp_fu_123_p2);

assign tmp6_fu_264_p2 = (grp_fu_146_p2 | grp_fu_141_p2);

assign tmp7_fu_298_p2 = (grp_fu_129_p2 | grp_fu_123_p2);

assign tmp8_fu_310_p2 = (grp_fu_146_p2 | grp_fu_141_p2);

assign tmp9_fu_328_p2 = (grp_fu_129_p2 | grp_fu_123_p2);

assign tmp_132_fu_186_p2 = ((cubieColor_V_load_108_reg_641 == 3'd0) ? 1'b1 : 1'b0);

assign tmp_133_fu_191_p2 = ((cubieColor_V_load_108_reg_641 == sCC_V) ? 1'b1 : 1'b0);

assign tmp_134_fu_196_p2 = ((cubieColor_V_load_108_reg_641 == tCC_V) ? 1'b1 : 1'b0);

endmodule //findCorner
