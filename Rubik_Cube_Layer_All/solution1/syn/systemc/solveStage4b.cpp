// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "solveStage4b.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic solveStage4b::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic solveStage4b::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<69> solveStage4b::ap_ST_fsm_state1 = "1";
const sc_lv<69> solveStage4b::ap_ST_fsm_state2 = "10";
const sc_lv<69> solveStage4b::ap_ST_fsm_state3 = "100";
const sc_lv<69> solveStage4b::ap_ST_fsm_state4 = "1000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state5 = "10000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state6 = "100000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state7 = "1000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state8 = "10000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state9 = "100000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state10 = "1000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state11 = "10000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state12 = "100000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<69> solveStage4b::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> solveStage4b::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> solveStage4b::ap_const_lv32_1 = "1";
const sc_lv<32> solveStage4b::ap_const_lv32_2 = "10";
const sc_lv<1> solveStage4b::ap_const_lv1_1 = "1";
const sc_lv<32> solveStage4b::ap_const_lv32_3 = "11";
const sc_lv<32> solveStage4b::ap_const_lv32_4 = "100";
const sc_lv<32> solveStage4b::ap_const_lv32_1A = "11010";
const sc_lv<1> solveStage4b::ap_const_lv1_0 = "0";
const sc_lv<32> solveStage4b::ap_const_lv32_A = "1010";
const sc_lv<32> solveStage4b::ap_const_lv32_C = "1100";
const sc_lv<32> solveStage4b::ap_const_lv32_E = "1110";
const sc_lv<32> solveStage4b::ap_const_lv32_10 = "10000";
const sc_lv<32> solveStage4b::ap_const_lv32_12 = "10010";
const sc_lv<32> solveStage4b::ap_const_lv32_14 = "10100";
const sc_lv<32> solveStage4b::ap_const_lv32_16 = "10110";
const sc_lv<32> solveStage4b::ap_const_lv32_18 = "11000";
const sc_lv<32> solveStage4b::ap_const_lv32_1F = "11111";
const sc_lv<32> solveStage4b::ap_const_lv32_21 = "100001";
const sc_lv<32> solveStage4b::ap_const_lv32_23 = "100011";
const sc_lv<32> solveStage4b::ap_const_lv32_25 = "100101";
const sc_lv<32> solveStage4b::ap_const_lv32_27 = "100111";
const sc_lv<32> solveStage4b::ap_const_lv32_29 = "101001";
const sc_lv<32> solveStage4b::ap_const_lv32_2B = "101011";
const sc_lv<32> solveStage4b::ap_const_lv32_2D = "101101";
const sc_lv<32> solveStage4b::ap_const_lv32_33 = "110011";
const sc_lv<32> solveStage4b::ap_const_lv32_35 = "110101";
const sc_lv<32> solveStage4b::ap_const_lv32_37 = "110111";
const sc_lv<32> solveStage4b::ap_const_lv32_39 = "111001";
const sc_lv<32> solveStage4b::ap_const_lv32_3B = "111011";
const sc_lv<32> solveStage4b::ap_const_lv32_3D = "111101";
const sc_lv<32> solveStage4b::ap_const_lv32_3F = "111111";
const sc_lv<32> solveStage4b::ap_const_lv32_41 = "1000001";
const sc_lv<4> solveStage4b::ap_const_lv4_A = "1010";
const sc_lv<32> solveStage4b::ap_const_lv32_B = "1011";
const sc_lv<4> solveStage4b::ap_const_lv4_0 = "0000";
const sc_lv<32> solveStage4b::ap_const_lv32_D = "1101";
const sc_lv<4> solveStage4b::ap_const_lv4_B = "1011";
const sc_lv<32> solveStage4b::ap_const_lv32_F = "1111";
const sc_lv<32> solveStage4b::ap_const_lv32_11 = "10001";
const sc_lv<32> solveStage4b::ap_const_lv32_13 = "10011";
const sc_lv<32> solveStage4b::ap_const_lv32_15 = "10101";
const sc_lv<32> solveStage4b::ap_const_lv32_17 = "10111";
const sc_lv<32> solveStage4b::ap_const_lv32_19 = "11001";
const sc_lv<32> solveStage4b::ap_const_lv32_20 = "100000";
const sc_lv<32> solveStage4b::ap_const_lv32_22 = "100010";
const sc_lv<32> solveStage4b::ap_const_lv32_24 = "100100";
const sc_lv<32> solveStage4b::ap_const_lv32_26 = "100110";
const sc_lv<32> solveStage4b::ap_const_lv32_28 = "101000";
const sc_lv<32> solveStage4b::ap_const_lv32_2A = "101010";
const sc_lv<32> solveStage4b::ap_const_lv32_2C = "101100";
const sc_lv<32> solveStage4b::ap_const_lv32_2E = "101110";
const sc_lv<32> solveStage4b::ap_const_lv32_34 = "110100";
const sc_lv<32> solveStage4b::ap_const_lv32_36 = "110110";
const sc_lv<32> solveStage4b::ap_const_lv32_38 = "111000";
const sc_lv<32> solveStage4b::ap_const_lv32_3A = "111010";
const sc_lv<32> solveStage4b::ap_const_lv32_3C = "111100";
const sc_lv<32> solveStage4b::ap_const_lv32_3E = "111110";
const sc_lv<32> solveStage4b::ap_const_lv32_40 = "1000000";
const sc_lv<32> solveStage4b::ap_const_lv32_42 = "1000010";
const sc_lv<32> solveStage4b::ap_const_lv32_8 = "1000";
const sc_lv<32> solveStage4b::ap_const_lv32_1D = "11101";
const sc_lv<32> solveStage4b::ap_const_lv32_31 = "110001";
const sc_lv<32> solveStage4b::ap_const_lv32_9 = "1001";
const sc_lv<32> solveStage4b::ap_const_lv32_1E = "11110";
const sc_lv<32> solveStage4b::ap_const_lv32_32 = "110010";
const sc_lv<6> solveStage4b::ap_const_lv6_4 = "100";
const sc_lv<6> solveStage4b::ap_const_lv6_0 = "000000";
const sc_lv<6> solveStage4b::ap_const_lv6_2 = "10";
const sc_lv<6> solveStage4b::ap_const_lv6_6 = "110";
const sc_lv<6> solveStage4b::ap_const_lv6_8 = "1000";
const sc_lv<32> solveStage4b::ap_const_lv32_6 = "110";
const sc_lv<6> solveStage4b::ap_const_lv6_26 = "100110";
const sc_lv<32> solveStage4b::ap_const_lv32_1B = "11011";
const sc_lv<6> solveStage4b::ap_const_lv6_1B = "11011";
const sc_lv<32> solveStage4b::ap_const_lv32_2F = "101111";
const sc_lv<32> solveStage4b::ap_const_lv32_5 = "101";
const sc_lv<32> solveStage4b::ap_const_lv32_7 = "111";
const sc_lv<32> solveStage4b::ap_const_lv32_1C = "11100";
const sc_lv<32> solveStage4b::ap_const_lv32_30 = "110000";
const sc_lv<32> solveStage4b::ap_const_lv32_44 = "1000100";
const bool solveStage4b::ap_const_boolean_1 = true;

solveStage4b::solveStage4b(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_turnCube_fu_71 = new turnCube("grp_turnCube_fu_71");
    grp_turnCube_fu_71->ap_clk(ap_clk);
    grp_turnCube_fu_71->ap_rst(ap_rst);
    grp_turnCube_fu_71->ap_start(grp_turnCube_fu_71_ap_start);
    grp_turnCube_fu_71->ap_done(grp_turnCube_fu_71_ap_done);
    grp_turnCube_fu_71->ap_idle(grp_turnCube_fu_71_ap_idle);
    grp_turnCube_fu_71->ap_ready(grp_turnCube_fu_71_ap_ready);
    grp_turnCube_fu_71->turn_V(grp_turnCube_fu_71_turn_V);
    grp_turnCube_fu_71->moveCounter_V_i(moveCounter_V_i);
    grp_turnCube_fu_71->moveCounter_V_o(grp_turnCube_fu_71_moveCounter_V_o);
    grp_turnCube_fu_71->moveCounter_V_o_ap_vld(grp_turnCube_fu_71_moveCounter_V_o_ap_vld);
    grp_turnCube_fu_71->moves_V_address0(grp_turnCube_fu_71_moves_V_address0);
    grp_turnCube_fu_71->moves_V_ce0(grp_turnCube_fu_71_moves_V_ce0);
    grp_turnCube_fu_71->moves_V_we0(grp_turnCube_fu_71_moves_V_we0);
    grp_turnCube_fu_71->moves_V_d0(grp_turnCube_fu_71_moves_V_d0);
    grp_turnCube_fu_71->cubieColor_V_address0(grp_turnCube_fu_71_cubieColor_V_address0);
    grp_turnCube_fu_71->cubieColor_V_ce0(grp_turnCube_fu_71_cubieColor_V_ce0);
    grp_turnCube_fu_71->cubieColor_V_we0(grp_turnCube_fu_71_cubieColor_V_we0);
    grp_turnCube_fu_71->cubieColor_V_d0(grp_turnCube_fu_71_cubieColor_V_d0);
    grp_turnCube_fu_71->cubieColor_V_q0(cubieColor_V_q0);
    grp_turnCube_fu_71->cubieColor_V_address1(grp_turnCube_fu_71_cubieColor_V_address1);
    grp_turnCube_fu_71->cubieColor_V_ce1(grp_turnCube_fu_71_cubieColor_V_ce1);
    grp_turnCube_fu_71->cubieColor_V_we1(grp_turnCube_fu_71_cubieColor_V_we1);
    grp_turnCube_fu_71->cubieColor_V_d1(grp_turnCube_fu_71_cubieColor_V_d1);
    grp_rotateCubeHorizontal_fu_85 = new rotateCubeHorizontal("grp_rotateCubeHorizontal_fu_85");
    grp_rotateCubeHorizontal_fu_85->ap_clk(ap_clk);
    grp_rotateCubeHorizontal_fu_85->ap_rst(ap_rst);
    grp_rotateCubeHorizontal_fu_85->ap_start(grp_rotateCubeHorizontal_fu_85_ap_start);
    grp_rotateCubeHorizontal_fu_85->ap_done(grp_rotateCubeHorizontal_fu_85_ap_done);
    grp_rotateCubeHorizontal_fu_85->ap_idle(grp_rotateCubeHorizontal_fu_85_ap_idle);
    grp_rotateCubeHorizontal_fu_85->ap_ready(grp_rotateCubeHorizontal_fu_85_ap_ready);
    grp_rotateCubeHorizontal_fu_85->moveCounter_V_i(moveCounter_V_i);
    grp_rotateCubeHorizontal_fu_85->moveCounter_V_o(grp_rotateCubeHorizontal_fu_85_moveCounter_V_o);
    grp_rotateCubeHorizontal_fu_85->moveCounter_V_o_ap_vld(grp_rotateCubeHorizontal_fu_85_moveCounter_V_o_ap_vld);
    grp_rotateCubeHorizontal_fu_85->moves_V_address0(grp_rotateCubeHorizontal_fu_85_moves_V_address0);
    grp_rotateCubeHorizontal_fu_85->moves_V_ce0(grp_rotateCubeHorizontal_fu_85_moves_V_ce0);
    grp_rotateCubeHorizontal_fu_85->moves_V_we0(grp_rotateCubeHorizontal_fu_85_moves_V_we0);
    grp_rotateCubeHorizontal_fu_85->moves_V_d0(grp_rotateCubeHorizontal_fu_85_moves_V_d0);
    grp_rotateCubeHorizontal_fu_85->cubieColor_V_address0(grp_rotateCubeHorizontal_fu_85_cubieColor_V_address0);
    grp_rotateCubeHorizontal_fu_85->cubieColor_V_ce0(grp_rotateCubeHorizontal_fu_85_cubieColor_V_ce0);
    grp_rotateCubeHorizontal_fu_85->cubieColor_V_we0(grp_rotateCubeHorizontal_fu_85_cubieColor_V_we0);
    grp_rotateCubeHorizontal_fu_85->cubieColor_V_d0(grp_rotateCubeHorizontal_fu_85_cubieColor_V_d0);
    grp_rotateCubeHorizontal_fu_85->cubieColor_V_q0(cubieColor_V_q0);
    grp_rotateCubeHorizontal_fu_85->cubieColor_V_address1(grp_rotateCubeHorizontal_fu_85_cubieColor_V_address1);
    grp_rotateCubeHorizontal_fu_85->cubieColor_V_ce1(grp_rotateCubeHorizontal_fu_85_cubieColor_V_ce1);
    grp_rotateCubeHorizontal_fu_85->cubieColor_V_we1(grp_rotateCubeHorizontal_fu_85_cubieColor_V_we1);
    grp_rotateCubeHorizontal_fu_85->cubieColor_V_d1(grp_rotateCubeHorizontal_fu_85_cubieColor_V_d1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state53);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state54);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state55);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state56);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state57);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state58);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state59);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state60);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state61);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state62);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state63);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state64);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state65);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state66);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state67);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state69 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state69 );

    SC_METHOD(thread_cubieColor_V_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_fu_95_p2 );
    sensitive << ( tmp_reg_203 );
    sensitive << ( grp_fu_101_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_turnCube_fu_71_cubieColor_V_address0 );
    sensitive << ( grp_rotateCubeHorizontal_fu_85_cubieColor_V_address0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state48 );

    SC_METHOD(thread_cubieColor_V_address1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( grp_turnCube_fu_71_cubieColor_V_address1 );
    sensitive << ( grp_rotateCubeHorizontal_fu_85_cubieColor_V_address1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state48 );

    SC_METHOD(thread_cubieColor_V_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_fu_95_p2 );
    sensitive << ( tmp_reg_203 );
    sensitive << ( grp_fu_101_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_turnCube_fu_71_cubieColor_V_ce0 );
    sensitive << ( grp_rotateCubeHorizontal_fu_85_cubieColor_V_ce0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state48 );

    SC_METHOD(thread_cubieColor_V_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( grp_turnCube_fu_71_cubieColor_V_ce1 );
    sensitive << ( grp_rotateCubeHorizontal_fu_85_cubieColor_V_ce1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state48 );

    SC_METHOD(thread_cubieColor_V_d0);
    sensitive << ( grp_turnCube_fu_71_cubieColor_V_d0 );
    sensitive << ( grp_rotateCubeHorizontal_fu_85_cubieColor_V_d0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_cubieColor_V_d1);
    sensitive << ( grp_turnCube_fu_71_cubieColor_V_d1 );
    sensitive << ( grp_rotateCubeHorizontal_fu_85_cubieColor_V_d1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_cubieColor_V_we0);
    sensitive << ( grp_turnCube_fu_71_cubieColor_V_we0 );
    sensitive << ( grp_rotateCubeHorizontal_fu_85_cubieColor_V_we0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_cubieColor_V_we1);
    sensitive << ( grp_turnCube_fu_71_cubieColor_V_we1 );
    sensitive << ( grp_rotateCubeHorizontal_fu_85_cubieColor_V_we1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_demorgan_fu_180_p2);
    sensitive << ( or_cond9_fu_170_p2 );
    sensitive << ( tmp_8_fu_175_p2 );

    SC_METHOD(thread_grp_fu_101_p2);
    sensitive << ( cubieColor_V_q0 );
    sensitive << ( cubieColor_V_load_reg_191 );
    sensitive << ( tmp_s_reg_207 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_2_reg_222 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_grp_fu_106_p2);
    sensitive << ( cubieColor_V_load_reg_191 );
    sensitive << ( tmp_reg_203 );
    sensitive << ( tmp_s_reg_207 );
    sensitive << ( cubieColor_V_load_5_reg_214 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( or_cond7_reg_232 );
    sensitive << ( or_cond8_reg_241 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_fu_110_p2);
    sensitive << ( cubieColor_V_q0 );
    sensitive << ( cubieColor_V_q1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state49 );

    SC_METHOD(thread_grp_fu_95_p0);
    sensitive << ( cubieColor_V_q0 );
    sensitive << ( cubieColor_V_load_reg_191 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_fu_95_p2);
    sensitive << ( cubieColor_V_q1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_reg_203 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( grp_fu_95_p0 );

    SC_METHOD(thread_grp_rotateCubeHorizontal_fu_85_ap_start);
    sensitive << ( grp_rotateCubeHorizontal_fu_85_ap_start_reg );

    SC_METHOD(thread_grp_turnCube_fu_71_ap_start);
    sensitive << ( grp_turnCube_fu_71_ap_start_reg );

    SC_METHOD(thread_grp_turnCube_fu_71_turn_V);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state67 );

    SC_METHOD(thread_moveCounter_V_o);
    sensitive << ( moveCounter_V_i );
    sensitive << ( grp_turnCube_fu_71_moveCounter_V_o );
    sensitive << ( grp_turnCube_fu_71_moveCounter_V_o_ap_vld );
    sensitive << ( grp_rotateCubeHorizontal_fu_85_moveCounter_V_o );
    sensitive << ( grp_rotateCubeHorizontal_fu_85_moveCounter_V_o_ap_vld );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_moveCounter_V_o_ap_vld);
    sensitive << ( grp_turnCube_fu_71_moveCounter_V_o_ap_vld );
    sensitive << ( grp_rotateCubeHorizontal_fu_85_moveCounter_V_o_ap_vld );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_moves_V_address0);
    sensitive << ( grp_turnCube_fu_71_moves_V_address0 );
    sensitive << ( grp_rotateCubeHorizontal_fu_85_moves_V_address0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_moves_V_ce0);
    sensitive << ( grp_turnCube_fu_71_moves_V_ce0 );
    sensitive << ( grp_rotateCubeHorizontal_fu_85_moves_V_ce0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_moves_V_d0);
    sensitive << ( grp_turnCube_fu_71_moves_V_d0 );
    sensitive << ( grp_rotateCubeHorizontal_fu_85_moves_V_d0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_moves_V_we0);
    sensitive << ( grp_turnCube_fu_71_moves_V_we0 );
    sensitive << ( grp_rotateCubeHorizontal_fu_85_moves_V_we0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_or_cond11_not_fu_137_p2);
    sensitive << ( or_cond2_fu_132_p2 );

    SC_METHOD(thread_or_cond2_fu_132_p2);
    sensitive << ( tmp_s_reg_207 );
    sensitive << ( grp_fu_106_p2 );

    SC_METHOD(thread_or_cond3_fu_148_p2);
    sensitive << ( tmp_11_fu_143_p2 );
    sensitive << ( or_cond11_not_fu_137_p2 );

    SC_METHOD(thread_or_cond5_fu_160_p2);
    sensitive << ( tmp_s_reg_207 );
    sensitive << ( tmp2_fu_154_p2 );

    SC_METHOD(thread_or_cond7_fu_116_p2);
    sensitive << ( grp_fu_101_p2 );
    sensitive << ( grp_fu_106_p2 );

    SC_METHOD(thread_or_cond8_fu_126_p2);
    sensitive << ( grp_fu_101_p2 );
    sensitive << ( tmp_6_fu_122_p2 );

    SC_METHOD(thread_or_cond9_fu_170_p2);
    sensitive << ( tmp_s_reg_207 );
    sensitive << ( tmp_1_fu_165_p2 );

    SC_METHOD(thread_or_cond_fu_186_p2);
    sensitive << ( grp_fu_101_p2 );
    sensitive << ( tmp_2_reg_222 );

    SC_METHOD(thread_tmp2_fu_154_p2);
    sensitive << ( grp_fu_106_p2 );
    sensitive << ( tmp_11_fu_143_p2 );

    SC_METHOD(thread_tmp_11_fu_143_p2);
    sensitive << ( cubieColor_V_load_reg_191 );
    sensitive << ( tmp_reg_203 );
    sensitive << ( tmp_s_reg_207 );
    sensitive << ( or_cond7_reg_232 );
    sensitive << ( or_cond8_reg_241 );
    sensitive << ( cubieColor_V_load_2_reg_51 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_tmp_1_fu_165_p2);
    sensitive << ( cubieColor_V_load_reg_191 );
    sensitive << ( tmp_reg_203 );
    sensitive << ( tmp_s_reg_207 );
    sensitive << ( tmp_2_reg_222 );
    sensitive << ( tmp_9_reg_257 );
    sensitive << ( or_cond_reg_261 );
    sensitive << ( cubieColor_V_load_s_reg_60 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_tmp_6_fu_122_p2);
    sensitive << ( cubieColor_V_load_reg_191 );
    sensitive << ( cubieColor_V_load_5_reg_214 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_tmp_8_fu_175_p2);
    sensitive << ( cubieColor_V_q1 );
    sensitive << ( cubieColor_V_load_reg_191 );
    sensitive << ( tmp_reg_203 );
    sensitive << ( tmp_s_reg_207 );
    sensitive << ( tmp_2_reg_222 );
    sensitive << ( tmp_9_reg_257 );
    sensitive << ( or_cond_reg_261 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_reg_203 );
    sensitive << ( grp_fu_101_p2 );
    sensitive << ( tmp_s_reg_207 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_2_reg_222 );
    sensitive << ( or_cond7_reg_232 );
    sensitive << ( or_cond8_reg_241 );
    sensitive << ( tmp_9_reg_257 );
    sensitive << ( or_cond_reg_261 );
    sensitive << ( grp_turnCube_fu_71_ap_done );
    sensitive << ( grp_rotateCubeHorizontal_fu_85_ap_done );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( ap_CS_fsm_state65 );
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( grp_fu_110_p2 );
    sensitive << ( or_cond3_fu_148_p2 );
    sensitive << ( or_cond5_fu_160_p2 );
    sensitive << ( demorgan_fu_180_p2 );

    ap_CS_fsm = "000000000000000000000000000000000000000000000000000000000000000000001";
    grp_turnCube_fu_71_ap_start_reg = SC_LOGIC_0;
    grp_rotateCubeHorizontal_fu_85_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "solveStage4b_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, moveCounter_V_i, "(port)moveCounter_V_i");
    sc_trace(mVcdFile, moveCounter_V_o, "(port)moveCounter_V_o");
    sc_trace(mVcdFile, moveCounter_V_o_ap_vld, "(port)moveCounter_V_o_ap_vld");
    sc_trace(mVcdFile, moves_V_address0, "(port)moves_V_address0");
    sc_trace(mVcdFile, moves_V_ce0, "(port)moves_V_ce0");
    sc_trace(mVcdFile, moves_V_we0, "(port)moves_V_we0");
    sc_trace(mVcdFile, moves_V_d0, "(port)moves_V_d0");
    sc_trace(mVcdFile, cubieColor_V_address0, "(port)cubieColor_V_address0");
    sc_trace(mVcdFile, cubieColor_V_ce0, "(port)cubieColor_V_ce0");
    sc_trace(mVcdFile, cubieColor_V_we0, "(port)cubieColor_V_we0");
    sc_trace(mVcdFile, cubieColor_V_d0, "(port)cubieColor_V_d0");
    sc_trace(mVcdFile, cubieColor_V_q0, "(port)cubieColor_V_q0");
    sc_trace(mVcdFile, cubieColor_V_address1, "(port)cubieColor_V_address1");
    sc_trace(mVcdFile, cubieColor_V_ce1, "(port)cubieColor_V_ce1");
    sc_trace(mVcdFile, cubieColor_V_we1, "(port)cubieColor_V_we1");
    sc_trace(mVcdFile, cubieColor_V_d1, "(port)cubieColor_V_d1");
    sc_trace(mVcdFile, cubieColor_V_q1, "(port)cubieColor_V_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, cubieColor_V_load_reg_191, "cubieColor_V_load_reg_191");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_fu_95_p2, "grp_fu_95_p2");
    sc_trace(mVcdFile, tmp_reg_203, "tmp_reg_203");
    sc_trace(mVcdFile, grp_fu_101_p2, "grp_fu_101_p2");
    sc_trace(mVcdFile, tmp_s_reg_207, "tmp_s_reg_207");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, cubieColor_V_load_5_reg_214, "cubieColor_V_load_5_reg_214");
    sc_trace(mVcdFile, tmp_2_reg_222, "tmp_2_reg_222");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, or_cond7_fu_116_p2, "or_cond7_fu_116_p2");
    sc_trace(mVcdFile, or_cond7_reg_232, "or_cond7_reg_232");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, or_cond8_fu_126_p2, "or_cond8_fu_126_p2");
    sc_trace(mVcdFile, or_cond8_reg_241, "or_cond8_reg_241");
    sc_trace(mVcdFile, tmp_9_reg_257, "tmp_9_reg_257");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, or_cond_fu_186_p2, "or_cond_fu_186_p2");
    sc_trace(mVcdFile, or_cond_reg_261, "or_cond_reg_261");
    sc_trace(mVcdFile, grp_turnCube_fu_71_ap_start, "grp_turnCube_fu_71_ap_start");
    sc_trace(mVcdFile, grp_turnCube_fu_71_ap_done, "grp_turnCube_fu_71_ap_done");
    sc_trace(mVcdFile, grp_turnCube_fu_71_ap_idle, "grp_turnCube_fu_71_ap_idle");
    sc_trace(mVcdFile, grp_turnCube_fu_71_ap_ready, "grp_turnCube_fu_71_ap_ready");
    sc_trace(mVcdFile, grp_turnCube_fu_71_turn_V, "grp_turnCube_fu_71_turn_V");
    sc_trace(mVcdFile, grp_turnCube_fu_71_moveCounter_V_o, "grp_turnCube_fu_71_moveCounter_V_o");
    sc_trace(mVcdFile, grp_turnCube_fu_71_moveCounter_V_o_ap_vld, "grp_turnCube_fu_71_moveCounter_V_o_ap_vld");
    sc_trace(mVcdFile, grp_turnCube_fu_71_moves_V_address0, "grp_turnCube_fu_71_moves_V_address0");
    sc_trace(mVcdFile, grp_turnCube_fu_71_moves_V_ce0, "grp_turnCube_fu_71_moves_V_ce0");
    sc_trace(mVcdFile, grp_turnCube_fu_71_moves_V_we0, "grp_turnCube_fu_71_moves_V_we0");
    sc_trace(mVcdFile, grp_turnCube_fu_71_moves_V_d0, "grp_turnCube_fu_71_moves_V_d0");
    sc_trace(mVcdFile, grp_turnCube_fu_71_cubieColor_V_address0, "grp_turnCube_fu_71_cubieColor_V_address0");
    sc_trace(mVcdFile, grp_turnCube_fu_71_cubieColor_V_ce0, "grp_turnCube_fu_71_cubieColor_V_ce0");
    sc_trace(mVcdFile, grp_turnCube_fu_71_cubieColor_V_we0, "grp_turnCube_fu_71_cubieColor_V_we0");
    sc_trace(mVcdFile, grp_turnCube_fu_71_cubieColor_V_d0, "grp_turnCube_fu_71_cubieColor_V_d0");
    sc_trace(mVcdFile, grp_turnCube_fu_71_cubieColor_V_address1, "grp_turnCube_fu_71_cubieColor_V_address1");
    sc_trace(mVcdFile, grp_turnCube_fu_71_cubieColor_V_ce1, "grp_turnCube_fu_71_cubieColor_V_ce1");
    sc_trace(mVcdFile, grp_turnCube_fu_71_cubieColor_V_we1, "grp_turnCube_fu_71_cubieColor_V_we1");
    sc_trace(mVcdFile, grp_turnCube_fu_71_cubieColor_V_d1, "grp_turnCube_fu_71_cubieColor_V_d1");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_85_ap_start, "grp_rotateCubeHorizontal_fu_85_ap_start");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_85_ap_done, "grp_rotateCubeHorizontal_fu_85_ap_done");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_85_ap_idle, "grp_rotateCubeHorizontal_fu_85_ap_idle");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_85_ap_ready, "grp_rotateCubeHorizontal_fu_85_ap_ready");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_85_moveCounter_V_o, "grp_rotateCubeHorizontal_fu_85_moveCounter_V_o");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_85_moveCounter_V_o_ap_vld, "grp_rotateCubeHorizontal_fu_85_moveCounter_V_o_ap_vld");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_85_moves_V_address0, "grp_rotateCubeHorizontal_fu_85_moves_V_address0");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_85_moves_V_ce0, "grp_rotateCubeHorizontal_fu_85_moves_V_ce0");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_85_moves_V_we0, "grp_rotateCubeHorizontal_fu_85_moves_V_we0");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_85_moves_V_d0, "grp_rotateCubeHorizontal_fu_85_moves_V_d0");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_85_cubieColor_V_address0, "grp_rotateCubeHorizontal_fu_85_cubieColor_V_address0");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_85_cubieColor_V_ce0, "grp_rotateCubeHorizontal_fu_85_cubieColor_V_ce0");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_85_cubieColor_V_we0, "grp_rotateCubeHorizontal_fu_85_cubieColor_V_we0");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_85_cubieColor_V_d0, "grp_rotateCubeHorizontal_fu_85_cubieColor_V_d0");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_85_cubieColor_V_address1, "grp_rotateCubeHorizontal_fu_85_cubieColor_V_address1");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_85_cubieColor_V_ce1, "grp_rotateCubeHorizontal_fu_85_cubieColor_V_ce1");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_85_cubieColor_V_we1, "grp_rotateCubeHorizontal_fu_85_cubieColor_V_we1");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_85_cubieColor_V_d1, "grp_rotateCubeHorizontal_fu_85_cubieColor_V_d1");
    sc_trace(mVcdFile, cubieColor_V_load_2_reg_51, "cubieColor_V_load_2_reg_51");
    sc_trace(mVcdFile, cubieColor_V_load_s_reg_60, "cubieColor_V_load_s_reg_60");
    sc_trace(mVcdFile, grp_turnCube_fu_71_ap_start_reg, "grp_turnCube_fu_71_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, ap_CS_fsm_state54, "ap_CS_fsm_state54");
    sc_trace(mVcdFile, ap_CS_fsm_state56, "ap_CS_fsm_state56");
    sc_trace(mVcdFile, ap_CS_fsm_state58, "ap_CS_fsm_state58");
    sc_trace(mVcdFile, ap_CS_fsm_state60, "ap_CS_fsm_state60");
    sc_trace(mVcdFile, ap_CS_fsm_state62, "ap_CS_fsm_state62");
    sc_trace(mVcdFile, ap_CS_fsm_state64, "ap_CS_fsm_state64");
    sc_trace(mVcdFile, ap_CS_fsm_state66, "ap_CS_fsm_state66");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, ap_CS_fsm_state53, "ap_CS_fsm_state53");
    sc_trace(mVcdFile, ap_CS_fsm_state55, "ap_CS_fsm_state55");
    sc_trace(mVcdFile, ap_CS_fsm_state57, "ap_CS_fsm_state57");
    sc_trace(mVcdFile, ap_CS_fsm_state59, "ap_CS_fsm_state59");
    sc_trace(mVcdFile, ap_CS_fsm_state61, "ap_CS_fsm_state61");
    sc_trace(mVcdFile, ap_CS_fsm_state63, "ap_CS_fsm_state63");
    sc_trace(mVcdFile, ap_CS_fsm_state65, "ap_CS_fsm_state65");
    sc_trace(mVcdFile, ap_CS_fsm_state67, "ap_CS_fsm_state67");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_85_ap_start_reg, "grp_rotateCubeHorizontal_fu_85_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, grp_fu_95_p0, "grp_fu_95_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, grp_fu_106_p2, "grp_fu_106_p2");
    sc_trace(mVcdFile, tmp_6_fu_122_p2, "tmp_6_fu_122_p2");
    sc_trace(mVcdFile, or_cond2_fu_132_p2, "or_cond2_fu_132_p2");
    sc_trace(mVcdFile, tmp_11_fu_143_p2, "tmp_11_fu_143_p2");
    sc_trace(mVcdFile, or_cond11_not_fu_137_p2, "or_cond11_not_fu_137_p2");
    sc_trace(mVcdFile, tmp2_fu_154_p2, "tmp2_fu_154_p2");
    sc_trace(mVcdFile, tmp_1_fu_165_p2, "tmp_1_fu_165_p2");
    sc_trace(mVcdFile, or_cond9_fu_170_p2, "or_cond9_fu_170_p2");
    sc_trace(mVcdFile, tmp_8_fu_175_p2, "tmp_8_fu_175_p2");
    sc_trace(mVcdFile, grp_fu_110_p2, "grp_fu_110_p2");
    sc_trace(mVcdFile, or_cond3_fu_148_p2, "or_cond3_fu_148_p2");
    sc_trace(mVcdFile, or_cond5_fu_160_p2, "or_cond5_fu_160_p2");
    sc_trace(mVcdFile, demorgan_fu_180_p2, "demorgan_fu_180_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state69, "ap_CS_fsm_state69");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

solveStage4b::~solveStage4b() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_turnCube_fu_71;
    delete grp_rotateCubeHorizontal_fu_85;
}

void solveStage4b::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
         esl_seteq<1,1,1>(tmp_s_reg_207.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_186_p2.read()))) {
        cubieColor_V_load_s_reg_60 = cubieColor_V_load_5_reg_214.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(tmp_reg_203.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(grp_fu_95_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(grp_fu_101_p2.read(), ap_const_lv1_0))) {
        cubieColor_V_load_s_reg_60 = cubieColor_V_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
                esl_seteq<1,1,1>(tmp_s_reg_207.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(tmp_2_reg_222.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(grp_fu_101_p2.read(), ap_const_lv1_1))) {
        cubieColor_V_load_s_reg_60 = cubieColor_V_load_reg_191.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_rotateCubeHorizontal_fu_85_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()))) {
            grp_rotateCubeHorizontal_fu_85_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_rotateCubeHorizontal_fu_85_ap_ready.read())) {
            grp_rotateCubeHorizontal_fu_85_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_turnCube_fu_71_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()))) {
            grp_turnCube_fu_71_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_ap_ready.read())) {
            grp_turnCube_fu_71_ap_start_reg = ap_const_logic_0;
        }
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
  esl_seteq<1,1,1>(or_cond8_fu_126_p2.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
  esl_seteq<1,1,1>(or_cond7_fu_116_p2.read(), ap_const_lv1_0)))) {
        cubieColor_V_load_2_reg_51 = cubieColor_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        cubieColor_V_load_5_reg_214 = cubieColor_V_q1.read();
        tmp_s_reg_207 = grp_fu_101_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        cubieColor_V_load_reg_191 = cubieColor_V_q0.read();
        tmp_reg_203 = grp_fu_95_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        or_cond7_reg_232 = or_cond7_fu_116_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        or_cond8_reg_241 = or_cond8_fu_126_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && esl_seteq<1,1,1>(tmp_s_reg_207.read(), ap_const_lv1_1))) {
        or_cond_reg_261 = or_cond_fu_186_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_reg_203.read(), ap_const_lv1_1))) {
        tmp_2_reg_222 = grp_fu_95_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && esl_seteq<1,1,1>(tmp_s_reg_207.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(tmp_2_reg_222.read(), ap_const_lv1_1))) {
        tmp_9_reg_257 = grp_fu_101_p2.read();
    }
}

void solveStage4b::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void solveStage4b::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void solveStage4b::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void solveStage4b::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void solveStage4b::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void solveStage4b::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void solveStage4b::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void solveStage4b::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void solveStage4b::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void solveStage4b::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void solveStage4b::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void solveStage4b::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void solveStage4b::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void solveStage4b::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void solveStage4b::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void solveStage4b::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void solveStage4b::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void solveStage4b::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void solveStage4b::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void solveStage4b::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void solveStage4b::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void solveStage4b::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void solveStage4b::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void solveStage4b::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void solveStage4b::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void solveStage4b::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void solveStage4b::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void solveStage4b::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void solveStage4b::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void solveStage4b::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void solveStage4b::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void solveStage4b::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void solveStage4b::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void solveStage4b::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void solveStage4b::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void solveStage4b::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void solveStage4b::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void solveStage4b::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void solveStage4b::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void solveStage4b::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void solveStage4b::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void solveStage4b::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void solveStage4b::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void solveStage4b::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void solveStage4b::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void solveStage4b::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[49];
}

void solveStage4b::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[50];
}

void solveStage4b::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read()[51];
}

void solveStage4b::thread_ap_CS_fsm_state53() {
    ap_CS_fsm_state53 = ap_CS_fsm.read()[52];
}

void solveStage4b::thread_ap_CS_fsm_state54() {
    ap_CS_fsm_state54 = ap_CS_fsm.read()[53];
}

void solveStage4b::thread_ap_CS_fsm_state55() {
    ap_CS_fsm_state55 = ap_CS_fsm.read()[54];
}

void solveStage4b::thread_ap_CS_fsm_state56() {
    ap_CS_fsm_state56 = ap_CS_fsm.read()[55];
}

void solveStage4b::thread_ap_CS_fsm_state57() {
    ap_CS_fsm_state57 = ap_CS_fsm.read()[56];
}

void solveStage4b::thread_ap_CS_fsm_state58() {
    ap_CS_fsm_state58 = ap_CS_fsm.read()[57];
}

void solveStage4b::thread_ap_CS_fsm_state59() {
    ap_CS_fsm_state59 = ap_CS_fsm.read()[58];
}

void solveStage4b::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void solveStage4b::thread_ap_CS_fsm_state60() {
    ap_CS_fsm_state60 = ap_CS_fsm.read()[59];
}

void solveStage4b::thread_ap_CS_fsm_state61() {
    ap_CS_fsm_state61 = ap_CS_fsm.read()[60];
}

void solveStage4b::thread_ap_CS_fsm_state62() {
    ap_CS_fsm_state62 = ap_CS_fsm.read()[61];
}

void solveStage4b::thread_ap_CS_fsm_state63() {
    ap_CS_fsm_state63 = ap_CS_fsm.read()[62];
}

void solveStage4b::thread_ap_CS_fsm_state64() {
    ap_CS_fsm_state64 = ap_CS_fsm.read()[63];
}

void solveStage4b::thread_ap_CS_fsm_state65() {
    ap_CS_fsm_state65 = ap_CS_fsm.read()[64];
}

void solveStage4b::thread_ap_CS_fsm_state66() {
    ap_CS_fsm_state66 = ap_CS_fsm.read()[65];
}

void solveStage4b::thread_ap_CS_fsm_state67() {
    ap_CS_fsm_state67 = ap_CS_fsm.read()[66];
}

void solveStage4b::thread_ap_CS_fsm_state69() {
    ap_CS_fsm_state69 = ap_CS_fsm.read()[68];
}

void solveStage4b::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void solveStage4b::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void solveStage4b::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void solveStage4b::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void solveStage4b::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void solveStage4b::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void solveStage4b::thread_cubieColor_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        cubieColor_V_address0 = ap_const_lv6_6;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        cubieColor_V_address0 = ap_const_lv6_1B;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        cubieColor_V_address0 = ap_const_lv6_26;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                 esl_seteq<1,1,1>(grp_fu_101_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(tmp_reg_203.read(), ap_const_lv1_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                 esl_seteq<1,1,1>(grp_fu_101_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(tmp_reg_203.read(), ap_const_lv1_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                 esl_seteq<1,1,1>(tmp_reg_203.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(grp_fu_101_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(grp_fu_95_p2.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                 esl_seteq<1,1,1>(tmp_reg_203.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(grp_fu_101_p2.read(), ap_const_lv1_1)))) {
        cubieColor_V_address0 = ap_const_lv6_8;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        cubieColor_V_address0 = ap_const_lv6_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        cubieColor_V_address0 = ap_const_lv6_4;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()))) {
        cubieColor_V_address0 = grp_rotateCubeHorizontal_fu_85_cubieColor_V_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()))) {
        cubieColor_V_address0 = grp_turnCube_fu_71_cubieColor_V_address0.read();
    } else {
        cubieColor_V_address0 = "XXXXXX";
    }
}

void solveStage4b::thread_cubieColor_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        cubieColor_V_address1 = ap_const_lv6_8;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        cubieColor_V_address1 = ap_const_lv6_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        cubieColor_V_address1 = ap_const_lv6_6;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        cubieColor_V_address1 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()))) {
        cubieColor_V_address1 = grp_rotateCubeHorizontal_fu_85_cubieColor_V_address1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()))) {
        cubieColor_V_address1 = grp_turnCube_fu_71_cubieColor_V_address1.read();
    } else {
        cubieColor_V_address1 = "XXXXXX";
    }
}

void solveStage4b::thread_cubieColor_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(grp_fu_101_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(tmp_reg_203.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(grp_fu_101_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(tmp_reg_203.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(tmp_reg_203.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(grp_fu_101_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(grp_fu_95_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(tmp_reg_203.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(grp_fu_101_p2.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        cubieColor_V_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()))) {
        cubieColor_V_ce0 = grp_rotateCubeHorizontal_fu_85_cubieColor_V_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()))) {
        cubieColor_V_ce0 = grp_turnCube_fu_71_cubieColor_V_ce0.read();
    } else {
        cubieColor_V_ce0 = ap_const_logic_0;
    }
}

void solveStage4b::thread_cubieColor_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()))) {
        cubieColor_V_ce1 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()))) {
        cubieColor_V_ce1 = grp_rotateCubeHorizontal_fu_85_cubieColor_V_ce1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()))) {
        cubieColor_V_ce1 = grp_turnCube_fu_71_cubieColor_V_ce1.read();
    } else {
        cubieColor_V_ce1 = ap_const_logic_0;
    }
}

void solveStage4b::thread_cubieColor_V_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()))) {
        cubieColor_V_d0 = grp_rotateCubeHorizontal_fu_85_cubieColor_V_d0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()))) {
        cubieColor_V_d0 = grp_turnCube_fu_71_cubieColor_V_d0.read();
    } else {
        cubieColor_V_d0 =  (sc_lv<3>) ("XXX");
    }
}

void solveStage4b::thread_cubieColor_V_d1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()))) {
        cubieColor_V_d1 = grp_rotateCubeHorizontal_fu_85_cubieColor_V_d1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()))) {
        cubieColor_V_d1 = grp_turnCube_fu_71_cubieColor_V_d1.read();
    } else {
        cubieColor_V_d1 =  (sc_lv<3>) ("XXX");
    }
}

void solveStage4b::thread_cubieColor_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()))) {
        cubieColor_V_we0 = grp_rotateCubeHorizontal_fu_85_cubieColor_V_we0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()))) {
        cubieColor_V_we0 = grp_turnCube_fu_71_cubieColor_V_we0.read();
    } else {
        cubieColor_V_we0 = ap_const_logic_0;
    }
}

void solveStage4b::thread_cubieColor_V_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()))) {
        cubieColor_V_we1 = grp_rotateCubeHorizontal_fu_85_cubieColor_V_we1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()))) {
        cubieColor_V_we1 = grp_turnCube_fu_71_cubieColor_V_we1.read();
    } else {
        cubieColor_V_we1 = ap_const_logic_0;
    }
}

void solveStage4b::thread_demorgan_fu_180_p2() {
    demorgan_fu_180_p2 = (or_cond9_fu_170_p2.read() | tmp_8_fu_175_p2.read());
}

void solveStage4b::thread_grp_fu_101_p2() {
    grp_fu_101_p2 = (!cubieColor_V_load_reg_191.read().is_01() || !cubieColor_V_q0.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_load_reg_191.read() == cubieColor_V_q0.read());
}

void solveStage4b::thread_grp_fu_106_p2() {
    grp_fu_106_p2 = (!cubieColor_V_load_reg_191.read().is_01() || !cubieColor_V_load_5_reg_214.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_load_reg_191.read() == cubieColor_V_load_5_reg_214.read());
}

void solveStage4b::thread_grp_fu_110_p2() {
    grp_fu_110_p2 = (!cubieColor_V_q1.read().is_01() || !cubieColor_V_q0.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_q1.read() == cubieColor_V_q0.read());
}

void solveStage4b::thread_grp_fu_95_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_95_p0 = cubieColor_V_load_reg_191.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_fu_95_p0 = cubieColor_V_q0.read();
    } else {
        grp_fu_95_p0 =  (sc_lv<3>) ("XXX");
    }
}

void solveStage4b::thread_grp_fu_95_p2() {
    grp_fu_95_p2 = (!grp_fu_95_p0.read().is_01() || !cubieColor_V_q1.read().is_01())? sc_lv<1>(): sc_lv<1>(grp_fu_95_p0.read() == cubieColor_V_q1.read());
}

void solveStage4b::thread_grp_rotateCubeHorizontal_fu_85_ap_start() {
    grp_rotateCubeHorizontal_fu_85_ap_start = grp_rotateCubeHorizontal_fu_85_ap_start_reg.read();
}

void solveStage4b::thread_grp_turnCube_fu_71_ap_start() {
    grp_turnCube_fu_71_ap_start = grp_turnCube_fu_71_ap_start_reg.read();
}

void solveStage4b::thread_grp_turnCube_fu_71_turn_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()))) {
        grp_turnCube_fu_71_turn_V = ap_const_lv4_B;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()))) {
        grp_turnCube_fu_71_turn_V = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()))) {
        grp_turnCube_fu_71_turn_V = ap_const_lv4_A;
    } else {
        grp_turnCube_fu_71_turn_V =  (sc_lv<4>) ("XXXX");
    }
}

void solveStage4b::thread_moveCounter_V_o() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_rotateCubeHorizontal_fu_85_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, grp_rotateCubeHorizontal_fu_85_moveCounter_V_o_ap_vld.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, grp_rotateCubeHorizontal_fu_85_moveCounter_V_o_ap_vld.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())))) {
        moveCounter_V_o = grp_rotateCubeHorizontal_fu_85_moveCounter_V_o.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read())))) {
        moveCounter_V_o = grp_turnCube_fu_71_moveCounter_V_o.read();
    } else {
        moveCounter_V_o = moveCounter_V_i.read();
    }
}

void solveStage4b::thread_moveCounter_V_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()))) {
        moveCounter_V_o_ap_vld = grp_rotateCubeHorizontal_fu_85_moveCounter_V_o_ap_vld.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()))) {
        moveCounter_V_o_ap_vld = grp_turnCube_fu_71_moveCounter_V_o_ap_vld.read();
    } else {
        moveCounter_V_o_ap_vld = ap_const_logic_0;
    }
}

void solveStage4b::thread_moves_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()))) {
        moves_V_address0 = grp_rotateCubeHorizontal_fu_85_moves_V_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()))) {
        moves_V_address0 = grp_turnCube_fu_71_moves_V_address0.read();
    } else {
        moves_V_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void solveStage4b::thread_moves_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()))) {
        moves_V_ce0 = grp_rotateCubeHorizontal_fu_85_moves_V_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()))) {
        moves_V_ce0 = grp_turnCube_fu_71_moves_V_ce0.read();
    } else {
        moves_V_ce0 = ap_const_logic_0;
    }
}

void solveStage4b::thread_moves_V_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()))) {
        moves_V_d0 = grp_rotateCubeHorizontal_fu_85_moves_V_d0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()))) {
        moves_V_d0 = grp_turnCube_fu_71_moves_V_d0.read();
    } else {
        moves_V_d0 =  (sc_lv<4>) ("XXXX");
    }
}

void solveStage4b::thread_moves_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()))) {
        moves_V_we0 = grp_rotateCubeHorizontal_fu_85_moves_V_we0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()))) {
        moves_V_we0 = grp_turnCube_fu_71_moves_V_we0.read();
    } else {
        moves_V_we0 = ap_const_logic_0;
    }
}

void solveStage4b::thread_or_cond11_not_fu_137_p2() {
    or_cond11_not_fu_137_p2 = (or_cond2_fu_132_p2.read() ^ ap_const_lv1_1);
}

void solveStage4b::thread_or_cond2_fu_132_p2() {
    or_cond2_fu_132_p2 = (tmp_s_reg_207.read() & grp_fu_106_p2.read());
}

void solveStage4b::thread_or_cond3_fu_148_p2() {
    or_cond3_fu_148_p2 = (tmp_11_fu_143_p2.read() | or_cond11_not_fu_137_p2.read());
}

void solveStage4b::thread_or_cond5_fu_160_p2() {
    or_cond5_fu_160_p2 = (tmp2_fu_154_p2.read() | tmp_s_reg_207.read());
}

void solveStage4b::thread_or_cond7_fu_116_p2() {
    or_cond7_fu_116_p2 = (grp_fu_106_p2.read() & grp_fu_101_p2.read());
}

void solveStage4b::thread_or_cond8_fu_126_p2() {
    or_cond8_fu_126_p2 = (tmp_6_fu_122_p2.read() & grp_fu_101_p2.read());
}

void solveStage4b::thread_or_cond9_fu_170_p2() {
    or_cond9_fu_170_p2 = (tmp_s_reg_207.read() | tmp_1_fu_165_p2.read());
}

void solveStage4b::thread_or_cond_fu_186_p2() {
    or_cond_fu_186_p2 = (tmp_2_reg_222.read() | grp_fu_101_p2.read());
}

void solveStage4b::thread_tmp2_fu_154_p2() {
    tmp2_fu_154_p2 = (grp_fu_106_p2.read() | tmp_11_fu_143_p2.read());
}

void solveStage4b::thread_tmp_11_fu_143_p2() {
    tmp_11_fu_143_p2 = (!cubieColor_V_load_reg_191.read().is_01() || !cubieColor_V_load_2_reg_51.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_load_reg_191.read() == cubieColor_V_load_2_reg_51.read());
}

void solveStage4b::thread_tmp_1_fu_165_p2() {
    tmp_1_fu_165_p2 = (!cubieColor_V_load_reg_191.read().is_01() || !cubieColor_V_load_s_reg_60.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_load_reg_191.read() == cubieColor_V_load_s_reg_60.read());
}

void solveStage4b::thread_tmp_6_fu_122_p2() {
    tmp_6_fu_122_p2 = (!cubieColor_V_load_reg_191.read().is_01() || !cubieColor_V_load_5_reg_214.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_load_reg_191.read() != cubieColor_V_load_5_reg_214.read());
}

void solveStage4b::thread_tmp_8_fu_175_p2() {
    tmp_8_fu_175_p2 = (!cubieColor_V_load_reg_191.read().is_01() || !cubieColor_V_q1.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_load_reg_191.read() != cubieColor_V_q1.read());
}

void solveStage4b::thread_ap_NS_fsm() {
    if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        ap_NS_fsm = ap_ST_fsm_state3;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_reg_203.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state27;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(grp_fu_101_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(tmp_reg_203.read(), ap_const_lv1_0))) {
            ap_NS_fsm = ap_ST_fsm_state5;
        } else {
            ap_NS_fsm = ap_ST_fsm_state4;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        ap_NS_fsm = ap_ST_fsm_state6;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        ap_NS_fsm = ap_ST_fsm_state6;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && ((esl_seteq<1,1,1>(or_cond8_reg_241.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond5_fu_160_p2.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(or_cond3_fu_148_p2.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(tmp_s_reg_207.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(tmp_reg_203.read(), ap_const_lv1_0)) || 
  (esl_seteq<1,1,1>(or_cond7_reg_232.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond5_fu_160_p2.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(or_cond3_fu_148_p2.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(tmp_s_reg_207.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_reg_203.read(), ap_const_lv1_0)) || 
  (esl_seteq<1,1,1>(demorgan_fu_180_p2.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(or_cond_reg_261.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(tmp_s_reg_207.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(tmp_reg_203.read(), ap_const_lv1_1)) || 
  (esl_seteq<1,1,1>(demorgan_fu_180_p2.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(tmp_9_reg_257.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(tmp_s_reg_207.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_reg_203.read(), ap_const_lv1_1)) || 
  (esl_seteq<1,1,1>(demorgan_fu_180_p2.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(tmp_2_reg_222.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_s_reg_207.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_reg_203.read(), ap_const_lv1_1))))) {
            ap_NS_fsm = ap_ST_fsm_state48;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && ((esl_seteq<1,1,1>(or_cond3_fu_148_p2.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_reg_203.read(), ap_const_lv1_0)) || 
  (esl_seteq<1,1,1>(or_cond8_reg_241.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(tmp_s_reg_207.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(tmp_reg_203.read(), ap_const_lv1_0)) || 
  (esl_seteq<1,1,1>(or_cond7_reg_232.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(tmp_s_reg_207.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_reg_203.read(), ap_const_lv1_0)) || 
  (esl_seteq<1,1,1>(demorgan_fu_180_p2.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_reg_203.read(), ap_const_lv1_1)) || 
  (esl_seteq<1,1,1>(or_cond_reg_261.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_s_reg_207.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(tmp_reg_203.read(), ap_const_lv1_1)) || 
  (esl_seteq<1,1,1>(tmp_9_reg_257.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_2_reg_222.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(tmp_s_reg_207.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_reg_203.read(), ap_const_lv1_1))))) {
            ap_NS_fsm = ap_ST_fsm_state28;
        } else {
            ap_NS_fsm = ap_ST_fsm_state7;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_fu_110_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state11;
        } else {
            ap_NS_fsm = ap_ST_fsm_state9;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        ap_NS_fsm = ap_ST_fsm_state10;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(grp_rotateCubeHorizontal_fu_85_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state7;
        } else {
            ap_NS_fsm = ap_ST_fsm_state10;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_71_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state13;
        } else {
            ap_NS_fsm = ap_ST_fsm_state12;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_71_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state15;
        } else {
            ap_NS_fsm = ap_ST_fsm_state14;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_71_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state17;
        } else {
            ap_NS_fsm = ap_ST_fsm_state16;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_71_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state19;
        } else {
            ap_NS_fsm = ap_ST_fsm_state18;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_71_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state21;
        } else {
            ap_NS_fsm = ap_ST_fsm_state20;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_71_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state23;
        } else {
            ap_NS_fsm = ap_ST_fsm_state22;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_71_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state25;
        } else {
            ap_NS_fsm = ap_ST_fsm_state24;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_71_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state68;
        } else {
            ap_NS_fsm = ap_ST_fsm_state26;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state6;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && esl_seteq<1,1,1>(grp_fu_110_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state32;
        } else {
            ap_NS_fsm = ap_ST_fsm_state30;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && esl_seteq<1,1,1>(grp_rotateCubeHorizontal_fu_85_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state28;
        } else {
            ap_NS_fsm = ap_ST_fsm_state31;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_71_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state34;
        } else {
            ap_NS_fsm = ap_ST_fsm_state33;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_71_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state36;
        } else {
            ap_NS_fsm = ap_ST_fsm_state35;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_71_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state38;
        } else {
            ap_NS_fsm = ap_ST_fsm_state37;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_71_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state40;
        } else {
            ap_NS_fsm = ap_ST_fsm_state39;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_71_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state42;
        } else {
            ap_NS_fsm = ap_ST_fsm_state41;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_71_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state44;
        } else {
            ap_NS_fsm = ap_ST_fsm_state43;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_71_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state46;
        } else {
            ap_NS_fsm = ap_ST_fsm_state45;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_71_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state69;
        } else {
            ap_NS_fsm = ap_ST_fsm_state47;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && esl_seteq<1,1,1>(grp_fu_110_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state52;
        } else {
            ap_NS_fsm = ap_ST_fsm_state50;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && esl_seteq<1,1,1>(grp_rotateCubeHorizontal_fu_85_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state48;
        } else {
            ap_NS_fsm = ap_ST_fsm_state51;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_71_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state54;
        } else {
            ap_NS_fsm = ap_ST_fsm_state53;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_71_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state56;
        } else {
            ap_NS_fsm = ap_ST_fsm_state55;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_71_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state58;
        } else {
            ap_NS_fsm = ap_ST_fsm_state57;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_71_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state60;
        } else {
            ap_NS_fsm = ap_ST_fsm_state59;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_71_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state62;
        } else {
            ap_NS_fsm = ap_ST_fsm_state61;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_71_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state64;
        } else {
            ap_NS_fsm = ap_ST_fsm_state63;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state65;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_71_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state66;
        } else {
            ap_NS_fsm = ap_ST_fsm_state65;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_71_ap_done.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state68;
        } else {
            ap_NS_fsm = ap_ST_fsm_state67;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state69;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state1;
    }
    else
    {
        ap_NS_fsm =  (sc_lv<69>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
}

