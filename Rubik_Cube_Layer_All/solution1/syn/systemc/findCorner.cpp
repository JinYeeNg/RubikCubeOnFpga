// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "findCorner.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic findCorner::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic findCorner::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<13> findCorner::ap_ST_fsm_state1 = "1";
const sc_lv<13> findCorner::ap_ST_fsm_state2 = "10";
const sc_lv<13> findCorner::ap_ST_fsm_state3 = "100";
const sc_lv<13> findCorner::ap_ST_fsm_state4 = "1000";
const sc_lv<13> findCorner::ap_ST_fsm_state5 = "10000";
const sc_lv<13> findCorner::ap_ST_fsm_state6 = "100000";
const sc_lv<13> findCorner::ap_ST_fsm_state7 = "1000000";
const sc_lv<13> findCorner::ap_ST_fsm_state8 = "10000000";
const sc_lv<13> findCorner::ap_ST_fsm_state9 = "100000000";
const sc_lv<13> findCorner::ap_ST_fsm_state10 = "1000000000";
const sc_lv<13> findCorner::ap_ST_fsm_state11 = "10000000000";
const sc_lv<13> findCorner::ap_ST_fsm_state12 = "100000000000";
const sc_lv<13> findCorner::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<32> findCorner::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> findCorner::ap_const_lv32_1 = "1";
const sc_lv<32> findCorner::ap_const_lv32_2 = "10";
const sc_lv<32> findCorner::ap_const_lv32_5 = "101";
const sc_lv<32> findCorner::ap_const_lv32_8 = "1000";
const sc_lv<32> findCorner::ap_const_lv32_B = "1011";
const sc_lv<32> findCorner::ap_const_lv32_3 = "11";
const sc_lv<32> findCorner::ap_const_lv32_4 = "100";
const sc_lv<32> findCorner::ap_const_lv32_6 = "110";
const sc_lv<32> findCorner::ap_const_lv32_7 = "111";
const sc_lv<32> findCorner::ap_const_lv32_9 = "1001";
const sc_lv<32> findCorner::ap_const_lv32_A = "1010";
const sc_lv<6> findCorner::ap_const_lv6_6 = "110";
const sc_lv<6> findCorner::ap_const_lv6_26 = "100110";
const sc_lv<6> findCorner::ap_const_lv6_1B = "11011";
const sc_lv<6> findCorner::ap_const_lv6_0 = "000000";
const sc_lv<6> findCorner::ap_const_lv6_14 = "10100";
const sc_lv<6> findCorner::ap_const_lv6_24 = "100100";
const sc_lv<6> findCorner::ap_const_lv6_2 = "10";
const sc_lv<6> findCorner::ap_const_lv6_12 = "10010";
const sc_lv<6> findCorner::ap_const_lv6_2F = "101111";
const sc_lv<6> findCorner::ap_const_lv6_8 = "1000";
const sc_lv<6> findCorner::ap_const_lv6_1D = "11101";
const sc_lv<6> findCorner::ap_const_lv6_2D = "101101";
const sc_lv<6> findCorner::ap_const_lv6_9 = "1001";
const sc_lv<6> findCorner::ap_const_lv6_21 = "100001";
const sc_lv<6> findCorner::ap_const_lv6_2C = "101100";
const sc_lv<6> findCorner::ap_const_lv6_F = "1111";
const sc_lv<6> findCorner::ap_const_lv6_1A = "11010";
const sc_lv<6> findCorner::ap_const_lv6_2A = "101010";
const sc_lv<6> findCorner::ap_const_lv6_11 = "10001";
const sc_lv<6> findCorner::ap_const_lv6_18 = "11000";
const sc_lv<6> findCorner::ap_const_lv6_35 = "110101";
const sc_lv<6> findCorner::ap_const_lv6_B = "1011";
const sc_lv<6> findCorner::ap_const_lv6_23 = "100011";
const sc_lv<6> findCorner::ap_const_lv6_33 = "110011";
const sc_lv<3> findCorner::ap_const_lv3_0 = "000";
const sc_lv<32> findCorner::ap_const_lv32_C = "1100";
const sc_lv<2> findCorner::ap_const_lv2_2 = "10";
const sc_lv<2> findCorner::ap_const_lv2_3 = "11";
const sc_lv<3> findCorner::ap_const_lv3_4 = "100";
const sc_lv<3> findCorner::ap_const_lv3_5 = "101";
const sc_lv<3> findCorner::ap_const_lv3_6 = "110";
const sc_lv<3> findCorner::ap_const_lv3_7 = "111";
const sc_lv<4> findCorner::ap_const_lv4_8 = "1000";
const sc_lv<1> findCorner::ap_const_lv1_1 = "1";
const sc_lv<4> findCorner::ap_const_lv4_0 = "0000";
const bool findCorner::ap_const_boolean_1 = true;

findCorner::findCorner(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_UnifiedRetVal_fu_633_p3);
    sensitive << ( agg_result_V_6_cast_fu_580_p1 );
    sensitive << ( sel_tmp15_fu_627_p2 );
    sensitive << ( p_agg_result_V_6_fu_619_p3 );

    SC_METHOD(thread_agg_result_V_1_fu_290_p3);
    sensitive << ( agg_result_V_cast_fu_237_p1 );
    sensitive << ( sel_tmp6_fu_284_p2 );
    sensitive << ( p_agg_result_V_fu_276_p3 );

    SC_METHOD(thread_agg_result_V_2_cast_fu_353_p1);
    sensitive << ( agg_result_V_2_reg_678 );

    SC_METHOD(thread_agg_result_V_2_fu_347_p3);
    sensitive << ( agg_result_V_1_reg_667 );
    sensitive << ( sel_tmp10_reg_673 );
    sensitive << ( p_agg_result_V_1_fu_340_p3 );

    SC_METHOD(thread_agg_result_V_3_fu_406_p3);
    sensitive << ( agg_result_V_2_cast_fu_353_p1 );
    sensitive << ( sel_tmp_fu_400_p2 );
    sensitive << ( p_agg_result_V_2_fu_392_p3 );

    SC_METHOD(thread_agg_result_V_4_fu_463_p3);
    sensitive << ( agg_result_V_3_reg_683 );
    sensitive << ( sel_tmp12_reg_689 );
    sensitive << ( p_agg_result_V_3_fu_456_p3 );

    SC_METHOD(thread_agg_result_V_5_fu_518_p3);
    sensitive << ( agg_result_V_4_reg_694 );
    sensitive << ( sel_tmp13_fu_512_p2 );
    sensitive << ( p_agg_result_V_4_fu_505_p3 );

    SC_METHOD(thread_agg_result_V_6_cast_fu_580_p1);
    sensitive << ( agg_result_V_6_reg_711 );

    SC_METHOD(thread_agg_result_V_6_fu_574_p3);
    sensitive << ( agg_result_V_5_reg_700 );
    sensitive << ( sel_tmp14_reg_706 );
    sensitive << ( p_agg_result_V_5_fu_567_p3 );

    SC_METHOD(thread_agg_result_V_cast_fu_237_p1);
    sensitive << ( agg_result_V_reg_662 );

    SC_METHOD(thread_agg_result_V_fu_231_p2);
    sensitive << ( sel_tmp2_fu_225_p2 );
    sensitive << ( or_cond5_fu_219_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( UnifiedRetVal_fu_633_p3 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_cubieColor_V_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_cubieColor_V_address1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_cubieColor_V_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_cubieColor_V_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_fu_117_p2);
    sensitive << ( cubieColor_V_q0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sel_tmp10_reg_673 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( sel_tmp12_reg_689 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( sel_tmp14_reg_706 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_fu_123_p2);
    sensitive << ( sCC_V );
    sensitive << ( cubieColor_V_q0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sel_tmp10_reg_673 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( sel_tmp12_reg_689 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( sel_tmp14_reg_706 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_fu_129_p2);
    sensitive << ( tCC_V );
    sensitive << ( cubieColor_V_q0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sel_tmp10_reg_673 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( sel_tmp12_reg_689 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( sel_tmp14_reg_706 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_fu_135_p2);
    sensitive << ( cubieColor_V_q1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_fu_141_p2);
    sensitive << ( sCC_V );
    sensitive << ( cubieColor_V_q1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_fu_146_p2);
    sensitive << ( tCC_V );
    sensitive << ( cubieColor_V_q1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_fu_156_p2);
    sensitive << ( reg_151 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_fu_162_p2);
    sensitive << ( sCC_V );
    sensitive << ( reg_151 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_fu_168_p2);
    sensitive << ( tCC_V );
    sensitive << ( reg_151 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_or_cond11_fu_270_p2);
    sensitive << ( tmp6_fu_264_p2 );
    sensitive << ( grp_fu_135_p2 );

    SC_METHOD(thread_or_cond13_fu_304_p2);
    sensitive << ( grp_fu_117_p2 );
    sensitive << ( tmp7_fu_298_p2 );

    SC_METHOD(thread_or_cond15_fu_316_p2);
    sensitive << ( grp_fu_135_p2 );
    sensitive << ( tmp8_fu_310_p2 );

    SC_METHOD(thread_or_cond17_fu_334_p2);
    sensitive << ( grp_fu_117_p2 );
    sensitive << ( tmp9_fu_328_p2 );

    SC_METHOD(thread_or_cond19_fu_362_p2);
    sensitive << ( grp_fu_156_p2 );
    sensitive << ( tmp10_fu_356_p2 );

    SC_METHOD(thread_or_cond1_fu_180_p2);
    sensitive << ( tmp1_fu_174_p2 );
    sensitive << ( grp_fu_156_p2 );

    SC_METHOD(thread_or_cond21_fu_374_p2);
    sensitive << ( grp_fu_117_p2 );
    sensitive << ( tmp11_fu_368_p2 );

    SC_METHOD(thread_or_cond23_fu_386_p2);
    sensitive << ( grp_fu_135_p2 );
    sensitive << ( tmp12_fu_380_p2 );

    SC_METHOD(thread_or_cond24_fu_432_p2);
    sensitive << ( grp_fu_135_p2 );
    sensitive << ( tmp14_fu_426_p2 );

    SC_METHOD(thread_or_cond25_fu_450_p2);
    sensitive << ( grp_fu_117_p2 );
    sensitive << ( tmp15_fu_444_p2 );

    SC_METHOD(thread_or_cond26_fu_475_p2);
    sensitive << ( grp_fu_156_p2 );
    sensitive << ( tmp16_fu_469_p2 );

    SC_METHOD(thread_or_cond27_fu_487_p2);
    sensitive << ( grp_fu_117_p2 );
    sensitive << ( tmp17_fu_481_p2 );

    SC_METHOD(thread_or_cond28_fu_499_p2);
    sensitive << ( grp_fu_135_p2 );
    sensitive << ( tmp18_fu_493_p2 );

    SC_METHOD(thread_or_cond29_fu_531_p2);
    sensitive << ( grp_fu_117_p2 );
    sensitive << ( tmp19_fu_525_p2 );

    SC_METHOD(thread_or_cond30_fu_543_p2);
    sensitive << ( grp_fu_135_p2 );
    sensitive << ( tmp20_fu_537_p2 );

    SC_METHOD(thread_or_cond31_fu_561_p2);
    sensitive << ( grp_fu_117_p2 );
    sensitive << ( tmp21_fu_555_p2 );

    SC_METHOD(thread_or_cond32_fu_589_p2);
    sensitive << ( grp_fu_156_p2 );
    sensitive << ( tmp22_fu_583_p2 );

    SC_METHOD(thread_or_cond33_fu_601_p2);
    sensitive << ( grp_fu_117_p2 );
    sensitive << ( tmp23_fu_595_p2 );

    SC_METHOD(thread_or_cond34_fu_613_p2);
    sensitive << ( grp_fu_135_p2 );
    sensitive << ( tmp24_fu_607_p2 );

    SC_METHOD(thread_or_cond3_fu_207_p2);
    sensitive << ( tmp2_fu_201_p2 );
    sensitive << ( tmp_132_fu_186_p2 );

    SC_METHOD(thread_or_cond5_fu_219_p2);
    sensitive << ( tmp3_fu_213_p2 );
    sensitive << ( grp_fu_117_p2 );

    SC_METHOD(thread_or_cond7_fu_246_p2);
    sensitive << ( grp_fu_156_p2 );
    sensitive << ( tmp4_fu_240_p2 );

    SC_METHOD(thread_or_cond9_fu_258_p2);
    sensitive << ( grp_fu_117_p2 );
    sensitive << ( tmp5_fu_252_p2 );

    SC_METHOD(thread_or_cond_fu_420_p2);
    sensitive << ( grp_fu_117_p2 );
    sensitive << ( tmp13_fu_414_p2 );

    SC_METHOD(thread_p_agg_result_V_1_fu_340_p3);
    sensitive << ( agg_result_V_1_reg_667 );
    sensitive << ( or_cond17_fu_334_p2 );

    SC_METHOD(thread_p_agg_result_V_2_fu_392_p3);
    sensitive << ( or_cond23_fu_386_p2 );
    sensitive << ( agg_result_V_2_cast_fu_353_p1 );

    SC_METHOD(thread_p_agg_result_V_3_fu_456_p3);
    sensitive << ( agg_result_V_3_reg_683 );
    sensitive << ( or_cond25_fu_450_p2 );

    SC_METHOD(thread_p_agg_result_V_4_fu_505_p3);
    sensitive << ( agg_result_V_4_reg_694 );
    sensitive << ( or_cond28_fu_499_p2 );

    SC_METHOD(thread_p_agg_result_V_5_fu_567_p3);
    sensitive << ( agg_result_V_5_reg_700 );
    sensitive << ( or_cond31_fu_561_p2 );

    SC_METHOD(thread_p_agg_result_V_6_fu_619_p3);
    sensitive << ( or_cond34_fu_613_p2 );
    sensitive << ( agg_result_V_6_cast_fu_580_p1 );

    SC_METHOD(thread_p_agg_result_V_fu_276_p3);
    sensitive << ( or_cond11_fu_270_p2 );
    sensitive << ( agg_result_V_cast_fu_237_p1 );

    SC_METHOD(thread_sel_tmp10_fu_322_p2);
    sensitive << ( or_cond13_fu_304_p2 );
    sensitive << ( or_cond15_fu_316_p2 );

    SC_METHOD(thread_sel_tmp12_fu_438_p2);
    sensitive << ( or_cond_fu_420_p2 );
    sensitive << ( or_cond24_fu_432_p2 );

    SC_METHOD(thread_sel_tmp13_fu_512_p2);
    sensitive << ( or_cond26_fu_475_p2 );
    sensitive << ( or_cond27_fu_487_p2 );

    SC_METHOD(thread_sel_tmp14_fu_549_p2);
    sensitive << ( or_cond29_fu_531_p2 );
    sensitive << ( or_cond30_fu_543_p2 );

    SC_METHOD(thread_sel_tmp15_fu_627_p2);
    sensitive << ( or_cond32_fu_589_p2 );
    sensitive << ( or_cond33_fu_601_p2 );

    SC_METHOD(thread_sel_tmp2_fu_225_p2);
    sensitive << ( or_cond1_fu_180_p2 );
    sensitive << ( or_cond3_fu_207_p2 );

    SC_METHOD(thread_sel_tmp6_fu_284_p2);
    sensitive << ( or_cond7_fu_246_p2 );
    sensitive << ( or_cond9_fu_258_p2 );

    SC_METHOD(thread_sel_tmp_fu_400_p2);
    sensitive << ( or_cond19_fu_362_p2 );
    sensitive << ( or_cond21_fu_374_p2 );

    SC_METHOD(thread_tmp10_fu_356_p2);
    sensitive << ( grp_fu_162_p2 );
    sensitive << ( grp_fu_168_p2 );

    SC_METHOD(thread_tmp11_fu_368_p2);
    sensitive << ( grp_fu_123_p2 );
    sensitive << ( grp_fu_129_p2 );

    SC_METHOD(thread_tmp12_fu_380_p2);
    sensitive << ( grp_fu_141_p2 );
    sensitive << ( grp_fu_146_p2 );

    SC_METHOD(thread_tmp13_fu_414_p2);
    sensitive << ( grp_fu_123_p2 );
    sensitive << ( grp_fu_129_p2 );

    SC_METHOD(thread_tmp14_fu_426_p2);
    sensitive << ( grp_fu_141_p2 );
    sensitive << ( grp_fu_146_p2 );

    SC_METHOD(thread_tmp15_fu_444_p2);
    sensitive << ( grp_fu_123_p2 );
    sensitive << ( grp_fu_129_p2 );

    SC_METHOD(thread_tmp16_fu_469_p2);
    sensitive << ( grp_fu_162_p2 );
    sensitive << ( grp_fu_168_p2 );

    SC_METHOD(thread_tmp17_fu_481_p2);
    sensitive << ( grp_fu_123_p2 );
    sensitive << ( grp_fu_129_p2 );

    SC_METHOD(thread_tmp18_fu_493_p2);
    sensitive << ( grp_fu_141_p2 );
    sensitive << ( grp_fu_146_p2 );

    SC_METHOD(thread_tmp19_fu_525_p2);
    sensitive << ( grp_fu_123_p2 );
    sensitive << ( grp_fu_129_p2 );

    SC_METHOD(thread_tmp1_fu_174_p2);
    sensitive << ( grp_fu_162_p2 );
    sensitive << ( grp_fu_168_p2 );

    SC_METHOD(thread_tmp20_fu_537_p2);
    sensitive << ( grp_fu_141_p2 );
    sensitive << ( grp_fu_146_p2 );

    SC_METHOD(thread_tmp21_fu_555_p2);
    sensitive << ( grp_fu_123_p2 );
    sensitive << ( grp_fu_129_p2 );

    SC_METHOD(thread_tmp22_fu_583_p2);
    sensitive << ( grp_fu_162_p2 );
    sensitive << ( grp_fu_168_p2 );

    SC_METHOD(thread_tmp23_fu_595_p2);
    sensitive << ( grp_fu_123_p2 );
    sensitive << ( grp_fu_129_p2 );

    SC_METHOD(thread_tmp24_fu_607_p2);
    sensitive << ( grp_fu_141_p2 );
    sensitive << ( grp_fu_146_p2 );

    SC_METHOD(thread_tmp2_fu_201_p2);
    sensitive << ( tmp_133_fu_191_p2 );
    sensitive << ( tmp_134_fu_196_p2 );

    SC_METHOD(thread_tmp3_fu_213_p2);
    sensitive << ( grp_fu_123_p2 );
    sensitive << ( grp_fu_129_p2 );

    SC_METHOD(thread_tmp4_fu_240_p2);
    sensitive << ( grp_fu_162_p2 );
    sensitive << ( grp_fu_168_p2 );

    SC_METHOD(thread_tmp5_fu_252_p2);
    sensitive << ( grp_fu_123_p2 );
    sensitive << ( grp_fu_129_p2 );

    SC_METHOD(thread_tmp6_fu_264_p2);
    sensitive << ( grp_fu_141_p2 );
    sensitive << ( grp_fu_146_p2 );

    SC_METHOD(thread_tmp7_fu_298_p2);
    sensitive << ( grp_fu_123_p2 );
    sensitive << ( grp_fu_129_p2 );

    SC_METHOD(thread_tmp8_fu_310_p2);
    sensitive << ( grp_fu_141_p2 );
    sensitive << ( grp_fu_146_p2 );

    SC_METHOD(thread_tmp9_fu_328_p2);
    sensitive << ( grp_fu_123_p2 );
    sensitive << ( grp_fu_129_p2 );

    SC_METHOD(thread_tmp_132_fu_186_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( cubieColor_V_load_108_reg_641 );

    SC_METHOD(thread_tmp_133_fu_191_p2);
    sensitive << ( sCC_V );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( cubieColor_V_load_108_reg_641 );

    SC_METHOD(thread_tmp_134_fu_196_p2);
    sensitive << ( tCC_V );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( cubieColor_V_load_108_reg_641 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    ap_CS_fsm = "0000000000001";
    ap_return_preg = "0000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "findCorner_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, sCC_V, "(port)sCC_V");
    sc_trace(mVcdFile, tCC_V, "(port)tCC_V");
    sc_trace(mVcdFile, cubieColor_V_address0, "(port)cubieColor_V_address0");
    sc_trace(mVcdFile, cubieColor_V_ce0, "(port)cubieColor_V_ce0");
    sc_trace(mVcdFile, cubieColor_V_q0, "(port)cubieColor_V_q0");
    sc_trace(mVcdFile, cubieColor_V_address1, "(port)cubieColor_V_address1");
    sc_trace(mVcdFile, cubieColor_V_ce1, "(port)cubieColor_V_ce1");
    sc_trace(mVcdFile, cubieColor_V_q1, "(port)cubieColor_V_q1");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_151, "reg_151");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, cubieColor_V_load_108_reg_641, "cubieColor_V_load_108_reg_641");
    sc_trace(mVcdFile, agg_result_V_fu_231_p2, "agg_result_V_fu_231_p2");
    sc_trace(mVcdFile, agg_result_V_reg_662, "agg_result_V_reg_662");
    sc_trace(mVcdFile, agg_result_V_1_fu_290_p3, "agg_result_V_1_fu_290_p3");
    sc_trace(mVcdFile, agg_result_V_1_reg_667, "agg_result_V_1_reg_667");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, sel_tmp10_fu_322_p2, "sel_tmp10_fu_322_p2");
    sc_trace(mVcdFile, sel_tmp10_reg_673, "sel_tmp10_reg_673");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, agg_result_V_2_fu_347_p3, "agg_result_V_2_fu_347_p3");
    sc_trace(mVcdFile, agg_result_V_2_reg_678, "agg_result_V_2_reg_678");
    sc_trace(mVcdFile, agg_result_V_3_fu_406_p3, "agg_result_V_3_fu_406_p3");
    sc_trace(mVcdFile, agg_result_V_3_reg_683, "agg_result_V_3_reg_683");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, sel_tmp12_fu_438_p2, "sel_tmp12_fu_438_p2");
    sc_trace(mVcdFile, sel_tmp12_reg_689, "sel_tmp12_reg_689");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, agg_result_V_4_fu_463_p3, "agg_result_V_4_fu_463_p3");
    sc_trace(mVcdFile, agg_result_V_4_reg_694, "agg_result_V_4_reg_694");
    sc_trace(mVcdFile, agg_result_V_5_fu_518_p3, "agg_result_V_5_fu_518_p3");
    sc_trace(mVcdFile, agg_result_V_5_reg_700, "agg_result_V_5_reg_700");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, sel_tmp14_fu_549_p2, "sel_tmp14_fu_549_p2");
    sc_trace(mVcdFile, sel_tmp14_reg_706, "sel_tmp14_reg_706");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, agg_result_V_6_fu_574_p3, "agg_result_V_6_fu_574_p3");
    sc_trace(mVcdFile, agg_result_V_6_reg_711, "agg_result_V_6_reg_711");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, grp_fu_162_p2, "grp_fu_162_p2");
    sc_trace(mVcdFile, grp_fu_168_p2, "grp_fu_168_p2");
    sc_trace(mVcdFile, tmp1_fu_174_p2, "tmp1_fu_174_p2");
    sc_trace(mVcdFile, grp_fu_156_p2, "grp_fu_156_p2");
    sc_trace(mVcdFile, tmp_133_fu_191_p2, "tmp_133_fu_191_p2");
    sc_trace(mVcdFile, tmp_134_fu_196_p2, "tmp_134_fu_196_p2");
    sc_trace(mVcdFile, tmp2_fu_201_p2, "tmp2_fu_201_p2");
    sc_trace(mVcdFile, tmp_132_fu_186_p2, "tmp_132_fu_186_p2");
    sc_trace(mVcdFile, grp_fu_123_p2, "grp_fu_123_p2");
    sc_trace(mVcdFile, grp_fu_129_p2, "grp_fu_129_p2");
    sc_trace(mVcdFile, tmp3_fu_213_p2, "tmp3_fu_213_p2");
    sc_trace(mVcdFile, grp_fu_117_p2, "grp_fu_117_p2");
    sc_trace(mVcdFile, or_cond1_fu_180_p2, "or_cond1_fu_180_p2");
    sc_trace(mVcdFile, or_cond3_fu_207_p2, "or_cond3_fu_207_p2");
    sc_trace(mVcdFile, sel_tmp2_fu_225_p2, "sel_tmp2_fu_225_p2");
    sc_trace(mVcdFile, or_cond5_fu_219_p2, "or_cond5_fu_219_p2");
    sc_trace(mVcdFile, tmp4_fu_240_p2, "tmp4_fu_240_p2");
    sc_trace(mVcdFile, tmp5_fu_252_p2, "tmp5_fu_252_p2");
    sc_trace(mVcdFile, grp_fu_141_p2, "grp_fu_141_p2");
    sc_trace(mVcdFile, grp_fu_146_p2, "grp_fu_146_p2");
    sc_trace(mVcdFile, tmp6_fu_264_p2, "tmp6_fu_264_p2");
    sc_trace(mVcdFile, grp_fu_135_p2, "grp_fu_135_p2");
    sc_trace(mVcdFile, or_cond11_fu_270_p2, "or_cond11_fu_270_p2");
    sc_trace(mVcdFile, agg_result_V_cast_fu_237_p1, "agg_result_V_cast_fu_237_p1");
    sc_trace(mVcdFile, or_cond7_fu_246_p2, "or_cond7_fu_246_p2");
    sc_trace(mVcdFile, or_cond9_fu_258_p2, "or_cond9_fu_258_p2");
    sc_trace(mVcdFile, sel_tmp6_fu_284_p2, "sel_tmp6_fu_284_p2");
    sc_trace(mVcdFile, p_agg_result_V_fu_276_p3, "p_agg_result_V_fu_276_p3");
    sc_trace(mVcdFile, tmp7_fu_298_p2, "tmp7_fu_298_p2");
    sc_trace(mVcdFile, tmp8_fu_310_p2, "tmp8_fu_310_p2");
    sc_trace(mVcdFile, or_cond13_fu_304_p2, "or_cond13_fu_304_p2");
    sc_trace(mVcdFile, or_cond15_fu_316_p2, "or_cond15_fu_316_p2");
    sc_trace(mVcdFile, tmp9_fu_328_p2, "tmp9_fu_328_p2");
    sc_trace(mVcdFile, or_cond17_fu_334_p2, "or_cond17_fu_334_p2");
    sc_trace(mVcdFile, p_agg_result_V_1_fu_340_p3, "p_agg_result_V_1_fu_340_p3");
    sc_trace(mVcdFile, tmp10_fu_356_p2, "tmp10_fu_356_p2");
    sc_trace(mVcdFile, tmp11_fu_368_p2, "tmp11_fu_368_p2");
    sc_trace(mVcdFile, tmp12_fu_380_p2, "tmp12_fu_380_p2");
    sc_trace(mVcdFile, or_cond23_fu_386_p2, "or_cond23_fu_386_p2");
    sc_trace(mVcdFile, agg_result_V_2_cast_fu_353_p1, "agg_result_V_2_cast_fu_353_p1");
    sc_trace(mVcdFile, or_cond19_fu_362_p2, "or_cond19_fu_362_p2");
    sc_trace(mVcdFile, or_cond21_fu_374_p2, "or_cond21_fu_374_p2");
    sc_trace(mVcdFile, sel_tmp_fu_400_p2, "sel_tmp_fu_400_p2");
    sc_trace(mVcdFile, p_agg_result_V_2_fu_392_p3, "p_agg_result_V_2_fu_392_p3");
    sc_trace(mVcdFile, tmp13_fu_414_p2, "tmp13_fu_414_p2");
    sc_trace(mVcdFile, tmp14_fu_426_p2, "tmp14_fu_426_p2");
    sc_trace(mVcdFile, or_cond_fu_420_p2, "or_cond_fu_420_p2");
    sc_trace(mVcdFile, or_cond24_fu_432_p2, "or_cond24_fu_432_p2");
    sc_trace(mVcdFile, tmp15_fu_444_p2, "tmp15_fu_444_p2");
    sc_trace(mVcdFile, or_cond25_fu_450_p2, "or_cond25_fu_450_p2");
    sc_trace(mVcdFile, p_agg_result_V_3_fu_456_p3, "p_agg_result_V_3_fu_456_p3");
    sc_trace(mVcdFile, tmp16_fu_469_p2, "tmp16_fu_469_p2");
    sc_trace(mVcdFile, tmp17_fu_481_p2, "tmp17_fu_481_p2");
    sc_trace(mVcdFile, tmp18_fu_493_p2, "tmp18_fu_493_p2");
    sc_trace(mVcdFile, or_cond28_fu_499_p2, "or_cond28_fu_499_p2");
    sc_trace(mVcdFile, or_cond26_fu_475_p2, "or_cond26_fu_475_p2");
    sc_trace(mVcdFile, or_cond27_fu_487_p2, "or_cond27_fu_487_p2");
    sc_trace(mVcdFile, sel_tmp13_fu_512_p2, "sel_tmp13_fu_512_p2");
    sc_trace(mVcdFile, p_agg_result_V_4_fu_505_p3, "p_agg_result_V_4_fu_505_p3");
    sc_trace(mVcdFile, tmp19_fu_525_p2, "tmp19_fu_525_p2");
    sc_trace(mVcdFile, tmp20_fu_537_p2, "tmp20_fu_537_p2");
    sc_trace(mVcdFile, or_cond29_fu_531_p2, "or_cond29_fu_531_p2");
    sc_trace(mVcdFile, or_cond30_fu_543_p2, "or_cond30_fu_543_p2");
    sc_trace(mVcdFile, tmp21_fu_555_p2, "tmp21_fu_555_p2");
    sc_trace(mVcdFile, or_cond31_fu_561_p2, "or_cond31_fu_561_p2");
    sc_trace(mVcdFile, p_agg_result_V_5_fu_567_p3, "p_agg_result_V_5_fu_567_p3");
    sc_trace(mVcdFile, tmp22_fu_583_p2, "tmp22_fu_583_p2");
    sc_trace(mVcdFile, tmp23_fu_595_p2, "tmp23_fu_595_p2");
    sc_trace(mVcdFile, tmp24_fu_607_p2, "tmp24_fu_607_p2");
    sc_trace(mVcdFile, or_cond34_fu_613_p2, "or_cond34_fu_613_p2");
    sc_trace(mVcdFile, agg_result_V_6_cast_fu_580_p1, "agg_result_V_6_cast_fu_580_p1");
    sc_trace(mVcdFile, or_cond32_fu_589_p2, "or_cond32_fu_589_p2");
    sc_trace(mVcdFile, or_cond33_fu_601_p2, "or_cond33_fu_601_p2");
    sc_trace(mVcdFile, sel_tmp15_fu_627_p2, "sel_tmp15_fu_627_p2");
    sc_trace(mVcdFile, p_agg_result_V_6_fu_619_p3, "p_agg_result_V_6_fu_619_p3");
    sc_trace(mVcdFile, UnifiedRetVal_fu_633_p3, "UnifiedRetVal_fu_633_p3");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

findCorner::~findCorner() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void findCorner::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv4_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
            ap_return_preg = UnifiedRetVal_fu_633_p3.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        reg_151 = cubieColor_V_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        reg_151 = cubieColor_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        agg_result_V_1_reg_667 = agg_result_V_1_fu_290_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        agg_result_V_2_reg_678 = agg_result_V_2_fu_347_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        agg_result_V_3_reg_683 = agg_result_V_3_fu_406_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        agg_result_V_4_reg_694 = agg_result_V_4_fu_463_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        agg_result_V_5_reg_700 = agg_result_V_5_fu_518_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        agg_result_V_6_reg_711 = agg_result_V_6_fu_574_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        agg_result_V_reg_662 = agg_result_V_fu_231_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        cubieColor_V_load_108_reg_641 = cubieColor_V_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        sel_tmp10_reg_673 = sel_tmp10_fu_322_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sel_tmp12_reg_689 = sel_tmp12_fu_438_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        sel_tmp14_reg_706 = sel_tmp14_fu_549_p2.read();
    }
}

void findCorner::thread_UnifiedRetVal_fu_633_p3() {
    UnifiedRetVal_fu_633_p3 = (!sel_tmp15_fu_627_p2.read()[0].is_01())? sc_lv<4>(): ((sel_tmp15_fu_627_p2.read()[0].to_bool())? p_agg_result_V_6_fu_619_p3.read(): agg_result_V_6_cast_fu_580_p1.read());
}

void findCorner::thread_agg_result_V_1_fu_290_p3() {
    agg_result_V_1_fu_290_p3 = (!sel_tmp6_fu_284_p2.read()[0].is_01())? sc_lv<2>(): ((sel_tmp6_fu_284_p2.read()[0].to_bool())? p_agg_result_V_fu_276_p3.read(): agg_result_V_cast_fu_237_p1.read());
}

void findCorner::thread_agg_result_V_2_cast_fu_353_p1() {
    agg_result_V_2_cast_fu_353_p1 = esl_zext<3,2>(agg_result_V_2_reg_678.read());
}

void findCorner::thread_agg_result_V_2_fu_347_p3() {
    agg_result_V_2_fu_347_p3 = (!sel_tmp10_reg_673.read()[0].is_01())? sc_lv<2>(): ((sel_tmp10_reg_673.read()[0].to_bool())? p_agg_result_V_1_fu_340_p3.read(): agg_result_V_1_reg_667.read());
}

void findCorner::thread_agg_result_V_3_fu_406_p3() {
    agg_result_V_3_fu_406_p3 = (!sel_tmp_fu_400_p2.read()[0].is_01())? sc_lv<3>(): ((sel_tmp_fu_400_p2.read()[0].to_bool())? p_agg_result_V_2_fu_392_p3.read(): agg_result_V_2_cast_fu_353_p1.read());
}

void findCorner::thread_agg_result_V_4_fu_463_p3() {
    agg_result_V_4_fu_463_p3 = (!sel_tmp12_reg_689.read()[0].is_01())? sc_lv<3>(): ((sel_tmp12_reg_689.read()[0].to_bool())? p_agg_result_V_3_fu_456_p3.read(): agg_result_V_3_reg_683.read());
}

void findCorner::thread_agg_result_V_5_fu_518_p3() {
    agg_result_V_5_fu_518_p3 = (!sel_tmp13_fu_512_p2.read()[0].is_01())? sc_lv<3>(): ((sel_tmp13_fu_512_p2.read()[0].to_bool())? p_agg_result_V_4_fu_505_p3.read(): agg_result_V_4_reg_694.read());
}

void findCorner::thread_agg_result_V_6_cast_fu_580_p1() {
    agg_result_V_6_cast_fu_580_p1 = esl_zext<4,3>(agg_result_V_6_reg_711.read());
}

void findCorner::thread_agg_result_V_6_fu_574_p3() {
    agg_result_V_6_fu_574_p3 = (!sel_tmp14_reg_706.read()[0].is_01())? sc_lv<3>(): ((sel_tmp14_reg_706.read()[0].to_bool())? p_agg_result_V_5_fu_567_p3.read(): agg_result_V_5_reg_700.read());
}

void findCorner::thread_agg_result_V_cast_fu_237_p1() {
    agg_result_V_cast_fu_237_p1 = esl_zext<2,1>(agg_result_V_reg_662.read());
}

void findCorner::thread_agg_result_V_fu_231_p2() {
    agg_result_V_fu_231_p2 = (sel_tmp2_fu_225_p2.read() & or_cond5_fu_219_p2.read());
}

void findCorner::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void findCorner::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void findCorner::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void findCorner::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void findCorner::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void findCorner::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void findCorner::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void findCorner::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void findCorner::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void findCorner::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void findCorner::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void findCorner::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void findCorner::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void findCorner::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void findCorner::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void findCorner::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void findCorner::thread_ap_return() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        ap_return = UnifiedRetVal_fu_633_p3.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void findCorner::thread_cubieColor_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        cubieColor_V_address0 = ap_const_lv6_23;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        cubieColor_V_address0 = ap_const_lv6_35;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        cubieColor_V_address0 = ap_const_lv6_11;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        cubieColor_V_address0 = ap_const_lv6_1A;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        cubieColor_V_address0 = ap_const_lv6_2C;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        cubieColor_V_address0 = ap_const_lv6_9;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        cubieColor_V_address0 = ap_const_lv6_1D;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        cubieColor_V_address0 = ap_const_lv6_2F;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        cubieColor_V_address0 = ap_const_lv6_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        cubieColor_V_address0 = ap_const_lv6_14;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        cubieColor_V_address0 = ap_const_lv6_1B;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        cubieColor_V_address0 = ap_const_lv6_6;
    } else {
        cubieColor_V_address0 = "XXXXXX";
    }
}

void findCorner::thread_cubieColor_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        cubieColor_V_address1 = ap_const_lv6_33;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        cubieColor_V_address1 = ap_const_lv6_B;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        cubieColor_V_address1 = ap_const_lv6_18;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        cubieColor_V_address1 = ap_const_lv6_2A;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        cubieColor_V_address1 = ap_const_lv6_F;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        cubieColor_V_address1 = ap_const_lv6_21;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        cubieColor_V_address1 = ap_const_lv6_2D;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        cubieColor_V_address1 = ap_const_lv6_8;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        cubieColor_V_address1 = ap_const_lv6_12;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        cubieColor_V_address1 = ap_const_lv6_24;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        cubieColor_V_address1 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        cubieColor_V_address1 = ap_const_lv6_26;
    } else {
        cubieColor_V_address1 = "XXXXXX";
    }
}

void findCorner::thread_cubieColor_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
        cubieColor_V_ce0 = ap_const_logic_1;
    } else {
        cubieColor_V_ce0 = ap_const_logic_0;
    }
}

void findCorner::thread_cubieColor_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
        cubieColor_V_ce1 = ap_const_logic_1;
    } else {
        cubieColor_V_ce1 = ap_const_logic_0;
    }
}

void findCorner::thread_grp_fu_117_p2() {
    grp_fu_117_p2 = (!cubieColor_V_q0.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_q0.read() == ap_const_lv3_0);
}

void findCorner::thread_grp_fu_123_p2() {
    grp_fu_123_p2 = (!cubieColor_V_q0.read().is_01() || !sCC_V.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_q0.read() == sCC_V.read());
}

void findCorner::thread_grp_fu_129_p2() {
    grp_fu_129_p2 = (!cubieColor_V_q0.read().is_01() || !tCC_V.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_q0.read() == tCC_V.read());
}

void findCorner::thread_grp_fu_135_p2() {
    grp_fu_135_p2 = (!cubieColor_V_q1.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_q1.read() == ap_const_lv3_0);
}

void findCorner::thread_grp_fu_141_p2() {
    grp_fu_141_p2 = (!cubieColor_V_q1.read().is_01() || !sCC_V.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_q1.read() == sCC_V.read());
}

void findCorner::thread_grp_fu_146_p2() {
    grp_fu_146_p2 = (!cubieColor_V_q1.read().is_01() || !tCC_V.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_q1.read() == tCC_V.read());
}

void findCorner::thread_grp_fu_156_p2() {
    grp_fu_156_p2 = (!reg_151.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(reg_151.read() == ap_const_lv3_0);
}

void findCorner::thread_grp_fu_162_p2() {
    grp_fu_162_p2 = (!reg_151.read().is_01() || !sCC_V.read().is_01())? sc_lv<1>(): sc_lv<1>(reg_151.read() == sCC_V.read());
}

void findCorner::thread_grp_fu_168_p2() {
    grp_fu_168_p2 = (!reg_151.read().is_01() || !tCC_V.read().is_01())? sc_lv<1>(): sc_lv<1>(reg_151.read() == tCC_V.read());
}

void findCorner::thread_or_cond11_fu_270_p2() {
    or_cond11_fu_270_p2 = (tmp6_fu_264_p2.read() | grp_fu_135_p2.read());
}

void findCorner::thread_or_cond13_fu_304_p2() {
    or_cond13_fu_304_p2 = (tmp7_fu_298_p2.read() | grp_fu_117_p2.read());
}

void findCorner::thread_or_cond15_fu_316_p2() {
    or_cond15_fu_316_p2 = (tmp8_fu_310_p2.read() | grp_fu_135_p2.read());
}

void findCorner::thread_or_cond17_fu_334_p2() {
    or_cond17_fu_334_p2 = (tmp9_fu_328_p2.read() | grp_fu_117_p2.read());
}

void findCorner::thread_or_cond19_fu_362_p2() {
    or_cond19_fu_362_p2 = (tmp10_fu_356_p2.read() | grp_fu_156_p2.read());
}

void findCorner::thread_or_cond1_fu_180_p2() {
    or_cond1_fu_180_p2 = (tmp1_fu_174_p2.read() | grp_fu_156_p2.read());
}

void findCorner::thread_or_cond21_fu_374_p2() {
    or_cond21_fu_374_p2 = (tmp11_fu_368_p2.read() | grp_fu_117_p2.read());
}

void findCorner::thread_or_cond23_fu_386_p2() {
    or_cond23_fu_386_p2 = (tmp12_fu_380_p2.read() | grp_fu_135_p2.read());
}

void findCorner::thread_or_cond24_fu_432_p2() {
    or_cond24_fu_432_p2 = (tmp14_fu_426_p2.read() | grp_fu_135_p2.read());
}

void findCorner::thread_or_cond25_fu_450_p2() {
    or_cond25_fu_450_p2 = (tmp15_fu_444_p2.read() | grp_fu_117_p2.read());
}

void findCorner::thread_or_cond26_fu_475_p2() {
    or_cond26_fu_475_p2 = (tmp16_fu_469_p2.read() | grp_fu_156_p2.read());
}

void findCorner::thread_or_cond27_fu_487_p2() {
    or_cond27_fu_487_p2 = (tmp17_fu_481_p2.read() | grp_fu_117_p2.read());
}

void findCorner::thread_or_cond28_fu_499_p2() {
    or_cond28_fu_499_p2 = (tmp18_fu_493_p2.read() | grp_fu_135_p2.read());
}

void findCorner::thread_or_cond29_fu_531_p2() {
    or_cond29_fu_531_p2 = (tmp19_fu_525_p2.read() | grp_fu_117_p2.read());
}

void findCorner::thread_or_cond30_fu_543_p2() {
    or_cond30_fu_543_p2 = (tmp20_fu_537_p2.read() | grp_fu_135_p2.read());
}

void findCorner::thread_or_cond31_fu_561_p2() {
    or_cond31_fu_561_p2 = (tmp21_fu_555_p2.read() | grp_fu_117_p2.read());
}

void findCorner::thread_or_cond32_fu_589_p2() {
    or_cond32_fu_589_p2 = (tmp22_fu_583_p2.read() | grp_fu_156_p2.read());
}

void findCorner::thread_or_cond33_fu_601_p2() {
    or_cond33_fu_601_p2 = (tmp23_fu_595_p2.read() | grp_fu_117_p2.read());
}

void findCorner::thread_or_cond34_fu_613_p2() {
    or_cond34_fu_613_p2 = (tmp24_fu_607_p2.read() | grp_fu_135_p2.read());
}

void findCorner::thread_or_cond3_fu_207_p2() {
    or_cond3_fu_207_p2 = (tmp2_fu_201_p2.read() | tmp_132_fu_186_p2.read());
}

void findCorner::thread_or_cond5_fu_219_p2() {
    or_cond5_fu_219_p2 = (tmp3_fu_213_p2.read() | grp_fu_117_p2.read());
}

void findCorner::thread_or_cond7_fu_246_p2() {
    or_cond7_fu_246_p2 = (tmp4_fu_240_p2.read() | grp_fu_156_p2.read());
}

void findCorner::thread_or_cond9_fu_258_p2() {
    or_cond9_fu_258_p2 = (tmp5_fu_252_p2.read() | grp_fu_117_p2.read());
}

void findCorner::thread_or_cond_fu_420_p2() {
    or_cond_fu_420_p2 = (tmp13_fu_414_p2.read() | grp_fu_117_p2.read());
}

void findCorner::thread_p_agg_result_V_1_fu_340_p3() {
    p_agg_result_V_1_fu_340_p3 = (!or_cond17_fu_334_p2.read()[0].is_01())? sc_lv<2>(): ((or_cond17_fu_334_p2.read()[0].to_bool())? ap_const_lv2_3: agg_result_V_1_reg_667.read());
}

void findCorner::thread_p_agg_result_V_2_fu_392_p3() {
    p_agg_result_V_2_fu_392_p3 = (!or_cond23_fu_386_p2.read()[0].is_01())? sc_lv<3>(): ((or_cond23_fu_386_p2.read()[0].to_bool())? ap_const_lv3_4: agg_result_V_2_cast_fu_353_p1.read());
}

void findCorner::thread_p_agg_result_V_3_fu_456_p3() {
    p_agg_result_V_3_fu_456_p3 = (!or_cond25_fu_450_p2.read()[0].is_01())? sc_lv<3>(): ((or_cond25_fu_450_p2.read()[0].to_bool())? ap_const_lv3_5: agg_result_V_3_reg_683.read());
}

void findCorner::thread_p_agg_result_V_4_fu_505_p3() {
    p_agg_result_V_4_fu_505_p3 = (!or_cond28_fu_499_p2.read()[0].is_01())? sc_lv<3>(): ((or_cond28_fu_499_p2.read()[0].to_bool())? ap_const_lv3_6: agg_result_V_4_reg_694.read());
}

void findCorner::thread_p_agg_result_V_5_fu_567_p3() {
    p_agg_result_V_5_fu_567_p3 = (!or_cond31_fu_561_p2.read()[0].is_01())? sc_lv<3>(): ((or_cond31_fu_561_p2.read()[0].to_bool())? ap_const_lv3_7: agg_result_V_5_reg_700.read());
}

void findCorner::thread_p_agg_result_V_6_fu_619_p3() {
    p_agg_result_V_6_fu_619_p3 = (!or_cond34_fu_613_p2.read()[0].is_01())? sc_lv<4>(): ((or_cond34_fu_613_p2.read()[0].to_bool())? ap_const_lv4_8: agg_result_V_6_cast_fu_580_p1.read());
}

void findCorner::thread_p_agg_result_V_fu_276_p3() {
    p_agg_result_V_fu_276_p3 = (!or_cond11_fu_270_p2.read()[0].is_01())? sc_lv<2>(): ((or_cond11_fu_270_p2.read()[0].to_bool())? ap_const_lv2_2: agg_result_V_cast_fu_237_p1.read());
}

void findCorner::thread_sel_tmp10_fu_322_p2() {
    sel_tmp10_fu_322_p2 = (or_cond13_fu_304_p2.read() & or_cond15_fu_316_p2.read());
}

void findCorner::thread_sel_tmp12_fu_438_p2() {
    sel_tmp12_fu_438_p2 = (or_cond_fu_420_p2.read() & or_cond24_fu_432_p2.read());
}

void findCorner::thread_sel_tmp13_fu_512_p2() {
    sel_tmp13_fu_512_p2 = (or_cond26_fu_475_p2.read() & or_cond27_fu_487_p2.read());
}

void findCorner::thread_sel_tmp14_fu_549_p2() {
    sel_tmp14_fu_549_p2 = (or_cond29_fu_531_p2.read() & or_cond30_fu_543_p2.read());
}

void findCorner::thread_sel_tmp15_fu_627_p2() {
    sel_tmp15_fu_627_p2 = (or_cond32_fu_589_p2.read() & or_cond33_fu_601_p2.read());
}

void findCorner::thread_sel_tmp2_fu_225_p2() {
    sel_tmp2_fu_225_p2 = (or_cond1_fu_180_p2.read() & or_cond3_fu_207_p2.read());
}

void findCorner::thread_sel_tmp6_fu_284_p2() {
    sel_tmp6_fu_284_p2 = (or_cond7_fu_246_p2.read() & or_cond9_fu_258_p2.read());
}

void findCorner::thread_sel_tmp_fu_400_p2() {
    sel_tmp_fu_400_p2 = (or_cond19_fu_362_p2.read() & or_cond21_fu_374_p2.read());
}

void findCorner::thread_tmp10_fu_356_p2() {
    tmp10_fu_356_p2 = (grp_fu_162_p2.read() | grp_fu_168_p2.read());
}

void findCorner::thread_tmp11_fu_368_p2() {
    tmp11_fu_368_p2 = (grp_fu_123_p2.read() | grp_fu_129_p2.read());
}

void findCorner::thread_tmp12_fu_380_p2() {
    tmp12_fu_380_p2 = (grp_fu_141_p2.read() | grp_fu_146_p2.read());
}

void findCorner::thread_tmp13_fu_414_p2() {
    tmp13_fu_414_p2 = (grp_fu_123_p2.read() | grp_fu_129_p2.read());
}

void findCorner::thread_tmp14_fu_426_p2() {
    tmp14_fu_426_p2 = (grp_fu_141_p2.read() | grp_fu_146_p2.read());
}

void findCorner::thread_tmp15_fu_444_p2() {
    tmp15_fu_444_p2 = (grp_fu_123_p2.read() | grp_fu_129_p2.read());
}

void findCorner::thread_tmp16_fu_469_p2() {
    tmp16_fu_469_p2 = (grp_fu_162_p2.read() | grp_fu_168_p2.read());
}

void findCorner::thread_tmp17_fu_481_p2() {
    tmp17_fu_481_p2 = (grp_fu_123_p2.read() | grp_fu_129_p2.read());
}

void findCorner::thread_tmp18_fu_493_p2() {
    tmp18_fu_493_p2 = (grp_fu_141_p2.read() | grp_fu_146_p2.read());
}

void findCorner::thread_tmp19_fu_525_p2() {
    tmp19_fu_525_p2 = (grp_fu_123_p2.read() | grp_fu_129_p2.read());
}

void findCorner::thread_tmp1_fu_174_p2() {
    tmp1_fu_174_p2 = (grp_fu_162_p2.read() | grp_fu_168_p2.read());
}

void findCorner::thread_tmp20_fu_537_p2() {
    tmp20_fu_537_p2 = (grp_fu_141_p2.read() | grp_fu_146_p2.read());
}

void findCorner::thread_tmp21_fu_555_p2() {
    tmp21_fu_555_p2 = (grp_fu_123_p2.read() | grp_fu_129_p2.read());
}

void findCorner::thread_tmp22_fu_583_p2() {
    tmp22_fu_583_p2 = (grp_fu_162_p2.read() | grp_fu_168_p2.read());
}

void findCorner::thread_tmp23_fu_595_p2() {
    tmp23_fu_595_p2 = (grp_fu_123_p2.read() | grp_fu_129_p2.read());
}

void findCorner::thread_tmp24_fu_607_p2() {
    tmp24_fu_607_p2 = (grp_fu_141_p2.read() | grp_fu_146_p2.read());
}

void findCorner::thread_tmp2_fu_201_p2() {
    tmp2_fu_201_p2 = (tmp_133_fu_191_p2.read() | tmp_134_fu_196_p2.read());
}

void findCorner::thread_tmp3_fu_213_p2() {
    tmp3_fu_213_p2 = (grp_fu_123_p2.read() | grp_fu_129_p2.read());
}

void findCorner::thread_tmp4_fu_240_p2() {
    tmp4_fu_240_p2 = (grp_fu_162_p2.read() | grp_fu_168_p2.read());
}

void findCorner::thread_tmp5_fu_252_p2() {
    tmp5_fu_252_p2 = (grp_fu_123_p2.read() | grp_fu_129_p2.read());
}

void findCorner::thread_tmp6_fu_264_p2() {
    tmp6_fu_264_p2 = (grp_fu_141_p2.read() | grp_fu_146_p2.read());
}

void findCorner::thread_tmp7_fu_298_p2() {
    tmp7_fu_298_p2 = (grp_fu_123_p2.read() | grp_fu_129_p2.read());
}

void findCorner::thread_tmp8_fu_310_p2() {
    tmp8_fu_310_p2 = (grp_fu_141_p2.read() | grp_fu_146_p2.read());
}

void findCorner::thread_tmp9_fu_328_p2() {
    tmp9_fu_328_p2 = (grp_fu_123_p2.read() | grp_fu_129_p2.read());
}

void findCorner::thread_tmp_132_fu_186_p2() {
    tmp_132_fu_186_p2 = (!cubieColor_V_load_108_reg_641.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_load_108_reg_641.read() == ap_const_lv3_0);
}

void findCorner::thread_tmp_133_fu_191_p2() {
    tmp_133_fu_191_p2 = (!cubieColor_V_load_108_reg_641.read().is_01() || !sCC_V.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_load_108_reg_641.read() == sCC_V.read());
}

void findCorner::thread_tmp_134_fu_196_p2() {
    tmp_134_fu_196_p2 = (!cubieColor_V_load_108_reg_641.read().is_01() || !tCC_V.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_load_108_reg_641.read() == tCC_V.read());
}

void findCorner::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<13>) ("XXXXXXXXXXXXX");
            break;
    }
}

}

