// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "solveStage3.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic solveStage3::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic solveStage3::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> solveStage3::ap_ST_fsm_state1 = "1";
const sc_lv<8> solveStage3::ap_ST_fsm_state2 = "10";
const sc_lv<8> solveStage3::ap_ST_fsm_state3 = "100";
const sc_lv<8> solveStage3::ap_ST_fsm_state4 = "1000";
const sc_lv<8> solveStage3::ap_ST_fsm_state5 = "10000";
const sc_lv<8> solveStage3::ap_ST_fsm_state6 = "100000";
const sc_lv<8> solveStage3::ap_ST_fsm_state7 = "1000000";
const sc_lv<8> solveStage3::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> solveStage3::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> solveStage3::ap_const_lv32_2 = "10";
const sc_lv<32> solveStage3::ap_const_lv32_4 = "100";
const sc_lv<32> solveStage3::ap_const_lv32_5 = "101";
const sc_lv<32> solveStage3::ap_const_lv32_6 = "110";
const sc_lv<32> solveStage3::ap_const_lv32_1 = "1";
const sc_lv<32> solveStage3::ap_const_lv32_7 = "111";
const sc_lv<32> solveStage3::ap_const_lv32_3 = "11";
const sc_lv<4> solveStage3::ap_const_lv4_4 = "100";
const sc_lv<1> solveStage3::ap_const_lv1_1 = "1";
const sc_lv<1> solveStage3::ap_const_lv1_0 = "0";
const bool solveStage3::ap_const_boolean_1 = true;

solveStage3::solveStage3(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_stage3Prepare_fu_32 = new stage3Prepare("grp_stage3Prepare_fu_32");
    grp_stage3Prepare_fu_32->ap_clk(ap_clk);
    grp_stage3Prepare_fu_32->ap_rst(ap_rst);
    grp_stage3Prepare_fu_32->ap_start(grp_stage3Prepare_fu_32_ap_start);
    grp_stage3Prepare_fu_32->ap_done(grp_stage3Prepare_fu_32_ap_done);
    grp_stage3Prepare_fu_32->ap_idle(grp_stage3Prepare_fu_32_ap_idle);
    grp_stage3Prepare_fu_32->ap_ready(grp_stage3Prepare_fu_32_ap_ready);
    grp_stage3Prepare_fu_32->fC_V(fC_V);
    grp_stage3Prepare_fu_32->sC_V(sC_V);
    grp_stage3Prepare_fu_32->cubieColor_V_address0(grp_stage3Prepare_fu_32_cubieColor_V_address0);
    grp_stage3Prepare_fu_32->cubieColor_V_ce0(grp_stage3Prepare_fu_32_cubieColor_V_ce0);
    grp_stage3Prepare_fu_32->cubieColor_V_we0(grp_stage3Prepare_fu_32_cubieColor_V_we0);
    grp_stage3Prepare_fu_32->cubieColor_V_d0(grp_stage3Prepare_fu_32_cubieColor_V_d0);
    grp_stage3Prepare_fu_32->cubieColor_V_q0(cubieColor_V_q0);
    grp_stage3Prepare_fu_32->cubieColor_V_address1(grp_stage3Prepare_fu_32_cubieColor_V_address1);
    grp_stage3Prepare_fu_32->cubieColor_V_ce1(grp_stage3Prepare_fu_32_cubieColor_V_ce1);
    grp_stage3Prepare_fu_32->cubieColor_V_we1(grp_stage3Prepare_fu_32_cubieColor_V_we1);
    grp_stage3Prepare_fu_32->cubieColor_V_d1(grp_stage3Prepare_fu_32_cubieColor_V_d1);
    grp_stage3Prepare_fu_32->cubieColor_V_q1(cubieColor_V_q1);
    grp_stage3Prepare_fu_32->moveCounter_V_i(moveCounter_V_i);
    grp_stage3Prepare_fu_32->moveCounter_V_o(grp_stage3Prepare_fu_32_moveCounter_V_o);
    grp_stage3Prepare_fu_32->moveCounter_V_o_ap_vld(grp_stage3Prepare_fu_32_moveCounter_V_o_ap_vld);
    grp_stage3Prepare_fu_32->moves_V_address0(grp_stage3Prepare_fu_32_moves_V_address0);
    grp_stage3Prepare_fu_32->moves_V_ce0(grp_stage3Prepare_fu_32_moves_V_ce0);
    grp_stage3Prepare_fu_32->moves_V_we0(grp_stage3Prepare_fu_32_moves_V_we0);
    grp_stage3Prepare_fu_32->moves_V_d0(grp_stage3Prepare_fu_32_moves_V_d0);
    grp_solveStage3a_fu_44 = new solveStage3a("grp_solveStage3a_fu_44");
    grp_solveStage3a_fu_44->ap_clk(ap_clk);
    grp_solveStage3a_fu_44->ap_rst(ap_rst);
    grp_solveStage3a_fu_44->ap_start(grp_solveStage3a_fu_44_ap_start);
    grp_solveStage3a_fu_44->ap_done(grp_solveStage3a_fu_44_ap_done);
    grp_solveStage3a_fu_44->ap_idle(grp_solveStage3a_fu_44_ap_idle);
    grp_solveStage3a_fu_44->ap_ready(grp_solveStage3a_fu_44_ap_ready);
    grp_solveStage3a_fu_44->moveCounter_V_i(moveCounter_V_i);
    grp_solveStage3a_fu_44->moveCounter_V_o(grp_solveStage3a_fu_44_moveCounter_V_o);
    grp_solveStage3a_fu_44->moveCounter_V_o_ap_vld(grp_solveStage3a_fu_44_moveCounter_V_o_ap_vld);
    grp_solveStage3a_fu_44->moves_V_address0(grp_solveStage3a_fu_44_moves_V_address0);
    grp_solveStage3a_fu_44->moves_V_ce0(grp_solveStage3a_fu_44_moves_V_ce0);
    grp_solveStage3a_fu_44->moves_V_we0(grp_solveStage3a_fu_44_moves_V_we0);
    grp_solveStage3a_fu_44->moves_V_d0(grp_solveStage3a_fu_44_moves_V_d0);
    grp_solveStage3a_fu_44->cubieColor_V_address0(grp_solveStage3a_fu_44_cubieColor_V_address0);
    grp_solveStage3a_fu_44->cubieColor_V_ce0(grp_solveStage3a_fu_44_cubieColor_V_ce0);
    grp_solveStage3a_fu_44->cubieColor_V_we0(grp_solveStage3a_fu_44_cubieColor_V_we0);
    grp_solveStage3a_fu_44->cubieColor_V_d0(grp_solveStage3a_fu_44_cubieColor_V_d0);
    grp_solveStage3a_fu_44->cubieColor_V_q0(cubieColor_V_q0);
    grp_solveStage3a_fu_44->cubieColor_V_address1(grp_solveStage3a_fu_44_cubieColor_V_address1);
    grp_solveStage3a_fu_44->cubieColor_V_ce1(grp_solveStage3a_fu_44_cubieColor_V_ce1);
    grp_solveStage3a_fu_44->cubieColor_V_we1(grp_solveStage3a_fu_44_cubieColor_V_we1);
    grp_solveStage3a_fu_44->cubieColor_V_d1(grp_solveStage3a_fu_44_cubieColor_V_d1);
    grp_solveStage3a_fu_44->cubieColor_V_q1(cubieColor_V_q1);
    grp_findEdge_fu_54 = new findEdge("grp_findEdge_fu_54");
    grp_findEdge_fu_54->ap_clk(ap_clk);
    grp_findEdge_fu_54->ap_rst(ap_rst);
    grp_findEdge_fu_54->ap_start(grp_findEdge_fu_54_ap_start);
    grp_findEdge_fu_54->ap_done(grp_findEdge_fu_54_ap_done);
    grp_findEdge_fu_54->ap_idle(grp_findEdge_fu_54_ap_idle);
    grp_findEdge_fu_54->ap_ready(grp_findEdge_fu_54_ap_ready);
    grp_findEdge_fu_54->fEC_V(fC_V);
    grp_findEdge_fu_54->sEC_V(sC_V);
    grp_findEdge_fu_54->cubieColor_V_address0(grp_findEdge_fu_54_cubieColor_V_address0);
    grp_findEdge_fu_54->cubieColor_V_ce0(grp_findEdge_fu_54_cubieColor_V_ce0);
    grp_findEdge_fu_54->cubieColor_V_q0(cubieColor_V_q0);
    grp_findEdge_fu_54->cubieColor_V_address1(grp_findEdge_fu_54_cubieColor_V_address1);
    grp_findEdge_fu_54->cubieColor_V_ce1(grp_findEdge_fu_54_cubieColor_V_ce1);
    grp_findEdge_fu_54->cubieColor_V_q1(cubieColor_V_q1);
    grp_findEdge_fu_54->ap_return(grp_findEdge_fu_54_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_solveStage3a_fu_44_ap_done );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_solveStage3a_fu_44_ap_done );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_cubieColor_V_address0);
    sensitive << ( grp_stage3Prepare_fu_32_cubieColor_V_address0 );
    sensitive << ( grp_solveStage3a_fu_44_cubieColor_V_address0 );
    sensitive << ( grp_findEdge_fu_54_cubieColor_V_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_cubieColor_V_address1);
    sensitive << ( grp_stage3Prepare_fu_32_cubieColor_V_address1 );
    sensitive << ( grp_solveStage3a_fu_44_cubieColor_V_address1 );
    sensitive << ( grp_findEdge_fu_54_cubieColor_V_address1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_cubieColor_V_ce0);
    sensitive << ( grp_stage3Prepare_fu_32_cubieColor_V_ce0 );
    sensitive << ( grp_solveStage3a_fu_44_cubieColor_V_ce0 );
    sensitive << ( grp_findEdge_fu_54_cubieColor_V_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_cubieColor_V_ce1);
    sensitive << ( grp_stage3Prepare_fu_32_cubieColor_V_ce1 );
    sensitive << ( grp_solveStage3a_fu_44_cubieColor_V_ce1 );
    sensitive << ( grp_findEdge_fu_54_cubieColor_V_ce1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_cubieColor_V_d0);
    sensitive << ( grp_stage3Prepare_fu_32_cubieColor_V_d0 );
    sensitive << ( grp_solveStage3a_fu_44_cubieColor_V_d0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_cubieColor_V_d1);
    sensitive << ( grp_stage3Prepare_fu_32_cubieColor_V_d1 );
    sensitive << ( grp_solveStage3a_fu_44_cubieColor_V_d1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_cubieColor_V_we0);
    sensitive << ( grp_stage3Prepare_fu_32_cubieColor_V_we0 );
    sensitive << ( grp_solveStage3a_fu_44_cubieColor_V_we0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_cubieColor_V_we1);
    sensitive << ( grp_stage3Prepare_fu_32_cubieColor_V_we1 );
    sensitive << ( grp_solveStage3a_fu_44_cubieColor_V_we1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_grp_findEdge_fu_54_ap_start);
    sensitive << ( grp_findEdge_fu_54_ap_start_reg );

    SC_METHOD(thread_grp_solveStage3a_fu_44_ap_start);
    sensitive << ( grp_solveStage3a_fu_44_ap_start_reg );

    SC_METHOD(thread_grp_stage3Prepare_fu_32_ap_start);
    sensitive << ( grp_stage3Prepare_fu_32_ap_start_reg );

    SC_METHOD(thread_moveCounter_V_o);
    sensitive << ( moveCounter_V_i );
    sensitive << ( grp_stage3Prepare_fu_32_moveCounter_V_o );
    sensitive << ( grp_stage3Prepare_fu_32_moveCounter_V_o_ap_vld );
    sensitive << ( grp_solveStage3a_fu_44_moveCounter_V_o );
    sensitive << ( grp_solveStage3a_fu_44_moveCounter_V_o_ap_vld );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_moveCounter_V_o_ap_vld);
    sensitive << ( grp_stage3Prepare_fu_32_moveCounter_V_o_ap_vld );
    sensitive << ( grp_solveStage3a_fu_44_moveCounter_V_o_ap_vld );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_moves_V_address0);
    sensitive << ( grp_stage3Prepare_fu_32_moves_V_address0 );
    sensitive << ( grp_solveStage3a_fu_44_moves_V_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_moves_V_ce0);
    sensitive << ( grp_stage3Prepare_fu_32_moves_V_ce0 );
    sensitive << ( grp_solveStage3a_fu_44_moves_V_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_moves_V_d0);
    sensitive << ( grp_stage3Prepare_fu_32_moves_V_d0 );
    sensitive << ( grp_solveStage3a_fu_44_moves_V_d0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_moves_V_we0);
    sensitive << ( grp_stage3Prepare_fu_32_moves_V_we0 );
    sensitive << ( grp_solveStage3a_fu_44_moves_V_we0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_tmp_fu_64_p2);
    sensitive << ( grp_findEdge_fu_54_ap_done );
    sensitive << ( grp_findEdge_fu_54_ap_return );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_stage3Prepare_fu_32_ap_done );
    sensitive << ( grp_solveStage3a_fu_44_ap_done );
    sensitive << ( grp_findEdge_fu_54_ap_done );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_fu_64_p2 );

    ap_CS_fsm = "00000001";
    grp_stage3Prepare_fu_32_ap_start_reg = SC_LOGIC_0;
    grp_solveStage3a_fu_44_ap_start_reg = SC_LOGIC_0;
    grp_findEdge_fu_54_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "solveStage3_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, fC_V, "(port)fC_V");
    sc_trace(mVcdFile, sC_V, "(port)sC_V");
    sc_trace(mVcdFile, moveCounter_V_i, "(port)moveCounter_V_i");
    sc_trace(mVcdFile, moveCounter_V_o, "(port)moveCounter_V_o");
    sc_trace(mVcdFile, moveCounter_V_o_ap_vld, "(port)moveCounter_V_o_ap_vld");
    sc_trace(mVcdFile, moves_V_address0, "(port)moves_V_address0");
    sc_trace(mVcdFile, moves_V_ce0, "(port)moves_V_ce0");
    sc_trace(mVcdFile, moves_V_we0, "(port)moves_V_we0");
    sc_trace(mVcdFile, moves_V_d0, "(port)moves_V_d0");
    sc_trace(mVcdFile, cubieColor_V_address0, "(port)cubieColor_V_address0");
    sc_trace(mVcdFile, cubieColor_V_ce0, "(port)cubieColor_V_ce0");
    sc_trace(mVcdFile, cubieColor_V_we0, "(port)cubieColor_V_we0");
    sc_trace(mVcdFile, cubieColor_V_d0, "(port)cubieColor_V_d0");
    sc_trace(mVcdFile, cubieColor_V_q0, "(port)cubieColor_V_q0");
    sc_trace(mVcdFile, cubieColor_V_address1, "(port)cubieColor_V_address1");
    sc_trace(mVcdFile, cubieColor_V_ce1, "(port)cubieColor_V_ce1");
    sc_trace(mVcdFile, cubieColor_V_we1, "(port)cubieColor_V_we1");
    sc_trace(mVcdFile, cubieColor_V_d1, "(port)cubieColor_V_d1");
    sc_trace(mVcdFile, cubieColor_V_q1, "(port)cubieColor_V_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_stage3Prepare_fu_32_ap_start, "grp_stage3Prepare_fu_32_ap_start");
    sc_trace(mVcdFile, grp_stage3Prepare_fu_32_ap_done, "grp_stage3Prepare_fu_32_ap_done");
    sc_trace(mVcdFile, grp_stage3Prepare_fu_32_ap_idle, "grp_stage3Prepare_fu_32_ap_idle");
    sc_trace(mVcdFile, grp_stage3Prepare_fu_32_ap_ready, "grp_stage3Prepare_fu_32_ap_ready");
    sc_trace(mVcdFile, grp_stage3Prepare_fu_32_cubieColor_V_address0, "grp_stage3Prepare_fu_32_cubieColor_V_address0");
    sc_trace(mVcdFile, grp_stage3Prepare_fu_32_cubieColor_V_ce0, "grp_stage3Prepare_fu_32_cubieColor_V_ce0");
    sc_trace(mVcdFile, grp_stage3Prepare_fu_32_cubieColor_V_we0, "grp_stage3Prepare_fu_32_cubieColor_V_we0");
    sc_trace(mVcdFile, grp_stage3Prepare_fu_32_cubieColor_V_d0, "grp_stage3Prepare_fu_32_cubieColor_V_d0");
    sc_trace(mVcdFile, grp_stage3Prepare_fu_32_cubieColor_V_address1, "grp_stage3Prepare_fu_32_cubieColor_V_address1");
    sc_trace(mVcdFile, grp_stage3Prepare_fu_32_cubieColor_V_ce1, "grp_stage3Prepare_fu_32_cubieColor_V_ce1");
    sc_trace(mVcdFile, grp_stage3Prepare_fu_32_cubieColor_V_we1, "grp_stage3Prepare_fu_32_cubieColor_V_we1");
    sc_trace(mVcdFile, grp_stage3Prepare_fu_32_cubieColor_V_d1, "grp_stage3Prepare_fu_32_cubieColor_V_d1");
    sc_trace(mVcdFile, grp_stage3Prepare_fu_32_moveCounter_V_o, "grp_stage3Prepare_fu_32_moveCounter_V_o");
    sc_trace(mVcdFile, grp_stage3Prepare_fu_32_moveCounter_V_o_ap_vld, "grp_stage3Prepare_fu_32_moveCounter_V_o_ap_vld");
    sc_trace(mVcdFile, grp_stage3Prepare_fu_32_moves_V_address0, "grp_stage3Prepare_fu_32_moves_V_address0");
    sc_trace(mVcdFile, grp_stage3Prepare_fu_32_moves_V_ce0, "grp_stage3Prepare_fu_32_moves_V_ce0");
    sc_trace(mVcdFile, grp_stage3Prepare_fu_32_moves_V_we0, "grp_stage3Prepare_fu_32_moves_V_we0");
    sc_trace(mVcdFile, grp_stage3Prepare_fu_32_moves_V_d0, "grp_stage3Prepare_fu_32_moves_V_d0");
    sc_trace(mVcdFile, grp_solveStage3a_fu_44_ap_start, "grp_solveStage3a_fu_44_ap_start");
    sc_trace(mVcdFile, grp_solveStage3a_fu_44_ap_done, "grp_solveStage3a_fu_44_ap_done");
    sc_trace(mVcdFile, grp_solveStage3a_fu_44_ap_idle, "grp_solveStage3a_fu_44_ap_idle");
    sc_trace(mVcdFile, grp_solveStage3a_fu_44_ap_ready, "grp_solveStage3a_fu_44_ap_ready");
    sc_trace(mVcdFile, grp_solveStage3a_fu_44_moveCounter_V_o, "grp_solveStage3a_fu_44_moveCounter_V_o");
    sc_trace(mVcdFile, grp_solveStage3a_fu_44_moveCounter_V_o_ap_vld, "grp_solveStage3a_fu_44_moveCounter_V_o_ap_vld");
    sc_trace(mVcdFile, grp_solveStage3a_fu_44_moves_V_address0, "grp_solveStage3a_fu_44_moves_V_address0");
    sc_trace(mVcdFile, grp_solveStage3a_fu_44_moves_V_ce0, "grp_solveStage3a_fu_44_moves_V_ce0");
    sc_trace(mVcdFile, grp_solveStage3a_fu_44_moves_V_we0, "grp_solveStage3a_fu_44_moves_V_we0");
    sc_trace(mVcdFile, grp_solveStage3a_fu_44_moves_V_d0, "grp_solveStage3a_fu_44_moves_V_d0");
    sc_trace(mVcdFile, grp_solveStage3a_fu_44_cubieColor_V_address0, "grp_solveStage3a_fu_44_cubieColor_V_address0");
    sc_trace(mVcdFile, grp_solveStage3a_fu_44_cubieColor_V_ce0, "grp_solveStage3a_fu_44_cubieColor_V_ce0");
    sc_trace(mVcdFile, grp_solveStage3a_fu_44_cubieColor_V_we0, "grp_solveStage3a_fu_44_cubieColor_V_we0");
    sc_trace(mVcdFile, grp_solveStage3a_fu_44_cubieColor_V_d0, "grp_solveStage3a_fu_44_cubieColor_V_d0");
    sc_trace(mVcdFile, grp_solveStage3a_fu_44_cubieColor_V_address1, "grp_solveStage3a_fu_44_cubieColor_V_address1");
    sc_trace(mVcdFile, grp_solveStage3a_fu_44_cubieColor_V_ce1, "grp_solveStage3a_fu_44_cubieColor_V_ce1");
    sc_trace(mVcdFile, grp_solveStage3a_fu_44_cubieColor_V_we1, "grp_solveStage3a_fu_44_cubieColor_V_we1");
    sc_trace(mVcdFile, grp_solveStage3a_fu_44_cubieColor_V_d1, "grp_solveStage3a_fu_44_cubieColor_V_d1");
    sc_trace(mVcdFile, grp_findEdge_fu_54_ap_start, "grp_findEdge_fu_54_ap_start");
    sc_trace(mVcdFile, grp_findEdge_fu_54_ap_done, "grp_findEdge_fu_54_ap_done");
    sc_trace(mVcdFile, grp_findEdge_fu_54_ap_idle, "grp_findEdge_fu_54_ap_idle");
    sc_trace(mVcdFile, grp_findEdge_fu_54_ap_ready, "grp_findEdge_fu_54_ap_ready");
    sc_trace(mVcdFile, grp_findEdge_fu_54_cubieColor_V_address0, "grp_findEdge_fu_54_cubieColor_V_address0");
    sc_trace(mVcdFile, grp_findEdge_fu_54_cubieColor_V_ce0, "grp_findEdge_fu_54_cubieColor_V_ce0");
    sc_trace(mVcdFile, grp_findEdge_fu_54_cubieColor_V_address1, "grp_findEdge_fu_54_cubieColor_V_address1");
    sc_trace(mVcdFile, grp_findEdge_fu_54_cubieColor_V_ce1, "grp_findEdge_fu_54_cubieColor_V_ce1");
    sc_trace(mVcdFile, grp_findEdge_fu_54_ap_return, "grp_findEdge_fu_54_ap_return");
    sc_trace(mVcdFile, grp_stage3Prepare_fu_32_ap_start_reg, "grp_stage3Prepare_fu_32_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_solveStage3a_fu_44_ap_start_reg, "grp_solveStage3a_fu_44_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_findEdge_fu_54_ap_start_reg, "grp_findEdge_fu_54_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_fu_64_p2, "tmp_fu_64_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

solveStage3::~solveStage3() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_stage3Prepare_fu_32;
    delete grp_solveStage3a_fu_44;
    delete grp_findEdge_fu_54;
}

void solveStage3::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_findEdge_fu_54_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            grp_findEdge_fu_54_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_findEdge_fu_54_ap_ready.read())) {
            grp_findEdge_fu_54_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_solveStage3a_fu_44_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
              esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
            grp_solveStage3a_fu_44_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_solveStage3a_fu_44_ap_ready.read())) {
            grp_solveStage3a_fu_44_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_stage3Prepare_fu_32_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            grp_stage3Prepare_fu_32_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_stage3Prepare_fu_32_ap_ready.read())) {
            grp_stage3Prepare_fu_32_ap_start_reg = ap_const_logic_0;
        }
    }
}

void solveStage3::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void solveStage3::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void solveStage3::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void solveStage3::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void solveStage3::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void solveStage3::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void solveStage3::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void solveStage3::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void solveStage3::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(grp_solveStage3a_fu_44_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void solveStage3::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void solveStage3::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(grp_solveStage3a_fu_44_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void solveStage3::thread_cubieColor_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        cubieColor_V_address0 = grp_findEdge_fu_54_cubieColor_V_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        cubieColor_V_address0 = grp_solveStage3a_fu_44_cubieColor_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        cubieColor_V_address0 = grp_stage3Prepare_fu_32_cubieColor_V_address0.read();
    } else {
        cubieColor_V_address0 = "XXXXXX";
    }
}

void solveStage3::thread_cubieColor_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        cubieColor_V_address1 = grp_findEdge_fu_54_cubieColor_V_address1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        cubieColor_V_address1 = grp_solveStage3a_fu_44_cubieColor_V_address1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        cubieColor_V_address1 = grp_stage3Prepare_fu_32_cubieColor_V_address1.read();
    } else {
        cubieColor_V_address1 = "XXXXXX";
    }
}

void solveStage3::thread_cubieColor_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        cubieColor_V_ce0 = grp_findEdge_fu_54_cubieColor_V_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        cubieColor_V_ce0 = grp_solveStage3a_fu_44_cubieColor_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        cubieColor_V_ce0 = grp_stage3Prepare_fu_32_cubieColor_V_ce0.read();
    } else {
        cubieColor_V_ce0 = ap_const_logic_0;
    }
}

void solveStage3::thread_cubieColor_V_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        cubieColor_V_ce1 = grp_findEdge_fu_54_cubieColor_V_ce1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        cubieColor_V_ce1 = grp_solveStage3a_fu_44_cubieColor_V_ce1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        cubieColor_V_ce1 = grp_stage3Prepare_fu_32_cubieColor_V_ce1.read();
    } else {
        cubieColor_V_ce1 = ap_const_logic_0;
    }
}

void solveStage3::thread_cubieColor_V_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        cubieColor_V_d0 = grp_solveStage3a_fu_44_cubieColor_V_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        cubieColor_V_d0 = grp_stage3Prepare_fu_32_cubieColor_V_d0.read();
    } else {
        cubieColor_V_d0 =  (sc_lv<3>) ("XXX");
    }
}

void solveStage3::thread_cubieColor_V_d1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        cubieColor_V_d1 = grp_solveStage3a_fu_44_cubieColor_V_d1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        cubieColor_V_d1 = grp_stage3Prepare_fu_32_cubieColor_V_d1.read();
    } else {
        cubieColor_V_d1 =  (sc_lv<3>) ("XXX");
    }
}

void solveStage3::thread_cubieColor_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        cubieColor_V_we0 = grp_solveStage3a_fu_44_cubieColor_V_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        cubieColor_V_we0 = grp_stage3Prepare_fu_32_cubieColor_V_we0.read();
    } else {
        cubieColor_V_we0 = ap_const_logic_0;
    }
}

void solveStage3::thread_cubieColor_V_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        cubieColor_V_we1 = grp_solveStage3a_fu_44_cubieColor_V_we1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        cubieColor_V_we1 = grp_stage3Prepare_fu_32_cubieColor_V_we1.read();
    } else {
        cubieColor_V_we1 = ap_const_logic_0;
    }
}

void solveStage3::thread_grp_findEdge_fu_54_ap_start() {
    grp_findEdge_fu_54_ap_start = grp_findEdge_fu_54_ap_start_reg.read();
}

void solveStage3::thread_grp_solveStage3a_fu_44_ap_start() {
    grp_solveStage3a_fu_44_ap_start = grp_solveStage3a_fu_44_ap_start_reg.read();
}

void solveStage3::thread_grp_stage3Prepare_fu_32_ap_start() {
    grp_stage3Prepare_fu_32_ap_start = grp_stage3Prepare_fu_32_ap_start_reg.read();
}

void solveStage3::thread_moveCounter_V_o() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_solveStage3a_fu_44_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, grp_solveStage3a_fu_44_moveCounter_V_o_ap_vld.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())))) {
        moveCounter_V_o = grp_solveStage3a_fu_44_moveCounter_V_o.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, grp_stage3Prepare_fu_32_moveCounter_V_o_ap_vld.read()))) {
        moveCounter_V_o = grp_stage3Prepare_fu_32_moveCounter_V_o.read();
    } else {
        moveCounter_V_o = moveCounter_V_i.read();
    }
}

void solveStage3::thread_moveCounter_V_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        moveCounter_V_o_ap_vld = grp_solveStage3a_fu_44_moveCounter_V_o_ap_vld.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        moveCounter_V_o_ap_vld = grp_stage3Prepare_fu_32_moveCounter_V_o_ap_vld.read();
    } else {
        moveCounter_V_o_ap_vld = ap_const_logic_0;
    }
}

void solveStage3::thread_moves_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        moves_V_address0 = grp_solveStage3a_fu_44_moves_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        moves_V_address0 = grp_stage3Prepare_fu_32_moves_V_address0.read();
    } else {
        moves_V_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void solveStage3::thread_moves_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        moves_V_ce0 = grp_solveStage3a_fu_44_moves_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        moves_V_ce0 = grp_stage3Prepare_fu_32_moves_V_ce0.read();
    } else {
        moves_V_ce0 = ap_const_logic_0;
    }
}

void solveStage3::thread_moves_V_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        moves_V_d0 = grp_solveStage3a_fu_44_moves_V_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        moves_V_d0 = grp_stage3Prepare_fu_32_moves_V_d0.read();
    } else {
        moves_V_d0 =  (sc_lv<4>) ("XXXX");
    }
}

void solveStage3::thread_moves_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        moves_V_we0 = grp_solveStage3a_fu_44_moves_V_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        moves_V_we0 = grp_stage3Prepare_fu_32_moves_V_we0.read();
    } else {
        moves_V_we0 = ap_const_logic_0;
    }
}

void solveStage3::thread_tmp_fu_64_p2() {
    tmp_fu_64_p2 = (!grp_findEdge_fu_54_ap_return.read().is_01() || !ap_const_lv4_4.is_01())? sc_lv<1>(): (sc_biguint<4>(grp_findEdge_fu_54_ap_return.read()) > sc_biguint<4>(ap_const_lv4_4));
}

void solveStage3::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(grp_solveStage3a_fu_44_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(tmp_fu_64_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(grp_findEdge_fu_54_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(tmp_fu_64_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(grp_findEdge_fu_54_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(grp_stage3Prepare_fu_32_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(grp_solveStage3a_fu_44_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<8>) ("XXXXXXXX");
            break;
    }
}

}

