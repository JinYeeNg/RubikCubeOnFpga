// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "solveStage2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic solveStage2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic solveStage2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<44> solveStage2::ap_ST_fsm_state1 = "1";
const sc_lv<44> solveStage2::ap_ST_fsm_state2 = "10";
const sc_lv<44> solveStage2::ap_ST_fsm_state3 = "100";
const sc_lv<44> solveStage2::ap_ST_fsm_state4 = "1000";
const sc_lv<44> solveStage2::ap_ST_fsm_state5 = "10000";
const sc_lv<44> solveStage2::ap_ST_fsm_state6 = "100000";
const sc_lv<44> solveStage2::ap_ST_fsm_state7 = "1000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state8 = "10000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state9 = "100000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state10 = "1000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state11 = "10000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state12 = "100000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<44> solveStage2::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<32> solveStage2::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> solveStage2::ap_const_lv32_1 = "1";
const sc_lv<32> solveStage2::ap_const_lv32_17 = "10111";
const sc_lv<32> solveStage2::ap_const_lv32_2 = "10";
const sc_lv<32> solveStage2::ap_const_lv32_4 = "100";
const sc_lv<32> solveStage2::ap_const_lv32_6 = "110";
const sc_lv<32> solveStage2::ap_const_lv32_A = "1010";
const sc_lv<4> solveStage2::ap_const_lv4_3 = "11";
const sc_lv<32> solveStage2::ap_const_lv32_C = "1100";
const sc_lv<4> solveStage2::ap_const_lv4_2 = "10";
const sc_lv<32> solveStage2::ap_const_lv32_E = "1110";
const sc_lv<4> solveStage2::ap_const_lv4_1 = "1";
const sc_lv<32> solveStage2::ap_const_lv32_10 = "10000";
const sc_lv<32> solveStage2::ap_const_lv32_12 = "10010";
const sc_lv<32> solveStage2::ap_const_lv32_18 = "11000";
const sc_lv<32> solveStage2::ap_const_lv32_1A = "11010";
const sc_lv<32> solveStage2::ap_const_lv32_1C = "11100";
const sc_lv<32> solveStage2::ap_const_lv32_1E = "11110";
const sc_lv<32> solveStage2::ap_const_lv32_24 = "100100";
const sc_lv<32> solveStage2::ap_const_lv32_26 = "100110";
const sc_lv<32> solveStage2::ap_const_lv32_28 = "101000";
const sc_lv<32> solveStage2::ap_const_lv32_2A = "101010";
const sc_lv<4> solveStage2::ap_const_lv4_B = "1011";
const sc_lv<32> solveStage2::ap_const_lv32_3 = "11";
const sc_lv<32> solveStage2::ap_const_lv32_5 = "101";
const sc_lv<4> solveStage2::ap_const_lv4_A = "1010";
const sc_lv<32> solveStage2::ap_const_lv32_7 = "111";
const sc_lv<32> solveStage2::ap_const_lv32_B = "1011";
const sc_lv<32> solveStage2::ap_const_lv32_D = "1101";
const sc_lv<32> solveStage2::ap_const_lv32_F = "1111";
const sc_lv<32> solveStage2::ap_const_lv32_11 = "10001";
const sc_lv<32> solveStage2::ap_const_lv32_13 = "10011";
const sc_lv<32> solveStage2::ap_const_lv32_19 = "11001";
const sc_lv<32> solveStage2::ap_const_lv32_1B = "11011";
const sc_lv<32> solveStage2::ap_const_lv32_1D = "11101";
const sc_lv<4> solveStage2::ap_const_lv4_6 = "110";
const sc_lv<32> solveStage2::ap_const_lv32_1F = "11111";
const sc_lv<32> solveStage2::ap_const_lv32_25 = "100101";
const sc_lv<32> solveStage2::ap_const_lv32_27 = "100111";
const sc_lv<32> solveStage2::ap_const_lv32_29 = "101001";
const sc_lv<32> solveStage2::ap_const_lv32_2B = "101011";
const sc_lv<32> solveStage2::ap_const_lv32_8 = "1000";
const sc_lv<32> solveStage2::ap_const_lv32_14 = "10100";
const sc_lv<32> solveStage2::ap_const_lv32_9 = "1001";
const sc_lv<32> solveStage2::ap_const_lv32_15 = "10101";
const sc_lv<32> solveStage2::ap_const_lv32_16 = "10110";
const sc_lv<32> solveStage2::ap_const_lv32_20 = "100000";
const sc_lv<6> solveStage2::ap_const_lv6_8 = "1000";
const sc_lv<6> solveStage2::ap_const_lv6_4 = "100";
const sc_lv<32> solveStage2::ap_const_lv32_21 = "100001";
const sc_lv<6> solveStage2::ap_const_lv6_1D = "11101";
const sc_lv<6> solveStage2::ap_const_lv6_1F = "11111";
const sc_lv<32> solveStage2::ap_const_lv32_22 = "100010";
const sc_lv<6> solveStage2::ap_const_lv6_2D = "101101";
const sc_lv<6> solveStage2::ap_const_lv6_31 = "110001";
const sc_lv<32> solveStage2::ap_const_lv32_23 = "100011";
const sc_lv<4> solveStage2::ap_const_lv4_5 = "101";
const sc_lv<1> solveStage2::ap_const_lv1_1 = "1";
const sc_lv<1> solveStage2::ap_const_lv1_0 = "0";
const sc_lv<4> solveStage2::ap_const_lv4_4 = "100";
const bool solveStage2::ap_const_boolean_0 = false;
const sc_lv<4> solveStage2::ap_const_lv4_7 = "111";
const bool solveStage2::ap_const_boolean_1 = true;

solveStage2::solveStage2(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_turnCube_fu_75 = new turnCube("grp_turnCube_fu_75");
    grp_turnCube_fu_75->ap_clk(ap_clk);
    grp_turnCube_fu_75->ap_rst(ap_rst);
    grp_turnCube_fu_75->ap_start(grp_turnCube_fu_75_ap_start);
    grp_turnCube_fu_75->ap_done(grp_turnCube_fu_75_ap_done);
    grp_turnCube_fu_75->ap_idle(grp_turnCube_fu_75_ap_idle);
    grp_turnCube_fu_75->ap_ready(grp_turnCube_fu_75_ap_ready);
    grp_turnCube_fu_75->turn_V(grp_turnCube_fu_75_turn_V);
    grp_turnCube_fu_75->moveCounter_V_i(moveCounter_V_i);
    grp_turnCube_fu_75->moveCounter_V_o(grp_turnCube_fu_75_moveCounter_V_o);
    grp_turnCube_fu_75->moveCounter_V_o_ap_vld(grp_turnCube_fu_75_moveCounter_V_o_ap_vld);
    grp_turnCube_fu_75->moves_V_address0(grp_turnCube_fu_75_moves_V_address0);
    grp_turnCube_fu_75->moves_V_ce0(grp_turnCube_fu_75_moves_V_ce0);
    grp_turnCube_fu_75->moves_V_we0(grp_turnCube_fu_75_moves_V_we0);
    grp_turnCube_fu_75->moves_V_d0(grp_turnCube_fu_75_moves_V_d0);
    grp_turnCube_fu_75->cubieColor_V_address0(grp_turnCube_fu_75_cubieColor_V_address0);
    grp_turnCube_fu_75->cubieColor_V_ce0(grp_turnCube_fu_75_cubieColor_V_ce0);
    grp_turnCube_fu_75->cubieColor_V_we0(grp_turnCube_fu_75_cubieColor_V_we0);
    grp_turnCube_fu_75->cubieColor_V_d0(grp_turnCube_fu_75_cubieColor_V_d0);
    grp_turnCube_fu_75->cubieColor_V_q0(cubieColor_V_q0);
    grp_turnCube_fu_75->cubieColor_V_address1(grp_turnCube_fu_75_cubieColor_V_address1);
    grp_turnCube_fu_75->cubieColor_V_ce1(grp_turnCube_fu_75_cubieColor_V_ce1);
    grp_turnCube_fu_75->cubieColor_V_we1(grp_turnCube_fu_75_cubieColor_V_we1);
    grp_turnCube_fu_75->cubieColor_V_d1(grp_turnCube_fu_75_cubieColor_V_d1);
    grp_rotateCubeHorizontal_fu_90 = new rotateCubeHorizontal("grp_rotateCubeHorizontal_fu_90");
    grp_rotateCubeHorizontal_fu_90->ap_clk(ap_clk);
    grp_rotateCubeHorizontal_fu_90->ap_rst(ap_rst);
    grp_rotateCubeHorizontal_fu_90->ap_start(grp_rotateCubeHorizontal_fu_90_ap_start);
    grp_rotateCubeHorizontal_fu_90->ap_done(grp_rotateCubeHorizontal_fu_90_ap_done);
    grp_rotateCubeHorizontal_fu_90->ap_idle(grp_rotateCubeHorizontal_fu_90_ap_idle);
    grp_rotateCubeHorizontal_fu_90->ap_ready(grp_rotateCubeHorizontal_fu_90_ap_ready);
    grp_rotateCubeHorizontal_fu_90->moveCounter_V_i(moveCounter_V_i);
    grp_rotateCubeHorizontal_fu_90->moveCounter_V_o(grp_rotateCubeHorizontal_fu_90_moveCounter_V_o);
    grp_rotateCubeHorizontal_fu_90->moveCounter_V_o_ap_vld(grp_rotateCubeHorizontal_fu_90_moveCounter_V_o_ap_vld);
    grp_rotateCubeHorizontal_fu_90->moves_V_address0(grp_rotateCubeHorizontal_fu_90_moves_V_address0);
    grp_rotateCubeHorizontal_fu_90->moves_V_ce0(grp_rotateCubeHorizontal_fu_90_moves_V_ce0);
    grp_rotateCubeHorizontal_fu_90->moves_V_we0(grp_rotateCubeHorizontal_fu_90_moves_V_we0);
    grp_rotateCubeHorizontal_fu_90->moves_V_d0(grp_rotateCubeHorizontal_fu_90_moves_V_d0);
    grp_rotateCubeHorizontal_fu_90->cubieColor_V_address0(grp_rotateCubeHorizontal_fu_90_cubieColor_V_address0);
    grp_rotateCubeHorizontal_fu_90->cubieColor_V_ce0(grp_rotateCubeHorizontal_fu_90_cubieColor_V_ce0);
    grp_rotateCubeHorizontal_fu_90->cubieColor_V_we0(grp_rotateCubeHorizontal_fu_90_cubieColor_V_we0);
    grp_rotateCubeHorizontal_fu_90->cubieColor_V_d0(grp_rotateCubeHorizontal_fu_90_cubieColor_V_d0);
    grp_rotateCubeHorizontal_fu_90->cubieColor_V_q0(cubieColor_V_q0);
    grp_rotateCubeHorizontal_fu_90->cubieColor_V_address1(grp_rotateCubeHorizontal_fu_90_cubieColor_V_address1);
    grp_rotateCubeHorizontal_fu_90->cubieColor_V_ce1(grp_rotateCubeHorizontal_fu_90_cubieColor_V_ce1);
    grp_rotateCubeHorizontal_fu_90->cubieColor_V_we1(grp_rotateCubeHorizontal_fu_90_cubieColor_V_we1);
    grp_rotateCubeHorizontal_fu_90->cubieColor_V_d1(grp_rotateCubeHorizontal_fu_90_cubieColor_V_d1);
    grp_findCorner_fu_100 = new findCorner("grp_findCorner_fu_100");
    grp_findCorner_fu_100->ap_clk(ap_clk);
    grp_findCorner_fu_100->ap_rst(ap_rst);
    grp_findCorner_fu_100->ap_start(grp_findCorner_fu_100_ap_start);
    grp_findCorner_fu_100->ap_done(grp_findCorner_fu_100_ap_done);
    grp_findCorner_fu_100->ap_idle(grp_findCorner_fu_100_ap_idle);
    grp_findCorner_fu_100->ap_ready(grp_findCorner_fu_100_ap_ready);
    grp_findCorner_fu_100->sCC_V(sC_V);
    grp_findCorner_fu_100->tCC_V(tC_V);
    grp_findCorner_fu_100->cubieColor_V_address0(grp_findCorner_fu_100_cubieColor_V_address0);
    grp_findCorner_fu_100->cubieColor_V_ce0(grp_findCorner_fu_100_cubieColor_V_ce0);
    grp_findCorner_fu_100->cubieColor_V_q0(cubieColor_V_q0);
    grp_findCorner_fu_100->cubieColor_V_address1(grp_findCorner_fu_100_cubieColor_V_address1);
    grp_findCorner_fu_100->cubieColor_V_ce1(grp_findCorner_fu_100_cubieColor_V_ce1);
    grp_findCorner_fu_100->cubieColor_V_q1(cubieColor_V_q1);
    grp_findCorner_fu_100->ap_return(grp_findCorner_fu_100_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state10_on_subcall_done);
    sensitive << ( reg_116 );
    sensitive << ( grp_rotateCubeHorizontal_fu_90_ap_done );

    SC_METHOD(thread_ap_block_state12_on_subcall_done);
    sensitive << ( reg_116 );
    sensitive << ( grp_turnCube_fu_75_ap_done );
    sensitive << ( grp_rotateCubeHorizontal_fu_90_ap_done );

    SC_METHOD(thread_ap_block_state14_on_subcall_done);
    sensitive << ( reg_116 );
    sensitive << ( grp_turnCube_fu_75_ap_done );
    sensitive << ( grp_rotateCubeHorizontal_fu_90_ap_done );

    SC_METHOD(thread_ap_block_state16_on_subcall_done);
    sensitive << ( reg_116 );
    sensitive << ( grp_turnCube_fu_75_ap_done );

    SC_METHOD(thread_ap_block_state18_on_subcall_done);
    sensitive << ( reg_116 );
    sensitive << ( grp_turnCube_fu_75_ap_done );
    sensitive << ( grp_rotateCubeHorizontal_fu_90_ap_done );

    SC_METHOD(thread_ap_block_state20_on_subcall_done);
    sensitive << ( reg_116 );
    sensitive << ( grp_turnCube_fu_75_ap_done );
    sensitive << ( grp_rotateCubeHorizontal_fu_90_ap_done );

    SC_METHOD(thread_ap_block_state22_on_subcall_done);
    sensitive << ( reg_116 );
    sensitive << ( grp_rotateCubeHorizontal_fu_90_ap_done );

    SC_METHOD(thread_ap_block_state30_on_subcall_done);
    sensitive << ( reg_116 );
    sensitive << ( grp_turnCube_fu_75_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( grp_fu_110_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( grp_fu_110_p2 );

    SC_METHOD(thread_cubieColor_V_address0);
    sensitive << ( reg_116 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_turnCube_fu_75_cubieColor_V_address0 );
    sensitive << ( grp_rotateCubeHorizontal_fu_90_cubieColor_V_address0 );
    sensitive << ( grp_findCorner_fu_100_cubieColor_V_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_cubieColor_V_address1);
    sensitive << ( reg_116 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_turnCube_fu_75_cubieColor_V_address1 );
    sensitive << ( grp_rotateCubeHorizontal_fu_90_cubieColor_V_address1 );
    sensitive << ( grp_findCorner_fu_100_cubieColor_V_address1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_cubieColor_V_ce0);
    sensitive << ( reg_116 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_turnCube_fu_75_cubieColor_V_ce0 );
    sensitive << ( grp_rotateCubeHorizontal_fu_90_cubieColor_V_ce0 );
    sensitive << ( grp_findCorner_fu_100_cubieColor_V_ce0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_cubieColor_V_ce1);
    sensitive << ( reg_116 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_turnCube_fu_75_cubieColor_V_ce1 );
    sensitive << ( grp_rotateCubeHorizontal_fu_90_cubieColor_V_ce1 );
    sensitive << ( grp_findCorner_fu_100_cubieColor_V_ce1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_cubieColor_V_d0);
    sensitive << ( reg_116 );
    sensitive << ( grp_turnCube_fu_75_cubieColor_V_d0 );
    sensitive << ( grp_rotateCubeHorizontal_fu_90_cubieColor_V_d0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_cubieColor_V_d1);
    sensitive << ( reg_116 );
    sensitive << ( grp_turnCube_fu_75_cubieColor_V_d1 );
    sensitive << ( grp_rotateCubeHorizontal_fu_90_cubieColor_V_d1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_cubieColor_V_we0);
    sensitive << ( reg_116 );
    sensitive << ( grp_turnCube_fu_75_cubieColor_V_we0 );
    sensitive << ( grp_rotateCubeHorizontal_fu_90_cubieColor_V_we0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_cubieColor_V_we1);
    sensitive << ( reg_116 );
    sensitive << ( grp_turnCube_fu_75_cubieColor_V_we1 );
    sensitive << ( grp_rotateCubeHorizontal_fu_90_cubieColor_V_we1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_grp_findCorner_fu_100_ap_start);
    sensitive << ( grp_findCorner_fu_100_ap_start_reg );

    SC_METHOD(thread_grp_fu_110_p2);
    sensitive << ( cubieColor_V_q0 );
    sensitive << ( cubieColor_V_q1 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_grp_rotateCubeHorizontal_fu_90_ap_start);
    sensitive << ( grp_rotateCubeHorizontal_fu_90_ap_start_reg );

    SC_METHOD(thread_grp_turnCube_fu_75_ap_start);
    sensitive << ( grp_turnCube_fu_75_ap_start_reg );

    SC_METHOD(thread_grp_turnCube_fu_75_turn_V);
    sensitive << ( reg_116 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_moveCounter_V_o);
    sensitive << ( moveCounter_V_i );
    sensitive << ( reg_116 );
    sensitive << ( grp_turnCube_fu_75_moveCounter_V_o );
    sensitive << ( grp_turnCube_fu_75_moveCounter_V_o_ap_vld );
    sensitive << ( grp_rotateCubeHorizontal_fu_90_moveCounter_V_o );
    sensitive << ( grp_rotateCubeHorizontal_fu_90_moveCounter_V_o_ap_vld );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_moveCounter_V_o_ap_vld);
    sensitive << ( reg_116 );
    sensitive << ( grp_turnCube_fu_75_moveCounter_V_o_ap_vld );
    sensitive << ( grp_rotateCubeHorizontal_fu_90_moveCounter_V_o_ap_vld );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_moves_V_address0);
    sensitive << ( reg_116 );
    sensitive << ( grp_turnCube_fu_75_moves_V_address0 );
    sensitive << ( grp_rotateCubeHorizontal_fu_90_moves_V_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_moves_V_ce0);
    sensitive << ( reg_116 );
    sensitive << ( grp_turnCube_fu_75_moves_V_ce0 );
    sensitive << ( grp_rotateCubeHorizontal_fu_90_moves_V_ce0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_moves_V_d0);
    sensitive << ( reg_116 );
    sensitive << ( grp_turnCube_fu_75_moves_V_d0 );
    sensitive << ( grp_rotateCubeHorizontal_fu_90_moves_V_d0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_moves_V_we0);
    sensitive << ( reg_116 );
    sensitive << ( grp_turnCube_fu_75_moves_V_we0 );
    sensitive << ( grp_rotateCubeHorizontal_fu_90_moves_V_we0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_tmp_fu_120_p2);
    sensitive << ( grp_findCorner_fu_100_ap_return );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_findCorner_fu_100_ap_done );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_findCorner_fu_100_ap_return );
    sensitive << ( reg_116 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_findCorner_fu_100_ap_done );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_turnCube_fu_75_ap_done );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( grp_fu_110_p2 );
    sensitive << ( tmp_fu_120_p2 );
    sensitive << ( ap_block_state10_on_subcall_done );
    sensitive << ( ap_block_state12_on_subcall_done );
    sensitive << ( ap_block_state14_on_subcall_done );
    sensitive << ( ap_block_state16_on_subcall_done );
    sensitive << ( ap_block_state18_on_subcall_done );
    sensitive << ( ap_block_state20_on_subcall_done );
    sensitive << ( ap_block_state22_on_subcall_done );
    sensitive << ( ap_block_state30_on_subcall_done );

    ap_CS_fsm = "00000000000000000000000000000000000000000001";
    grp_turnCube_fu_75_ap_start_reg = SC_LOGIC_0;
    grp_rotateCubeHorizontal_fu_90_ap_start_reg = SC_LOGIC_0;
    grp_findCorner_fu_100_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "solveStage2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, sC_V, "(port)sC_V");
    sc_trace(mVcdFile, tC_V, "(port)tC_V");
    sc_trace(mVcdFile, cubieColor_V_address0, "(port)cubieColor_V_address0");
    sc_trace(mVcdFile, cubieColor_V_ce0, "(port)cubieColor_V_ce0");
    sc_trace(mVcdFile, cubieColor_V_we0, "(port)cubieColor_V_we0");
    sc_trace(mVcdFile, cubieColor_V_d0, "(port)cubieColor_V_d0");
    sc_trace(mVcdFile, cubieColor_V_q0, "(port)cubieColor_V_q0");
    sc_trace(mVcdFile, cubieColor_V_address1, "(port)cubieColor_V_address1");
    sc_trace(mVcdFile, cubieColor_V_ce1, "(port)cubieColor_V_ce1");
    sc_trace(mVcdFile, cubieColor_V_we1, "(port)cubieColor_V_we1");
    sc_trace(mVcdFile, cubieColor_V_d1, "(port)cubieColor_V_d1");
    sc_trace(mVcdFile, cubieColor_V_q1, "(port)cubieColor_V_q1");
    sc_trace(mVcdFile, moveCounter_V_i, "(port)moveCounter_V_i");
    sc_trace(mVcdFile, moveCounter_V_o, "(port)moveCounter_V_o");
    sc_trace(mVcdFile, moveCounter_V_o_ap_vld, "(port)moveCounter_V_o_ap_vld");
    sc_trace(mVcdFile, moves_V_address0, "(port)moves_V_address0");
    sc_trace(mVcdFile, moves_V_ce0, "(port)moves_V_ce0");
    sc_trace(mVcdFile, moves_V_we0, "(port)moves_V_we0");
    sc_trace(mVcdFile, moves_V_d0, "(port)moves_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_findCorner_fu_100_ap_return, "grp_findCorner_fu_100_ap_return");
    sc_trace(mVcdFile, reg_116, "reg_116");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_findCorner_fu_100_ap_idle, "grp_findCorner_fu_100_ap_idle");
    sc_trace(mVcdFile, grp_findCorner_fu_100_ap_ready, "grp_findCorner_fu_100_ap_ready");
    sc_trace(mVcdFile, grp_findCorner_fu_100_ap_done, "grp_findCorner_fu_100_ap_done");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, grp_turnCube_fu_75_ap_start, "grp_turnCube_fu_75_ap_start");
    sc_trace(mVcdFile, grp_turnCube_fu_75_ap_done, "grp_turnCube_fu_75_ap_done");
    sc_trace(mVcdFile, grp_turnCube_fu_75_ap_idle, "grp_turnCube_fu_75_ap_idle");
    sc_trace(mVcdFile, grp_turnCube_fu_75_ap_ready, "grp_turnCube_fu_75_ap_ready");
    sc_trace(mVcdFile, grp_turnCube_fu_75_turn_V, "grp_turnCube_fu_75_turn_V");
    sc_trace(mVcdFile, grp_turnCube_fu_75_moveCounter_V_o, "grp_turnCube_fu_75_moveCounter_V_o");
    sc_trace(mVcdFile, grp_turnCube_fu_75_moveCounter_V_o_ap_vld, "grp_turnCube_fu_75_moveCounter_V_o_ap_vld");
    sc_trace(mVcdFile, grp_turnCube_fu_75_moves_V_address0, "grp_turnCube_fu_75_moves_V_address0");
    sc_trace(mVcdFile, grp_turnCube_fu_75_moves_V_ce0, "grp_turnCube_fu_75_moves_V_ce0");
    sc_trace(mVcdFile, grp_turnCube_fu_75_moves_V_we0, "grp_turnCube_fu_75_moves_V_we0");
    sc_trace(mVcdFile, grp_turnCube_fu_75_moves_V_d0, "grp_turnCube_fu_75_moves_V_d0");
    sc_trace(mVcdFile, grp_turnCube_fu_75_cubieColor_V_address0, "grp_turnCube_fu_75_cubieColor_V_address0");
    sc_trace(mVcdFile, grp_turnCube_fu_75_cubieColor_V_ce0, "grp_turnCube_fu_75_cubieColor_V_ce0");
    sc_trace(mVcdFile, grp_turnCube_fu_75_cubieColor_V_we0, "grp_turnCube_fu_75_cubieColor_V_we0");
    sc_trace(mVcdFile, grp_turnCube_fu_75_cubieColor_V_d0, "grp_turnCube_fu_75_cubieColor_V_d0");
    sc_trace(mVcdFile, grp_turnCube_fu_75_cubieColor_V_address1, "grp_turnCube_fu_75_cubieColor_V_address1");
    sc_trace(mVcdFile, grp_turnCube_fu_75_cubieColor_V_ce1, "grp_turnCube_fu_75_cubieColor_V_ce1");
    sc_trace(mVcdFile, grp_turnCube_fu_75_cubieColor_V_we1, "grp_turnCube_fu_75_cubieColor_V_we1");
    sc_trace(mVcdFile, grp_turnCube_fu_75_cubieColor_V_d1, "grp_turnCube_fu_75_cubieColor_V_d1");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_90_ap_start, "grp_rotateCubeHorizontal_fu_90_ap_start");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_90_ap_done, "grp_rotateCubeHorizontal_fu_90_ap_done");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_90_ap_idle, "grp_rotateCubeHorizontal_fu_90_ap_idle");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_90_ap_ready, "grp_rotateCubeHorizontal_fu_90_ap_ready");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_90_moveCounter_V_o, "grp_rotateCubeHorizontal_fu_90_moveCounter_V_o");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_90_moveCounter_V_o_ap_vld, "grp_rotateCubeHorizontal_fu_90_moveCounter_V_o_ap_vld");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_90_moves_V_address0, "grp_rotateCubeHorizontal_fu_90_moves_V_address0");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_90_moves_V_ce0, "grp_rotateCubeHorizontal_fu_90_moves_V_ce0");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_90_moves_V_we0, "grp_rotateCubeHorizontal_fu_90_moves_V_we0");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_90_moves_V_d0, "grp_rotateCubeHorizontal_fu_90_moves_V_d0");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_90_cubieColor_V_address0, "grp_rotateCubeHorizontal_fu_90_cubieColor_V_address0");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_90_cubieColor_V_ce0, "grp_rotateCubeHorizontal_fu_90_cubieColor_V_ce0");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_90_cubieColor_V_we0, "grp_rotateCubeHorizontal_fu_90_cubieColor_V_we0");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_90_cubieColor_V_d0, "grp_rotateCubeHorizontal_fu_90_cubieColor_V_d0");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_90_cubieColor_V_address1, "grp_rotateCubeHorizontal_fu_90_cubieColor_V_address1");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_90_cubieColor_V_ce1, "grp_rotateCubeHorizontal_fu_90_cubieColor_V_ce1");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_90_cubieColor_V_we1, "grp_rotateCubeHorizontal_fu_90_cubieColor_V_we1");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_90_cubieColor_V_d1, "grp_rotateCubeHorizontal_fu_90_cubieColor_V_d1");
    sc_trace(mVcdFile, grp_findCorner_fu_100_ap_start, "grp_findCorner_fu_100_ap_start");
    sc_trace(mVcdFile, grp_findCorner_fu_100_cubieColor_V_address0, "grp_findCorner_fu_100_cubieColor_V_address0");
    sc_trace(mVcdFile, grp_findCorner_fu_100_cubieColor_V_ce0, "grp_findCorner_fu_100_cubieColor_V_ce0");
    sc_trace(mVcdFile, grp_findCorner_fu_100_cubieColor_V_address1, "grp_findCorner_fu_100_cubieColor_V_address1");
    sc_trace(mVcdFile, grp_findCorner_fu_100_cubieColor_V_ce1, "grp_findCorner_fu_100_cubieColor_V_ce1");
    sc_trace(mVcdFile, grp_turnCube_fu_75_ap_start_reg, "grp_turnCube_fu_75_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, grp_rotateCubeHorizontal_fu_90_ap_start_reg, "grp_rotateCubeHorizontal_fu_90_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, grp_findCorner_fu_100_ap_start_reg, "grp_findCorner_fu_100_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, grp_fu_110_p2, "grp_fu_110_p2");
    sc_trace(mVcdFile, tmp_fu_120_p2, "tmp_fu_120_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_state10_on_subcall_done, "ap_block_state10_on_subcall_done");
    sc_trace(mVcdFile, ap_block_state12_on_subcall_done, "ap_block_state12_on_subcall_done");
    sc_trace(mVcdFile, ap_block_state14_on_subcall_done, "ap_block_state14_on_subcall_done");
    sc_trace(mVcdFile, ap_block_state16_on_subcall_done, "ap_block_state16_on_subcall_done");
    sc_trace(mVcdFile, ap_block_state18_on_subcall_done, "ap_block_state18_on_subcall_done");
    sc_trace(mVcdFile, ap_block_state20_on_subcall_done, "ap_block_state20_on_subcall_done");
    sc_trace(mVcdFile, ap_block_state22_on_subcall_done, "ap_block_state22_on_subcall_done");
    sc_trace(mVcdFile, ap_block_state30_on_subcall_done, "ap_block_state30_on_subcall_done");
#endif

    }
}

solveStage2::~solveStage2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_turnCube_fu_75;
    delete grp_rotateCubeHorizontal_fu_90;
    delete grp_findCorner_fu_100;
}

void solveStage2::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_findCorner_fu_100_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
            grp_findCorner_fu_100_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_findCorner_fu_100_ap_ready.read())) {
            grp_findCorner_fu_100_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_rotateCubeHorizontal_fu_90_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) || 
             (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) || 
             (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
              esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
              esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
              esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1)) || 
             (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) || 
             (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) || 
             (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) || 
             (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) || 
             (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) || 
             (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())))) {
            grp_rotateCubeHorizontal_fu_90_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_rotateCubeHorizontal_fu_90_ap_ready.read())) {
            grp_rotateCubeHorizontal_fu_90_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_turnCube_fu_75_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
              esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3)) || 
             (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
              esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2)) || 
             (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) || 
             (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
              esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1)) || 
             (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) || 
             (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) || 
             (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()))) {
            grp_turnCube_fu_75_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_75_ap_ready.read())) {
            grp_turnCube_fu_75_ap_start_reg = ap_const_logic_0;
        }
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
  esl_seteq<1,1,1>(grp_findCorner_fu_100_ap_done.read(), ap_const_logic_1)) || (esl_seteq<1,1,1>(grp_findCorner_fu_100_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())))) {
        reg_116 = grp_findCorner_fu_100_ap_return.read();
    }
}

void solveStage2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void solveStage2::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void solveStage2::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void solveStage2::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void solveStage2::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void solveStage2::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void solveStage2::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void solveStage2::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void solveStage2::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void solveStage2::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void solveStage2::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void solveStage2::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void solveStage2::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void solveStage2::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void solveStage2::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void solveStage2::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void solveStage2::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void solveStage2::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void solveStage2::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void solveStage2::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void solveStage2::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void solveStage2::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void solveStage2::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void solveStage2::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void solveStage2::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void solveStage2::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void solveStage2::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void solveStage2::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void solveStage2::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void solveStage2::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void solveStage2::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void solveStage2::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void solveStage2::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void solveStage2::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void solveStage2::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void solveStage2::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void solveStage2::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void solveStage2::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void solveStage2::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void solveStage2::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void solveStage2::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void solveStage2::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void solveStage2::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void solveStage2::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void solveStage2::thread_ap_block_state10_on_subcall_done() {
    ap_block_state10_on_subcall_done = ((esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_rotateCubeHorizontal_fu_90_ap_done.read())) || (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_rotateCubeHorizontal_fu_90_ap_done.read())) || (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_rotateCubeHorizontal_fu_90_ap_done.read())));
}

void solveStage2::thread_ap_block_state12_on_subcall_done() {
    ap_block_state12_on_subcall_done = ((esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_rotateCubeHorizontal_fu_90_ap_done.read())) || (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_rotateCubeHorizontal_fu_90_ap_done.read())) || (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_turnCube_fu_75_ap_done.read())));
}

void solveStage2::thread_ap_block_state14_on_subcall_done() {
    ap_block_state14_on_subcall_done = ((esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_rotateCubeHorizontal_fu_90_ap_done.read())) || (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_turnCube_fu_75_ap_done.read())) || (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_turnCube_fu_75_ap_done.read())));
}

void solveStage2::thread_ap_block_state16_on_subcall_done() {
    ap_block_state16_on_subcall_done = ((esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_turnCube_fu_75_ap_done.read())) || (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_turnCube_fu_75_ap_done.read())) || (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_turnCube_fu_75_ap_done.read())));
}

void solveStage2::thread_ap_block_state18_on_subcall_done() {
    ap_block_state18_on_subcall_done = ((esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_rotateCubeHorizontal_fu_90_ap_done.read())) || (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_turnCube_fu_75_ap_done.read())) || (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_turnCube_fu_75_ap_done.read())));
}

void solveStage2::thread_ap_block_state20_on_subcall_done() {
    ap_block_state20_on_subcall_done = ((esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_rotateCubeHorizontal_fu_90_ap_done.read())) || (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_rotateCubeHorizontal_fu_90_ap_done.read())) || (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_turnCube_fu_75_ap_done.read())));
}

void solveStage2::thread_ap_block_state22_on_subcall_done() {
    ap_block_state22_on_subcall_done = ((esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_rotateCubeHorizontal_fu_90_ap_done.read())) || (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_rotateCubeHorizontal_fu_90_ap_done.read())) || (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, grp_rotateCubeHorizontal_fu_90_ap_done.read())));
}

void solveStage2::thread_ap_block_state30_on_subcall_done() {
    ap_block_state30_on_subcall_done = (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_6) && esl_seteq<1,1,1>(ap_const_logic_0, grp_turnCube_fu_75_ap_done.read()));
}

void solveStage2::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(grp_fu_110_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void solveStage2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void solveStage2::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(grp_fu_110_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void solveStage2::thread_cubieColor_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        cubieColor_V_address0 = ap_const_lv6_2D;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        cubieColor_V_address0 = ap_const_lv6_1D;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        cubieColor_V_address0 = ap_const_lv6_8;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        cubieColor_V_address0 = grp_findCorner_fu_100_cubieColor_V_address0.read();
    } else if (((esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())))) {
        cubieColor_V_address0 = grp_rotateCubeHorizontal_fu_90_cubieColor_V_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_6)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        cubieColor_V_address0 = grp_turnCube_fu_75_cubieColor_V_address0.read();
    } else {
        cubieColor_V_address0 = "XXXXXX";
    }
}

void solveStage2::thread_cubieColor_V_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        cubieColor_V_address1 = ap_const_lv6_31;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        cubieColor_V_address1 = ap_const_lv6_1F;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        cubieColor_V_address1 = ap_const_lv6_4;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        cubieColor_V_address1 = grp_findCorner_fu_100_cubieColor_V_address1.read();
    } else if (((esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())))) {
        cubieColor_V_address1 = grp_rotateCubeHorizontal_fu_90_cubieColor_V_address1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_6)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        cubieColor_V_address1 = grp_turnCube_fu_75_cubieColor_V_address1.read();
    } else {
        cubieColor_V_address1 = "XXXXXX";
    }
}

void solveStage2::thread_cubieColor_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()))) {
        cubieColor_V_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        cubieColor_V_ce0 = grp_findCorner_fu_100_cubieColor_V_ce0.read();
    } else if (((esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())))) {
        cubieColor_V_ce0 = grp_rotateCubeHorizontal_fu_90_cubieColor_V_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_6)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        cubieColor_V_ce0 = grp_turnCube_fu_75_cubieColor_V_ce0.read();
    } else {
        cubieColor_V_ce0 = ap_const_logic_0;
    }
}

void solveStage2::thread_cubieColor_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()))) {
        cubieColor_V_ce1 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
        cubieColor_V_ce1 = grp_findCorner_fu_100_cubieColor_V_ce1.read();
    } else if (((esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())))) {
        cubieColor_V_ce1 = grp_rotateCubeHorizontal_fu_90_cubieColor_V_ce1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_6)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        cubieColor_V_ce1 = grp_turnCube_fu_75_cubieColor_V_ce1.read();
    } else {
        cubieColor_V_ce1 = ap_const_logic_0;
    }
}

void solveStage2::thread_cubieColor_V_d0() {
    if (((esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())))) {
        cubieColor_V_d0 = grp_rotateCubeHorizontal_fu_90_cubieColor_V_d0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_6)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        cubieColor_V_d0 = grp_turnCube_fu_75_cubieColor_V_d0.read();
    } else {
        cubieColor_V_d0 =  (sc_lv<3>) ("XXX");
    }
}

void solveStage2::thread_cubieColor_V_d1() {
    if (((esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())))) {
        cubieColor_V_d1 = grp_rotateCubeHorizontal_fu_90_cubieColor_V_d1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_6)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        cubieColor_V_d1 = grp_turnCube_fu_75_cubieColor_V_d1.read();
    } else {
        cubieColor_V_d1 =  (sc_lv<3>) ("XXX");
    }
}

void solveStage2::thread_cubieColor_V_we0() {
    if (((esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())))) {
        cubieColor_V_we0 = grp_rotateCubeHorizontal_fu_90_cubieColor_V_we0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_6)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        cubieColor_V_we0 = grp_turnCube_fu_75_cubieColor_V_we0.read();
    } else {
        cubieColor_V_we0 = ap_const_logic_0;
    }
}

void solveStage2::thread_cubieColor_V_we1() {
    if (((esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())))) {
        cubieColor_V_we1 = grp_rotateCubeHorizontal_fu_90_cubieColor_V_we1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_6)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        cubieColor_V_we1 = grp_turnCube_fu_75_cubieColor_V_we1.read();
    } else {
        cubieColor_V_we1 = ap_const_logic_0;
    }
}

void solveStage2::thread_grp_findCorner_fu_100_ap_start() {
    grp_findCorner_fu_100_ap_start = grp_findCorner_fu_100_ap_start_reg.read();
}

void solveStage2::thread_grp_fu_110_p2() {
    grp_fu_110_p2 = (!cubieColor_V_q0.read().is_01() || !cubieColor_V_q1.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_q0.read() == cubieColor_V_q1.read());
}

void solveStage2::thread_grp_rotateCubeHorizontal_fu_90_ap_start() {
    grp_rotateCubeHorizontal_fu_90_ap_start = grp_rotateCubeHorizontal_fu_90_ap_start_reg.read();
}

void solveStage2::thread_grp_turnCube_fu_75_ap_start() {
    grp_turnCube_fu_75_ap_start = grp_turnCube_fu_75_ap_start_reg.read();
}

void solveStage2::thread_grp_turnCube_fu_75_turn_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
          esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_6)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        grp_turnCube_fu_75_turn_V = ap_const_lv4_2;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        grp_turnCube_fu_75_turn_V = ap_const_lv4_A;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()))) {
        grp_turnCube_fu_75_turn_V = ap_const_lv4_3;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        grp_turnCube_fu_75_turn_V = ap_const_lv4_B;
    } else {
        grp_turnCube_fu_75_turn_V =  (sc_lv<4>) ("XXXX");
    }
}

void solveStage2::thread_moveCounter_V_o() {
    if (((esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_rotateCubeHorizontal_fu_90_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_rotateCubeHorizontal_fu_90_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_rotateCubeHorizontal_fu_90_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_rotateCubeHorizontal_fu_90_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_rotateCubeHorizontal_fu_90_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_rotateCubeHorizontal_fu_90_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_rotateCubeHorizontal_fu_90_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_rotateCubeHorizontal_fu_90_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_rotateCubeHorizontal_fu_90_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_rotateCubeHorizontal_fu_90_moveCounter_V_o_ap_vld.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_rotateCubeHorizontal_fu_90_moveCounter_V_o_ap_vld.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_rotateCubeHorizontal_fu_90_moveCounter_V_o_ap_vld.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())))) {
        moveCounter_V_o = grp_rotateCubeHorizontal_fu_90_moveCounter_V_o.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_75_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_75_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_75_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_75_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_75_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_75_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_75_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_75_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_75_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_75_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_75_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_75_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_75_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_75_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_6) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_75_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_75_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_75_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_75_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_75_moveCounter_V_o_ap_vld.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_75_moveCounter_V_o_ap_vld.read())))) {
        moveCounter_V_o = grp_turnCube_fu_75_moveCounter_V_o.read();
    } else {
        moveCounter_V_o = moveCounter_V_i.read();
    }
}

void solveStage2::thread_moveCounter_V_o_ap_vld() {
    if (((esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())))) {
        moveCounter_V_o_ap_vld = grp_rotateCubeHorizontal_fu_90_moveCounter_V_o_ap_vld.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_6)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        moveCounter_V_o_ap_vld = grp_turnCube_fu_75_moveCounter_V_o_ap_vld.read();
    } else {
        moveCounter_V_o_ap_vld = ap_const_logic_0;
    }
}

void solveStage2::thread_moves_V_address0() {
    if (((esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())))) {
        moves_V_address0 = grp_rotateCubeHorizontal_fu_90_moves_V_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_6)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        moves_V_address0 = grp_turnCube_fu_75_moves_V_address0.read();
    } else {
        moves_V_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void solveStage2::thread_moves_V_ce0() {
    if (((esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())))) {
        moves_V_ce0 = grp_rotateCubeHorizontal_fu_90_moves_V_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_6)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        moves_V_ce0 = grp_turnCube_fu_75_moves_V_ce0.read();
    } else {
        moves_V_ce0 = ap_const_logic_0;
    }
}

void solveStage2::thread_moves_V_d0() {
    if (((esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())))) {
        moves_V_d0 = grp_rotateCubeHorizontal_fu_90_moves_V_d0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_6)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        moves_V_d0 = grp_turnCube_fu_75_moves_V_d0.read();
    } else {
        moves_V_d0 =  (sc_lv<4>) ("XXXX");
    }
}

void solveStage2::thread_moves_V_we0() {
    if (((esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) || 
         (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())))) {
        moves_V_we0 = grp_rotateCubeHorizontal_fu_90_moves_V_we0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) || 
                (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && 
                 esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_6)) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        moves_V_we0 = grp_turnCube_fu_75_moves_V_we0.read();
    } else {
        moves_V_we0 = ap_const_logic_0;
    }
}

void solveStage2::thread_tmp_fu_120_p2() {
    tmp_fu_120_p2 = (!grp_findCorner_fu_100_ap_return.read().is_01() || !ap_const_lv4_5.is_01())? sc_lv<1>(): (sc_biguint<4>(grp_findCorner_fu_100_ap_return.read()) < sc_biguint<4>(ap_const_lv4_5));
}

void solveStage2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!esl_seteq<1,4,4>(grp_findCorner_fu_100_ap_return.read(), ap_const_lv4_3) && !esl_seteq<1,4,4>(grp_findCorner_fu_100_ap_return.read(), ap_const_lv4_2) && !esl_seteq<1,4,4>(grp_findCorner_fu_100_ap_return.read(), ap_const_lv4_1) && !esl_seteq<1,4,4>(grp_findCorner_fu_100_ap_return.read(), ap_const_lv4_4) && esl_seteq<1,1,1>(grp_findCorner_fu_100_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(tmp_fu_120_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state22;
            } else if ((esl_seteq<1,1,1>(grp_findCorner_fu_100_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && ((esl_seteq<1,4,4>(grp_findCorner_fu_100_ap_return.read(), ap_const_lv4_3) && 
   esl_seteq<1,1,1>(tmp_fu_120_p2.read(), ap_const_lv1_1)) || 
  (esl_seteq<1,4,4>(grp_findCorner_fu_100_ap_return.read(), ap_const_lv4_2) && 
   esl_seteq<1,1,1>(tmp_fu_120_p2.read(), ap_const_lv1_1)) || 
  (esl_seteq<1,4,4>(grp_findCorner_fu_100_ap_return.read(), ap_const_lv4_1) && 
   esl_seteq<1,1,1>(tmp_fu_120_p2.read(), ap_const_lv1_1))))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else if ((esl_seteq<1,1,1>(grp_findCorner_fu_100_ap_done.read(), ap_const_logic_1) && esl_seteq<1,4,4>(grp_findCorner_fu_100_ap_return.read(), ap_const_lv4_4) && esl_seteq<1,1,1>(tmp_fu_120_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else if ((esl_seteq<1,1,1>(grp_findCorner_fu_100_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(tmp_fu_120_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state23;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_75_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_75_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_75_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state22;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state10_on_subcall_done.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) || 
  esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) || 
  esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3)))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state12_on_subcall_done.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) || 
  esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) || 
  esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3)))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state14_on_subcall_done.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) || 
  esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) || 
  esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3)))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state16_on_subcall_done.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) || 
  esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) || 
  esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3)))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state18_on_subcall_done.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) || 
  esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) || 
  esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3)))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state20_on_subcall_done.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && (esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_1) || 
  esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_2) || 
  esl_seteq<1,4,4>(reg_116.read(), ap_const_lv4_3)))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state20;
            }
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state22_on_subcall_done.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
                ap_NS_fsm = ap_ST_fsm_state23;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            if ((esl_seteq<1,1,1>(grp_findCorner_fu_100_ap_done.read(), ap_const_logic_1) && esl_seteq<1,4,4>(grp_findCorner_fu_100_ap_return.read(), ap_const_lv4_5) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
                ap_NS_fsm = ap_ST_fsm_state31;
            } else if ((!esl_seteq<1,4,4>(grp_findCorner_fu_100_ap_return.read(), ap_const_lv4_5) && !esl_seteq<1,4,4>(grp_findCorner_fu_100_ap_return.read(), ap_const_lv4_6) && !esl_seteq<1,4,4>(grp_findCorner_fu_100_ap_return.read(), ap_const_lv4_7) && esl_seteq<1,1,1>(grp_findCorner_fu_100_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
                ap_NS_fsm = ap_ST_fsm_state30;
            } else if ((esl_seteq<1,1,1>(grp_findCorner_fu_100_ap_done.read(), ap_const_logic_1) && esl_seteq<1,4,4>(grp_findCorner_fu_100_ap_return.read(), ap_const_lv4_6) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
                ap_NS_fsm = ap_ST_fsm_state27;
            } else if ((esl_seteq<1,1,1>(grp_findCorner_fu_100_ap_done.read(), ap_const_logic_1) && esl_seteq<1,4,4>(grp_findCorner_fu_100_ap_return.read(), ap_const_lv4_7) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
                ap_NS_fsm = ap_ST_fsm_state25;
            } else {
                ap_NS_fsm = ap_ST_fsm_state24;
            }
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_75_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state30;
            } else {
                ap_NS_fsm = ap_ST_fsm_state26;
            }
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_75_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state29;
            } else {
                ap_NS_fsm = ap_ST_fsm_state28;
            }
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state30_on_subcall_done.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
                ap_NS_fsm = ap_ST_fsm_state33;
            } else {
                ap_NS_fsm = ap_ST_fsm_state30;
            }
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_75_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state30;
            } else {
                ap_NS_fsm = ap_ST_fsm_state32;
            }
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            if ((esl_seteq<1,1,1>(grp_fu_110_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
                ap_NS_fsm = ap_ST_fsm_state37;
            } else {
                ap_NS_fsm = ap_ST_fsm_state35;
            }
            break;
        case 17179869184 : 
            if ((esl_seteq<1,1,1>(grp_fu_110_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()))) {
                ap_NS_fsm = ap_ST_fsm_state37;
            } else {
                ap_NS_fsm = ap_ST_fsm_state36;
            }
            break;
        case 34359738368 : 
            if ((esl_seteq<1,1,1>(grp_fu_110_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state37;
            }
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_75_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state39;
            } else {
                ap_NS_fsm = ap_ST_fsm_state38;
            }
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_75_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state41;
            } else {
                ap_NS_fsm = ap_ST_fsm_state40;
            }
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 2199023255552 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_75_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state43;
            } else {
                ap_NS_fsm = ap_ST_fsm_state42;
            }
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state44;
            break;
        case 8796093022208 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && esl_seteq<1,1,1>(grp_turnCube_fu_75_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state33;
            } else {
                ap_NS_fsm = ap_ST_fsm_state44;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<44>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

