// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "solveStage3a.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic solveStage3a::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic solveStage3a::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<176> solveStage3a::ap_ST_fsm_state1 = "1";
const sc_lv<176> solveStage3a::ap_ST_fsm_state2 = "10";
const sc_lv<176> solveStage3a::ap_ST_fsm_state3 = "100";
const sc_lv<176> solveStage3a::ap_ST_fsm_state4 = "1000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state5 = "10000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state6 = "100000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state7 = "1000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state8 = "10000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state9 = "100000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state10 = "1000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state11 = "10000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state12 = "100000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state71 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state72 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state73 = "1000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state74 = "10000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state75 = "100000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state76 = "1000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state77 = "10000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state78 = "100000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state79 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state80 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state81 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state82 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state83 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state84 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state85 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state86 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state87 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state88 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state89 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state90 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state91 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state92 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state93 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state94 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state95 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state96 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state97 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state98 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state99 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state100 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state101 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state102 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state103 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state104 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state105 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state106 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state107 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state108 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state109 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state110 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state111 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state112 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state113 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state114 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state115 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state116 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state117 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state118 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state119 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state120 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state121 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state122 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state123 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state124 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state125 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state126 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state127 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state128 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state129 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state130 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state131 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state132 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state133 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state134 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state135 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state136 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state137 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state138 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state139 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state140 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state141 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state142 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state143 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state144 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state145 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state146 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state147 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state148 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state149 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state150 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state151 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state152 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state153 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state154 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state155 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state156 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state157 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state158 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state159 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state160 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state161 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state162 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state163 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state164 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state165 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state166 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state167 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state168 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state169 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state170 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state171 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state172 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state173 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state174 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state175 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<176> solveStage3a::ap_ST_fsm_state176 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const bool solveStage3a::ap_const_boolean_1 = true;
const sc_lv<32> solveStage3a::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> solveStage3a::ap_const_lv32_2 = "10";
const sc_lv<32> solveStage3a::ap_const_lv32_3 = "11";
const sc_lv<32> solveStage3a::ap_const_lv32_4 = "100";
const sc_lv<1> solveStage3a::ap_const_lv1_1 = "1";
const sc_lv<32> solveStage3a::ap_const_lv32_5 = "101";
const sc_lv<32> solveStage3a::ap_const_lv32_6 = "110";
const sc_lv<32> solveStage3a::ap_const_lv32_7 = "111";
const sc_lv<32> solveStage3a::ap_const_lv32_8 = "1000";
const sc_lv<32> solveStage3a::ap_const_lv32_9 = "1001";
const sc_lv<32> solveStage3a::ap_const_lv32_A = "1010";
const sc_lv<32> solveStage3a::ap_const_lv32_B = "1011";
const sc_lv<32> solveStage3a::ap_const_lv32_C = "1100";
const sc_lv<32> solveStage3a::ap_const_lv32_E = "1110";
const sc_lv<32> solveStage3a::ap_const_lv32_24 = "100100";
const sc_lv<32> solveStage3a::ap_const_lv32_3A = "111010";
const sc_lv<32> solveStage3a::ap_const_lv32_3B = "111011";
const sc_lv<32> solveStage3a::ap_const_lv32_4D = "1001101";
const sc_lv<32> solveStage3a::ap_const_lv32_5F = "1011111";
const sc_lv<32> solveStage3a::ap_const_lv32_60 = "1100000";
const sc_lv<32> solveStage3a::ap_const_lv32_74 = "1110100";
const sc_lv<32> solveStage3a::ap_const_lv32_88 = "10001000";
const sc_lv<32> solveStage3a::ap_const_lv32_89 = "10001001";
const sc_lv<32> solveStage3a::ap_const_lv32_9D = "10011101";
const sc_lv<32> solveStage3a::ap_const_lv32_F = "1111";
const sc_lv<32> solveStage3a::ap_const_lv32_11 = "10001";
const sc_lv<32> solveStage3a::ap_const_lv32_13 = "10011";
const sc_lv<32> solveStage3a::ap_const_lv32_15 = "10101";
const sc_lv<32> solveStage3a::ap_const_lv32_17 = "10111";
const sc_lv<32> solveStage3a::ap_const_lv32_19 = "11001";
const sc_lv<32> solveStage3a::ap_const_lv32_1B = "11011";
const sc_lv<32> solveStage3a::ap_const_lv32_1D = "11101";
const sc_lv<32> solveStage3a::ap_const_lv32_1F = "11111";
const sc_lv<32> solveStage3a::ap_const_lv32_21 = "100001";
const sc_lv<32> solveStage3a::ap_const_lv32_25 = "100101";
const sc_lv<32> solveStage3a::ap_const_lv32_27 = "100111";
const sc_lv<32> solveStage3a::ap_const_lv32_29 = "101001";
const sc_lv<32> solveStage3a::ap_const_lv32_2B = "101011";
const sc_lv<32> solveStage3a::ap_const_lv32_2D = "101101";
const sc_lv<32> solveStage3a::ap_const_lv32_2F = "101111";
const sc_lv<32> solveStage3a::ap_const_lv32_31 = "110001";
const sc_lv<32> solveStage3a::ap_const_lv32_33 = "110011";
const sc_lv<32> solveStage3a::ap_const_lv32_35 = "110101";
const sc_lv<32> solveStage3a::ap_const_lv32_37 = "110111";
const sc_lv<32> solveStage3a::ap_const_lv32_3C = "111100";
const sc_lv<32> solveStage3a::ap_const_lv32_3E = "111110";
const sc_lv<32> solveStage3a::ap_const_lv32_40 = "1000000";
const sc_lv<32> solveStage3a::ap_const_lv32_42 = "1000010";
const sc_lv<32> solveStage3a::ap_const_lv32_44 = "1000100";
const sc_lv<32> solveStage3a::ap_const_lv32_46 = "1000110";
const sc_lv<32> solveStage3a::ap_const_lv32_48 = "1001000";
const sc_lv<32> solveStage3a::ap_const_lv32_4A = "1001010";
const sc_lv<32> solveStage3a::ap_const_lv32_4E = "1001110";
const sc_lv<32> solveStage3a::ap_const_lv32_50 = "1010000";
const sc_lv<32> solveStage3a::ap_const_lv32_52 = "1010010";
const sc_lv<32> solveStage3a::ap_const_lv32_54 = "1010100";
const sc_lv<32> solveStage3a::ap_const_lv32_56 = "1010110";
const sc_lv<32> solveStage3a::ap_const_lv32_58 = "1011000";
const sc_lv<32> solveStage3a::ap_const_lv32_5A = "1011010";
const sc_lv<32> solveStage3a::ap_const_lv32_5C = "1011100";
const sc_lv<32> solveStage3a::ap_const_lv32_61 = "1100001";
const sc_lv<32> solveStage3a::ap_const_lv32_63 = "1100011";
const sc_lv<32> solveStage3a::ap_const_lv32_65 = "1100101";
const sc_lv<32> solveStage3a::ap_const_lv32_67 = "1100111";
const sc_lv<32> solveStage3a::ap_const_lv32_69 = "1101001";
const sc_lv<32> solveStage3a::ap_const_lv32_6B = "1101011";
const sc_lv<32> solveStage3a::ap_const_lv32_6D = "1101101";
const sc_lv<32> solveStage3a::ap_const_lv32_6F = "1101111";
const sc_lv<32> solveStage3a::ap_const_lv32_71 = "1110001";
const sc_lv<32> solveStage3a::ap_const_lv32_75 = "1110101";
const sc_lv<32> solveStage3a::ap_const_lv32_77 = "1110111";
const sc_lv<32> solveStage3a::ap_const_lv32_79 = "1111001";
const sc_lv<32> solveStage3a::ap_const_lv32_7B = "1111011";
const sc_lv<32> solveStage3a::ap_const_lv32_7D = "1111101";
const sc_lv<32> solveStage3a::ap_const_lv32_7F = "1111111";
const sc_lv<32> solveStage3a::ap_const_lv32_81 = "10000001";
const sc_lv<32> solveStage3a::ap_const_lv32_83 = "10000011";
const sc_lv<32> solveStage3a::ap_const_lv32_85 = "10000101";
const sc_lv<32> solveStage3a::ap_const_lv32_8A = "10001010";
const sc_lv<32> solveStage3a::ap_const_lv32_8C = "10001100";
const sc_lv<32> solveStage3a::ap_const_lv32_8E = "10001110";
const sc_lv<32> solveStage3a::ap_const_lv32_90 = "10010000";
const sc_lv<32> solveStage3a::ap_const_lv32_92 = "10010010";
const sc_lv<32> solveStage3a::ap_const_lv32_94 = "10010100";
const sc_lv<32> solveStage3a::ap_const_lv32_96 = "10010110";
const sc_lv<32> solveStage3a::ap_const_lv32_98 = "10011000";
const sc_lv<32> solveStage3a::ap_const_lv32_9A = "10011010";
const sc_lv<32> solveStage3a::ap_const_lv32_9E = "10011110";
const sc_lv<32> solveStage3a::ap_const_lv32_A0 = "10100000";
const sc_lv<32> solveStage3a::ap_const_lv32_A2 = "10100010";
const sc_lv<32> solveStage3a::ap_const_lv32_A4 = "10100100";
const sc_lv<32> solveStage3a::ap_const_lv32_A6 = "10100110";
const sc_lv<32> solveStage3a::ap_const_lv32_A8 = "10101000";
const sc_lv<32> solveStage3a::ap_const_lv32_AA = "10101010";
const sc_lv<32> solveStage3a::ap_const_lv32_AC = "10101100";
const sc_lv<32> solveStage3a::ap_const_lv32_AE = "10101110";
const sc_lv<4> solveStage3a::ap_const_lv4_0 = "0000";
const sc_lv<32> solveStage3a::ap_const_lv32_10 = "10000";
const sc_lv<32> solveStage3a::ap_const_lv32_12 = "10010";
const sc_lv<32> solveStage3a::ap_const_lv32_14 = "10100";
const sc_lv<4> solveStage3a::ap_const_lv4_A = "1010";
const sc_lv<32> solveStage3a::ap_const_lv32_16 = "10110";
const sc_lv<4> solveStage3a::ap_const_lv4_1 = "1";
const sc_lv<32> solveStage3a::ap_const_lv32_18 = "11000";
const sc_lv<4> solveStage3a::ap_const_lv4_B = "1011";
const sc_lv<32> solveStage3a::ap_const_lv32_1A = "11010";
const sc_lv<32> solveStage3a::ap_const_lv32_1C = "11100";
const sc_lv<4> solveStage3a::ap_const_lv4_7 = "111";
const sc_lv<32> solveStage3a::ap_const_lv32_1E = "11110";
const sc_lv<32> solveStage3a::ap_const_lv32_20 = "100000";
const sc_lv<4> solveStage3a::ap_const_lv4_6 = "110";
const sc_lv<32> solveStage3a::ap_const_lv32_22 = "100010";
const sc_lv<32> solveStage3a::ap_const_lv32_26 = "100110";
const sc_lv<32> solveStage3a::ap_const_lv32_28 = "101000";
const sc_lv<32> solveStage3a::ap_const_lv32_2A = "101010";
const sc_lv<4> solveStage3a::ap_const_lv4_9 = "1001";
const sc_lv<32> solveStage3a::ap_const_lv32_2C = "101100";
const sc_lv<32> solveStage3a::ap_const_lv32_2E = "101110";
const sc_lv<4> solveStage3a::ap_const_lv4_8 = "1000";
const sc_lv<32> solveStage3a::ap_const_lv32_30 = "110000";
const sc_lv<32> solveStage3a::ap_const_lv32_32 = "110010";
const sc_lv<32> solveStage3a::ap_const_lv32_34 = "110100";
const sc_lv<32> solveStage3a::ap_const_lv32_36 = "110110";
const sc_lv<32> solveStage3a::ap_const_lv32_38 = "111000";
const sc_lv<32> solveStage3a::ap_const_lv32_3D = "111101";
const sc_lv<32> solveStage3a::ap_const_lv32_3F = "111111";
const sc_lv<32> solveStage3a::ap_const_lv32_41 = "1000001";
const sc_lv<32> solveStage3a::ap_const_lv32_43 = "1000011";
const sc_lv<32> solveStage3a::ap_const_lv32_45 = "1000101";
const sc_lv<32> solveStage3a::ap_const_lv32_47 = "1000111";
const sc_lv<32> solveStage3a::ap_const_lv32_49 = "1001001";
const sc_lv<32> solveStage3a::ap_const_lv32_4B = "1001011";
const sc_lv<32> solveStage3a::ap_const_lv32_4F = "1001111";
const sc_lv<32> solveStage3a::ap_const_lv32_51 = "1010001";
const sc_lv<32> solveStage3a::ap_const_lv32_53 = "1010011";
const sc_lv<32> solveStage3a::ap_const_lv32_55 = "1010101";
const sc_lv<32> solveStage3a::ap_const_lv32_57 = "1010111";
const sc_lv<32> solveStage3a::ap_const_lv32_59 = "1011001";
const sc_lv<32> solveStage3a::ap_const_lv32_5B = "1011011";
const sc_lv<32> solveStage3a::ap_const_lv32_5D = "1011101";
const sc_lv<32> solveStage3a::ap_const_lv32_62 = "1100010";
const sc_lv<32> solveStage3a::ap_const_lv32_64 = "1100100";
const sc_lv<32> solveStage3a::ap_const_lv32_66 = "1100110";
const sc_lv<32> solveStage3a::ap_const_lv32_68 = "1101000";
const sc_lv<32> solveStage3a::ap_const_lv32_6A = "1101010";
const sc_lv<32> solveStage3a::ap_const_lv32_6C = "1101100";
const sc_lv<32> solveStage3a::ap_const_lv32_6E = "1101110";
const sc_lv<32> solveStage3a::ap_const_lv32_70 = "1110000";
const sc_lv<32> solveStage3a::ap_const_lv32_72 = "1110010";
const sc_lv<32> solveStage3a::ap_const_lv32_76 = "1110110";
const sc_lv<32> solveStage3a::ap_const_lv32_78 = "1111000";
const sc_lv<32> solveStage3a::ap_const_lv32_7A = "1111010";
const sc_lv<32> solveStage3a::ap_const_lv32_7C = "1111100";
const sc_lv<32> solveStage3a::ap_const_lv32_7E = "1111110";
const sc_lv<32> solveStage3a::ap_const_lv32_80 = "10000000";
const sc_lv<32> solveStage3a::ap_const_lv32_82 = "10000010";
const sc_lv<32> solveStage3a::ap_const_lv32_84 = "10000100";
const sc_lv<32> solveStage3a::ap_const_lv32_86 = "10000110";
const sc_lv<32> solveStage3a::ap_const_lv32_8B = "10001011";
const sc_lv<32> solveStage3a::ap_const_lv32_8D = "10001101";
const sc_lv<32> solveStage3a::ap_const_lv32_8F = "10001111";
const sc_lv<32> solveStage3a::ap_const_lv32_91 = "10010001";
const sc_lv<32> solveStage3a::ap_const_lv32_93 = "10010011";
const sc_lv<32> solveStage3a::ap_const_lv32_95 = "10010101";
const sc_lv<32> solveStage3a::ap_const_lv32_97 = "10010111";
const sc_lv<32> solveStage3a::ap_const_lv32_99 = "10011001";
const sc_lv<32> solveStage3a::ap_const_lv32_9B = "10011011";
const sc_lv<32> solveStage3a::ap_const_lv32_9F = "10011111";
const sc_lv<32> solveStage3a::ap_const_lv32_A1 = "10100001";
const sc_lv<32> solveStage3a::ap_const_lv32_A3 = "10100011";
const sc_lv<32> solveStage3a::ap_const_lv32_A5 = "10100101";
const sc_lv<32> solveStage3a::ap_const_lv32_A7 = "10100111";
const sc_lv<32> solveStage3a::ap_const_lv32_A9 = "10101001";
const sc_lv<32> solveStage3a::ap_const_lv32_AB = "10101011";
const sc_lv<32> solveStage3a::ap_const_lv32_AD = "10101101";
const sc_lv<32> solveStage3a::ap_const_lv32_AF = "10101111";
const sc_lv<32> solveStage3a::ap_const_lv32_1 = "1";
const sc_lv<6> solveStage3a::ap_const_lv6_13 = "10011";
const sc_lv<6> solveStage3a::ap_const_lv6_1F = "11111";
const sc_lv<6> solveStage3a::ap_const_lv6_1 = "1";
const sc_lv<6> solveStage3a::ap_const_lv6_31 = "110001";
const sc_lv<6> solveStage3a::ap_const_lv6_28 = "101000";
const sc_lv<6> solveStage3a::ap_const_lv6_1C = "11100";
const sc_lv<6> solveStage3a::ap_const_lv6_7 = "111";
const sc_lv<6> solveStage3a::ap_const_lv6_25 = "100101";
const sc_lv<6> solveStage3a::ap_const_lv6_3 = "11";
const sc_lv<6> solveStage3a::ap_const_lv6_2E = "101110";
const sc_lv<6> solveStage3a::ap_const_lv6_5 = "101";
const sc_lv<32> solveStage3a::ap_const_lv32_D = "1101";
const sc_lv<32> solveStage3a::ap_const_lv32_23 = "100011";
const sc_lv<32> solveStage3a::ap_const_lv32_39 = "111001";
const sc_lv<32> solveStage3a::ap_const_lv32_4C = "1001100";
const sc_lv<32> solveStage3a::ap_const_lv32_5E = "1011110";
const sc_lv<32> solveStage3a::ap_const_lv32_73 = "1110011";
const sc_lv<32> solveStage3a::ap_const_lv32_87 = "10000111";
const sc_lv<32> solveStage3a::ap_const_lv32_9C = "10011100";
const sc_lv<1> solveStage3a::ap_const_lv1_0 = "0";
const bool solveStage3a::ap_const_boolean_0 = false;

solveStage3a::solveStage3a(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_turnCube_fu_72 = new turnCube("grp_turnCube_fu_72");
    grp_turnCube_fu_72->ap_clk(ap_clk);
    grp_turnCube_fu_72->ap_rst(ap_rst);
    grp_turnCube_fu_72->ap_start(grp_turnCube_fu_72_ap_start);
    grp_turnCube_fu_72->ap_done(grp_turnCube_fu_72_ap_done);
    grp_turnCube_fu_72->ap_idle(grp_turnCube_fu_72_ap_idle);
    grp_turnCube_fu_72->ap_ready(grp_turnCube_fu_72_ap_ready);
    grp_turnCube_fu_72->turn_V(grp_turnCube_fu_72_turn_V);
    grp_turnCube_fu_72->moveCounter_V_i(moveCounter_V_i);
    grp_turnCube_fu_72->moveCounter_V_o(grp_turnCube_fu_72_moveCounter_V_o);
    grp_turnCube_fu_72->moveCounter_V_o_ap_vld(grp_turnCube_fu_72_moveCounter_V_o_ap_vld);
    grp_turnCube_fu_72->moves_V_address0(grp_turnCube_fu_72_moves_V_address0);
    grp_turnCube_fu_72->moves_V_ce0(grp_turnCube_fu_72_moves_V_ce0);
    grp_turnCube_fu_72->moves_V_we0(grp_turnCube_fu_72_moves_V_we0);
    grp_turnCube_fu_72->moves_V_d0(grp_turnCube_fu_72_moves_V_d0);
    grp_turnCube_fu_72->cubieColor_V_address0(grp_turnCube_fu_72_cubieColor_V_address0);
    grp_turnCube_fu_72->cubieColor_V_ce0(grp_turnCube_fu_72_cubieColor_V_ce0);
    grp_turnCube_fu_72->cubieColor_V_we0(grp_turnCube_fu_72_cubieColor_V_we0);
    grp_turnCube_fu_72->cubieColor_V_d0(grp_turnCube_fu_72_cubieColor_V_d0);
    grp_turnCube_fu_72->cubieColor_V_q0(cubieColor_V_q0);
    grp_turnCube_fu_72->cubieColor_V_address1(grp_turnCube_fu_72_cubieColor_V_address1);
    grp_turnCube_fu_72->cubieColor_V_ce1(grp_turnCube_fu_72_cubieColor_V_ce1);
    grp_turnCube_fu_72->cubieColor_V_we1(grp_turnCube_fu_72_cubieColor_V_we1);
    grp_turnCube_fu_72->cubieColor_V_d1(grp_turnCube_fu_72_cubieColor_V_d1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state100);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state101);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state102);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state103);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state104);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state105);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state106);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state107);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state108);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state109);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state110);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state111);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state112);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state113);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state114);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state115);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state116);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state117);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state118);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state119);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state120);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state121);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state122);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state123);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state124);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state125);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state126);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state127);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state128);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state129);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state130);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state131);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state132);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state133);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state134);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state135);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state136);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state137);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state138);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state139);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state140);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state141);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state142);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state143);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state144);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state145);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state146);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state147);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state148);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state149);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state150);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state151);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state152);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state153);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state154);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state155);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state156);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state157);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state158);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state159);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state160);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state161);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state162);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state163);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state164);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state165);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state166);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state167);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state168);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state169);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state170);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state171);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state172);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state173);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state174);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state175);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state176);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state53);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state54);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state55);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state56);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state57);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state58);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state59);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state60);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state61);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state62);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state63);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state64);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state65);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state66);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state67);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state68);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state70);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state71);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state72);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state73);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state74);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state75);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state76);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state77);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state78);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state79);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state80);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state81);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state82);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state83);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state84);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state85);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state86);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state87);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state88);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state89);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state90);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state91);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state92);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state93);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state94);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state95);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state96);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state97);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state98);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state99);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state115_on_subcall_done);
    sensitive << ( tmp_44_reg_256 );
    sensitive << ( grp_turnCube_fu_72_ap_done );

    SC_METHOD(thread_ap_block_state135_on_subcall_done);
    sensitive << ( grp_turnCube_fu_72_ap_done );
    sensitive << ( ap_predicate_op400_call_state135 );

    SC_METHOD(thread_ap_block_state156_on_subcall_done);
    sensitive << ( tmp_47_reg_268 );
    sensitive << ( grp_turnCube_fu_72_ap_done );

    SC_METHOD(thread_ap_block_state176_on_subcall_done);
    sensitive << ( grp_turnCube_fu_72_ap_done );
    sensitive << ( ap_predicate_op457_call_state176 );

    SC_METHOD(thread_ap_block_state35_on_subcall_done);
    sensitive << ( tmp_38_reg_232 );
    sensitive << ( grp_turnCube_fu_72_ap_done );

    SC_METHOD(thread_ap_block_state57_on_subcall_done);
    sensitive << ( grp_turnCube_fu_72_ap_done );
    sensitive << ( ap_predicate_op290_call_state57 );

    SC_METHOD(thread_ap_block_state76_on_subcall_done);
    sensitive << ( tmp_41_reg_244 );
    sensitive << ( grp_turnCube_fu_72_ap_done );

    SC_METHOD(thread_ap_block_state94_on_subcall_done);
    sensitive << ( grp_turnCube_fu_72_ap_done );
    sensitive << ( ap_predicate_op343_call_state94 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_reg_177 );
    sensitive << ( or_cond_reg_187 );
    sensitive << ( tmp_29_reg_191 );
    sensitive << ( or_cond2_reg_201 );
    sensitive << ( tmp_32_reg_205 );
    sensitive << ( or_cond3_reg_215 );
    sensitive << ( tmp_35_reg_219 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( or_cond4_fu_166_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_predicate_op290_call_state57);
    sensitive << ( tmp_reg_177 );
    sensitive << ( tmp_39_reg_236 );

    SC_METHOD(thread_ap_predicate_op343_call_state94);
    sensitive << ( tmp_40_reg_240 );
    sensitive << ( tmp_42_reg_248 );

    SC_METHOD(thread_ap_predicate_op400_call_state135);
    sensitive << ( tmp_43_reg_252 );
    sensitive << ( tmp_45_reg_260 );

    SC_METHOD(thread_ap_predicate_op457_call_state176);
    sensitive << ( tmp_46_reg_264 );
    sensitive << ( tmp_48_reg_272 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( tmp_reg_177 );
    sensitive << ( or_cond_reg_187 );
    sensitive << ( tmp_29_reg_191 );
    sensitive << ( or_cond2_reg_201 );
    sensitive << ( tmp_32_reg_205 );
    sensitive << ( or_cond3_reg_215 );
    sensitive << ( tmp_35_reg_219 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( or_cond4_fu_166_p2 );

    SC_METHOD(thread_cubieColor_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_reg_177 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_38_reg_232 );
    sensitive << ( tmp_39_reg_236 );
    sensitive << ( tmp_40_reg_240 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( tmp_41_reg_244 );
    sensitive << ( tmp_42_reg_248 );
    sensitive << ( tmp_43_reg_252 );
    sensitive << ( ap_CS_fsm_state96 );
    sensitive << ( tmp_44_reg_256 );
    sensitive << ( tmp_45_reg_260 );
    sensitive << ( tmp_46_reg_264 );
    sensitive << ( ap_CS_fsm_state137 );
    sensitive << ( tmp_47_reg_268 );
    sensitive << ( tmp_48_reg_272 );
    sensitive << ( grp_turnCube_fu_72_cubieColor_V_address0 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state94 );
    sensitive << ( ap_CS_fsm_state99 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( ap_CS_fsm_state103 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_CS_fsm_state107 );
    sensitive << ( ap_CS_fsm_state109 );
    sensitive << ( ap_CS_fsm_state111 );
    sensitive << ( ap_CS_fsm_state113 );
    sensitive << ( ap_CS_fsm_state115 );
    sensitive << ( ap_CS_fsm_state119 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( ap_CS_fsm_state123 );
    sensitive << ( ap_CS_fsm_state125 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( ap_CS_fsm_state129 );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( ap_CS_fsm_state133 );
    sensitive << ( ap_CS_fsm_state135 );
    sensitive << ( ap_CS_fsm_state140 );
    sensitive << ( ap_CS_fsm_state142 );
    sensitive << ( ap_CS_fsm_state144 );
    sensitive << ( ap_CS_fsm_state146 );
    sensitive << ( ap_CS_fsm_state148 );
    sensitive << ( ap_CS_fsm_state150 );
    sensitive << ( ap_CS_fsm_state152 );
    sensitive << ( ap_CS_fsm_state154 );
    sensitive << ( ap_CS_fsm_state156 );
    sensitive << ( ap_CS_fsm_state160 );
    sensitive << ( ap_CS_fsm_state162 );
    sensitive << ( ap_CS_fsm_state164 );
    sensitive << ( ap_CS_fsm_state166 );
    sensitive << ( ap_CS_fsm_state168 );
    sensitive << ( ap_CS_fsm_state170 );
    sensitive << ( ap_CS_fsm_state172 );
    sensitive << ( ap_CS_fsm_state174 );
    sensitive << ( ap_CS_fsm_state176 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( ap_CS_fsm_state95 );
    sensitive << ( ap_CS_fsm_state116 );
    sensitive << ( ap_CS_fsm_state136 );
    sensitive << ( ap_CS_fsm_state157 );

    SC_METHOD(thread_cubieColor_V_address1);
    sensitive << ( tmp_reg_177 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_38_reg_232 );
    sensitive << ( tmp_39_reg_236 );
    sensitive << ( tmp_40_reg_240 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( tmp_41_reg_244 );
    sensitive << ( tmp_42_reg_248 );
    sensitive << ( tmp_43_reg_252 );
    sensitive << ( ap_CS_fsm_state96 );
    sensitive << ( tmp_44_reg_256 );
    sensitive << ( tmp_45_reg_260 );
    sensitive << ( tmp_46_reg_264 );
    sensitive << ( ap_CS_fsm_state137 );
    sensitive << ( tmp_47_reg_268 );
    sensitive << ( tmp_48_reg_272 );
    sensitive << ( grp_turnCube_fu_72_cubieColor_V_address1 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state94 );
    sensitive << ( ap_CS_fsm_state99 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( ap_CS_fsm_state103 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_CS_fsm_state107 );
    sensitive << ( ap_CS_fsm_state109 );
    sensitive << ( ap_CS_fsm_state111 );
    sensitive << ( ap_CS_fsm_state113 );
    sensitive << ( ap_CS_fsm_state115 );
    sensitive << ( ap_CS_fsm_state119 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( ap_CS_fsm_state123 );
    sensitive << ( ap_CS_fsm_state125 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( ap_CS_fsm_state129 );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( ap_CS_fsm_state133 );
    sensitive << ( ap_CS_fsm_state135 );
    sensitive << ( ap_CS_fsm_state140 );
    sensitive << ( ap_CS_fsm_state142 );
    sensitive << ( ap_CS_fsm_state144 );
    sensitive << ( ap_CS_fsm_state146 );
    sensitive << ( ap_CS_fsm_state148 );
    sensitive << ( ap_CS_fsm_state150 );
    sensitive << ( ap_CS_fsm_state152 );
    sensitive << ( ap_CS_fsm_state154 );
    sensitive << ( ap_CS_fsm_state156 );
    sensitive << ( ap_CS_fsm_state160 );
    sensitive << ( ap_CS_fsm_state162 );
    sensitive << ( ap_CS_fsm_state164 );
    sensitive << ( ap_CS_fsm_state166 );
    sensitive << ( ap_CS_fsm_state168 );
    sensitive << ( ap_CS_fsm_state170 );
    sensitive << ( ap_CS_fsm_state172 );
    sensitive << ( ap_CS_fsm_state174 );
    sensitive << ( ap_CS_fsm_state176 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( ap_CS_fsm_state95 );
    sensitive << ( ap_CS_fsm_state116 );
    sensitive << ( ap_CS_fsm_state136 );
    sensitive << ( ap_CS_fsm_state157 );

    SC_METHOD(thread_cubieColor_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_reg_177 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_38_reg_232 );
    sensitive << ( tmp_39_reg_236 );
    sensitive << ( tmp_40_reg_240 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( tmp_41_reg_244 );
    sensitive << ( tmp_42_reg_248 );
    sensitive << ( tmp_43_reg_252 );
    sensitive << ( ap_CS_fsm_state96 );
    sensitive << ( tmp_44_reg_256 );
    sensitive << ( tmp_45_reg_260 );
    sensitive << ( tmp_46_reg_264 );
    sensitive << ( ap_CS_fsm_state137 );
    sensitive << ( tmp_47_reg_268 );
    sensitive << ( tmp_48_reg_272 );
    sensitive << ( grp_turnCube_fu_72_cubieColor_V_ce0 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state94 );
    sensitive << ( ap_CS_fsm_state99 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( ap_CS_fsm_state103 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_CS_fsm_state107 );
    sensitive << ( ap_CS_fsm_state109 );
    sensitive << ( ap_CS_fsm_state111 );
    sensitive << ( ap_CS_fsm_state113 );
    sensitive << ( ap_CS_fsm_state115 );
    sensitive << ( ap_CS_fsm_state119 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( ap_CS_fsm_state123 );
    sensitive << ( ap_CS_fsm_state125 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( ap_CS_fsm_state129 );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( ap_CS_fsm_state133 );
    sensitive << ( ap_CS_fsm_state135 );
    sensitive << ( ap_CS_fsm_state140 );
    sensitive << ( ap_CS_fsm_state142 );
    sensitive << ( ap_CS_fsm_state144 );
    sensitive << ( ap_CS_fsm_state146 );
    sensitive << ( ap_CS_fsm_state148 );
    sensitive << ( ap_CS_fsm_state150 );
    sensitive << ( ap_CS_fsm_state152 );
    sensitive << ( ap_CS_fsm_state154 );
    sensitive << ( ap_CS_fsm_state156 );
    sensitive << ( ap_CS_fsm_state160 );
    sensitive << ( ap_CS_fsm_state162 );
    sensitive << ( ap_CS_fsm_state164 );
    sensitive << ( ap_CS_fsm_state166 );
    sensitive << ( ap_CS_fsm_state168 );
    sensitive << ( ap_CS_fsm_state170 );
    sensitive << ( ap_CS_fsm_state172 );
    sensitive << ( ap_CS_fsm_state174 );
    sensitive << ( ap_CS_fsm_state176 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( ap_CS_fsm_state95 );
    sensitive << ( ap_CS_fsm_state116 );
    sensitive << ( ap_CS_fsm_state136 );
    sensitive << ( ap_CS_fsm_state157 );

    SC_METHOD(thread_cubieColor_V_ce1);
    sensitive << ( tmp_reg_177 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( tmp_38_reg_232 );
    sensitive << ( tmp_39_reg_236 );
    sensitive << ( tmp_40_reg_240 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( tmp_41_reg_244 );
    sensitive << ( tmp_42_reg_248 );
    sensitive << ( tmp_43_reg_252 );
    sensitive << ( ap_CS_fsm_state96 );
    sensitive << ( tmp_44_reg_256 );
    sensitive << ( tmp_45_reg_260 );
    sensitive << ( tmp_46_reg_264 );
    sensitive << ( ap_CS_fsm_state137 );
    sensitive << ( tmp_47_reg_268 );
    sensitive << ( tmp_48_reg_272 );
    sensitive << ( grp_turnCube_fu_72_cubieColor_V_ce1 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state94 );
    sensitive << ( ap_CS_fsm_state99 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( ap_CS_fsm_state103 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_CS_fsm_state107 );
    sensitive << ( ap_CS_fsm_state109 );
    sensitive << ( ap_CS_fsm_state111 );
    sensitive << ( ap_CS_fsm_state113 );
    sensitive << ( ap_CS_fsm_state115 );
    sensitive << ( ap_CS_fsm_state119 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( ap_CS_fsm_state123 );
    sensitive << ( ap_CS_fsm_state125 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( ap_CS_fsm_state129 );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( ap_CS_fsm_state133 );
    sensitive << ( ap_CS_fsm_state135 );
    sensitive << ( ap_CS_fsm_state140 );
    sensitive << ( ap_CS_fsm_state142 );
    sensitive << ( ap_CS_fsm_state144 );
    sensitive << ( ap_CS_fsm_state146 );
    sensitive << ( ap_CS_fsm_state148 );
    sensitive << ( ap_CS_fsm_state150 );
    sensitive << ( ap_CS_fsm_state152 );
    sensitive << ( ap_CS_fsm_state154 );
    sensitive << ( ap_CS_fsm_state156 );
    sensitive << ( ap_CS_fsm_state160 );
    sensitive << ( ap_CS_fsm_state162 );
    sensitive << ( ap_CS_fsm_state164 );
    sensitive << ( ap_CS_fsm_state166 );
    sensitive << ( ap_CS_fsm_state168 );
    sensitive << ( ap_CS_fsm_state170 );
    sensitive << ( ap_CS_fsm_state172 );
    sensitive << ( ap_CS_fsm_state174 );
    sensitive << ( ap_CS_fsm_state176 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state58 );
    sensitive << ( ap_CS_fsm_state77 );
    sensitive << ( ap_CS_fsm_state95 );
    sensitive << ( ap_CS_fsm_state116 );
    sensitive << ( ap_CS_fsm_state136 );
    sensitive << ( ap_CS_fsm_state157 );

    SC_METHOD(thread_cubieColor_V_d0);
    sensitive << ( tmp_reg_177 );
    sensitive << ( tmp_38_reg_232 );
    sensitive << ( tmp_39_reg_236 );
    sensitive << ( tmp_40_reg_240 );
    sensitive << ( tmp_41_reg_244 );
    sensitive << ( tmp_42_reg_248 );
    sensitive << ( tmp_43_reg_252 );
    sensitive << ( tmp_44_reg_256 );
    sensitive << ( tmp_45_reg_260 );
    sensitive << ( tmp_46_reg_264 );
    sensitive << ( tmp_47_reg_268 );
    sensitive << ( tmp_48_reg_272 );
    sensitive << ( grp_turnCube_fu_72_cubieColor_V_d0 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state94 );
    sensitive << ( ap_CS_fsm_state99 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( ap_CS_fsm_state103 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_CS_fsm_state107 );
    sensitive << ( ap_CS_fsm_state109 );
    sensitive << ( ap_CS_fsm_state111 );
    sensitive << ( ap_CS_fsm_state113 );
    sensitive << ( ap_CS_fsm_state115 );
    sensitive << ( ap_CS_fsm_state119 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( ap_CS_fsm_state123 );
    sensitive << ( ap_CS_fsm_state125 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( ap_CS_fsm_state129 );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( ap_CS_fsm_state133 );
    sensitive << ( ap_CS_fsm_state135 );
    sensitive << ( ap_CS_fsm_state140 );
    sensitive << ( ap_CS_fsm_state142 );
    sensitive << ( ap_CS_fsm_state144 );
    sensitive << ( ap_CS_fsm_state146 );
    sensitive << ( ap_CS_fsm_state148 );
    sensitive << ( ap_CS_fsm_state150 );
    sensitive << ( ap_CS_fsm_state152 );
    sensitive << ( ap_CS_fsm_state154 );
    sensitive << ( ap_CS_fsm_state156 );
    sensitive << ( ap_CS_fsm_state160 );
    sensitive << ( ap_CS_fsm_state162 );
    sensitive << ( ap_CS_fsm_state164 );
    sensitive << ( ap_CS_fsm_state166 );
    sensitive << ( ap_CS_fsm_state168 );
    sensitive << ( ap_CS_fsm_state170 );
    sensitive << ( ap_CS_fsm_state172 );
    sensitive << ( ap_CS_fsm_state174 );
    sensitive << ( ap_CS_fsm_state176 );

    SC_METHOD(thread_cubieColor_V_d1);
    sensitive << ( tmp_reg_177 );
    sensitive << ( tmp_38_reg_232 );
    sensitive << ( tmp_39_reg_236 );
    sensitive << ( tmp_40_reg_240 );
    sensitive << ( tmp_41_reg_244 );
    sensitive << ( tmp_42_reg_248 );
    sensitive << ( tmp_43_reg_252 );
    sensitive << ( tmp_44_reg_256 );
    sensitive << ( tmp_45_reg_260 );
    sensitive << ( tmp_46_reg_264 );
    sensitive << ( tmp_47_reg_268 );
    sensitive << ( tmp_48_reg_272 );
    sensitive << ( grp_turnCube_fu_72_cubieColor_V_d1 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state94 );
    sensitive << ( ap_CS_fsm_state99 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( ap_CS_fsm_state103 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_CS_fsm_state107 );
    sensitive << ( ap_CS_fsm_state109 );
    sensitive << ( ap_CS_fsm_state111 );
    sensitive << ( ap_CS_fsm_state113 );
    sensitive << ( ap_CS_fsm_state115 );
    sensitive << ( ap_CS_fsm_state119 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( ap_CS_fsm_state123 );
    sensitive << ( ap_CS_fsm_state125 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( ap_CS_fsm_state129 );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( ap_CS_fsm_state133 );
    sensitive << ( ap_CS_fsm_state135 );
    sensitive << ( ap_CS_fsm_state140 );
    sensitive << ( ap_CS_fsm_state142 );
    sensitive << ( ap_CS_fsm_state144 );
    sensitive << ( ap_CS_fsm_state146 );
    sensitive << ( ap_CS_fsm_state148 );
    sensitive << ( ap_CS_fsm_state150 );
    sensitive << ( ap_CS_fsm_state152 );
    sensitive << ( ap_CS_fsm_state154 );
    sensitive << ( ap_CS_fsm_state156 );
    sensitive << ( ap_CS_fsm_state160 );
    sensitive << ( ap_CS_fsm_state162 );
    sensitive << ( ap_CS_fsm_state164 );
    sensitive << ( ap_CS_fsm_state166 );
    sensitive << ( ap_CS_fsm_state168 );
    sensitive << ( ap_CS_fsm_state170 );
    sensitive << ( ap_CS_fsm_state172 );
    sensitive << ( ap_CS_fsm_state174 );
    sensitive << ( ap_CS_fsm_state176 );

    SC_METHOD(thread_cubieColor_V_we0);
    sensitive << ( tmp_reg_177 );
    sensitive << ( tmp_38_reg_232 );
    sensitive << ( tmp_39_reg_236 );
    sensitive << ( tmp_40_reg_240 );
    sensitive << ( tmp_41_reg_244 );
    sensitive << ( tmp_42_reg_248 );
    sensitive << ( tmp_43_reg_252 );
    sensitive << ( tmp_44_reg_256 );
    sensitive << ( tmp_45_reg_260 );
    sensitive << ( tmp_46_reg_264 );
    sensitive << ( tmp_47_reg_268 );
    sensitive << ( tmp_48_reg_272 );
    sensitive << ( grp_turnCube_fu_72_cubieColor_V_we0 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state94 );
    sensitive << ( ap_CS_fsm_state99 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( ap_CS_fsm_state103 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_CS_fsm_state107 );
    sensitive << ( ap_CS_fsm_state109 );
    sensitive << ( ap_CS_fsm_state111 );
    sensitive << ( ap_CS_fsm_state113 );
    sensitive << ( ap_CS_fsm_state115 );
    sensitive << ( ap_CS_fsm_state119 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( ap_CS_fsm_state123 );
    sensitive << ( ap_CS_fsm_state125 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( ap_CS_fsm_state129 );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( ap_CS_fsm_state133 );
    sensitive << ( ap_CS_fsm_state135 );
    sensitive << ( ap_CS_fsm_state140 );
    sensitive << ( ap_CS_fsm_state142 );
    sensitive << ( ap_CS_fsm_state144 );
    sensitive << ( ap_CS_fsm_state146 );
    sensitive << ( ap_CS_fsm_state148 );
    sensitive << ( ap_CS_fsm_state150 );
    sensitive << ( ap_CS_fsm_state152 );
    sensitive << ( ap_CS_fsm_state154 );
    sensitive << ( ap_CS_fsm_state156 );
    sensitive << ( ap_CS_fsm_state160 );
    sensitive << ( ap_CS_fsm_state162 );
    sensitive << ( ap_CS_fsm_state164 );
    sensitive << ( ap_CS_fsm_state166 );
    sensitive << ( ap_CS_fsm_state168 );
    sensitive << ( ap_CS_fsm_state170 );
    sensitive << ( ap_CS_fsm_state172 );
    sensitive << ( ap_CS_fsm_state174 );
    sensitive << ( ap_CS_fsm_state176 );

    SC_METHOD(thread_cubieColor_V_we1);
    sensitive << ( tmp_reg_177 );
    sensitive << ( tmp_38_reg_232 );
    sensitive << ( tmp_39_reg_236 );
    sensitive << ( tmp_40_reg_240 );
    sensitive << ( tmp_41_reg_244 );
    sensitive << ( tmp_42_reg_248 );
    sensitive << ( tmp_43_reg_252 );
    sensitive << ( tmp_44_reg_256 );
    sensitive << ( tmp_45_reg_260 );
    sensitive << ( tmp_46_reg_264 );
    sensitive << ( tmp_47_reg_268 );
    sensitive << ( tmp_48_reg_272 );
    sensitive << ( grp_turnCube_fu_72_cubieColor_V_we1 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state94 );
    sensitive << ( ap_CS_fsm_state99 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( ap_CS_fsm_state103 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_CS_fsm_state107 );
    sensitive << ( ap_CS_fsm_state109 );
    sensitive << ( ap_CS_fsm_state111 );
    sensitive << ( ap_CS_fsm_state113 );
    sensitive << ( ap_CS_fsm_state115 );
    sensitive << ( ap_CS_fsm_state119 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( ap_CS_fsm_state123 );
    sensitive << ( ap_CS_fsm_state125 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( ap_CS_fsm_state129 );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( ap_CS_fsm_state133 );
    sensitive << ( ap_CS_fsm_state135 );
    sensitive << ( ap_CS_fsm_state140 );
    sensitive << ( ap_CS_fsm_state142 );
    sensitive << ( ap_CS_fsm_state144 );
    sensitive << ( ap_CS_fsm_state146 );
    sensitive << ( ap_CS_fsm_state148 );
    sensitive << ( ap_CS_fsm_state150 );
    sensitive << ( ap_CS_fsm_state152 );
    sensitive << ( ap_CS_fsm_state154 );
    sensitive << ( ap_CS_fsm_state156 );
    sensitive << ( ap_CS_fsm_state160 );
    sensitive << ( ap_CS_fsm_state162 );
    sensitive << ( ap_CS_fsm_state164 );
    sensitive << ( ap_CS_fsm_state166 );
    sensitive << ( ap_CS_fsm_state168 );
    sensitive << ( ap_CS_fsm_state170 );
    sensitive << ( ap_CS_fsm_state172 );
    sensitive << ( ap_CS_fsm_state174 );
    sensitive << ( ap_CS_fsm_state176 );

    SC_METHOD(thread_grp_fu_91_p2);
    sensitive << ( cubieColor_V_q1 );
    sensitive << ( cubieColor_V_load_31_reg_172 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_grp_fu_96_p2);
    sensitive << ( cubieColor_V_q0 );
    sensitive << ( cubieColor_V_q1 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state96 );
    sensitive << ( ap_CS_fsm_state97 );
    sensitive << ( ap_CS_fsm_state117 );
    sensitive << ( ap_CS_fsm_state137 );
    sensitive << ( ap_CS_fsm_state138 );
    sensitive << ( ap_CS_fsm_state158 );

    SC_METHOD(thread_grp_turnCube_fu_72_ap_start);
    sensitive << ( grp_turnCube_fu_72_ap_start_reg );

    SC_METHOD(thread_grp_turnCube_fu_72_turn_V);
    sensitive << ( tmp_reg_177 );
    sensitive << ( tmp_38_reg_232 );
    sensitive << ( tmp_39_reg_236 );
    sensitive << ( tmp_40_reg_240 );
    sensitive << ( tmp_41_reg_244 );
    sensitive << ( tmp_42_reg_248 );
    sensitive << ( tmp_43_reg_252 );
    sensitive << ( tmp_44_reg_256 );
    sensitive << ( tmp_45_reg_260 );
    sensitive << ( tmp_46_reg_264 );
    sensitive << ( tmp_47_reg_268 );
    sensitive << ( tmp_48_reg_272 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state94 );
    sensitive << ( ap_CS_fsm_state99 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( ap_CS_fsm_state103 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_CS_fsm_state107 );
    sensitive << ( ap_CS_fsm_state109 );
    sensitive << ( ap_CS_fsm_state111 );
    sensitive << ( ap_CS_fsm_state113 );
    sensitive << ( ap_CS_fsm_state115 );
    sensitive << ( ap_CS_fsm_state119 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( ap_CS_fsm_state123 );
    sensitive << ( ap_CS_fsm_state125 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( ap_CS_fsm_state129 );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( ap_CS_fsm_state133 );
    sensitive << ( ap_CS_fsm_state135 );
    sensitive << ( ap_CS_fsm_state140 );
    sensitive << ( ap_CS_fsm_state142 );
    sensitive << ( ap_CS_fsm_state144 );
    sensitive << ( ap_CS_fsm_state146 );
    sensitive << ( ap_CS_fsm_state148 );
    sensitive << ( ap_CS_fsm_state150 );
    sensitive << ( ap_CS_fsm_state152 );
    sensitive << ( ap_CS_fsm_state154 );
    sensitive << ( ap_CS_fsm_state156 );
    sensitive << ( ap_CS_fsm_state160 );
    sensitive << ( ap_CS_fsm_state162 );
    sensitive << ( ap_CS_fsm_state164 );
    sensitive << ( ap_CS_fsm_state166 );
    sensitive << ( ap_CS_fsm_state168 );
    sensitive << ( ap_CS_fsm_state170 );
    sensitive << ( ap_CS_fsm_state172 );
    sensitive << ( ap_CS_fsm_state174 );
    sensitive << ( ap_CS_fsm_state176 );

    SC_METHOD(thread_moveCounter_V_o);
    sensitive << ( moveCounter_V_i );
    sensitive << ( tmp_reg_177 );
    sensitive << ( tmp_38_reg_232 );
    sensitive << ( tmp_39_reg_236 );
    sensitive << ( tmp_40_reg_240 );
    sensitive << ( tmp_41_reg_244 );
    sensitive << ( tmp_42_reg_248 );
    sensitive << ( tmp_43_reg_252 );
    sensitive << ( tmp_44_reg_256 );
    sensitive << ( tmp_45_reg_260 );
    sensitive << ( tmp_46_reg_264 );
    sensitive << ( tmp_47_reg_268 );
    sensitive << ( tmp_48_reg_272 );
    sensitive << ( grp_turnCube_fu_72_moveCounter_V_o );
    sensitive << ( grp_turnCube_fu_72_moveCounter_V_o_ap_vld );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state94 );
    sensitive << ( ap_CS_fsm_state99 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( ap_CS_fsm_state103 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_CS_fsm_state107 );
    sensitive << ( ap_CS_fsm_state109 );
    sensitive << ( ap_CS_fsm_state111 );
    sensitive << ( ap_CS_fsm_state113 );
    sensitive << ( ap_CS_fsm_state115 );
    sensitive << ( ap_CS_fsm_state119 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( ap_CS_fsm_state123 );
    sensitive << ( ap_CS_fsm_state125 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( ap_CS_fsm_state129 );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( ap_CS_fsm_state133 );
    sensitive << ( ap_CS_fsm_state135 );
    sensitive << ( ap_CS_fsm_state140 );
    sensitive << ( ap_CS_fsm_state142 );
    sensitive << ( ap_CS_fsm_state144 );
    sensitive << ( ap_CS_fsm_state146 );
    sensitive << ( ap_CS_fsm_state148 );
    sensitive << ( ap_CS_fsm_state150 );
    sensitive << ( ap_CS_fsm_state152 );
    sensitive << ( ap_CS_fsm_state154 );
    sensitive << ( ap_CS_fsm_state156 );
    sensitive << ( ap_CS_fsm_state160 );
    sensitive << ( ap_CS_fsm_state162 );
    sensitive << ( ap_CS_fsm_state164 );
    sensitive << ( ap_CS_fsm_state166 );
    sensitive << ( ap_CS_fsm_state168 );
    sensitive << ( ap_CS_fsm_state170 );
    sensitive << ( ap_CS_fsm_state172 );
    sensitive << ( ap_CS_fsm_state174 );
    sensitive << ( ap_CS_fsm_state176 );

    SC_METHOD(thread_moveCounter_V_o_ap_vld);
    sensitive << ( tmp_reg_177 );
    sensitive << ( tmp_38_reg_232 );
    sensitive << ( tmp_39_reg_236 );
    sensitive << ( tmp_40_reg_240 );
    sensitive << ( tmp_41_reg_244 );
    sensitive << ( tmp_42_reg_248 );
    sensitive << ( tmp_43_reg_252 );
    sensitive << ( tmp_44_reg_256 );
    sensitive << ( tmp_45_reg_260 );
    sensitive << ( tmp_46_reg_264 );
    sensitive << ( tmp_47_reg_268 );
    sensitive << ( tmp_48_reg_272 );
    sensitive << ( grp_turnCube_fu_72_moveCounter_V_o_ap_vld );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state94 );
    sensitive << ( ap_CS_fsm_state99 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( ap_CS_fsm_state103 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_CS_fsm_state107 );
    sensitive << ( ap_CS_fsm_state109 );
    sensitive << ( ap_CS_fsm_state111 );
    sensitive << ( ap_CS_fsm_state113 );
    sensitive << ( ap_CS_fsm_state115 );
    sensitive << ( ap_CS_fsm_state119 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( ap_CS_fsm_state123 );
    sensitive << ( ap_CS_fsm_state125 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( ap_CS_fsm_state129 );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( ap_CS_fsm_state133 );
    sensitive << ( ap_CS_fsm_state135 );
    sensitive << ( ap_CS_fsm_state140 );
    sensitive << ( ap_CS_fsm_state142 );
    sensitive << ( ap_CS_fsm_state144 );
    sensitive << ( ap_CS_fsm_state146 );
    sensitive << ( ap_CS_fsm_state148 );
    sensitive << ( ap_CS_fsm_state150 );
    sensitive << ( ap_CS_fsm_state152 );
    sensitive << ( ap_CS_fsm_state154 );
    sensitive << ( ap_CS_fsm_state156 );
    sensitive << ( ap_CS_fsm_state160 );
    sensitive << ( ap_CS_fsm_state162 );
    sensitive << ( ap_CS_fsm_state164 );
    sensitive << ( ap_CS_fsm_state166 );
    sensitive << ( ap_CS_fsm_state168 );
    sensitive << ( ap_CS_fsm_state170 );
    sensitive << ( ap_CS_fsm_state172 );
    sensitive << ( ap_CS_fsm_state174 );
    sensitive << ( ap_CS_fsm_state176 );

    SC_METHOD(thread_moves_V_address0);
    sensitive << ( tmp_reg_177 );
    sensitive << ( tmp_38_reg_232 );
    sensitive << ( tmp_39_reg_236 );
    sensitive << ( tmp_40_reg_240 );
    sensitive << ( tmp_41_reg_244 );
    sensitive << ( tmp_42_reg_248 );
    sensitive << ( tmp_43_reg_252 );
    sensitive << ( tmp_44_reg_256 );
    sensitive << ( tmp_45_reg_260 );
    sensitive << ( tmp_46_reg_264 );
    sensitive << ( tmp_47_reg_268 );
    sensitive << ( tmp_48_reg_272 );
    sensitive << ( grp_turnCube_fu_72_moves_V_address0 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state94 );
    sensitive << ( ap_CS_fsm_state99 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( ap_CS_fsm_state103 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_CS_fsm_state107 );
    sensitive << ( ap_CS_fsm_state109 );
    sensitive << ( ap_CS_fsm_state111 );
    sensitive << ( ap_CS_fsm_state113 );
    sensitive << ( ap_CS_fsm_state115 );
    sensitive << ( ap_CS_fsm_state119 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( ap_CS_fsm_state123 );
    sensitive << ( ap_CS_fsm_state125 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( ap_CS_fsm_state129 );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( ap_CS_fsm_state133 );
    sensitive << ( ap_CS_fsm_state135 );
    sensitive << ( ap_CS_fsm_state140 );
    sensitive << ( ap_CS_fsm_state142 );
    sensitive << ( ap_CS_fsm_state144 );
    sensitive << ( ap_CS_fsm_state146 );
    sensitive << ( ap_CS_fsm_state148 );
    sensitive << ( ap_CS_fsm_state150 );
    sensitive << ( ap_CS_fsm_state152 );
    sensitive << ( ap_CS_fsm_state154 );
    sensitive << ( ap_CS_fsm_state156 );
    sensitive << ( ap_CS_fsm_state160 );
    sensitive << ( ap_CS_fsm_state162 );
    sensitive << ( ap_CS_fsm_state164 );
    sensitive << ( ap_CS_fsm_state166 );
    sensitive << ( ap_CS_fsm_state168 );
    sensitive << ( ap_CS_fsm_state170 );
    sensitive << ( ap_CS_fsm_state172 );
    sensitive << ( ap_CS_fsm_state174 );
    sensitive << ( ap_CS_fsm_state176 );

    SC_METHOD(thread_moves_V_ce0);
    sensitive << ( tmp_reg_177 );
    sensitive << ( tmp_38_reg_232 );
    sensitive << ( tmp_39_reg_236 );
    sensitive << ( tmp_40_reg_240 );
    sensitive << ( tmp_41_reg_244 );
    sensitive << ( tmp_42_reg_248 );
    sensitive << ( tmp_43_reg_252 );
    sensitive << ( tmp_44_reg_256 );
    sensitive << ( tmp_45_reg_260 );
    sensitive << ( tmp_46_reg_264 );
    sensitive << ( tmp_47_reg_268 );
    sensitive << ( tmp_48_reg_272 );
    sensitive << ( grp_turnCube_fu_72_moves_V_ce0 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state94 );
    sensitive << ( ap_CS_fsm_state99 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( ap_CS_fsm_state103 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_CS_fsm_state107 );
    sensitive << ( ap_CS_fsm_state109 );
    sensitive << ( ap_CS_fsm_state111 );
    sensitive << ( ap_CS_fsm_state113 );
    sensitive << ( ap_CS_fsm_state115 );
    sensitive << ( ap_CS_fsm_state119 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( ap_CS_fsm_state123 );
    sensitive << ( ap_CS_fsm_state125 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( ap_CS_fsm_state129 );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( ap_CS_fsm_state133 );
    sensitive << ( ap_CS_fsm_state135 );
    sensitive << ( ap_CS_fsm_state140 );
    sensitive << ( ap_CS_fsm_state142 );
    sensitive << ( ap_CS_fsm_state144 );
    sensitive << ( ap_CS_fsm_state146 );
    sensitive << ( ap_CS_fsm_state148 );
    sensitive << ( ap_CS_fsm_state150 );
    sensitive << ( ap_CS_fsm_state152 );
    sensitive << ( ap_CS_fsm_state154 );
    sensitive << ( ap_CS_fsm_state156 );
    sensitive << ( ap_CS_fsm_state160 );
    sensitive << ( ap_CS_fsm_state162 );
    sensitive << ( ap_CS_fsm_state164 );
    sensitive << ( ap_CS_fsm_state166 );
    sensitive << ( ap_CS_fsm_state168 );
    sensitive << ( ap_CS_fsm_state170 );
    sensitive << ( ap_CS_fsm_state172 );
    sensitive << ( ap_CS_fsm_state174 );
    sensitive << ( ap_CS_fsm_state176 );

    SC_METHOD(thread_moves_V_d0);
    sensitive << ( tmp_reg_177 );
    sensitive << ( tmp_38_reg_232 );
    sensitive << ( tmp_39_reg_236 );
    sensitive << ( tmp_40_reg_240 );
    sensitive << ( tmp_41_reg_244 );
    sensitive << ( tmp_42_reg_248 );
    sensitive << ( tmp_43_reg_252 );
    sensitive << ( tmp_44_reg_256 );
    sensitive << ( tmp_45_reg_260 );
    sensitive << ( tmp_46_reg_264 );
    sensitive << ( tmp_47_reg_268 );
    sensitive << ( tmp_48_reg_272 );
    sensitive << ( grp_turnCube_fu_72_moves_V_d0 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state94 );
    sensitive << ( ap_CS_fsm_state99 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( ap_CS_fsm_state103 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_CS_fsm_state107 );
    sensitive << ( ap_CS_fsm_state109 );
    sensitive << ( ap_CS_fsm_state111 );
    sensitive << ( ap_CS_fsm_state113 );
    sensitive << ( ap_CS_fsm_state115 );
    sensitive << ( ap_CS_fsm_state119 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( ap_CS_fsm_state123 );
    sensitive << ( ap_CS_fsm_state125 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( ap_CS_fsm_state129 );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( ap_CS_fsm_state133 );
    sensitive << ( ap_CS_fsm_state135 );
    sensitive << ( ap_CS_fsm_state140 );
    sensitive << ( ap_CS_fsm_state142 );
    sensitive << ( ap_CS_fsm_state144 );
    sensitive << ( ap_CS_fsm_state146 );
    sensitive << ( ap_CS_fsm_state148 );
    sensitive << ( ap_CS_fsm_state150 );
    sensitive << ( ap_CS_fsm_state152 );
    sensitive << ( ap_CS_fsm_state154 );
    sensitive << ( ap_CS_fsm_state156 );
    sensitive << ( ap_CS_fsm_state160 );
    sensitive << ( ap_CS_fsm_state162 );
    sensitive << ( ap_CS_fsm_state164 );
    sensitive << ( ap_CS_fsm_state166 );
    sensitive << ( ap_CS_fsm_state168 );
    sensitive << ( ap_CS_fsm_state170 );
    sensitive << ( ap_CS_fsm_state172 );
    sensitive << ( ap_CS_fsm_state174 );
    sensitive << ( ap_CS_fsm_state176 );

    SC_METHOD(thread_moves_V_we0);
    sensitive << ( tmp_reg_177 );
    sensitive << ( tmp_38_reg_232 );
    sensitive << ( tmp_39_reg_236 );
    sensitive << ( tmp_40_reg_240 );
    sensitive << ( tmp_41_reg_244 );
    sensitive << ( tmp_42_reg_248 );
    sensitive << ( tmp_43_reg_252 );
    sensitive << ( tmp_44_reg_256 );
    sensitive << ( tmp_45_reg_260 );
    sensitive << ( tmp_46_reg_264 );
    sensitive << ( tmp_47_reg_268 );
    sensitive << ( tmp_48_reg_272 );
    sensitive << ( grp_turnCube_fu_72_moves_V_we0 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state94 );
    sensitive << ( ap_CS_fsm_state99 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( ap_CS_fsm_state103 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_CS_fsm_state107 );
    sensitive << ( ap_CS_fsm_state109 );
    sensitive << ( ap_CS_fsm_state111 );
    sensitive << ( ap_CS_fsm_state113 );
    sensitive << ( ap_CS_fsm_state115 );
    sensitive << ( ap_CS_fsm_state119 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( ap_CS_fsm_state123 );
    sensitive << ( ap_CS_fsm_state125 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( ap_CS_fsm_state129 );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( ap_CS_fsm_state133 );
    sensitive << ( ap_CS_fsm_state135 );
    sensitive << ( ap_CS_fsm_state140 );
    sensitive << ( ap_CS_fsm_state142 );
    sensitive << ( ap_CS_fsm_state144 );
    sensitive << ( ap_CS_fsm_state146 );
    sensitive << ( ap_CS_fsm_state148 );
    sensitive << ( ap_CS_fsm_state150 );
    sensitive << ( ap_CS_fsm_state152 );
    sensitive << ( ap_CS_fsm_state154 );
    sensitive << ( ap_CS_fsm_state156 );
    sensitive << ( ap_CS_fsm_state160 );
    sensitive << ( ap_CS_fsm_state162 );
    sensitive << ( ap_CS_fsm_state164 );
    sensitive << ( ap_CS_fsm_state166 );
    sensitive << ( ap_CS_fsm_state168 );
    sensitive << ( ap_CS_fsm_state170 );
    sensitive << ( ap_CS_fsm_state172 );
    sensitive << ( ap_CS_fsm_state174 );
    sensitive << ( ap_CS_fsm_state176 );

    SC_METHOD(thread_or_cond2_fu_134_p2);
    sensitive << ( tmp_30_fu_124_p2 );
    sensitive << ( tmp_31_fu_129_p2 );

    SC_METHOD(thread_or_cond3_fu_150_p2);
    sensitive << ( tmp_33_fu_140_p2 );
    sensitive << ( tmp_34_fu_145_p2 );

    SC_METHOD(thread_or_cond4_fu_166_p2);
    sensitive << ( tmp_36_fu_156_p2 );
    sensitive << ( tmp_37_fu_161_p2 );

    SC_METHOD(thread_or_cond_fu_118_p2);
    sensitive << ( tmp_s_fu_108_p2 );
    sensitive << ( tmp_28_fu_113_p2 );

    SC_METHOD(thread_tmp_28_fu_113_p2);
    sensitive << ( cubieColor_V_q0 );
    sensitive << ( tmp_reg_177 );
    sensitive << ( cubieColor_V_load_32_reg_181 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_tmp_30_fu_124_p2);
    sensitive << ( cubieColor_V_q1 );
    sensitive << ( tmp_29_reg_191 );
    sensitive << ( cubieColor_V_load_36_reg_195 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_tmp_31_fu_129_p2);
    sensitive << ( cubieColor_V_q0 );
    sensitive << ( tmp_29_reg_191 );
    sensitive << ( cubieColor_V_load_36_reg_195 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_tmp_33_fu_140_p2);
    sensitive << ( cubieColor_V_q1 );
    sensitive << ( tmp_32_reg_205 );
    sensitive << ( cubieColor_V_load_40_reg_209 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_tmp_34_fu_145_p2);
    sensitive << ( cubieColor_V_q0 );
    sensitive << ( tmp_32_reg_205 );
    sensitive << ( cubieColor_V_load_40_reg_209 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_tmp_36_fu_156_p2);
    sensitive << ( cubieColor_V_q1 );
    sensitive << ( tmp_reg_177 );
    sensitive << ( or_cond_reg_187 );
    sensitive << ( tmp_29_reg_191 );
    sensitive << ( or_cond2_reg_201 );
    sensitive << ( tmp_32_reg_205 );
    sensitive << ( or_cond3_reg_215 );
    sensitive << ( tmp_35_reg_219 );
    sensitive << ( cubieColor_V_load_44_reg_223 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_tmp_37_fu_161_p2);
    sensitive << ( cubieColor_V_q0 );
    sensitive << ( tmp_reg_177 );
    sensitive << ( or_cond_reg_187 );
    sensitive << ( tmp_29_reg_191 );
    sensitive << ( or_cond2_reg_201 );
    sensitive << ( tmp_32_reg_205 );
    sensitive << ( or_cond3_reg_215 );
    sensitive << ( tmp_35_reg_219 );
    sensitive << ( cubieColor_V_load_44_reg_223 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_tmp_fu_102_p2);
    sensitive << ( cubieColor_V_q0 );
    sensitive << ( cubieColor_V_q1 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_tmp_s_fu_108_p2);
    sensitive << ( cubieColor_V_q1 );
    sensitive << ( tmp_reg_177 );
    sensitive << ( cubieColor_V_load_32_reg_181 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_fu_102_p2 );
    sensitive << ( tmp_reg_177 );
    sensitive << ( or_cond_fu_118_p2 );
    sensitive << ( or_cond_reg_187 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_fu_91_p2 );
    sensitive << ( tmp_29_reg_191 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( or_cond2_fu_134_p2 );
    sensitive << ( or_cond2_reg_201 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_32_reg_205 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( or_cond3_fu_150_p2 );
    sensitive << ( or_cond3_reg_215 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_35_reg_219 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( grp_fu_96_p2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state59 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( ap_CS_fsm_state96 );
    sensitive << ( ap_CS_fsm_state97 );
    sensitive << ( ap_CS_fsm_state117 );
    sensitive << ( ap_CS_fsm_state137 );
    sensitive << ( ap_CS_fsm_state138 );
    sensitive << ( ap_CS_fsm_state158 );
    sensitive << ( grp_turnCube_fu_72_ap_done );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state64 );
    sensitive << ( ap_CS_fsm_state66 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state72 );
    sensitive << ( ap_CS_fsm_state74 );
    sensitive << ( ap_CS_fsm_state76 );
    sensitive << ( ap_CS_fsm_state80 );
    sensitive << ( ap_CS_fsm_state82 );
    sensitive << ( ap_CS_fsm_state84 );
    sensitive << ( ap_CS_fsm_state86 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( ap_CS_fsm_state90 );
    sensitive << ( ap_CS_fsm_state92 );
    sensitive << ( ap_CS_fsm_state94 );
    sensitive << ( ap_CS_fsm_state99 );
    sensitive << ( ap_CS_fsm_state101 );
    sensitive << ( ap_CS_fsm_state103 );
    sensitive << ( ap_CS_fsm_state105 );
    sensitive << ( ap_CS_fsm_state107 );
    sensitive << ( ap_CS_fsm_state109 );
    sensitive << ( ap_CS_fsm_state111 );
    sensitive << ( ap_CS_fsm_state113 );
    sensitive << ( ap_CS_fsm_state115 );
    sensitive << ( ap_CS_fsm_state119 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( ap_CS_fsm_state123 );
    sensitive << ( ap_CS_fsm_state125 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( ap_CS_fsm_state129 );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( ap_CS_fsm_state133 );
    sensitive << ( ap_CS_fsm_state135 );
    sensitive << ( ap_CS_fsm_state140 );
    sensitive << ( ap_CS_fsm_state142 );
    sensitive << ( ap_CS_fsm_state144 );
    sensitive << ( ap_CS_fsm_state146 );
    sensitive << ( ap_CS_fsm_state148 );
    sensitive << ( ap_CS_fsm_state150 );
    sensitive << ( ap_CS_fsm_state152 );
    sensitive << ( ap_CS_fsm_state154 );
    sensitive << ( ap_CS_fsm_state156 );
    sensitive << ( ap_CS_fsm_state160 );
    sensitive << ( ap_CS_fsm_state162 );
    sensitive << ( ap_CS_fsm_state164 );
    sensitive << ( ap_CS_fsm_state166 );
    sensitive << ( ap_CS_fsm_state168 );
    sensitive << ( ap_CS_fsm_state170 );
    sensitive << ( ap_CS_fsm_state172 );
    sensitive << ( ap_CS_fsm_state174 );
    sensitive << ( ap_CS_fsm_state176 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( or_cond4_fu_166_p2 );
    sensitive << ( ap_block_state35_on_subcall_done );
    sensitive << ( ap_block_state57_on_subcall_done );
    sensitive << ( ap_block_state76_on_subcall_done );
    sensitive << ( ap_block_state94_on_subcall_done );
    sensitive << ( ap_block_state115_on_subcall_done );
    sensitive << ( ap_block_state135_on_subcall_done );
    sensitive << ( ap_block_state156_on_subcall_done );
    sensitive << ( ap_block_state176_on_subcall_done );

    ap_CS_fsm = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    grp_turnCube_fu_72_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "solveStage3a_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, moveCounter_V_i, "(port)moveCounter_V_i");
    sc_trace(mVcdFile, moveCounter_V_o, "(port)moveCounter_V_o");
    sc_trace(mVcdFile, moveCounter_V_o_ap_vld, "(port)moveCounter_V_o_ap_vld");
    sc_trace(mVcdFile, moves_V_address0, "(port)moves_V_address0");
    sc_trace(mVcdFile, moves_V_ce0, "(port)moves_V_ce0");
    sc_trace(mVcdFile, moves_V_we0, "(port)moves_V_we0");
    sc_trace(mVcdFile, moves_V_d0, "(port)moves_V_d0");
    sc_trace(mVcdFile, cubieColor_V_address0, "(port)cubieColor_V_address0");
    sc_trace(mVcdFile, cubieColor_V_ce0, "(port)cubieColor_V_ce0");
    sc_trace(mVcdFile, cubieColor_V_we0, "(port)cubieColor_V_we0");
    sc_trace(mVcdFile, cubieColor_V_d0, "(port)cubieColor_V_d0");
    sc_trace(mVcdFile, cubieColor_V_q0, "(port)cubieColor_V_q0");
    sc_trace(mVcdFile, cubieColor_V_address1, "(port)cubieColor_V_address1");
    sc_trace(mVcdFile, cubieColor_V_ce1, "(port)cubieColor_V_ce1");
    sc_trace(mVcdFile, cubieColor_V_we1, "(port)cubieColor_V_we1");
    sc_trace(mVcdFile, cubieColor_V_d1, "(port)cubieColor_V_d1");
    sc_trace(mVcdFile, cubieColor_V_q1, "(port)cubieColor_V_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, cubieColor_V_load_31_reg_172, "cubieColor_V_load_31_reg_172");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_fu_102_p2, "tmp_fu_102_p2");
    sc_trace(mVcdFile, tmp_reg_177, "tmp_reg_177");
    sc_trace(mVcdFile, cubieColor_V_load_32_reg_181, "cubieColor_V_load_32_reg_181");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, or_cond_fu_118_p2, "or_cond_fu_118_p2");
    sc_trace(mVcdFile, or_cond_reg_187, "or_cond_reg_187");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_fu_91_p2, "grp_fu_91_p2");
    sc_trace(mVcdFile, tmp_29_reg_191, "tmp_29_reg_191");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, cubieColor_V_load_36_reg_195, "cubieColor_V_load_36_reg_195");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, or_cond2_fu_134_p2, "or_cond2_fu_134_p2");
    sc_trace(mVcdFile, or_cond2_reg_201, "or_cond2_reg_201");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_32_reg_205, "tmp_32_reg_205");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, cubieColor_V_load_40_reg_209, "cubieColor_V_load_40_reg_209");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, or_cond3_fu_150_p2, "or_cond3_fu_150_p2");
    sc_trace(mVcdFile, or_cond3_reg_215, "or_cond3_reg_215");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, tmp_35_reg_219, "tmp_35_reg_219");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, cubieColor_V_load_44_reg_223, "cubieColor_V_load_44_reg_223");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, grp_fu_96_p2, "grp_fu_96_p2");
    sc_trace(mVcdFile, tmp_38_reg_232, "tmp_38_reg_232");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, tmp_39_reg_236, "tmp_39_reg_236");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, tmp_40_reg_240, "tmp_40_reg_240");
    sc_trace(mVcdFile, ap_CS_fsm_state59, "ap_CS_fsm_state59");
    sc_trace(mVcdFile, tmp_41_reg_244, "tmp_41_reg_244");
    sc_trace(mVcdFile, ap_CS_fsm_state60, "ap_CS_fsm_state60");
    sc_trace(mVcdFile, tmp_42_reg_248, "tmp_42_reg_248");
    sc_trace(mVcdFile, ap_CS_fsm_state78, "ap_CS_fsm_state78");
    sc_trace(mVcdFile, tmp_43_reg_252, "tmp_43_reg_252");
    sc_trace(mVcdFile, ap_CS_fsm_state96, "ap_CS_fsm_state96");
    sc_trace(mVcdFile, tmp_44_reg_256, "tmp_44_reg_256");
    sc_trace(mVcdFile, ap_CS_fsm_state97, "ap_CS_fsm_state97");
    sc_trace(mVcdFile, tmp_45_reg_260, "tmp_45_reg_260");
    sc_trace(mVcdFile, ap_CS_fsm_state117, "ap_CS_fsm_state117");
    sc_trace(mVcdFile, tmp_46_reg_264, "tmp_46_reg_264");
    sc_trace(mVcdFile, ap_CS_fsm_state137, "ap_CS_fsm_state137");
    sc_trace(mVcdFile, tmp_47_reg_268, "tmp_47_reg_268");
    sc_trace(mVcdFile, ap_CS_fsm_state138, "ap_CS_fsm_state138");
    sc_trace(mVcdFile, tmp_48_reg_272, "tmp_48_reg_272");
    sc_trace(mVcdFile, ap_CS_fsm_state158, "ap_CS_fsm_state158");
    sc_trace(mVcdFile, grp_turnCube_fu_72_ap_start, "grp_turnCube_fu_72_ap_start");
    sc_trace(mVcdFile, grp_turnCube_fu_72_ap_done, "grp_turnCube_fu_72_ap_done");
    sc_trace(mVcdFile, grp_turnCube_fu_72_ap_idle, "grp_turnCube_fu_72_ap_idle");
    sc_trace(mVcdFile, grp_turnCube_fu_72_ap_ready, "grp_turnCube_fu_72_ap_ready");
    sc_trace(mVcdFile, grp_turnCube_fu_72_turn_V, "grp_turnCube_fu_72_turn_V");
    sc_trace(mVcdFile, grp_turnCube_fu_72_moveCounter_V_o, "grp_turnCube_fu_72_moveCounter_V_o");
    sc_trace(mVcdFile, grp_turnCube_fu_72_moveCounter_V_o_ap_vld, "grp_turnCube_fu_72_moveCounter_V_o_ap_vld");
    sc_trace(mVcdFile, grp_turnCube_fu_72_moves_V_address0, "grp_turnCube_fu_72_moves_V_address0");
    sc_trace(mVcdFile, grp_turnCube_fu_72_moves_V_ce0, "grp_turnCube_fu_72_moves_V_ce0");
    sc_trace(mVcdFile, grp_turnCube_fu_72_moves_V_we0, "grp_turnCube_fu_72_moves_V_we0");
    sc_trace(mVcdFile, grp_turnCube_fu_72_moves_V_d0, "grp_turnCube_fu_72_moves_V_d0");
    sc_trace(mVcdFile, grp_turnCube_fu_72_cubieColor_V_address0, "grp_turnCube_fu_72_cubieColor_V_address0");
    sc_trace(mVcdFile, grp_turnCube_fu_72_cubieColor_V_ce0, "grp_turnCube_fu_72_cubieColor_V_ce0");
    sc_trace(mVcdFile, grp_turnCube_fu_72_cubieColor_V_we0, "grp_turnCube_fu_72_cubieColor_V_we0");
    sc_trace(mVcdFile, grp_turnCube_fu_72_cubieColor_V_d0, "grp_turnCube_fu_72_cubieColor_V_d0");
    sc_trace(mVcdFile, grp_turnCube_fu_72_cubieColor_V_address1, "grp_turnCube_fu_72_cubieColor_V_address1");
    sc_trace(mVcdFile, grp_turnCube_fu_72_cubieColor_V_ce1, "grp_turnCube_fu_72_cubieColor_V_ce1");
    sc_trace(mVcdFile, grp_turnCube_fu_72_cubieColor_V_we1, "grp_turnCube_fu_72_cubieColor_V_we1");
    sc_trace(mVcdFile, grp_turnCube_fu_72_cubieColor_V_d1, "grp_turnCube_fu_72_cubieColor_V_d1");
    sc_trace(mVcdFile, grp_turnCube_fu_72_ap_start_reg, "grp_turnCube_fu_72_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, ap_CS_fsm_state54, "ap_CS_fsm_state54");
    sc_trace(mVcdFile, ap_CS_fsm_state56, "ap_CS_fsm_state56");
    sc_trace(mVcdFile, ap_CS_fsm_state61, "ap_CS_fsm_state61");
    sc_trace(mVcdFile, ap_CS_fsm_state63, "ap_CS_fsm_state63");
    sc_trace(mVcdFile, ap_CS_fsm_state65, "ap_CS_fsm_state65");
    sc_trace(mVcdFile, ap_CS_fsm_state67, "ap_CS_fsm_state67");
    sc_trace(mVcdFile, ap_CS_fsm_state69, "ap_CS_fsm_state69");
    sc_trace(mVcdFile, ap_CS_fsm_state71, "ap_CS_fsm_state71");
    sc_trace(mVcdFile, ap_CS_fsm_state73, "ap_CS_fsm_state73");
    sc_trace(mVcdFile, ap_CS_fsm_state75, "ap_CS_fsm_state75");
    sc_trace(mVcdFile, ap_CS_fsm_state79, "ap_CS_fsm_state79");
    sc_trace(mVcdFile, ap_CS_fsm_state81, "ap_CS_fsm_state81");
    sc_trace(mVcdFile, ap_CS_fsm_state83, "ap_CS_fsm_state83");
    sc_trace(mVcdFile, ap_CS_fsm_state85, "ap_CS_fsm_state85");
    sc_trace(mVcdFile, ap_CS_fsm_state87, "ap_CS_fsm_state87");
    sc_trace(mVcdFile, ap_CS_fsm_state89, "ap_CS_fsm_state89");
    sc_trace(mVcdFile, ap_CS_fsm_state91, "ap_CS_fsm_state91");
    sc_trace(mVcdFile, ap_CS_fsm_state93, "ap_CS_fsm_state93");
    sc_trace(mVcdFile, ap_CS_fsm_state98, "ap_CS_fsm_state98");
    sc_trace(mVcdFile, ap_CS_fsm_state100, "ap_CS_fsm_state100");
    sc_trace(mVcdFile, ap_CS_fsm_state102, "ap_CS_fsm_state102");
    sc_trace(mVcdFile, ap_CS_fsm_state104, "ap_CS_fsm_state104");
    sc_trace(mVcdFile, ap_CS_fsm_state106, "ap_CS_fsm_state106");
    sc_trace(mVcdFile, ap_CS_fsm_state108, "ap_CS_fsm_state108");
    sc_trace(mVcdFile, ap_CS_fsm_state110, "ap_CS_fsm_state110");
    sc_trace(mVcdFile, ap_CS_fsm_state112, "ap_CS_fsm_state112");
    sc_trace(mVcdFile, ap_CS_fsm_state114, "ap_CS_fsm_state114");
    sc_trace(mVcdFile, ap_CS_fsm_state118, "ap_CS_fsm_state118");
    sc_trace(mVcdFile, ap_CS_fsm_state120, "ap_CS_fsm_state120");
    sc_trace(mVcdFile, ap_CS_fsm_state122, "ap_CS_fsm_state122");
    sc_trace(mVcdFile, ap_CS_fsm_state124, "ap_CS_fsm_state124");
    sc_trace(mVcdFile, ap_CS_fsm_state126, "ap_CS_fsm_state126");
    sc_trace(mVcdFile, ap_CS_fsm_state128, "ap_CS_fsm_state128");
    sc_trace(mVcdFile, ap_CS_fsm_state130, "ap_CS_fsm_state130");
    sc_trace(mVcdFile, ap_CS_fsm_state132, "ap_CS_fsm_state132");
    sc_trace(mVcdFile, ap_CS_fsm_state134, "ap_CS_fsm_state134");
    sc_trace(mVcdFile, ap_CS_fsm_state139, "ap_CS_fsm_state139");
    sc_trace(mVcdFile, ap_CS_fsm_state141, "ap_CS_fsm_state141");
    sc_trace(mVcdFile, ap_CS_fsm_state143, "ap_CS_fsm_state143");
    sc_trace(mVcdFile, ap_CS_fsm_state145, "ap_CS_fsm_state145");
    sc_trace(mVcdFile, ap_CS_fsm_state147, "ap_CS_fsm_state147");
    sc_trace(mVcdFile, ap_CS_fsm_state149, "ap_CS_fsm_state149");
    sc_trace(mVcdFile, ap_CS_fsm_state151, "ap_CS_fsm_state151");
    sc_trace(mVcdFile, ap_CS_fsm_state153, "ap_CS_fsm_state153");
    sc_trace(mVcdFile, ap_CS_fsm_state155, "ap_CS_fsm_state155");
    sc_trace(mVcdFile, ap_CS_fsm_state159, "ap_CS_fsm_state159");
    sc_trace(mVcdFile, ap_CS_fsm_state161, "ap_CS_fsm_state161");
    sc_trace(mVcdFile, ap_CS_fsm_state163, "ap_CS_fsm_state163");
    sc_trace(mVcdFile, ap_CS_fsm_state165, "ap_CS_fsm_state165");
    sc_trace(mVcdFile, ap_CS_fsm_state167, "ap_CS_fsm_state167");
    sc_trace(mVcdFile, ap_CS_fsm_state169, "ap_CS_fsm_state169");
    sc_trace(mVcdFile, ap_CS_fsm_state171, "ap_CS_fsm_state171");
    sc_trace(mVcdFile, ap_CS_fsm_state173, "ap_CS_fsm_state173");
    sc_trace(mVcdFile, ap_CS_fsm_state175, "ap_CS_fsm_state175");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, ap_CS_fsm_state53, "ap_CS_fsm_state53");
    sc_trace(mVcdFile, ap_CS_fsm_state55, "ap_CS_fsm_state55");
    sc_trace(mVcdFile, ap_CS_fsm_state57, "ap_CS_fsm_state57");
    sc_trace(mVcdFile, ap_CS_fsm_state62, "ap_CS_fsm_state62");
    sc_trace(mVcdFile, ap_CS_fsm_state64, "ap_CS_fsm_state64");
    sc_trace(mVcdFile, ap_CS_fsm_state66, "ap_CS_fsm_state66");
    sc_trace(mVcdFile, ap_CS_fsm_state68, "ap_CS_fsm_state68");
    sc_trace(mVcdFile, ap_CS_fsm_state70, "ap_CS_fsm_state70");
    sc_trace(mVcdFile, ap_CS_fsm_state72, "ap_CS_fsm_state72");
    sc_trace(mVcdFile, ap_CS_fsm_state74, "ap_CS_fsm_state74");
    sc_trace(mVcdFile, ap_CS_fsm_state76, "ap_CS_fsm_state76");
    sc_trace(mVcdFile, ap_CS_fsm_state80, "ap_CS_fsm_state80");
    sc_trace(mVcdFile, ap_CS_fsm_state82, "ap_CS_fsm_state82");
    sc_trace(mVcdFile, ap_CS_fsm_state84, "ap_CS_fsm_state84");
    sc_trace(mVcdFile, ap_CS_fsm_state86, "ap_CS_fsm_state86");
    sc_trace(mVcdFile, ap_CS_fsm_state88, "ap_CS_fsm_state88");
    sc_trace(mVcdFile, ap_CS_fsm_state90, "ap_CS_fsm_state90");
    sc_trace(mVcdFile, ap_CS_fsm_state92, "ap_CS_fsm_state92");
    sc_trace(mVcdFile, ap_CS_fsm_state94, "ap_CS_fsm_state94");
    sc_trace(mVcdFile, ap_CS_fsm_state99, "ap_CS_fsm_state99");
    sc_trace(mVcdFile, ap_CS_fsm_state101, "ap_CS_fsm_state101");
    sc_trace(mVcdFile, ap_CS_fsm_state103, "ap_CS_fsm_state103");
    sc_trace(mVcdFile, ap_CS_fsm_state105, "ap_CS_fsm_state105");
    sc_trace(mVcdFile, ap_CS_fsm_state107, "ap_CS_fsm_state107");
    sc_trace(mVcdFile, ap_CS_fsm_state109, "ap_CS_fsm_state109");
    sc_trace(mVcdFile, ap_CS_fsm_state111, "ap_CS_fsm_state111");
    sc_trace(mVcdFile, ap_CS_fsm_state113, "ap_CS_fsm_state113");
    sc_trace(mVcdFile, ap_CS_fsm_state115, "ap_CS_fsm_state115");
    sc_trace(mVcdFile, ap_CS_fsm_state119, "ap_CS_fsm_state119");
    sc_trace(mVcdFile, ap_CS_fsm_state121, "ap_CS_fsm_state121");
    sc_trace(mVcdFile, ap_CS_fsm_state123, "ap_CS_fsm_state123");
    sc_trace(mVcdFile, ap_CS_fsm_state125, "ap_CS_fsm_state125");
    sc_trace(mVcdFile, ap_CS_fsm_state127, "ap_CS_fsm_state127");
    sc_trace(mVcdFile, ap_CS_fsm_state129, "ap_CS_fsm_state129");
    sc_trace(mVcdFile, ap_CS_fsm_state131, "ap_CS_fsm_state131");
    sc_trace(mVcdFile, ap_CS_fsm_state133, "ap_CS_fsm_state133");
    sc_trace(mVcdFile, ap_CS_fsm_state135, "ap_CS_fsm_state135");
    sc_trace(mVcdFile, ap_CS_fsm_state140, "ap_CS_fsm_state140");
    sc_trace(mVcdFile, ap_CS_fsm_state142, "ap_CS_fsm_state142");
    sc_trace(mVcdFile, ap_CS_fsm_state144, "ap_CS_fsm_state144");
    sc_trace(mVcdFile, ap_CS_fsm_state146, "ap_CS_fsm_state146");
    sc_trace(mVcdFile, ap_CS_fsm_state148, "ap_CS_fsm_state148");
    sc_trace(mVcdFile, ap_CS_fsm_state150, "ap_CS_fsm_state150");
    sc_trace(mVcdFile, ap_CS_fsm_state152, "ap_CS_fsm_state152");
    sc_trace(mVcdFile, ap_CS_fsm_state154, "ap_CS_fsm_state154");
    sc_trace(mVcdFile, ap_CS_fsm_state156, "ap_CS_fsm_state156");
    sc_trace(mVcdFile, ap_CS_fsm_state160, "ap_CS_fsm_state160");
    sc_trace(mVcdFile, ap_CS_fsm_state162, "ap_CS_fsm_state162");
    sc_trace(mVcdFile, ap_CS_fsm_state164, "ap_CS_fsm_state164");
    sc_trace(mVcdFile, ap_CS_fsm_state166, "ap_CS_fsm_state166");
    sc_trace(mVcdFile, ap_CS_fsm_state168, "ap_CS_fsm_state168");
    sc_trace(mVcdFile, ap_CS_fsm_state170, "ap_CS_fsm_state170");
    sc_trace(mVcdFile, ap_CS_fsm_state172, "ap_CS_fsm_state172");
    sc_trace(mVcdFile, ap_CS_fsm_state174, "ap_CS_fsm_state174");
    sc_trace(mVcdFile, ap_CS_fsm_state176, "ap_CS_fsm_state176");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, ap_CS_fsm_state58, "ap_CS_fsm_state58");
    sc_trace(mVcdFile, ap_CS_fsm_state77, "ap_CS_fsm_state77");
    sc_trace(mVcdFile, ap_CS_fsm_state95, "ap_CS_fsm_state95");
    sc_trace(mVcdFile, ap_CS_fsm_state116, "ap_CS_fsm_state116");
    sc_trace(mVcdFile, ap_CS_fsm_state136, "ap_CS_fsm_state136");
    sc_trace(mVcdFile, ap_CS_fsm_state157, "ap_CS_fsm_state157");
    sc_trace(mVcdFile, tmp_s_fu_108_p2, "tmp_s_fu_108_p2");
    sc_trace(mVcdFile, tmp_28_fu_113_p2, "tmp_28_fu_113_p2");
    sc_trace(mVcdFile, tmp_30_fu_124_p2, "tmp_30_fu_124_p2");
    sc_trace(mVcdFile, tmp_31_fu_129_p2, "tmp_31_fu_129_p2");
    sc_trace(mVcdFile, tmp_33_fu_140_p2, "tmp_33_fu_140_p2");
    sc_trace(mVcdFile, tmp_34_fu_145_p2, "tmp_34_fu_145_p2");
    sc_trace(mVcdFile, tmp_36_fu_156_p2, "tmp_36_fu_156_p2");
    sc_trace(mVcdFile, tmp_37_fu_161_p2, "tmp_37_fu_161_p2");
    sc_trace(mVcdFile, or_cond4_fu_166_p2, "or_cond4_fu_166_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_state35_on_subcall_done, "ap_block_state35_on_subcall_done");
    sc_trace(mVcdFile, ap_predicate_op290_call_state57, "ap_predicate_op290_call_state57");
    sc_trace(mVcdFile, ap_block_state57_on_subcall_done, "ap_block_state57_on_subcall_done");
    sc_trace(mVcdFile, ap_block_state76_on_subcall_done, "ap_block_state76_on_subcall_done");
    sc_trace(mVcdFile, ap_predicate_op343_call_state94, "ap_predicate_op343_call_state94");
    sc_trace(mVcdFile, ap_block_state94_on_subcall_done, "ap_block_state94_on_subcall_done");
    sc_trace(mVcdFile, ap_block_state115_on_subcall_done, "ap_block_state115_on_subcall_done");
    sc_trace(mVcdFile, ap_predicate_op400_call_state135, "ap_predicate_op400_call_state135");
    sc_trace(mVcdFile, ap_block_state135_on_subcall_done, "ap_block_state135_on_subcall_done");
    sc_trace(mVcdFile, ap_block_state156_on_subcall_done, "ap_block_state156_on_subcall_done");
    sc_trace(mVcdFile, ap_predicate_op457_call_state176, "ap_predicate_op457_call_state176");
    sc_trace(mVcdFile, ap_block_state176_on_subcall_done, "ap_block_state176_on_subcall_done");
#endif

    }
}

solveStage3a::~solveStage3a() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_turnCube_fu_72;
}

void solveStage3a::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_turnCube_fu_72_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state65.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state73.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state75.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state83.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state93.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state98.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state100.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state102.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state104.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state106.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state108.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state110.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state112.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state114.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state118.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state120.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state122.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state124.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state126.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state128.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state130.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state132.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state134.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state139.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state141.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state143.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state145.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state147.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state149.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state151.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state153.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state155.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state159.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state161.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state163.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state165.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state167.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state169.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state171.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state173.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state175.read()))) {
            grp_turnCube_fu_72_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_ap_ready.read())) {
            grp_turnCube_fu_72_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        cubieColor_V_load_31_reg_172 = cubieColor_V_q1.read();
        tmp_reg_177 = tmp_fu_102_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        cubieColor_V_load_32_reg_181 = cubieColor_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        cubieColor_V_load_36_reg_195 = cubieColor_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        cubieColor_V_load_40_reg_209 = cubieColor_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        cubieColor_V_load_44_reg_223 = cubieColor_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_1))) {
        or_cond2_reg_201 = or_cond2_fu_134_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_1))) {
        or_cond3_reg_215 = or_cond3_fu_150_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_1))) {
        or_cond_reg_187 = or_cond_fu_118_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp_29_reg_191 = grp_fu_91_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        tmp_32_reg_205 = grp_fu_91_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tmp_35_reg_219 = grp_fu_91_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        tmp_38_reg_232 = grp_fu_96_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        tmp_39_reg_236 = grp_fu_96_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read())) {
        tmp_40_reg_240 = grp_fu_96_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        tmp_41_reg_244 = grp_fu_96_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read())) {
        tmp_42_reg_248 = grp_fu_96_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state96.read())) {
        tmp_43_reg_252 = grp_fu_96_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read())) {
        tmp_44_reg_256 = grp_fu_96_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state117.read())) {
        tmp_45_reg_260 = grp_fu_96_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state137.read())) {
        tmp_46_reg_264 = grp_fu_96_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state138.read())) {
        tmp_47_reg_268 = grp_fu_96_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state158.read())) {
        tmp_48_reg_272 = grp_fu_96_p2.read();
    }
}

void solveStage3a::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void solveStage3a::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void solveStage3a::thread_ap_CS_fsm_state100() {
    ap_CS_fsm_state100 = ap_CS_fsm.read()[99];
}

void solveStage3a::thread_ap_CS_fsm_state101() {
    ap_CS_fsm_state101 = ap_CS_fsm.read()[100];
}

void solveStage3a::thread_ap_CS_fsm_state102() {
    ap_CS_fsm_state102 = ap_CS_fsm.read()[101];
}

void solveStage3a::thread_ap_CS_fsm_state103() {
    ap_CS_fsm_state103 = ap_CS_fsm.read()[102];
}

void solveStage3a::thread_ap_CS_fsm_state104() {
    ap_CS_fsm_state104 = ap_CS_fsm.read()[103];
}

void solveStage3a::thread_ap_CS_fsm_state105() {
    ap_CS_fsm_state105 = ap_CS_fsm.read()[104];
}

void solveStage3a::thread_ap_CS_fsm_state106() {
    ap_CS_fsm_state106 = ap_CS_fsm.read()[105];
}

void solveStage3a::thread_ap_CS_fsm_state107() {
    ap_CS_fsm_state107 = ap_CS_fsm.read()[106];
}

void solveStage3a::thread_ap_CS_fsm_state108() {
    ap_CS_fsm_state108 = ap_CS_fsm.read()[107];
}

void solveStage3a::thread_ap_CS_fsm_state109() {
    ap_CS_fsm_state109 = ap_CS_fsm.read()[108];
}

void solveStage3a::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void solveStage3a::thread_ap_CS_fsm_state110() {
    ap_CS_fsm_state110 = ap_CS_fsm.read()[109];
}

void solveStage3a::thread_ap_CS_fsm_state111() {
    ap_CS_fsm_state111 = ap_CS_fsm.read()[110];
}

void solveStage3a::thread_ap_CS_fsm_state112() {
    ap_CS_fsm_state112 = ap_CS_fsm.read()[111];
}

void solveStage3a::thread_ap_CS_fsm_state113() {
    ap_CS_fsm_state113 = ap_CS_fsm.read()[112];
}

void solveStage3a::thread_ap_CS_fsm_state114() {
    ap_CS_fsm_state114 = ap_CS_fsm.read()[113];
}

void solveStage3a::thread_ap_CS_fsm_state115() {
    ap_CS_fsm_state115 = ap_CS_fsm.read()[114];
}

void solveStage3a::thread_ap_CS_fsm_state116() {
    ap_CS_fsm_state116 = ap_CS_fsm.read()[115];
}

void solveStage3a::thread_ap_CS_fsm_state117() {
    ap_CS_fsm_state117 = ap_CS_fsm.read()[116];
}

void solveStage3a::thread_ap_CS_fsm_state118() {
    ap_CS_fsm_state118 = ap_CS_fsm.read()[117];
}

void solveStage3a::thread_ap_CS_fsm_state119() {
    ap_CS_fsm_state119 = ap_CS_fsm.read()[118];
}

void solveStage3a::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void solveStage3a::thread_ap_CS_fsm_state120() {
    ap_CS_fsm_state120 = ap_CS_fsm.read()[119];
}

void solveStage3a::thread_ap_CS_fsm_state121() {
    ap_CS_fsm_state121 = ap_CS_fsm.read()[120];
}

void solveStage3a::thread_ap_CS_fsm_state122() {
    ap_CS_fsm_state122 = ap_CS_fsm.read()[121];
}

void solveStage3a::thread_ap_CS_fsm_state123() {
    ap_CS_fsm_state123 = ap_CS_fsm.read()[122];
}

void solveStage3a::thread_ap_CS_fsm_state124() {
    ap_CS_fsm_state124 = ap_CS_fsm.read()[123];
}

void solveStage3a::thread_ap_CS_fsm_state125() {
    ap_CS_fsm_state125 = ap_CS_fsm.read()[124];
}

void solveStage3a::thread_ap_CS_fsm_state126() {
    ap_CS_fsm_state126 = ap_CS_fsm.read()[125];
}

void solveStage3a::thread_ap_CS_fsm_state127() {
    ap_CS_fsm_state127 = ap_CS_fsm.read()[126];
}

void solveStage3a::thread_ap_CS_fsm_state128() {
    ap_CS_fsm_state128 = ap_CS_fsm.read()[127];
}

void solveStage3a::thread_ap_CS_fsm_state129() {
    ap_CS_fsm_state129 = ap_CS_fsm.read()[128];
}

void solveStage3a::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void solveStage3a::thread_ap_CS_fsm_state130() {
    ap_CS_fsm_state130 = ap_CS_fsm.read()[129];
}

void solveStage3a::thread_ap_CS_fsm_state131() {
    ap_CS_fsm_state131 = ap_CS_fsm.read()[130];
}

void solveStage3a::thread_ap_CS_fsm_state132() {
    ap_CS_fsm_state132 = ap_CS_fsm.read()[131];
}

void solveStage3a::thread_ap_CS_fsm_state133() {
    ap_CS_fsm_state133 = ap_CS_fsm.read()[132];
}

void solveStage3a::thread_ap_CS_fsm_state134() {
    ap_CS_fsm_state134 = ap_CS_fsm.read()[133];
}

void solveStage3a::thread_ap_CS_fsm_state135() {
    ap_CS_fsm_state135 = ap_CS_fsm.read()[134];
}

void solveStage3a::thread_ap_CS_fsm_state136() {
    ap_CS_fsm_state136 = ap_CS_fsm.read()[135];
}

void solveStage3a::thread_ap_CS_fsm_state137() {
    ap_CS_fsm_state137 = ap_CS_fsm.read()[136];
}

void solveStage3a::thread_ap_CS_fsm_state138() {
    ap_CS_fsm_state138 = ap_CS_fsm.read()[137];
}

void solveStage3a::thread_ap_CS_fsm_state139() {
    ap_CS_fsm_state139 = ap_CS_fsm.read()[138];
}

void solveStage3a::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void solveStage3a::thread_ap_CS_fsm_state140() {
    ap_CS_fsm_state140 = ap_CS_fsm.read()[139];
}

void solveStage3a::thread_ap_CS_fsm_state141() {
    ap_CS_fsm_state141 = ap_CS_fsm.read()[140];
}

void solveStage3a::thread_ap_CS_fsm_state142() {
    ap_CS_fsm_state142 = ap_CS_fsm.read()[141];
}

void solveStage3a::thread_ap_CS_fsm_state143() {
    ap_CS_fsm_state143 = ap_CS_fsm.read()[142];
}

void solveStage3a::thread_ap_CS_fsm_state144() {
    ap_CS_fsm_state144 = ap_CS_fsm.read()[143];
}

void solveStage3a::thread_ap_CS_fsm_state145() {
    ap_CS_fsm_state145 = ap_CS_fsm.read()[144];
}

void solveStage3a::thread_ap_CS_fsm_state146() {
    ap_CS_fsm_state146 = ap_CS_fsm.read()[145];
}

void solveStage3a::thread_ap_CS_fsm_state147() {
    ap_CS_fsm_state147 = ap_CS_fsm.read()[146];
}

void solveStage3a::thread_ap_CS_fsm_state148() {
    ap_CS_fsm_state148 = ap_CS_fsm.read()[147];
}

void solveStage3a::thread_ap_CS_fsm_state149() {
    ap_CS_fsm_state149 = ap_CS_fsm.read()[148];
}

void solveStage3a::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void solveStage3a::thread_ap_CS_fsm_state150() {
    ap_CS_fsm_state150 = ap_CS_fsm.read()[149];
}

void solveStage3a::thread_ap_CS_fsm_state151() {
    ap_CS_fsm_state151 = ap_CS_fsm.read()[150];
}

void solveStage3a::thread_ap_CS_fsm_state152() {
    ap_CS_fsm_state152 = ap_CS_fsm.read()[151];
}

void solveStage3a::thread_ap_CS_fsm_state153() {
    ap_CS_fsm_state153 = ap_CS_fsm.read()[152];
}

void solveStage3a::thread_ap_CS_fsm_state154() {
    ap_CS_fsm_state154 = ap_CS_fsm.read()[153];
}

void solveStage3a::thread_ap_CS_fsm_state155() {
    ap_CS_fsm_state155 = ap_CS_fsm.read()[154];
}

void solveStage3a::thread_ap_CS_fsm_state156() {
    ap_CS_fsm_state156 = ap_CS_fsm.read()[155];
}

void solveStage3a::thread_ap_CS_fsm_state157() {
    ap_CS_fsm_state157 = ap_CS_fsm.read()[156];
}

void solveStage3a::thread_ap_CS_fsm_state158() {
    ap_CS_fsm_state158 = ap_CS_fsm.read()[157];
}

void solveStage3a::thread_ap_CS_fsm_state159() {
    ap_CS_fsm_state159 = ap_CS_fsm.read()[158];
}

void solveStage3a::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void solveStage3a::thread_ap_CS_fsm_state160() {
    ap_CS_fsm_state160 = ap_CS_fsm.read()[159];
}

void solveStage3a::thread_ap_CS_fsm_state161() {
    ap_CS_fsm_state161 = ap_CS_fsm.read()[160];
}

void solveStage3a::thread_ap_CS_fsm_state162() {
    ap_CS_fsm_state162 = ap_CS_fsm.read()[161];
}

void solveStage3a::thread_ap_CS_fsm_state163() {
    ap_CS_fsm_state163 = ap_CS_fsm.read()[162];
}

void solveStage3a::thread_ap_CS_fsm_state164() {
    ap_CS_fsm_state164 = ap_CS_fsm.read()[163];
}

void solveStage3a::thread_ap_CS_fsm_state165() {
    ap_CS_fsm_state165 = ap_CS_fsm.read()[164];
}

void solveStage3a::thread_ap_CS_fsm_state166() {
    ap_CS_fsm_state166 = ap_CS_fsm.read()[165];
}

void solveStage3a::thread_ap_CS_fsm_state167() {
    ap_CS_fsm_state167 = ap_CS_fsm.read()[166];
}

void solveStage3a::thread_ap_CS_fsm_state168() {
    ap_CS_fsm_state168 = ap_CS_fsm.read()[167];
}

void solveStage3a::thread_ap_CS_fsm_state169() {
    ap_CS_fsm_state169 = ap_CS_fsm.read()[168];
}

void solveStage3a::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void solveStage3a::thread_ap_CS_fsm_state170() {
    ap_CS_fsm_state170 = ap_CS_fsm.read()[169];
}

void solveStage3a::thread_ap_CS_fsm_state171() {
    ap_CS_fsm_state171 = ap_CS_fsm.read()[170];
}

void solveStage3a::thread_ap_CS_fsm_state172() {
    ap_CS_fsm_state172 = ap_CS_fsm.read()[171];
}

void solveStage3a::thread_ap_CS_fsm_state173() {
    ap_CS_fsm_state173 = ap_CS_fsm.read()[172];
}

void solveStage3a::thread_ap_CS_fsm_state174() {
    ap_CS_fsm_state174 = ap_CS_fsm.read()[173];
}

void solveStage3a::thread_ap_CS_fsm_state175() {
    ap_CS_fsm_state175 = ap_CS_fsm.read()[174];
}

void solveStage3a::thread_ap_CS_fsm_state176() {
    ap_CS_fsm_state176 = ap_CS_fsm.read()[175];
}

void solveStage3a::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void solveStage3a::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void solveStage3a::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void solveStage3a::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void solveStage3a::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void solveStage3a::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void solveStage3a::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void solveStage3a::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void solveStage3a::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void solveStage3a::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void solveStage3a::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void solveStage3a::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void solveStage3a::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void solveStage3a::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void solveStage3a::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void solveStage3a::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void solveStage3a::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void solveStage3a::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void solveStage3a::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void solveStage3a::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void solveStage3a::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void solveStage3a::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void solveStage3a::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void solveStage3a::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void solveStage3a::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void solveStage3a::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void solveStage3a::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void solveStage3a::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void solveStage3a::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void solveStage3a::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void solveStage3a::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void solveStage3a::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void solveStage3a::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void solveStage3a::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void solveStage3a::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void solveStage3a::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void solveStage3a::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[49];
}

void solveStage3a::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[50];
}

void solveStage3a::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read()[51];
}

void solveStage3a::thread_ap_CS_fsm_state53() {
    ap_CS_fsm_state53 = ap_CS_fsm.read()[52];
}

void solveStage3a::thread_ap_CS_fsm_state54() {
    ap_CS_fsm_state54 = ap_CS_fsm.read()[53];
}

void solveStage3a::thread_ap_CS_fsm_state55() {
    ap_CS_fsm_state55 = ap_CS_fsm.read()[54];
}

void solveStage3a::thread_ap_CS_fsm_state56() {
    ap_CS_fsm_state56 = ap_CS_fsm.read()[55];
}

void solveStage3a::thread_ap_CS_fsm_state57() {
    ap_CS_fsm_state57 = ap_CS_fsm.read()[56];
}

void solveStage3a::thread_ap_CS_fsm_state58() {
    ap_CS_fsm_state58 = ap_CS_fsm.read()[57];
}

void solveStage3a::thread_ap_CS_fsm_state59() {
    ap_CS_fsm_state59 = ap_CS_fsm.read()[58];
}

void solveStage3a::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void solveStage3a::thread_ap_CS_fsm_state60() {
    ap_CS_fsm_state60 = ap_CS_fsm.read()[59];
}

void solveStage3a::thread_ap_CS_fsm_state61() {
    ap_CS_fsm_state61 = ap_CS_fsm.read()[60];
}

void solveStage3a::thread_ap_CS_fsm_state62() {
    ap_CS_fsm_state62 = ap_CS_fsm.read()[61];
}

void solveStage3a::thread_ap_CS_fsm_state63() {
    ap_CS_fsm_state63 = ap_CS_fsm.read()[62];
}

void solveStage3a::thread_ap_CS_fsm_state64() {
    ap_CS_fsm_state64 = ap_CS_fsm.read()[63];
}

void solveStage3a::thread_ap_CS_fsm_state65() {
    ap_CS_fsm_state65 = ap_CS_fsm.read()[64];
}

void solveStage3a::thread_ap_CS_fsm_state66() {
    ap_CS_fsm_state66 = ap_CS_fsm.read()[65];
}

void solveStage3a::thread_ap_CS_fsm_state67() {
    ap_CS_fsm_state67 = ap_CS_fsm.read()[66];
}

void solveStage3a::thread_ap_CS_fsm_state68() {
    ap_CS_fsm_state68 = ap_CS_fsm.read()[67];
}

void solveStage3a::thread_ap_CS_fsm_state69() {
    ap_CS_fsm_state69 = ap_CS_fsm.read()[68];
}

void solveStage3a::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void solveStage3a::thread_ap_CS_fsm_state70() {
    ap_CS_fsm_state70 = ap_CS_fsm.read()[69];
}

void solveStage3a::thread_ap_CS_fsm_state71() {
    ap_CS_fsm_state71 = ap_CS_fsm.read()[70];
}

void solveStage3a::thread_ap_CS_fsm_state72() {
    ap_CS_fsm_state72 = ap_CS_fsm.read()[71];
}

void solveStage3a::thread_ap_CS_fsm_state73() {
    ap_CS_fsm_state73 = ap_CS_fsm.read()[72];
}

void solveStage3a::thread_ap_CS_fsm_state74() {
    ap_CS_fsm_state74 = ap_CS_fsm.read()[73];
}

void solveStage3a::thread_ap_CS_fsm_state75() {
    ap_CS_fsm_state75 = ap_CS_fsm.read()[74];
}

void solveStage3a::thread_ap_CS_fsm_state76() {
    ap_CS_fsm_state76 = ap_CS_fsm.read()[75];
}

void solveStage3a::thread_ap_CS_fsm_state77() {
    ap_CS_fsm_state77 = ap_CS_fsm.read()[76];
}

void solveStage3a::thread_ap_CS_fsm_state78() {
    ap_CS_fsm_state78 = ap_CS_fsm.read()[77];
}

void solveStage3a::thread_ap_CS_fsm_state79() {
    ap_CS_fsm_state79 = ap_CS_fsm.read()[78];
}

void solveStage3a::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void solveStage3a::thread_ap_CS_fsm_state80() {
    ap_CS_fsm_state80 = ap_CS_fsm.read()[79];
}

void solveStage3a::thread_ap_CS_fsm_state81() {
    ap_CS_fsm_state81 = ap_CS_fsm.read()[80];
}

void solveStage3a::thread_ap_CS_fsm_state82() {
    ap_CS_fsm_state82 = ap_CS_fsm.read()[81];
}

void solveStage3a::thread_ap_CS_fsm_state83() {
    ap_CS_fsm_state83 = ap_CS_fsm.read()[82];
}

void solveStage3a::thread_ap_CS_fsm_state84() {
    ap_CS_fsm_state84 = ap_CS_fsm.read()[83];
}

void solveStage3a::thread_ap_CS_fsm_state85() {
    ap_CS_fsm_state85 = ap_CS_fsm.read()[84];
}

void solveStage3a::thread_ap_CS_fsm_state86() {
    ap_CS_fsm_state86 = ap_CS_fsm.read()[85];
}

void solveStage3a::thread_ap_CS_fsm_state87() {
    ap_CS_fsm_state87 = ap_CS_fsm.read()[86];
}

void solveStage3a::thread_ap_CS_fsm_state88() {
    ap_CS_fsm_state88 = ap_CS_fsm.read()[87];
}

void solveStage3a::thread_ap_CS_fsm_state89() {
    ap_CS_fsm_state89 = ap_CS_fsm.read()[88];
}

void solveStage3a::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void solveStage3a::thread_ap_CS_fsm_state90() {
    ap_CS_fsm_state90 = ap_CS_fsm.read()[89];
}

void solveStage3a::thread_ap_CS_fsm_state91() {
    ap_CS_fsm_state91 = ap_CS_fsm.read()[90];
}

void solveStage3a::thread_ap_CS_fsm_state92() {
    ap_CS_fsm_state92 = ap_CS_fsm.read()[91];
}

void solveStage3a::thread_ap_CS_fsm_state93() {
    ap_CS_fsm_state93 = ap_CS_fsm.read()[92];
}

void solveStage3a::thread_ap_CS_fsm_state94() {
    ap_CS_fsm_state94 = ap_CS_fsm.read()[93];
}

void solveStage3a::thread_ap_CS_fsm_state95() {
    ap_CS_fsm_state95 = ap_CS_fsm.read()[94];
}

void solveStage3a::thread_ap_CS_fsm_state96() {
    ap_CS_fsm_state96 = ap_CS_fsm.read()[95];
}

void solveStage3a::thread_ap_CS_fsm_state97() {
    ap_CS_fsm_state97 = ap_CS_fsm.read()[96];
}

void solveStage3a::thread_ap_CS_fsm_state98() {
    ap_CS_fsm_state98 = ap_CS_fsm.read()[97];
}

void solveStage3a::thread_ap_CS_fsm_state99() {
    ap_CS_fsm_state99 = ap_CS_fsm.read()[98];
}

void solveStage3a::thread_ap_block_state115_on_subcall_done() {
    ap_block_state115_on_subcall_done = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_44_reg_256.read()) && esl_seteq<1,1,1>(ap_const_logic_0, grp_turnCube_fu_72_ap_done.read()));
}

void solveStage3a::thread_ap_block_state135_on_subcall_done() {
    ap_block_state135_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_turnCube_fu_72_ap_done.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op400_call_state135.read()));
}

void solveStage3a::thread_ap_block_state156_on_subcall_done() {
    ap_block_state156_on_subcall_done = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_47_reg_268.read()) && esl_seteq<1,1,1>(ap_const_logic_0, grp_turnCube_fu_72_ap_done.read()));
}

void solveStage3a::thread_ap_block_state176_on_subcall_done() {
    ap_block_state176_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_turnCube_fu_72_ap_done.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op457_call_state176.read()));
}

void solveStage3a::thread_ap_block_state35_on_subcall_done() {
    ap_block_state35_on_subcall_done = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_38_reg_232.read()) && esl_seteq<1,1,1>(ap_const_logic_0, grp_turnCube_fu_72_ap_done.read()));
}

void solveStage3a::thread_ap_block_state57_on_subcall_done() {
    ap_block_state57_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_turnCube_fu_72_ap_done.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op290_call_state57.read()));
}

void solveStage3a::thread_ap_block_state76_on_subcall_done() {
    ap_block_state76_on_subcall_done = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_41_reg_244.read()) && esl_seteq<1,1,1>(ap_const_logic_0, grp_turnCube_fu_72_ap_done.read()));
}

void solveStage3a::thread_ap_block_state94_on_subcall_done() {
    ap_block_state94_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_turnCube_fu_72_ap_done.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op343_call_state94.read()));
}

void solveStage3a::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          ((esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_reg_187.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_0)) || 
           (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_reg_187.read(), ap_const_lv1_0)) || 
           (esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_reg_187.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_0)) || 
           (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_reg_187.read(), ap_const_lv1_0)) || 
           (esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_reg_187.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_0)) || 
           (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_reg_187.read(), ap_const_lv1_0)) || 
           (esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_reg_187.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_0)) || 
           (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond_reg_187.read(), ap_const_lv1_0)) || 
           (esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_0)) || 
           (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0)) || 
           (esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_0)) || 
           (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0)) || 
           (esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_0)) || 
           (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0)) || 
           (esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_0)) || 
           (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0)))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void solveStage3a::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void solveStage3a::thread_ap_predicate_op290_call_state57() {
    ap_predicate_op290_call_state57 = (esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_39_reg_236.read()));
}

void solveStage3a::thread_ap_predicate_op343_call_state94() {
    ap_predicate_op343_call_state94 = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_40_reg_240.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_reg_248.read()));
}

void solveStage3a::thread_ap_predicate_op400_call_state135() {
    ap_predicate_op400_call_state135 = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_43_reg_252.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_reg_260.read()));
}

void solveStage3a::thread_ap_predicate_op457_call_state176() {
    ap_predicate_op457_call_state176 = (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_46_reg_264.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_48_reg_272.read()));
}

void solveStage3a::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         ((esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond_reg_187.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_0)) || 
          (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond_reg_187.read(), ap_const_lv1_0)) || 
          (esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond_reg_187.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_0)) || 
          (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond_reg_187.read(), ap_const_lv1_0)) || 
          (esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond_reg_187.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_0)) || 
          (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond_reg_187.read(), ap_const_lv1_0)) || 
          (esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond_reg_187.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_0)) || 
          (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond_reg_187.read(), ap_const_lv1_0)) || 
          (esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_0)) || 
          (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0)) || 
          (esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_0)) || 
          (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0)) || 
          (esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_0)) || 
          (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0)) || 
          (esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_0)) || 
          (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0))))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void solveStage3a::thread_cubieColor_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state95.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state136.read()))) {
        cubieColor_V_address0 = ap_const_lv6_1F;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state96.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state137.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        cubieColor_V_address0 = ap_const_lv6_31;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        cubieColor_V_address0 = ap_const_lv6_5;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        cubieColor_V_address0 = ap_const_lv6_3;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        cubieColor_V_address0 = ap_const_lv6_7;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state116.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state157.read()))) {
        cubieColor_V_address0 = ap_const_lv6_28;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        cubieColor_V_address0 = ap_const_lv6_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        cubieColor_V_address0 = ap_const_lv6_13;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_38_reg_232.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
                (esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_39_reg_236.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_41_reg_244.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_40_reg_240.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_reg_248.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state99.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state107.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state109.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state111.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state113.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state115.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_44_reg_256.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state119.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state123.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state129.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state133.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state135.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_43_reg_252.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_reg_260.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state140.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state142.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state144.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state146.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state148.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state150.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state152.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state154.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state156.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_47_reg_268.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state160.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state162.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state164.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state166.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state168.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state170.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state172.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state174.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state176.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_46_reg_264.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_48_reg_272.read())))) {
        cubieColor_V_address0 = grp_turnCube_fu_72_cubieColor_V_address0.read();
    } else {
        cubieColor_V_address0 = "XXXXXX";
    }
}

void solveStage3a::thread_cubieColor_V_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state137.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state157.read()))) {
        cubieColor_V_address1 = ap_const_lv6_5;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state96.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state116.read()))) {
        cubieColor_V_address1 = ap_const_lv6_3;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()))) {
        cubieColor_V_address1 = ap_const_lv6_7;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        cubieColor_V_address1 = ap_const_lv6_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state136.read()))) {
        cubieColor_V_address1 = ap_const_lv6_2E;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state95.read()))) {
        cubieColor_V_address1 = ap_const_lv6_25;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()))) {
        cubieColor_V_address1 = ap_const_lv6_1C;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        cubieColor_V_address1 = ap_const_lv6_31;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        cubieColor_V_address1 = ap_const_lv6_1F;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_38_reg_232.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
                (esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_39_reg_236.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_41_reg_244.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_40_reg_240.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_reg_248.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state99.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state107.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state109.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state111.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state113.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state115.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_44_reg_256.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state119.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state123.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state129.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state133.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state135.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_43_reg_252.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_reg_260.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state140.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state142.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state144.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state146.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state148.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state150.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state152.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state154.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state156.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_47_reg_268.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state160.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state162.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state164.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state166.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state168.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state170.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state172.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state174.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state176.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_46_reg_264.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_48_reg_272.read())))) {
        cubieColor_V_address1 = grp_turnCube_fu_72_cubieColor_V_address1.read();
    } else {
        cubieColor_V_address1 = "XXXXXX";
    }
}

void solveStage3a::thread_cubieColor_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state96.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state137.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state95.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state116.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state136.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state157.read()))) {
        cubieColor_V_ce0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_38_reg_232.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
                (esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_39_reg_236.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_41_reg_244.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_40_reg_240.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_reg_248.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state99.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state107.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state109.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state111.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state113.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state115.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_44_reg_256.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state119.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state123.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state129.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state133.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state135.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_43_reg_252.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_reg_260.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state140.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state142.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state144.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state146.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state148.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state150.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state152.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state154.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state156.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_47_reg_268.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state160.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state162.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state164.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state166.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state168.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state170.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state172.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state174.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state176.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_46_reg_264.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_48_reg_272.read())))) {
        cubieColor_V_ce0 = grp_turnCube_fu_72_cubieColor_V_ce0.read();
    } else {
        cubieColor_V_ce0 = ap_const_logic_0;
    }
}

void solveStage3a::thread_cubieColor_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state96.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state137.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state58.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state95.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state116.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state136.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state157.read()))) {
        cubieColor_V_ce1 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_38_reg_232.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
                (esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_39_reg_236.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_41_reg_244.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_40_reg_240.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_reg_248.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state99.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state107.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state109.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state111.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state113.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state115.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_44_reg_256.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state119.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state123.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state129.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state133.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state135.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_43_reg_252.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_reg_260.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state140.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state142.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state144.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state146.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state148.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state150.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state152.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state154.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state156.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_47_reg_268.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state160.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state162.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state164.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state166.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state168.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state170.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state172.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state174.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state176.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_46_reg_264.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_48_reg_272.read())))) {
        cubieColor_V_ce1 = grp_turnCube_fu_72_cubieColor_V_ce1.read();
    } else {
        cubieColor_V_ce1 = ap_const_logic_0;
    }
}

void solveStage3a::thread_cubieColor_V_d0() {
    cubieColor_V_d0 = grp_turnCube_fu_72_cubieColor_V_d0.read();
}

void solveStage3a::thread_cubieColor_V_d1() {
    cubieColor_V_d1 = grp_turnCube_fu_72_cubieColor_V_d1.read();
}

void solveStage3a::thread_cubieColor_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_38_reg_232.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
         (esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_39_reg_236.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_41_reg_244.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_40_reg_240.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_reg_248.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state99.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state107.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state109.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state111.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state113.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state115.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_44_reg_256.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state119.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state123.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state129.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state133.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state135.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_43_reg_252.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_reg_260.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state140.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state142.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state144.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state146.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state148.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state150.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state152.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state154.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state156.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_47_reg_268.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state160.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state162.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state164.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state166.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state168.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state170.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state172.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state174.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state176.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_46_reg_264.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_48_reg_272.read())))) {
        cubieColor_V_we0 = grp_turnCube_fu_72_cubieColor_V_we0.read();
    } else {
        cubieColor_V_we0 = ap_const_logic_0;
    }
}

void solveStage3a::thread_cubieColor_V_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_38_reg_232.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
         (esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_39_reg_236.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_41_reg_244.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_40_reg_240.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_reg_248.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state99.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state107.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state109.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state111.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state113.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state115.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_44_reg_256.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state119.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state123.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state129.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state133.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state135.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_43_reg_252.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_reg_260.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state140.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state142.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state144.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state146.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state148.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state150.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state152.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state154.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state156.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_47_reg_268.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state160.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state162.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state164.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state166.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state168.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state170.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state172.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state174.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state176.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_46_reg_264.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_48_reg_272.read())))) {
        cubieColor_V_we1 = grp_turnCube_fu_72_cubieColor_V_we1.read();
    } else {
        cubieColor_V_we1 = ap_const_logic_0;
    }
}

void solveStage3a::thread_grp_fu_91_p2() {
    grp_fu_91_p2 = (!cubieColor_V_q1.read().is_01() || !cubieColor_V_load_31_reg_172.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_q1.read() == cubieColor_V_load_31_reg_172.read());
}

void solveStage3a::thread_grp_fu_96_p2() {
    grp_fu_96_p2 = (!cubieColor_V_q1.read().is_01() || !cubieColor_V_q0.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_q1.read() == cubieColor_V_q0.read());
}

void solveStage3a::thread_grp_turnCube_fu_72_ap_start() {
    grp_turnCube_fu_72_ap_start = grp_turnCube_fu_72_ap_start_reg.read();
}

void solveStage3a::thread_grp_turnCube_fu_72_turn_V() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state168.read()))) {
        grp_turnCube_fu_72_turn_V = ap_const_lv4_8;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state123.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state164.read()))) {
        grp_turnCube_fu_72_turn_V = ap_const_lv4_9;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_38_reg_232.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_41_reg_244.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state115.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_44_reg_256.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state156.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_47_reg_268.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state172.read()))) {
        grp_turnCube_fu_72_turn_V = ap_const_lv4_6;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                (esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_39_reg_236.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_40_reg_240.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_reg_248.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state111.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state135.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_43_reg_252.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_reg_260.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state152.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state176.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_46_reg_264.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_48_reg_272.read())))) {
        grp_turnCube_fu_72_turn_V = ap_const_lv4_7;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state107.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state148.read()))) {
        grp_turnCube_fu_72_turn_V = ap_const_lv4_B;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state99.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state109.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state119.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state133.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state146.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state150.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state162.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state174.read()))) {
        grp_turnCube_fu_72_turn_V = ap_const_lv4_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state144.read()))) {
        grp_turnCube_fu_72_turn_V = ap_const_lv4_A;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state113.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state129.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state140.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state142.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state154.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state160.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state166.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state170.read()))) {
        grp_turnCube_fu_72_turn_V = ap_const_lv4_0;
    } else {
        grp_turnCube_fu_72_turn_V =  (sc_lv<4>) ("XXXX");
    }
}

void solveStage3a::thread_moveCounter_V_o() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_38_reg_232.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_39_reg_236.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_41_reg_244.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_40_reg_240.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_reg_248.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state99.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state107.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state109.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state111.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state113.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state115.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_44_reg_256.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state119.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state123.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state129.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state133.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state135.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_43_reg_252.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_reg_260.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state140.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state142.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state144.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state146.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state148.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state150.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state152.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state154.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state156.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_47_reg_268.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state160.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state162.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state164.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state166.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state168.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state170.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state172.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state174.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state176.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_46_reg_264.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_48_reg_272.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read())))) {
        moveCounter_V_o = grp_turnCube_fu_72_moveCounter_V_o.read();
    } else {
        moveCounter_V_o = moveCounter_V_i.read();
    }
}

void solveStage3a::thread_moveCounter_V_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_38_reg_232.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
         (esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_39_reg_236.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_41_reg_244.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_40_reg_240.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_reg_248.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state99.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state107.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state109.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state111.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state113.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state115.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_44_reg_256.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state119.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state123.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state129.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state133.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state135.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_43_reg_252.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_reg_260.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state140.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state142.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state144.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state146.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state148.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state150.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state152.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state154.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state156.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_47_reg_268.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state160.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state162.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state164.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state166.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state168.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state170.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state172.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state174.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state176.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_46_reg_264.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_48_reg_272.read())))) {
        moveCounter_V_o_ap_vld = grp_turnCube_fu_72_moveCounter_V_o_ap_vld.read();
    } else {
        moveCounter_V_o_ap_vld = ap_const_logic_0;
    }
}

void solveStage3a::thread_moves_V_address0() {
    moves_V_address0 = grp_turnCube_fu_72_moves_V_address0.read();
}

void solveStage3a::thread_moves_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_38_reg_232.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
         (esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_39_reg_236.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_41_reg_244.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_40_reg_240.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_reg_248.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state99.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state107.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state109.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state111.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state113.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state115.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_44_reg_256.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state119.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state123.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state129.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state133.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state135.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_43_reg_252.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_reg_260.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state140.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state142.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state144.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state146.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state148.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state150.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state152.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state154.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state156.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_47_reg_268.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state160.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state162.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state164.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state166.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state168.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state170.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state172.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state174.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state176.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_46_reg_264.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_48_reg_272.read())))) {
        moves_V_ce0 = grp_turnCube_fu_72_moves_V_ce0.read();
    } else {
        moves_V_ce0 = ap_const_logic_0;
    }
}

void solveStage3a::thread_moves_V_d0() {
    moves_V_d0 = grp_turnCube_fu_72_moves_V_d0.read();
}

void solveStage3a::thread_moves_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_38_reg_232.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || 
         (esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_39_reg_236.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_41_reg_244.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_40_reg_240.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_42_reg_248.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state99.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state107.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state109.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state111.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state113.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state115.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_44_reg_256.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state119.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state123.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state129.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state133.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state135.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_43_reg_252.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_reg_260.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state140.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state142.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state144.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state146.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state148.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state150.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state152.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state154.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state156.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_47_reg_268.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state160.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state162.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state164.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state166.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state168.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state170.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state172.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state174.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state176.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_46_reg_264.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_48_reg_272.read())))) {
        moves_V_we0 = grp_turnCube_fu_72_moves_V_we0.read();
    } else {
        moves_V_we0 = ap_const_logic_0;
    }
}

void solveStage3a::thread_or_cond2_fu_134_p2() {
    or_cond2_fu_134_p2 = (tmp_30_fu_124_p2.read() | tmp_31_fu_129_p2.read());
}

void solveStage3a::thread_or_cond3_fu_150_p2() {
    or_cond3_fu_150_p2 = (tmp_33_fu_140_p2.read() | tmp_34_fu_145_p2.read());
}

void solveStage3a::thread_or_cond4_fu_166_p2() {
    or_cond4_fu_166_p2 = (tmp_36_fu_156_p2.read() | tmp_37_fu_161_p2.read());
}

void solveStage3a::thread_or_cond_fu_118_p2() {
    or_cond_fu_118_p2 = (tmp_s_fu_108_p2.read() | tmp_28_fu_113_p2.read());
}

void solveStage3a::thread_tmp_28_fu_113_p2() {
    tmp_28_fu_113_p2 = (!cubieColor_V_load_32_reg_181.read().is_01() || !cubieColor_V_q0.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_load_32_reg_181.read() == cubieColor_V_q0.read());
}

void solveStage3a::thread_tmp_30_fu_124_p2() {
    tmp_30_fu_124_p2 = (!cubieColor_V_load_36_reg_195.read().is_01() || !cubieColor_V_q1.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_load_36_reg_195.read() == cubieColor_V_q1.read());
}

void solveStage3a::thread_tmp_31_fu_129_p2() {
    tmp_31_fu_129_p2 = (!cubieColor_V_load_36_reg_195.read().is_01() || !cubieColor_V_q0.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_load_36_reg_195.read() == cubieColor_V_q0.read());
}

void solveStage3a::thread_tmp_33_fu_140_p2() {
    tmp_33_fu_140_p2 = (!cubieColor_V_load_40_reg_209.read().is_01() || !cubieColor_V_q1.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_load_40_reg_209.read() == cubieColor_V_q1.read());
}

void solveStage3a::thread_tmp_34_fu_145_p2() {
    tmp_34_fu_145_p2 = (!cubieColor_V_load_40_reg_209.read().is_01() || !cubieColor_V_q0.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_load_40_reg_209.read() == cubieColor_V_q0.read());
}

void solveStage3a::thread_tmp_36_fu_156_p2() {
    tmp_36_fu_156_p2 = (!cubieColor_V_load_44_reg_223.read().is_01() || !cubieColor_V_q1.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_load_44_reg_223.read() == cubieColor_V_q1.read());
}

void solveStage3a::thread_tmp_37_fu_161_p2() {
    tmp_37_fu_161_p2 = (!cubieColor_V_load_44_reg_223.read().is_01() || !cubieColor_V_q0.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_load_44_reg_223.read() == cubieColor_V_q0.read());
}

void solveStage3a::thread_tmp_fu_102_p2() {
    tmp_fu_102_p2 = (!cubieColor_V_q0.read().is_01() || !cubieColor_V_q1.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_q0.read() == cubieColor_V_q1.read());
}

void solveStage3a::thread_tmp_s_fu_108_p2() {
    tmp_s_fu_108_p2 = (!cubieColor_V_load_32_reg_181.read().is_01() || !cubieColor_V_q1.read().is_01())? sc_lv<1>(): sc_lv<1>(cubieColor_V_load_32_reg_181.read() == cubieColor_V_q1.read());
}

void solveStage3a::thread_ap_NS_fsm() {
    if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        ap_NS_fsm = ap_ST_fsm_state3;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        if ((esl_seteq<1,1,1>(tmp_fu_102_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
            ap_NS_fsm = ap_ST_fsm_state5;
        } else {
            ap_NS_fsm = ap_ST_fsm_state4;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        if ((esl_seteq<1,1,1>(or_cond_fu_118_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
            ap_NS_fsm = ap_ST_fsm_state14;
        } else {
            ap_NS_fsm = ap_ST_fsm_state6;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        if ((esl_seteq<1,1,1>(grp_fu_91_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
            ap_NS_fsm = ap_ST_fsm_state8;
        } else {
            ap_NS_fsm = ap_ST_fsm_state7;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        if ((esl_seteq<1,1,1>(or_cond2_fu_134_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
            ap_NS_fsm = ap_ST_fsm_state14;
        } else {
            ap_NS_fsm = ap_ST_fsm_state9;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        if ((esl_seteq<1,1,1>(grp_fu_91_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
            ap_NS_fsm = ap_ST_fsm_state11;
        } else {
            ap_NS_fsm = ap_ST_fsm_state10;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        if ((esl_seteq<1,1,1>(or_cond3_fu_150_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
            ap_NS_fsm = ap_ST_fsm_state14;
        } else {
            ap_NS_fsm = ap_ST_fsm_state12;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        if ((esl_seteq<1,1,1>(grp_fu_91_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
            ap_NS_fsm = ap_ST_fsm_state14;
        } else {
            ap_NS_fsm = ap_ST_fsm_state13;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && ((esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond_reg_187.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_0)) || 
  (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond_reg_187.read(), ap_const_lv1_0)) || 
  (esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond_reg_187.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_0)) || 
  (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond_reg_187.read(), ap_const_lv1_0)) || 
  (esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond_reg_187.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_0)) || 
  (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond_reg_187.read(), ap_const_lv1_0)) || 
  (esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond_reg_187.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_0)) || 
  (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond_reg_187.read(), ap_const_lv1_0)) || 
  (esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_0)) || 
  (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0)) || 
  (esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_0)) || 
  (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0)) || 
  (esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_0)) || 
  (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0)) || 
  (esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_0)) || 
  (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0))))) {
            ap_NS_fsm = ap_ST_fsm_state1;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && ((esl_seteq<1,1,1>(or_cond3_reg_215.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(tmp_32_reg_205.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0)) || 
  (esl_seteq<1,1,1>(or_cond2_reg_201.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(tmp_29_reg_191.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0)) || 
  (esl_seteq<1,1,1>(tmp_35_reg_219.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(or_cond4_fu_166_p2.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(tmp_reg_177.read(), ap_const_lv1_0))))) {
            ap_NS_fsm = ap_ST_fsm_state57;
        } else {
            ap_NS_fsm = ap_ST_fsm_state15;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        if ((esl_seteq<1,1,1>(grp_fu_96_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
            ap_NS_fsm = ap_ST_fsm_state35;
        } else {
            ap_NS_fsm = ap_ST_fsm_state16;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
            ap_NS_fsm = ap_ST_fsm_state18;
        } else {
            ap_NS_fsm = ap_ST_fsm_state17;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
            ap_NS_fsm = ap_ST_fsm_state20;
        } else {
            ap_NS_fsm = ap_ST_fsm_state19;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
            ap_NS_fsm = ap_ST_fsm_state22;
        } else {
            ap_NS_fsm = ap_ST_fsm_state21;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()))) {
            ap_NS_fsm = ap_ST_fsm_state24;
        } else {
            ap_NS_fsm = ap_ST_fsm_state23;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
            ap_NS_fsm = ap_ST_fsm_state26;
        } else {
            ap_NS_fsm = ap_ST_fsm_state25;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()))) {
            ap_NS_fsm = ap_ST_fsm_state28;
        } else {
            ap_NS_fsm = ap_ST_fsm_state27;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()))) {
            ap_NS_fsm = ap_ST_fsm_state30;
        } else {
            ap_NS_fsm = ap_ST_fsm_state29;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
            ap_NS_fsm = ap_ST_fsm_state32;
        } else {
            ap_NS_fsm = ap_ST_fsm_state31;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
            ap_NS_fsm = ap_ST_fsm_state34;
        } else {
            ap_NS_fsm = ap_ST_fsm_state33;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state35_on_subcall_done.read()))) {
            ap_NS_fsm = ap_ST_fsm_state36;
        } else {
            ap_NS_fsm = ap_ST_fsm_state35;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        if ((esl_seteq<1,1,1>(grp_fu_96_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()))) {
            ap_NS_fsm = ap_ST_fsm_state57;
        } else {
            ap_NS_fsm = ap_ST_fsm_state38;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()))) {
            ap_NS_fsm = ap_ST_fsm_state40;
        } else {
            ap_NS_fsm = ap_ST_fsm_state39;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()))) {
            ap_NS_fsm = ap_ST_fsm_state42;
        } else {
            ap_NS_fsm = ap_ST_fsm_state41;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()))) {
            ap_NS_fsm = ap_ST_fsm_state44;
        } else {
            ap_NS_fsm = ap_ST_fsm_state43;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()))) {
            ap_NS_fsm = ap_ST_fsm_state46;
        } else {
            ap_NS_fsm = ap_ST_fsm_state45;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
            ap_NS_fsm = ap_ST_fsm_state48;
        } else {
            ap_NS_fsm = ap_ST_fsm_state47;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()))) {
            ap_NS_fsm = ap_ST_fsm_state50;
        } else {
            ap_NS_fsm = ap_ST_fsm_state49;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()))) {
            ap_NS_fsm = ap_ST_fsm_state52;
        } else {
            ap_NS_fsm = ap_ST_fsm_state51;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()))) {
            ap_NS_fsm = ap_ST_fsm_state54;
        } else {
            ap_NS_fsm = ap_ST_fsm_state53;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()))) {
            ap_NS_fsm = ap_ST_fsm_state56;
        } else {
            ap_NS_fsm = ap_ST_fsm_state55;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state57_on_subcall_done.read()))) {
            ap_NS_fsm = ap_ST_fsm_state58;
        } else {
            ap_NS_fsm = ap_ST_fsm_state57;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        if ((esl_seteq<1,1,1>(grp_fu_96_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()))) {
            ap_NS_fsm = ap_ST_fsm_state94;
        } else {
            ap_NS_fsm = ap_ST_fsm_state60;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        if ((esl_seteq<1,1,1>(grp_fu_96_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()))) {
            ap_NS_fsm = ap_ST_fsm_state76;
        } else {
            ap_NS_fsm = ap_ST_fsm_state61;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()))) {
            ap_NS_fsm = ap_ST_fsm_state63;
        } else {
            ap_NS_fsm = ap_ST_fsm_state62;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state64.read()))) {
            ap_NS_fsm = ap_ST_fsm_state65;
        } else {
            ap_NS_fsm = ap_ST_fsm_state64;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state66.read()))) {
            ap_NS_fsm = ap_ST_fsm_state67;
        } else {
            ap_NS_fsm = ap_ST_fsm_state66;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()))) {
            ap_NS_fsm = ap_ST_fsm_state69;
        } else {
            ap_NS_fsm = ap_ST_fsm_state68;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()))) {
            ap_NS_fsm = ap_ST_fsm_state71;
        } else {
            ap_NS_fsm = ap_ST_fsm_state70;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        ap_NS_fsm = ap_ST_fsm_state72;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()))) {
            ap_NS_fsm = ap_ST_fsm_state73;
        } else {
            ap_NS_fsm = ap_ST_fsm_state72;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state73))
    {
        ap_NS_fsm = ap_ST_fsm_state74;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state74))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()))) {
            ap_NS_fsm = ap_ST_fsm_state75;
        } else {
            ap_NS_fsm = ap_ST_fsm_state74;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state75))
    {
        ap_NS_fsm = ap_ST_fsm_state76;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state76))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state76.read()) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state76_on_subcall_done.read()))) {
            ap_NS_fsm = ap_ST_fsm_state77;
        } else {
            ap_NS_fsm = ap_ST_fsm_state76;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state77))
    {
        ap_NS_fsm = ap_ST_fsm_state78;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state78))
    {
        if ((esl_seteq<1,1,1>(grp_fu_96_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()))) {
            ap_NS_fsm = ap_ST_fsm_state94;
        } else {
            ap_NS_fsm = ap_ST_fsm_state79;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state79))
    {
        ap_NS_fsm = ap_ST_fsm_state80;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state80))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()))) {
            ap_NS_fsm = ap_ST_fsm_state81;
        } else {
            ap_NS_fsm = ap_ST_fsm_state80;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state81))
    {
        ap_NS_fsm = ap_ST_fsm_state82;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state82))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state82.read()))) {
            ap_NS_fsm = ap_ST_fsm_state83;
        } else {
            ap_NS_fsm = ap_ST_fsm_state82;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state83))
    {
        ap_NS_fsm = ap_ST_fsm_state84;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state84))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state84.read()))) {
            ap_NS_fsm = ap_ST_fsm_state85;
        } else {
            ap_NS_fsm = ap_ST_fsm_state84;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state85))
    {
        ap_NS_fsm = ap_ST_fsm_state86;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state86))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()))) {
            ap_NS_fsm = ap_ST_fsm_state87;
        } else {
            ap_NS_fsm = ap_ST_fsm_state86;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state87))
    {
        ap_NS_fsm = ap_ST_fsm_state88;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state88))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()))) {
            ap_NS_fsm = ap_ST_fsm_state89;
        } else {
            ap_NS_fsm = ap_ST_fsm_state88;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state89))
    {
        ap_NS_fsm = ap_ST_fsm_state90;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state90))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()))) {
            ap_NS_fsm = ap_ST_fsm_state91;
        } else {
            ap_NS_fsm = ap_ST_fsm_state90;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state91))
    {
        ap_NS_fsm = ap_ST_fsm_state92;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state92))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state92.read()))) {
            ap_NS_fsm = ap_ST_fsm_state93;
        } else {
            ap_NS_fsm = ap_ST_fsm_state92;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state93))
    {
        ap_NS_fsm = ap_ST_fsm_state94;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state94))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read()) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state94_on_subcall_done.read()))) {
            ap_NS_fsm = ap_ST_fsm_state95;
        } else {
            ap_NS_fsm = ap_ST_fsm_state94;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state95))
    {
        ap_NS_fsm = ap_ST_fsm_state96;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state96))
    {
        if ((esl_seteq<1,1,1>(grp_fu_96_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state96.read()))) {
            ap_NS_fsm = ap_ST_fsm_state135;
        } else {
            ap_NS_fsm = ap_ST_fsm_state97;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state97))
    {
        if ((esl_seteq<1,1,1>(grp_fu_96_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read()))) {
            ap_NS_fsm = ap_ST_fsm_state115;
        } else {
            ap_NS_fsm = ap_ST_fsm_state98;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state98))
    {
        ap_NS_fsm = ap_ST_fsm_state99;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state99))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state99.read()))) {
            ap_NS_fsm = ap_ST_fsm_state100;
        } else {
            ap_NS_fsm = ap_ST_fsm_state99;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state100))
    {
        ap_NS_fsm = ap_ST_fsm_state101;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state101))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state101.read()))) {
            ap_NS_fsm = ap_ST_fsm_state102;
        } else {
            ap_NS_fsm = ap_ST_fsm_state101;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state102))
    {
        ap_NS_fsm = ap_ST_fsm_state103;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state103))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read()))) {
            ap_NS_fsm = ap_ST_fsm_state104;
        } else {
            ap_NS_fsm = ap_ST_fsm_state103;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state104))
    {
        ap_NS_fsm = ap_ST_fsm_state105;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state105))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read()))) {
            ap_NS_fsm = ap_ST_fsm_state106;
        } else {
            ap_NS_fsm = ap_ST_fsm_state105;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state106))
    {
        ap_NS_fsm = ap_ST_fsm_state107;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state107))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state107.read()))) {
            ap_NS_fsm = ap_ST_fsm_state108;
        } else {
            ap_NS_fsm = ap_ST_fsm_state107;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state108))
    {
        ap_NS_fsm = ap_ST_fsm_state109;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state109))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state109.read()))) {
            ap_NS_fsm = ap_ST_fsm_state110;
        } else {
            ap_NS_fsm = ap_ST_fsm_state109;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state110))
    {
        ap_NS_fsm = ap_ST_fsm_state111;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state111))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state111.read()))) {
            ap_NS_fsm = ap_ST_fsm_state112;
        } else {
            ap_NS_fsm = ap_ST_fsm_state111;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state112))
    {
        ap_NS_fsm = ap_ST_fsm_state113;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state113))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state113.read()))) {
            ap_NS_fsm = ap_ST_fsm_state114;
        } else {
            ap_NS_fsm = ap_ST_fsm_state113;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state114))
    {
        ap_NS_fsm = ap_ST_fsm_state115;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state115))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state115.read()) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state115_on_subcall_done.read()))) {
            ap_NS_fsm = ap_ST_fsm_state116;
        } else {
            ap_NS_fsm = ap_ST_fsm_state115;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state116))
    {
        ap_NS_fsm = ap_ST_fsm_state117;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state117))
    {
        if ((esl_seteq<1,1,1>(grp_fu_96_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state117.read()))) {
            ap_NS_fsm = ap_ST_fsm_state135;
        } else {
            ap_NS_fsm = ap_ST_fsm_state118;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state118))
    {
        ap_NS_fsm = ap_ST_fsm_state119;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state119))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state119.read()))) {
            ap_NS_fsm = ap_ST_fsm_state120;
        } else {
            ap_NS_fsm = ap_ST_fsm_state119;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state120))
    {
        ap_NS_fsm = ap_ST_fsm_state121;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state121))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()))) {
            ap_NS_fsm = ap_ST_fsm_state122;
        } else {
            ap_NS_fsm = ap_ST_fsm_state121;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state122))
    {
        ap_NS_fsm = ap_ST_fsm_state123;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state123))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state123.read()))) {
            ap_NS_fsm = ap_ST_fsm_state124;
        } else {
            ap_NS_fsm = ap_ST_fsm_state123;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state124))
    {
        ap_NS_fsm = ap_ST_fsm_state125;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state125))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read()))) {
            ap_NS_fsm = ap_ST_fsm_state126;
        } else {
            ap_NS_fsm = ap_ST_fsm_state125;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state126))
    {
        ap_NS_fsm = ap_ST_fsm_state127;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state127))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read()))) {
            ap_NS_fsm = ap_ST_fsm_state128;
        } else {
            ap_NS_fsm = ap_ST_fsm_state127;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state128))
    {
        ap_NS_fsm = ap_ST_fsm_state129;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state129))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state129.read()))) {
            ap_NS_fsm = ap_ST_fsm_state130;
        } else {
            ap_NS_fsm = ap_ST_fsm_state129;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state130))
    {
        ap_NS_fsm = ap_ST_fsm_state131;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state131))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()))) {
            ap_NS_fsm = ap_ST_fsm_state132;
        } else {
            ap_NS_fsm = ap_ST_fsm_state131;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state132))
    {
        ap_NS_fsm = ap_ST_fsm_state133;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state133))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state133.read()))) {
            ap_NS_fsm = ap_ST_fsm_state134;
        } else {
            ap_NS_fsm = ap_ST_fsm_state133;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state134))
    {
        ap_NS_fsm = ap_ST_fsm_state135;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state135))
    {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state135_on_subcall_done.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state135.read()))) {
            ap_NS_fsm = ap_ST_fsm_state136;
        } else {
            ap_NS_fsm = ap_ST_fsm_state135;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state136))
    {
        ap_NS_fsm = ap_ST_fsm_state137;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state137))
    {
        if ((esl_seteq<1,1,1>(grp_fu_96_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state137.read()))) {
            ap_NS_fsm = ap_ST_fsm_state176;
        } else {
            ap_NS_fsm = ap_ST_fsm_state138;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state138))
    {
        if ((esl_seteq<1,1,1>(grp_fu_96_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state138.read()))) {
            ap_NS_fsm = ap_ST_fsm_state156;
        } else {
            ap_NS_fsm = ap_ST_fsm_state139;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state139))
    {
        ap_NS_fsm = ap_ST_fsm_state140;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state140))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state140.read()))) {
            ap_NS_fsm = ap_ST_fsm_state141;
        } else {
            ap_NS_fsm = ap_ST_fsm_state140;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state141))
    {
        ap_NS_fsm = ap_ST_fsm_state142;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state142))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state142.read()))) {
            ap_NS_fsm = ap_ST_fsm_state143;
        } else {
            ap_NS_fsm = ap_ST_fsm_state142;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state143))
    {
        ap_NS_fsm = ap_ST_fsm_state144;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state144))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state144.read()))) {
            ap_NS_fsm = ap_ST_fsm_state145;
        } else {
            ap_NS_fsm = ap_ST_fsm_state144;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state145))
    {
        ap_NS_fsm = ap_ST_fsm_state146;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state146))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state146.read()))) {
            ap_NS_fsm = ap_ST_fsm_state147;
        } else {
            ap_NS_fsm = ap_ST_fsm_state146;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state147))
    {
        ap_NS_fsm = ap_ST_fsm_state148;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state148))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state148.read()))) {
            ap_NS_fsm = ap_ST_fsm_state149;
        } else {
            ap_NS_fsm = ap_ST_fsm_state148;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state149))
    {
        ap_NS_fsm = ap_ST_fsm_state150;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state150))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state150.read()))) {
            ap_NS_fsm = ap_ST_fsm_state151;
        } else {
            ap_NS_fsm = ap_ST_fsm_state150;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state151))
    {
        ap_NS_fsm = ap_ST_fsm_state152;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state152))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state152.read()))) {
            ap_NS_fsm = ap_ST_fsm_state153;
        } else {
            ap_NS_fsm = ap_ST_fsm_state152;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state153))
    {
        ap_NS_fsm = ap_ST_fsm_state154;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state154))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state154.read()))) {
            ap_NS_fsm = ap_ST_fsm_state155;
        } else {
            ap_NS_fsm = ap_ST_fsm_state154;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state155))
    {
        ap_NS_fsm = ap_ST_fsm_state156;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state156))
    {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state156_on_subcall_done.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state156.read()))) {
            ap_NS_fsm = ap_ST_fsm_state157;
        } else {
            ap_NS_fsm = ap_ST_fsm_state156;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state157))
    {
        ap_NS_fsm = ap_ST_fsm_state158;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state158))
    {
        if ((esl_seteq<1,1,1>(grp_fu_96_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state158.read()))) {
            ap_NS_fsm = ap_ST_fsm_state176;
        } else {
            ap_NS_fsm = ap_ST_fsm_state159;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state159))
    {
        ap_NS_fsm = ap_ST_fsm_state160;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state160))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state160.read()))) {
            ap_NS_fsm = ap_ST_fsm_state161;
        } else {
            ap_NS_fsm = ap_ST_fsm_state160;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state161))
    {
        ap_NS_fsm = ap_ST_fsm_state162;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state162))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state162.read()))) {
            ap_NS_fsm = ap_ST_fsm_state163;
        } else {
            ap_NS_fsm = ap_ST_fsm_state162;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state163))
    {
        ap_NS_fsm = ap_ST_fsm_state164;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state164))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state164.read()))) {
            ap_NS_fsm = ap_ST_fsm_state165;
        } else {
            ap_NS_fsm = ap_ST_fsm_state164;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state165))
    {
        ap_NS_fsm = ap_ST_fsm_state166;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state166))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state166.read()))) {
            ap_NS_fsm = ap_ST_fsm_state167;
        } else {
            ap_NS_fsm = ap_ST_fsm_state166;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state167))
    {
        ap_NS_fsm = ap_ST_fsm_state168;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state168))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state168.read()))) {
            ap_NS_fsm = ap_ST_fsm_state169;
        } else {
            ap_NS_fsm = ap_ST_fsm_state168;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state169))
    {
        ap_NS_fsm = ap_ST_fsm_state170;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state170))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state170.read()))) {
            ap_NS_fsm = ap_ST_fsm_state171;
        } else {
            ap_NS_fsm = ap_ST_fsm_state170;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state171))
    {
        ap_NS_fsm = ap_ST_fsm_state172;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state172))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state172.read()))) {
            ap_NS_fsm = ap_ST_fsm_state173;
        } else {
            ap_NS_fsm = ap_ST_fsm_state172;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state173))
    {
        ap_NS_fsm = ap_ST_fsm_state174;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state174))
    {
        if ((esl_seteq<1,1,1>(grp_turnCube_fu_72_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state174.read()))) {
            ap_NS_fsm = ap_ST_fsm_state175;
        } else {
            ap_NS_fsm = ap_ST_fsm_state174;
        }
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state175))
    {
        ap_NS_fsm = ap_ST_fsm_state176;
    }
    else if (esl_seteq<1,176,176>(ap_CS_fsm.read(), ap_ST_fsm_state176))
    {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state176_on_subcall_done.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state176.read()))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state176;
        }
    }
    else
    {
        ap_NS_fsm =  (sc_lv<176>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
}

