// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _optimizeCube_HH_
#define _optimizeCube_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct optimizeCube : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > moveCounter_V;
    sc_out< sc_lv<8> > moves_V_address0;
    sc_out< sc_logic > moves_V_ce0;
    sc_out< sc_logic > moves_V_we0;
    sc_out< sc_lv<4> > moves_V_d0;
    sc_in< sc_lv<4> > moves_V_q0;
    sc_out< sc_lv<8> > ap_return;


    // Module declarations
    optimizeCube(sc_module_name name);
    SC_HAS_PROCESS(optimizeCube);

    ~optimizeCube();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_fu_175_p2;
    sc_signal< sc_lv<4> > moves_V_load_reg_417;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > r_V_fu_188_p1;
    sc_signal< sc_lv<1> > r_V_reg_427;
    sc_signal< sc_lv<1> > grp_fu_145_p2;
    sc_signal< sc_lv<1> > tmp_89_old_reg_436;
    sc_signal< sc_lv<1> > or_cond_fu_230_p2;
    sc_signal< sc_lv<1> > or_cond_reg_440;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > grp_fu_151_p2;
    sc_signal< sc_lv<1> > tmp_93_old_reg_444;
    sc_signal< sc_lv<1> > or_cond2_fu_270_p2;
    sc_signal< sc_lv<1> > or_cond2_reg_453;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<9> > lhs_V_4_cast_fu_276_p1;
    sc_signal< sc_lv<9> > lhs_V_4_cast_reg_457;
    sc_signal< sc_lv<1> > grp_fu_156_p2;
    sc_signal< sc_lv<1> > tmp_73_reg_468;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > tmp_75_reg_477;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > tmp_77_reg_486;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<9> > lhs_V_5_cast_fu_335_p1;
    sc_signal< sc_lv<9> > lhs_V_5_cast_reg_490;
    sc_signal< sc_lv<1> > tmp_80_reg_501;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<1> > tmp_82_reg_510;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<8> > i_V_3_fu_384_p2;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<8> > p_s_reg_121;
    sc_signal< sc_lv<8> > i_V_2_fu_377_p2;
    sc_signal< sc_lv<8> > ap_phi_mux_t_V_1_phi_fu_136_p6;
    sc_signal< sc_lv<8> > t_V_1_reg_133;
    sc_signal< sc_lv<8> > i_V_fu_370_p2;
    sc_signal< sc_lv<64> > tmp_s_fu_180_p1;
    sc_signal< sc_lv<64> > tmp_66_fu_202_p1;
    sc_signal< sc_lv<64> > tmp_69_fu_246_p1;
    sc_signal< sc_lv<64> > tmp_72_fu_286_p1;
    sc_signal< sc_lv<64> > tmp_74_fu_296_p1;
    sc_signal< sc_lv<64> > tmp_76_fu_306_p1;
    sc_signal< sc_lv<64> > tmp_78_fu_320_p1;
    sc_signal< sc_lv<64> > tmp_79_fu_345_p1;
    sc_signal< sc_lv<64> > tmp_81_fu_355_p1;
    sc_signal< sc_lv<64> > tmp_83_fu_365_p1;
    sc_signal< sc_lv<8> > t_V_fu_28;
    sc_signal< sc_lv<8> > order_V_fu_314_p2;
    sc_signal< sc_lv<8> > order_V_1_fu_32;
    sc_signal< sc_lv<4> > grp_fu_145_p0;
    sc_signal< sc_lv<9> > lhs_V_1_cast_fu_192_p1;
    sc_signal< sc_lv<9> > r_V_2_fu_196_p2;
    sc_signal< sc_lv<5> > lhs_V_cast_fu_207_p1;
    sc_signal< sc_lv<5> > r_V_1_fu_210_p2;
    sc_signal< sc_lv<6> > r_V_1_cast_fu_216_p1;
    sc_signal< sc_lv<6> > tmp_83_cast_fu_220_p1;
    sc_signal< sc_lv<1> > tmp_67_fu_224_p2;
    sc_signal< sc_lv<9> > lhs_V_3_cast_fu_236_p1;
    sc_signal< sc_lv<9> > r_V_4_fu_240_p2;
    sc_signal< sc_lv<5> > lhs_V_2_cast_fu_251_p1;
    sc_signal< sc_lv<5> > r_V_3_fu_254_p2;
    sc_signal< sc_lv<5> > tmp_87_cast_fu_260_p1;
    sc_signal< sc_lv<1> > tmp_70_fu_264_p2;
    sc_signal< sc_lv<9> > r_V_5_fu_280_p2;
    sc_signal< sc_lv<9> > r_V_6_fu_291_p2;
    sc_signal< sc_lv<9> > r_V_7_fu_301_p2;
    sc_signal< sc_lv<9> > r_V_8_fu_339_p2;
    sc_signal< sc_lv<9> > r_V_9_fu_350_p2;
    sc_signal< sc_lv<9> > r_V_10_fu_360_p2;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    sc_signal< bool > ap_condition_219;
    sc_signal< bool > ap_condition_241;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_state10;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<9> ap_const_lv9_2;
    static const sc_lv<9> ap_const_lv9_3;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_3;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_condition_219();
    void thread_ap_condition_241();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_t_V_1_phi_fu_136_p6();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_fu_145_p0();
    void thread_grp_fu_145_p2();
    void thread_grp_fu_151_p2();
    void thread_grp_fu_156_p2();
    void thread_i_V_2_fu_377_p2();
    void thread_i_V_3_fu_384_p2();
    void thread_i_V_fu_370_p2();
    void thread_lhs_V_1_cast_fu_192_p1();
    void thread_lhs_V_2_cast_fu_251_p1();
    void thread_lhs_V_3_cast_fu_236_p1();
    void thread_lhs_V_4_cast_fu_276_p1();
    void thread_lhs_V_5_cast_fu_335_p1();
    void thread_lhs_V_cast_fu_207_p1();
    void thread_moves_V_address0();
    void thread_moves_V_ce0();
    void thread_moves_V_d0();
    void thread_moves_V_we0();
    void thread_or_cond2_fu_270_p2();
    void thread_or_cond_fu_230_p2();
    void thread_order_V_fu_314_p2();
    void thread_r_V_10_fu_360_p2();
    void thread_r_V_1_cast_fu_216_p1();
    void thread_r_V_1_fu_210_p2();
    void thread_r_V_2_fu_196_p2();
    void thread_r_V_3_fu_254_p2();
    void thread_r_V_4_fu_240_p2();
    void thread_r_V_5_fu_280_p2();
    void thread_r_V_6_fu_291_p2();
    void thread_r_V_7_fu_301_p2();
    void thread_r_V_8_fu_339_p2();
    void thread_r_V_9_fu_350_p2();
    void thread_r_V_fu_188_p1();
    void thread_tmp_66_fu_202_p1();
    void thread_tmp_67_fu_224_p2();
    void thread_tmp_69_fu_246_p1();
    void thread_tmp_70_fu_264_p2();
    void thread_tmp_72_fu_286_p1();
    void thread_tmp_74_fu_296_p1();
    void thread_tmp_76_fu_306_p1();
    void thread_tmp_78_fu_320_p1();
    void thread_tmp_79_fu_345_p1();
    void thread_tmp_81_fu_355_p1();
    void thread_tmp_83_cast_fu_220_p1();
    void thread_tmp_83_fu_365_p1();
    void thread_tmp_87_cast_fu_260_p1();
    void thread_tmp_fu_175_p2();
    void thread_tmp_s_fu_180_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
