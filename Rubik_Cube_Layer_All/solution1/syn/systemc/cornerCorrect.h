// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _cornerCorrect_HH_
#define _cornerCorrect_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct cornerCorrect : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<3> > corner_V;
    sc_out< sc_lv<6> > cubieColor_V_address0;
    sc_out< sc_logic > cubieColor_V_ce0;
    sc_in< sc_lv<3> > cubieColor_V_q0;
    sc_out< sc_lv<6> > cubieColor_V_address1;
    sc_out< sc_logic > cubieColor_V_ce1;
    sc_in< sc_lv<3> > cubieColor_V_q1;
    sc_out< sc_lv<1> > ap_return;


    // Module declarations
    cornerCorrect(sc_module_name name);
    SC_HAS_PROCESS(cornerCorrect);

    ~cornerCorrect();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > reg_93;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > grp_fu_77_p2;
    sc_signal< sc_lv<1> > tmp_s_reg_219;
    sc_signal< sc_lv<1> > grp_fu_83_p2;
    sc_signal< sc_lv<1> > tmp_216_reg_224;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > tmp_217_reg_229;
    sc_signal< sc_lv<1> > tmp_218_reg_234;
    sc_signal< sc_lv<1> > grp_fu_88_p2;
    sc_signal< sc_lv<1> > tmp_219_reg_239;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<3> > cubieColor_V_load_157_reg_244;
    sc_signal< sc_lv<1> > tmp_220_fu_107_p2;
    sc_signal< sc_lv<1> > tmp_220_reg_250;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > tmp_221_fu_112_p2;
    sc_signal< sc_lv<1> > tmp_221_reg_255;
    sc_signal< sc_lv<1> > tmp_222_reg_260;
    sc_signal< sc_lv<1> > sel_tmp3_fu_133_p2;
    sc_signal< sc_lv<1> > sel_tmp3_reg_265;
    sc_signal< sc_lv<1> > sel_tmp5_fu_139_p2;
    sc_signal< sc_lv<1> > sel_tmp5_reg_270;
    sc_signal< sc_lv<1> > sel_tmp10_fu_145_p2;
    sc_signal< sc_lv<1> > sel_tmp10_reg_275;
    sc_signal< sc_lv<1> > sel_tmp17_fu_161_p2;
    sc_signal< sc_lv<1> > sel_tmp17_reg_280;
    sc_signal< sc_lv<3> > grp_fu_77_p0;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<1> > sel_tmp_fu_117_p2;
    sc_signal< sc_lv<1> > grp_fu_101_p2;
    sc_signal< sc_lv<1> > tmp19_fu_128_p2;
    sc_signal< sc_lv<1> > tmp_fu_123_p2;
    sc_signal< sc_lv<1> > tmp24_fu_157_p2;
    sc_signal< sc_lv<1> > sel_tmp15_fu_151_p2;
    sc_signal< sc_lv<1> > tmp21_fu_177_p2;
    sc_signal< sc_lv<1> > tmp20_fu_173_p2;
    sc_signal< sc_lv<1> > tmp_225_fu_167_p2;
    sc_signal< sc_lv<1> > tmp23_fu_192_p2;
    sc_signal< sc_lv<1> > tmp22_fu_188_p2;
    sc_signal< sc_lv<1> > sel_tmp8_fu_182_p2;
    sc_signal< sc_lv<1> > sel_tmp13_fu_197_p2;
    sc_signal< sc_lv<1> > tmp26_fu_208_p2;
    sc_signal< sc_lv<1> > tmp25_fu_203_p2;
    sc_signal< sc_lv<1> > agg_result_V_fu_213_p2;
    sc_signal< sc_lv<1> > ap_return_preg;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<6> ap_const_lv6_4;
    static const sc_lv<6> ap_const_lv6_6;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<6> ap_const_lv6_2;
    static const sc_lv<6> ap_const_lv6_8;
    static const sc_lv<6> ap_const_lv6_1F;
    static const sc_lv<6> ap_const_lv6_1B;
    static const sc_lv<6> ap_const_lv6_16;
    static const sc_lv<6> ap_const_lv6_14;
    static const sc_lv<6> ap_const_lv6_12;
    static const sc_lv<6> ap_const_lv6_1D;
    static const sc_lv<6> ap_const_lv6_28;
    static const sc_lv<6> ap_const_lv6_26;
    static const sc_lv<6> ap_const_lv6_31;
    static const sc_lv<6> ap_const_lv6_2F;
    static const sc_lv<6> ap_const_lv6_2D;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_agg_result_V_fu_213_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_cubieColor_V_address0();
    void thread_cubieColor_V_address1();
    void thread_cubieColor_V_ce0();
    void thread_cubieColor_V_ce1();
    void thread_grp_fu_101_p2();
    void thread_grp_fu_77_p0();
    void thread_grp_fu_77_p2();
    void thread_grp_fu_83_p2();
    void thread_grp_fu_88_p2();
    void thread_sel_tmp10_fu_145_p2();
    void thread_sel_tmp13_fu_197_p2();
    void thread_sel_tmp15_fu_151_p2();
    void thread_sel_tmp17_fu_161_p2();
    void thread_sel_tmp3_fu_133_p2();
    void thread_sel_tmp5_fu_139_p2();
    void thread_sel_tmp8_fu_182_p2();
    void thread_sel_tmp_fu_117_p2();
    void thread_tmp19_fu_128_p2();
    void thread_tmp20_fu_173_p2();
    void thread_tmp21_fu_177_p2();
    void thread_tmp22_fu_188_p2();
    void thread_tmp23_fu_192_p2();
    void thread_tmp24_fu_157_p2();
    void thread_tmp25_fu_203_p2();
    void thread_tmp26_fu_208_p2();
    void thread_tmp_220_fu_107_p2();
    void thread_tmp_221_fu_112_p2();
    void thread_tmp_225_fu_167_p2();
    void thread_tmp_fu_123_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
