// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _edgeCorrect_HH_
#define _edgeCorrect_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct edgeCorrect : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<4> > edge_V;
    sc_out< sc_lv<6> > cubieColor_V_address0;
    sc_out< sc_logic > cubieColor_V_ce0;
    sc_in< sc_lv<3> > cubieColor_V_q0;
    sc_out< sc_lv<6> > cubieColor_V_address1;
    sc_out< sc_logic > cubieColor_V_ce1;
    sc_in< sc_lv<3> > cubieColor_V_q1;
    sc_out< sc_lv<1> > ap_return;


    // Module declarations
    edgeCorrect(sc_module_name name);
    SC_HAS_PROCESS(edgeCorrect);

    ~edgeCorrect();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<12> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > reg_131;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<1> > grp_fu_100_p2;
    sc_signal< sc_lv<1> > tmp_s_reg_319;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > grp_fu_105_p2;
    sc_signal< sc_lv<1> > tmp_201_reg_324;
    sc_signal< sc_lv<1> > tmp_202_reg_329;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > tmp_203_reg_334;
    sc_signal< sc_lv<1> > grp_fu_110_p2;
    sc_signal< sc_lv<1> > tmp_204_reg_339;
    sc_signal< sc_lv<3> > cubieColor_V_load_137_reg_344;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > tmp_205_reg_349;
    sc_signal< sc_lv<3> > cubieColor_V_load_139_reg_354;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > tmp_206_reg_359;
    sc_signal< sc_lv<1> > tmp_207_fu_140_p2;
    sc_signal< sc_lv<1> > tmp_207_reg_364;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > tmp_208_reg_369;
    sc_signal< sc_lv<1> > grp_fu_116_p2;
    sc_signal< sc_lv<1> > tmp_209_reg_374;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > tmp32_fu_212_p2;
    sc_signal< sc_lv<1> > tmp32_reg_387;
    sc_signal< sc_lv<1> > tmp33_fu_218_p2;
    sc_signal< sc_lv<1> > tmp33_reg_392;
    sc_signal< sc_lv<1> > sel_tmp20_fu_262_p2;
    sc_signal< sc_lv<1> > sel_tmp20_reg_397;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<1> > sel_tmp22_fu_267_p2;
    sc_signal< sc_lv<1> > sel_tmp22_reg_402;
    sc_signal< sc_lv<1> > tmp35_fu_272_p2;
    sc_signal< sc_lv<1> > tmp35_reg_407;
    sc_signal< sc_lv<3> > grp_fu_110_p0;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<1> > tmp_fu_152_p2;
    sc_signal< sc_lv<1> > sel_tmp_fu_146_p2;
    sc_signal< sc_lv<1> > tmp25_fu_168_p2;
    sc_signal< sc_lv<1> > sel_tmp4_fu_162_p2;
    sc_signal< sc_lv<1> > grp_fu_121_p2;
    sc_signal< sc_lv<1> > tmp26_fu_184_p2;
    sc_signal< sc_lv<1> > sel_tmp8_fu_178_p2;
    sc_signal< sc_lv<1> > grp_fu_126_p2;
    sc_signal< sc_lv<1> > tmp27_fu_201_p2;
    sc_signal< sc_lv<1> > sel_tmp12_fu_195_p2;
    sc_signal< sc_lv<1> > sel_tmp6_fu_172_p2;
    sc_signal< sc_lv<1> > sel_tmp2_fu_156_p2;
    sc_signal< sc_lv<1> > sel_tmp10_fu_189_p2;
    sc_signal< sc_lv<1> > sel_tmp14_fu_206_p2;
    sc_signal< sc_lv<1> > tmp28_fu_235_p2;
    sc_signal< sc_lv<1> > sel_tmp16_fu_230_p2;
    sc_signal< sc_lv<1> > tmp_213_fu_224_p2;
    sc_signal< sc_lv<1> > tmp29_fu_251_p2;
    sc_signal< sc_lv<1> > sel_tmp18_fu_246_p2;
    sc_signal< sc_lv<1> > sel_tmp17_fu_240_p2;
    sc_signal< sc_lv<1> > sel_tmp19_fu_256_p2;
    sc_signal< sc_lv<1> > tmp30_fu_278_p2;
    sc_signal< sc_lv<1> > tmp31_fu_288_p2;
    sc_signal< sc_lv<1> > sel_tmp21_fu_283_p2;
    sc_signal< sc_lv<1> > sel_tmp23_fu_293_p2;
    sc_signal< sc_lv<1> > tmp36_fu_302_p2;
    sc_signal< sc_lv<1> > tmp37_fu_308_p2;
    sc_signal< sc_lv<1> > tmp34_fu_298_p2;
    sc_signal< sc_lv<1> > agg_result_V_fu_313_p2;
    sc_signal< sc_lv<1> > ap_return_preg;
    sc_signal< sc_lv<12> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<12> ap_ST_fsm_state1;
    static const sc_lv<12> ap_ST_fsm_state2;
    static const sc_lv<12> ap_ST_fsm_state3;
    static const sc_lv<12> ap_ST_fsm_state4;
    static const sc_lv<12> ap_ST_fsm_state5;
    static const sc_lv<12> ap_ST_fsm_state6;
    static const sc_lv<12> ap_ST_fsm_state7;
    static const sc_lv<12> ap_ST_fsm_state8;
    static const sc_lv<12> ap_ST_fsm_state9;
    static const sc_lv<12> ap_ST_fsm_state10;
    static const sc_lv<12> ap_ST_fsm_state11;
    static const sc_lv<12> ap_ST_fsm_state12;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<6> ap_const_lv6_4;
    static const sc_lv<6> ap_const_lv6_7;
    static const sc_lv<6> ap_const_lv6_3;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<6> ap_const_lv6_5;
    static const sc_lv<6> ap_const_lv6_1F;
    static const sc_lv<6> ap_const_lv6_1E;
    static const sc_lv<6> ap_const_lv6_28;
    static const sc_lv<6> ap_const_lv6_27;
    static const sc_lv<6> ap_const_lv6_31;
    static const sc_lv<6> ap_const_lv6_32;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1C;
    static const sc_lv<6> ap_const_lv6_25;
    static const sc_lv<6> ap_const_lv6_16;
    static const sc_lv<6> ap_const_lv6_13;
    static const sc_lv<6> ap_const_lv6_2E;
    static const sc_lv<6> ap_const_lv6_29;
    static const sc_lv<6> ap_const_lv6_17;
    static const sc_lv<6> ap_const_lv6_15;
    static const sc_lv<6> ap_const_lv6_30;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<1> ap_const_lv1_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_agg_result_V_fu_313_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_cubieColor_V_address0();
    void thread_cubieColor_V_address1();
    void thread_cubieColor_V_ce0();
    void thread_cubieColor_V_ce1();
    void thread_grp_fu_100_p2();
    void thread_grp_fu_105_p2();
    void thread_grp_fu_110_p0();
    void thread_grp_fu_110_p2();
    void thread_grp_fu_116_p2();
    void thread_grp_fu_121_p2();
    void thread_grp_fu_126_p2();
    void thread_sel_tmp10_fu_189_p2();
    void thread_sel_tmp12_fu_195_p2();
    void thread_sel_tmp14_fu_206_p2();
    void thread_sel_tmp16_fu_230_p2();
    void thread_sel_tmp17_fu_240_p2();
    void thread_sel_tmp18_fu_246_p2();
    void thread_sel_tmp19_fu_256_p2();
    void thread_sel_tmp20_fu_262_p2();
    void thread_sel_tmp21_fu_283_p2();
    void thread_sel_tmp22_fu_267_p2();
    void thread_sel_tmp23_fu_293_p2();
    void thread_sel_tmp2_fu_156_p2();
    void thread_sel_tmp4_fu_162_p2();
    void thread_sel_tmp6_fu_172_p2();
    void thread_sel_tmp8_fu_178_p2();
    void thread_sel_tmp_fu_146_p2();
    void thread_tmp25_fu_168_p2();
    void thread_tmp26_fu_184_p2();
    void thread_tmp27_fu_201_p2();
    void thread_tmp28_fu_235_p2();
    void thread_tmp29_fu_251_p2();
    void thread_tmp30_fu_278_p2();
    void thread_tmp31_fu_288_p2();
    void thread_tmp32_fu_212_p2();
    void thread_tmp33_fu_218_p2();
    void thread_tmp34_fu_298_p2();
    void thread_tmp35_fu_272_p2();
    void thread_tmp36_fu_302_p2();
    void thread_tmp37_fu_308_p2();
    void thread_tmp_207_fu_140_p2();
    void thread_tmp_213_fu_224_p2();
    void thread_tmp_fu_152_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
