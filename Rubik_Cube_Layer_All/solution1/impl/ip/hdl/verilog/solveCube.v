// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="solveCube,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=12.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.736500,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=0,HLS_SYN_FF=2584,HLS_SYN_LUT=27346,HLS_VERSION=2018_2}" *)

module solveCube (
        ap_clk,
        ap_rst_n,
        s_axi_add_io_AWVALID,
        s_axi_add_io_AWREADY,
        s_axi_add_io_AWADDR,
        s_axi_add_io_WVALID,
        s_axi_add_io_WREADY,
        s_axi_add_io_WDATA,
        s_axi_add_io_WSTRB,
        s_axi_add_io_ARVALID,
        s_axi_add_io_ARREADY,
        s_axi_add_io_ARADDR,
        s_axi_add_io_RVALID,
        s_axi_add_io_RREADY,
        s_axi_add_io_RDATA,
        s_axi_add_io_RRESP,
        s_axi_add_io_BVALID,
        s_axi_add_io_BREADY,
        s_axi_add_io_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 143'd1;
parameter    ap_ST_fsm_state2 = 143'd2;
parameter    ap_ST_fsm_state3 = 143'd4;
parameter    ap_ST_fsm_state4 = 143'd8;
parameter    ap_ST_fsm_state5 = 143'd16;
parameter    ap_ST_fsm_state6 = 143'd32;
parameter    ap_ST_fsm_state7 = 143'd64;
parameter    ap_ST_fsm_state8 = 143'd128;
parameter    ap_ST_fsm_state9 = 143'd256;
parameter    ap_ST_fsm_state10 = 143'd512;
parameter    ap_ST_fsm_state11 = 143'd1024;
parameter    ap_ST_fsm_state12 = 143'd2048;
parameter    ap_ST_fsm_state13 = 143'd4096;
parameter    ap_ST_fsm_state14 = 143'd8192;
parameter    ap_ST_fsm_state15 = 143'd16384;
parameter    ap_ST_fsm_state16 = 143'd32768;
parameter    ap_ST_fsm_state17 = 143'd65536;
parameter    ap_ST_fsm_state18 = 143'd131072;
parameter    ap_ST_fsm_state19 = 143'd262144;
parameter    ap_ST_fsm_state20 = 143'd524288;
parameter    ap_ST_fsm_state21 = 143'd1048576;
parameter    ap_ST_fsm_state22 = 143'd2097152;
parameter    ap_ST_fsm_state23 = 143'd4194304;
parameter    ap_ST_fsm_state24 = 143'd8388608;
parameter    ap_ST_fsm_state25 = 143'd16777216;
parameter    ap_ST_fsm_state26 = 143'd33554432;
parameter    ap_ST_fsm_state27 = 143'd67108864;
parameter    ap_ST_fsm_state28 = 143'd134217728;
parameter    ap_ST_fsm_state29 = 143'd268435456;
parameter    ap_ST_fsm_state30 = 143'd536870912;
parameter    ap_ST_fsm_state31 = 143'd1073741824;
parameter    ap_ST_fsm_state32 = 143'd2147483648;
parameter    ap_ST_fsm_state33 = 143'd4294967296;
parameter    ap_ST_fsm_state34 = 143'd8589934592;
parameter    ap_ST_fsm_state35 = 143'd17179869184;
parameter    ap_ST_fsm_state36 = 143'd34359738368;
parameter    ap_ST_fsm_state37 = 143'd68719476736;
parameter    ap_ST_fsm_state38 = 143'd137438953472;
parameter    ap_ST_fsm_state39 = 143'd274877906944;
parameter    ap_ST_fsm_state40 = 143'd549755813888;
parameter    ap_ST_fsm_state41 = 143'd1099511627776;
parameter    ap_ST_fsm_state42 = 143'd2199023255552;
parameter    ap_ST_fsm_state43 = 143'd4398046511104;
parameter    ap_ST_fsm_state44 = 143'd8796093022208;
parameter    ap_ST_fsm_state45 = 143'd17592186044416;
parameter    ap_ST_fsm_state46 = 143'd35184372088832;
parameter    ap_ST_fsm_state47 = 143'd70368744177664;
parameter    ap_ST_fsm_state48 = 143'd140737488355328;
parameter    ap_ST_fsm_state49 = 143'd281474976710656;
parameter    ap_ST_fsm_state50 = 143'd562949953421312;
parameter    ap_ST_fsm_state51 = 143'd1125899906842624;
parameter    ap_ST_fsm_state52 = 143'd2251799813685248;
parameter    ap_ST_fsm_state53 = 143'd4503599627370496;
parameter    ap_ST_fsm_state54 = 143'd9007199254740992;
parameter    ap_ST_fsm_state55 = 143'd18014398509481984;
parameter    ap_ST_fsm_state56 = 143'd36028797018963968;
parameter    ap_ST_fsm_state57 = 143'd72057594037927936;
parameter    ap_ST_fsm_state58 = 143'd144115188075855872;
parameter    ap_ST_fsm_state59 = 143'd288230376151711744;
parameter    ap_ST_fsm_state60 = 143'd576460752303423488;
parameter    ap_ST_fsm_state61 = 143'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 143'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 143'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 143'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 143'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 143'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 143'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 143'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 143'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 143'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 143'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 143'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 143'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 143'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 143'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 143'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 143'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 143'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 143'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 143'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 143'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 143'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 143'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 143'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 143'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 143'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 143'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 143'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 143'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 143'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 143'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 143'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 143'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 143'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 143'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 143'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 143'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 143'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 143'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 143'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 143'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 143'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 143'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 143'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 143'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 143'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 143'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 143'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 143'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 143'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 143'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 143'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 143'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 143'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 143'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 143'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 143'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 143'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 143'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 143'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 143'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 143'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 143'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 143'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 143'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 143'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 143'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 143'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 143'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 143'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 143'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 143'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 143'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 143'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 143'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 143'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 143'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 143'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 143'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 143'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 143'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 143'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 143'd5575186299632655785383929568162090376495104;
parameter    C_S_AXI_ADD_IO_DATA_WIDTH = 32;
parameter    C_S_AXI_ADD_IO_ADDR_WIDTH = 10;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_ADD_IO_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_add_io_AWVALID;
output   s_axi_add_io_AWREADY;
input  [C_S_AXI_ADD_IO_ADDR_WIDTH - 1:0] s_axi_add_io_AWADDR;
input   s_axi_add_io_WVALID;
output   s_axi_add_io_WREADY;
input  [C_S_AXI_ADD_IO_DATA_WIDTH - 1:0] s_axi_add_io_WDATA;
input  [C_S_AXI_ADD_IO_WSTRB_WIDTH - 1:0] s_axi_add_io_WSTRB;
input   s_axi_add_io_ARVALID;
output   s_axi_add_io_ARREADY;
input  [C_S_AXI_ADD_IO_ADDR_WIDTH - 1:0] s_axi_add_io_ARADDR;
output   s_axi_add_io_RVALID;
input   s_axi_add_io_RREADY;
output  [C_S_AXI_ADD_IO_DATA_WIDTH - 1:0] s_axi_add_io_RDATA;
output  [1:0] s_axi_add_io_RRESP;
output   s_axi_add_io_BVALID;
input   s_axi_add_io_BREADY;
output  [1:0] s_axi_add_io_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [142:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [5:0] cubieColor_tb_V_address0;
reg    cubieColor_tb_V_ce0;
wire   [2:0] cubieColor_tb_V_q0;
wire   [7:0] rMoves_V_address0;
reg    rMoves_V_ce0;
reg    rMoves_V_we0;
reg    order_V_ap_vld;
reg   [5:0] cubieColor_V_address0;
reg    cubieColor_V_ce0;
reg    cubieColor_V_we0;
reg   [2:0] cubieColor_V_d0;
wire   [2:0] cubieColor_V_q0;
reg   [5:0] cubieColor_V_address1;
reg    cubieColor_V_ce1;
reg    cubieColor_V_we1;
reg   [2:0] cubieColor_V_d1;
wire   [2:0] cubieColor_V_q1;
reg   [7:0] moveCounter_V;
reg   [7:0] moves_V_address0;
reg    moves_V_ce0;
reg    moves_V_we0;
reg   [3:0] moves_V_d0;
wire   [3:0] moves_V_q0;
wire   [3:0] grp_findEdge_fu_372_ap_return;
reg   [3:0] reg_431;
wire    ap_CS_fsm_state14;
wire    grp_findEdge_fu_372_ap_idle;
wire    grp_findEdge_fu_372_ap_ready;
wire    grp_findEdge_fu_372_ap_done;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state32;
reg   [2:0] reg_436;
wire    ap_CS_fsm_state100;
wire    ap_CS_fsm_state106;
wire   [2:0] i_V_fu_451_p2;
reg   [2:0] i_V_reg_562;
wire    ap_CS_fsm_state2;
wire   [6:0] tmp_7_fu_473_p2;
reg   [6:0] tmp_7_reg_567;
wire   [0:0] tmp_fu_445_p2;
wire   [3:0] j_V_fu_491_p2;
reg   [3:0] j_V_reg_575;
wire    ap_CS_fsm_state3;
wire   [63:0] tmp_8_cast_fu_506_p1;
reg   [63:0] tmp_8_cast_reg_580;
wire   [0:0] tmp_s_fu_485_p2;
wire   [0:0] grp_fu_411_p2;
reg   [0:0] tmp_53_reg_638;
wire    ap_CS_fsm_state101;
wire   [0:0] grp_fu_416_p2;
reg   [0:0] tmp_54_reg_643;
wire   [0:0] or_cond_fu_521_p2;
reg   [0:0] or_cond_reg_648;
wire    ap_CS_fsm_state102;
wire   [0:0] grp_fu_421_p2;
reg   [0:0] tmp_57_reg_652;
wire    ap_CS_fsm_state107;
wire   [0:0] grp_fu_426_p2;
reg   [0:0] tmp_58_reg_657;
wire   [0:0] grp_cornerCorrect_fu_400_ap_return;
reg   [0:0] p_22_reg_665;
wire    ap_CS_fsm_state112;
wire    grp_cornerCorrect_fu_400_ap_idle;
wire    grp_cornerCorrect_fu_400_ap_ready;
wire    grp_cornerCorrect_fu_400_ap_done;
reg   [0:0] p_23_reg_669;
wire    ap_CS_fsm_state114;
reg   [0:0] p_24_reg_673;
wire    ap_CS_fsm_state116;
reg   [0:0] p_28_reg_677;
wire    ap_CS_fsm_state118;
reg   [0:0] p_29_reg_681;
wire    ap_CS_fsm_state120;
reg   [0:0] p_30_reg_685;
wire    ap_CS_fsm_state122;
reg   [0:0] p_27_reg_689;
wire    ap_CS_fsm_state124;
reg    ap_block_state124_on_subcall_done;
reg   [0:0] p_26_reg_693;
wire    ap_CS_fsm_state126;
reg    ap_predicate_op373_call_state126;
reg    ap_predicate_op375_call_state126;
reg    ap_block_state126_on_subcall_done;
wire   [7:0] grp_optimizeCube_fu_363_ap_return;
reg   [7:0] op2_V_assign_reg_712;
wire    ap_CS_fsm_state141;
wire    grp_optimizeCube_fu_363_ap_idle;
wire    grp_optimizeCube_fu_363_ap_ready;
wire    grp_optimizeCube_fu_363_ap_done;
wire   [7:0] i_V_1_fu_548_p2;
reg   [7:0] i_V_1_reg_720;
wire    ap_CS_fsm_state142;
wire   [63:0] tmp_61_fu_554_p1;
reg   [63:0] tmp_61_reg_725;
wire   [0:0] exitcond_fu_543_p2;
wire    grp_solveStage3_fu_242_ap_start;
wire    grp_solveStage3_fu_242_ap_done;
wire    grp_solveStage3_fu_242_ap_idle;
wire    grp_solveStage3_fu_242_ap_ready;
reg   [2:0] grp_solveStage3_fu_242_fC_V;
reg   [2:0] grp_solveStage3_fu_242_sC_V;
wire   [7:0] grp_solveStage3_fu_242_moveCounter_V_o;
wire    grp_solveStage3_fu_242_moveCounter_V_o_ap_vld;
wire   [7:0] grp_solveStage3_fu_242_moves_V_address0;
wire    grp_solveStage3_fu_242_moves_V_ce0;
wire    grp_solveStage3_fu_242_moves_V_we0;
wire   [3:0] grp_solveStage3_fu_242_moves_V_d0;
wire   [5:0] grp_solveStage3_fu_242_cubieColor_V_address0;
wire    grp_solveStage3_fu_242_cubieColor_V_ce0;
wire    grp_solveStage3_fu_242_cubieColor_V_we0;
wire   [2:0] grp_solveStage3_fu_242_cubieColor_V_d0;
wire   [5:0] grp_solveStage3_fu_242_cubieColor_V_address1;
wire    grp_solveStage3_fu_242_cubieColor_V_ce1;
wire    grp_solveStage3_fu_242_cubieColor_V_we1;
wire   [2:0] grp_solveStage3_fu_242_cubieColor_V_d1;
wire    grp_solveStage2_fu_262_ap_start;
wire    grp_solveStage2_fu_262_ap_done;
wire    grp_solveStage2_fu_262_ap_idle;
wire    grp_solveStage2_fu_262_ap_ready;
reg   [2:0] grp_solveStage2_fu_262_sC_V;
reg   [2:0] grp_solveStage2_fu_262_tC_V;
wire   [5:0] grp_solveStage2_fu_262_cubieColor_V_address0;
wire    grp_solveStage2_fu_262_cubieColor_V_ce0;
wire    grp_solveStage2_fu_262_cubieColor_V_we0;
wire   [2:0] grp_solveStage2_fu_262_cubieColor_V_d0;
wire   [5:0] grp_solveStage2_fu_262_cubieColor_V_address1;
wire    grp_solveStage2_fu_262_cubieColor_V_ce1;
wire    grp_solveStage2_fu_262_cubieColor_V_we1;
wire   [2:0] grp_solveStage2_fu_262_cubieColor_V_d1;
wire   [7:0] grp_solveStage2_fu_262_moveCounter_V_o;
wire    grp_solveStage2_fu_262_moveCounter_V_o_ap_vld;
wire   [7:0] grp_solveStage2_fu_262_moves_V_address0;
wire    grp_solveStage2_fu_262_moves_V_ce0;
wire    grp_solveStage2_fu_262_moves_V_we0;
wire   [3:0] grp_solveStage2_fu_262_moves_V_d0;
wire    grp_solveStage5b_fu_280_ap_start;
wire    grp_solveStage5b_fu_280_ap_done;
wire    grp_solveStage5b_fu_280_ap_idle;
wire    grp_solveStage5b_fu_280_ap_ready;
wire   [5:0] grp_solveStage5b_fu_280_cubieColor_V_address0;
wire    grp_solveStage5b_fu_280_cubieColor_V_ce0;
wire    grp_solveStage5b_fu_280_cubieColor_V_we0;
wire   [2:0] grp_solveStage5b_fu_280_cubieColor_V_d0;
wire   [5:0] grp_solveStage5b_fu_280_cubieColor_V_address1;
wire    grp_solveStage5b_fu_280_cubieColor_V_ce1;
wire    grp_solveStage5b_fu_280_cubieColor_V_we1;
wire   [2:0] grp_solveStage5b_fu_280_cubieColor_V_d1;
wire   [7:0] grp_solveStage5b_fu_280_moveCounter_V_o;
wire    grp_solveStage5b_fu_280_moveCounter_V_o_ap_vld;
wire   [7:0] grp_solveStage5b_fu_280_moves_V_address0;
wire    grp_solveStage5b_fu_280_moves_V_ce0;
wire    grp_solveStage5b_fu_280_moves_V_we0;
wire   [3:0] grp_solveStage5b_fu_280_moves_V_d0;
wire    grp_solveStage5a_fu_290_ap_start;
wire    grp_solveStage5a_fu_290_ap_done;
wire    grp_solveStage5a_fu_290_ap_idle;
wire    grp_solveStage5a_fu_290_ap_ready;
wire   [5:0] grp_solveStage5a_fu_290_cubieColor_V_address0;
wire    grp_solveStage5a_fu_290_cubieColor_V_ce0;
wire    grp_solveStage5a_fu_290_cubieColor_V_we0;
wire   [2:0] grp_solveStage5a_fu_290_cubieColor_V_d0;
wire   [5:0] grp_solveStage5a_fu_290_cubieColor_V_address1;
wire    grp_solveStage5a_fu_290_cubieColor_V_ce1;
wire    grp_solveStage5a_fu_290_cubieColor_V_we1;
wire   [2:0] grp_solveStage5a_fu_290_cubieColor_V_d1;
wire   [7:0] grp_solveStage5a_fu_290_moveCounter_V_o;
wire    grp_solveStage5a_fu_290_moveCounter_V_o_ap_vld;
wire   [7:0] grp_solveStage5a_fu_290_moves_V_address0;
wire    grp_solveStage5a_fu_290_moves_V_ce0;
wire    grp_solveStage5a_fu_290_moves_V_we0;
wire   [3:0] grp_solveStage5a_fu_290_moves_V_d0;
wire    grp_solveStage4a_fu_300_ap_start;
wire    grp_solveStage4a_fu_300_ap_done;
wire    grp_solveStage4a_fu_300_ap_idle;
wire    grp_solveStage4a_fu_300_ap_ready;
wire   [7:0] grp_solveStage4a_fu_300_moveCounter_V_o;
wire    grp_solveStage4a_fu_300_moveCounter_V_o_ap_vld;
wire   [7:0] grp_solveStage4a_fu_300_moves_V_address0;
wire    grp_solveStage4a_fu_300_moves_V_ce0;
wire    grp_solveStage4a_fu_300_moves_V_we0;
wire   [3:0] grp_solveStage4a_fu_300_moves_V_d0;
wire   [5:0] grp_solveStage4a_fu_300_cubieColor_V_address0;
wire    grp_solveStage4a_fu_300_cubieColor_V_ce0;
wire    grp_solveStage4a_fu_300_cubieColor_V_we0;
wire   [2:0] grp_solveStage4a_fu_300_cubieColor_V_d0;
wire   [5:0] grp_solveStage4a_fu_300_cubieColor_V_address1;
wire    grp_solveStage4a_fu_300_cubieColor_V_ce1;
wire    grp_solveStage4a_fu_300_cubieColor_V_we1;
wire   [2:0] grp_solveStage4a_fu_300_cubieColor_V_d1;
wire    grp_solveStage4b_fu_310_ap_start;
wire    grp_solveStage4b_fu_310_ap_done;
wire    grp_solveStage4b_fu_310_ap_idle;
wire    grp_solveStage4b_fu_310_ap_ready;
wire   [7:0] grp_solveStage4b_fu_310_moveCounter_V_o;
wire    grp_solveStage4b_fu_310_moveCounter_V_o_ap_vld;
wire   [7:0] grp_solveStage4b_fu_310_moves_V_address0;
wire    grp_solveStage4b_fu_310_moves_V_ce0;
wire    grp_solveStage4b_fu_310_moves_V_we0;
wire   [3:0] grp_solveStage4b_fu_310_moves_V_d0;
wire   [5:0] grp_solveStage4b_fu_310_cubieColor_V_address0;
wire    grp_solveStage4b_fu_310_cubieColor_V_ce0;
wire    grp_solveStage4b_fu_310_cubieColor_V_we0;
wire   [2:0] grp_solveStage4b_fu_310_cubieColor_V_d0;
wire   [5:0] grp_solveStage4b_fu_310_cubieColor_V_address1;
wire    grp_solveStage4b_fu_310_cubieColor_V_ce1;
wire    grp_solveStage4b_fu_310_cubieColor_V_we1;
wire   [2:0] grp_solveStage4b_fu_310_cubieColor_V_d1;
wire    grp_turnCube_fu_320_ap_start;
wire    grp_turnCube_fu_320_ap_done;
wire    grp_turnCube_fu_320_ap_idle;
wire    grp_turnCube_fu_320_ap_ready;
wire   [7:0] grp_turnCube_fu_320_moveCounter_V_o;
wire    grp_turnCube_fu_320_moveCounter_V_o_ap_vld;
wire   [7:0] grp_turnCube_fu_320_moves_V_address0;
wire    grp_turnCube_fu_320_moves_V_ce0;
wire    grp_turnCube_fu_320_moves_V_we0;
wire   [3:0] grp_turnCube_fu_320_moves_V_d0;
wire   [5:0] grp_turnCube_fu_320_cubieColor_V_address0;
wire    grp_turnCube_fu_320_cubieColor_V_ce0;
wire    grp_turnCube_fu_320_cubieColor_V_we0;
wire   [2:0] grp_turnCube_fu_320_cubieColor_V_d0;
wire   [5:0] grp_turnCube_fu_320_cubieColor_V_address1;
wire    grp_turnCube_fu_320_cubieColor_V_ce1;
wire    grp_turnCube_fu_320_cubieColor_V_we1;
wire   [2:0] grp_turnCube_fu_320_cubieColor_V_d1;
wire    grp_solveStage1_fu_332_ap_start;
wire    grp_solveStage1_fu_332_ap_done;
wire    grp_solveStage1_fu_332_ap_idle;
wire    grp_solveStage1_fu_332_ap_ready;
wire   [7:0] grp_solveStage1_fu_332_moveCounter_V_o;
wire    grp_solveStage1_fu_332_moveCounter_V_o_ap_vld;
wire   [7:0] grp_solveStage1_fu_332_moves_V_address0;
wire    grp_solveStage1_fu_332_moves_V_ce0;
wire    grp_solveStage1_fu_332_moves_V_we0;
wire   [3:0] grp_solveStage1_fu_332_moves_V_d0;
wire   [5:0] grp_solveStage1_fu_332_cubieColor_V_address0;
wire    grp_solveStage1_fu_332_cubieColor_V_ce0;
wire    grp_solveStage1_fu_332_cubieColor_V_we0;
wire   [2:0] grp_solveStage1_fu_332_cubieColor_V_d0;
wire   [5:0] grp_solveStage1_fu_332_cubieColor_V_address1;
wire    grp_solveStage1_fu_332_cubieColor_V_ce1;
wire    grp_solveStage1_fu_332_cubieColor_V_we1;
wire   [2:0] grp_solveStage1_fu_332_cubieColor_V_d1;
wire    grp_rotateCubeHorizontal_fu_343_ap_start;
wire    grp_rotateCubeHorizontal_fu_343_ap_done;
wire    grp_rotateCubeHorizontal_fu_343_ap_idle;
wire    grp_rotateCubeHorizontal_fu_343_ap_ready;
wire   [7:0] grp_rotateCubeHorizontal_fu_343_moveCounter_V_o;
wire    grp_rotateCubeHorizontal_fu_343_moveCounter_V_o_ap_vld;
wire   [7:0] grp_rotateCubeHorizontal_fu_343_moves_V_address0;
wire    grp_rotateCubeHorizontal_fu_343_moves_V_ce0;
wire    grp_rotateCubeHorizontal_fu_343_moves_V_we0;
wire   [3:0] grp_rotateCubeHorizontal_fu_343_moves_V_d0;
wire   [5:0] grp_rotateCubeHorizontal_fu_343_cubieColor_V_address0;
wire    grp_rotateCubeHorizontal_fu_343_cubieColor_V_ce0;
wire    grp_rotateCubeHorizontal_fu_343_cubieColor_V_we0;
wire   [2:0] grp_rotateCubeHorizontal_fu_343_cubieColor_V_d0;
wire   [5:0] grp_rotateCubeHorizontal_fu_343_cubieColor_V_address1;
wire    grp_rotateCubeHorizontal_fu_343_cubieColor_V_ce1;
wire    grp_rotateCubeHorizontal_fu_343_cubieColor_V_we1;
wire   [2:0] grp_rotateCubeHorizontal_fu_343_cubieColor_V_d1;
wire    grp_rotateCubeVertical_fu_353_ap_start;
wire    grp_rotateCubeVertical_fu_353_ap_done;
wire    grp_rotateCubeVertical_fu_353_ap_idle;
wire    grp_rotateCubeVertical_fu_353_ap_ready;
wire   [7:0] grp_rotateCubeVertical_fu_353_moveCounter_V_o;
wire    grp_rotateCubeVertical_fu_353_moveCounter_V_o_ap_vld;
wire   [7:0] grp_rotateCubeVertical_fu_353_moves_V_address0;
wire    grp_rotateCubeVertical_fu_353_moves_V_ce0;
wire    grp_rotateCubeVertical_fu_353_moves_V_we0;
wire   [3:0] grp_rotateCubeVertical_fu_353_moves_V_d0;
wire   [5:0] grp_rotateCubeVertical_fu_353_cubieColor_V_address0;
wire    grp_rotateCubeVertical_fu_353_cubieColor_V_ce0;
wire    grp_rotateCubeVertical_fu_353_cubieColor_V_we0;
wire   [2:0] grp_rotateCubeVertical_fu_353_cubieColor_V_d0;
wire   [5:0] grp_rotateCubeVertical_fu_353_cubieColor_V_address1;
wire    grp_rotateCubeVertical_fu_353_cubieColor_V_ce1;
wire    grp_rotateCubeVertical_fu_353_cubieColor_V_we1;
wire   [2:0] grp_rotateCubeVertical_fu_353_cubieColor_V_d1;
wire    grp_optimizeCube_fu_363_ap_start;
wire   [7:0] grp_optimizeCube_fu_363_moves_V_address0;
wire    grp_optimizeCube_fu_363_moves_V_ce0;
wire    grp_optimizeCube_fu_363_moves_V_we0;
wire   [3:0] grp_optimizeCube_fu_363_moves_V_d0;
wire    grp_findEdge_fu_372_ap_start;
reg   [2:0] grp_findEdge_fu_372_sEC_V;
wire   [5:0] grp_findEdge_fu_372_cubieColor_V_address0;
wire    grp_findEdge_fu_372_cubieColor_V_ce0;
wire   [5:0] grp_findEdge_fu_372_cubieColor_V_address1;
wire    grp_findEdge_fu_372_cubieColor_V_ce1;
wire    grp_edgeCorrect_fu_385_ap_start;
wire    grp_edgeCorrect_fu_385_ap_done;
wire    grp_edgeCorrect_fu_385_ap_idle;
wire    grp_edgeCorrect_fu_385_ap_ready;
reg   [3:0] grp_edgeCorrect_fu_385_edge_V;
wire   [5:0] grp_edgeCorrect_fu_385_cubieColor_V_address0;
wire    grp_edgeCorrect_fu_385_cubieColor_V_ce0;
wire   [5:0] grp_edgeCorrect_fu_385_cubieColor_V_address1;
wire    grp_edgeCorrect_fu_385_cubieColor_V_ce1;
wire   [0:0] grp_edgeCorrect_fu_385_ap_return;
wire    grp_cornerCorrect_fu_400_ap_start;
reg   [2:0] grp_cornerCorrect_fu_400_corner_V;
wire   [5:0] grp_cornerCorrect_fu_400_cubieColor_V_address0;
wire    grp_cornerCorrect_fu_400_cubieColor_V_ce0;
wire   [5:0] grp_cornerCorrect_fu_400_cubieColor_V_address1;
wire    grp_cornerCorrect_fu_400_cubieColor_V_ce1;
reg   [2:0] p_s_reg_209;
reg   [3:0] p_2_reg_220;
wire    ap_CS_fsm_state4;
reg   [7:0] t_V_reg_231;
wire    ap_CS_fsm_state143;
reg    grp_solveStage3_fu_242_ap_start_reg;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state91;
wire    ap_CS_fsm_state95;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state92;
wire    ap_CS_fsm_state96;
reg    grp_solveStage2_fu_262_ap_start_reg;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state66;
reg    grp_solveStage5b_fu_280_ap_start_reg;
wire    ap_CS_fsm_state139;
wire    ap_CS_fsm_state140;
reg    grp_solveStage5a_fu_290_ap_start_reg;
wire    ap_CS_fsm_state130;
wire    ap_CS_fsm_state128;
reg    grp_solveStage4a_fu_300_ap_start_reg;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state104;
reg    grp_solveStage4b_fu_310_ap_start_reg;
wire    ap_CS_fsm_state109;
wire    ap_CS_fsm_state110;
reg    grp_turnCube_fu_320_ap_start_reg;
wire    ap_CS_fsm_state127;
reg    grp_solveStage1_fu_332_ap_start_reg;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state34;
reg    grp_rotateCubeHorizontal_fu_343_ap_start_reg;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state97;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state98;
reg    grp_rotateCubeVertical_fu_353_ap_start_reg;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state72;
reg    grp_optimizeCube_fu_363_ap_start_reg;
wire    ap_CS_fsm_state138;
reg    grp_findEdge_fu_372_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state31;
reg    grp_edgeCorrect_fu_385_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state131;
wire    ap_CS_fsm_state133;
wire    ap_CS_fsm_state135;
wire    ap_CS_fsm_state137;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state132;
wire    ap_CS_fsm_state134;
wire    ap_CS_fsm_state136;
reg    grp_cornerCorrect_fu_400_ap_start_reg;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state111;
wire    ap_CS_fsm_state113;
wire    ap_CS_fsm_state115;
wire    ap_CS_fsm_state117;
wire    ap_CS_fsm_state119;
wire    ap_CS_fsm_state121;
wire    ap_CS_fsm_state123;
wire    ap_CS_fsm_state125;
wire    ap_CS_fsm_state129;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state99;
wire    ap_CS_fsm_state105;
wire    ap_CS_fsm_state108;
wire   [5:0] tmp_6_fu_461_p3;
wire   [6:0] tmp_cast_fu_457_p1;
wire   [6:0] p_shl_cast_fu_469_p1;
wire   [6:0] tmp_54_cast_fu_497_p1;
wire   [6:0] tmp_8_fu_501_p2;
wire   [0:0] tmp3_fu_515_p2;
wire   [0:0] tmp2_fu_511_p2;
wire   [0:0] tmp5_fu_531_p2;
wire   [0:0] tmp4_fu_527_p2;
wire   [0:0] or_cond5_fu_537_p2;
reg   [142:0] ap_NS_fsm;
reg    ap_block_state104_on_subcall_done;
reg    ap_predicate_op381_call_state128;
reg    ap_predicate_op383_call_state128;
reg    ap_block_state128_on_subcall_done;

// power-on initialization
initial begin
#0 ap_CS_fsm = 143'd1;
#0 moveCounter_V = 8'd0;
#0 grp_solveStage3_fu_242_ap_start_reg = 1'b0;
#0 grp_solveStage2_fu_262_ap_start_reg = 1'b0;
#0 grp_solveStage5b_fu_280_ap_start_reg = 1'b0;
#0 grp_solveStage5a_fu_290_ap_start_reg = 1'b0;
#0 grp_solveStage4a_fu_300_ap_start_reg = 1'b0;
#0 grp_solveStage4b_fu_310_ap_start_reg = 1'b0;
#0 grp_turnCube_fu_320_ap_start_reg = 1'b0;
#0 grp_solveStage1_fu_332_ap_start_reg = 1'b0;
#0 grp_rotateCubeHorizontal_fu_343_ap_start_reg = 1'b0;
#0 grp_rotateCubeVertical_fu_353_ap_start_reg = 1'b0;
#0 grp_optimizeCube_fu_363_ap_start_reg = 1'b0;
#0 grp_findEdge_fu_372_ap_start_reg = 1'b0;
#0 grp_edgeCorrect_fu_385_ap_start_reg = 1'b0;
#0 grp_cornerCorrect_fu_400_ap_start_reg = 1'b0;
end

solveCube_cubieCoeOg #(
    .DataWidth( 3 ),
    .AddressRange( 54 ),
    .AddressWidth( 6 ))
cubieColor_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(cubieColor_V_address0),
    .ce0(cubieColor_V_ce0),
    .we0(cubieColor_V_we0),
    .d0(cubieColor_V_d0),
    .q0(cubieColor_V_q0),
    .address1(cubieColor_V_address1),
    .ce1(cubieColor_V_ce1),
    .we1(cubieColor_V_we1),
    .d1(cubieColor_V_d1),
    .q1(cubieColor_V_q1)
);

solveCube_moves_V #(
    .DataWidth( 4 ),
    .AddressRange( 200 ),
    .AddressWidth( 8 ))
moves_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(moves_V_address0),
    .ce0(moves_V_ce0),
    .we0(moves_V_we0),
    .d0(moves_V_d0),
    .q0(moves_V_q0)
);

solveCube_add_io_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_ADD_IO_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_ADD_IO_DATA_WIDTH ))
solveCube_add_io_s_axi_U(
    .AWVALID(s_axi_add_io_AWVALID),
    .AWREADY(s_axi_add_io_AWREADY),
    .AWADDR(s_axi_add_io_AWADDR),
    .WVALID(s_axi_add_io_WVALID),
    .WREADY(s_axi_add_io_WREADY),
    .WDATA(s_axi_add_io_WDATA),
    .WSTRB(s_axi_add_io_WSTRB),
    .ARVALID(s_axi_add_io_ARVALID),
    .ARREADY(s_axi_add_io_ARREADY),
    .ARADDR(s_axi_add_io_ARADDR),
    .RVALID(s_axi_add_io_RVALID),
    .RREADY(s_axi_add_io_RREADY),
    .RDATA(s_axi_add_io_RDATA),
    .RRESP(s_axi_add_io_RRESP),
    .BVALID(s_axi_add_io_BVALID),
    .BREADY(s_axi_add_io_BREADY),
    .BRESP(s_axi_add_io_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .cubieColor_tb_V_address0(cubieColor_tb_V_address0),
    .cubieColor_tb_V_ce0(cubieColor_tb_V_ce0),
    .cubieColor_tb_V_q0(cubieColor_tb_V_q0),
    .rMoves_V_address0(rMoves_V_address0),
    .rMoves_V_ce0(rMoves_V_ce0),
    .rMoves_V_we0(rMoves_V_we0),
    .rMoves_V_d0(moves_V_q0),
    .order_V(grp_optimizeCube_fu_363_ap_return),
    .order_V_ap_vld(order_V_ap_vld)
);

solveStage3 grp_solveStage3_fu_242(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_solveStage3_fu_242_ap_start),
    .ap_done(grp_solveStage3_fu_242_ap_done),
    .ap_idle(grp_solveStage3_fu_242_ap_idle),
    .ap_ready(grp_solveStage3_fu_242_ap_ready),
    .fC_V(grp_solveStage3_fu_242_fC_V),
    .sC_V(grp_solveStage3_fu_242_sC_V),
    .moveCounter_V_i(moveCounter_V),
    .moveCounter_V_o(grp_solveStage3_fu_242_moveCounter_V_o),
    .moveCounter_V_o_ap_vld(grp_solveStage3_fu_242_moveCounter_V_o_ap_vld),
    .moves_V_address0(grp_solveStage3_fu_242_moves_V_address0),
    .moves_V_ce0(grp_solveStage3_fu_242_moves_V_ce0),
    .moves_V_we0(grp_solveStage3_fu_242_moves_V_we0),
    .moves_V_d0(grp_solveStage3_fu_242_moves_V_d0),
    .cubieColor_V_address0(grp_solveStage3_fu_242_cubieColor_V_address0),
    .cubieColor_V_ce0(grp_solveStage3_fu_242_cubieColor_V_ce0),
    .cubieColor_V_we0(grp_solveStage3_fu_242_cubieColor_V_we0),
    .cubieColor_V_d0(grp_solveStage3_fu_242_cubieColor_V_d0),
    .cubieColor_V_q0(cubieColor_V_q0),
    .cubieColor_V_address1(grp_solveStage3_fu_242_cubieColor_V_address1),
    .cubieColor_V_ce1(grp_solveStage3_fu_242_cubieColor_V_ce1),
    .cubieColor_V_we1(grp_solveStage3_fu_242_cubieColor_V_we1),
    .cubieColor_V_d1(grp_solveStage3_fu_242_cubieColor_V_d1),
    .cubieColor_V_q1(cubieColor_V_q1)
);

solveStage2 grp_solveStage2_fu_262(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_solveStage2_fu_262_ap_start),
    .ap_done(grp_solveStage2_fu_262_ap_done),
    .ap_idle(grp_solveStage2_fu_262_ap_idle),
    .ap_ready(grp_solveStage2_fu_262_ap_ready),
    .sC_V(grp_solveStage2_fu_262_sC_V),
    .tC_V(grp_solveStage2_fu_262_tC_V),
    .cubieColor_V_address0(grp_solveStage2_fu_262_cubieColor_V_address0),
    .cubieColor_V_ce0(grp_solveStage2_fu_262_cubieColor_V_ce0),
    .cubieColor_V_we0(grp_solveStage2_fu_262_cubieColor_V_we0),
    .cubieColor_V_d0(grp_solveStage2_fu_262_cubieColor_V_d0),
    .cubieColor_V_q0(cubieColor_V_q0),
    .cubieColor_V_address1(grp_solveStage2_fu_262_cubieColor_V_address1),
    .cubieColor_V_ce1(grp_solveStage2_fu_262_cubieColor_V_ce1),
    .cubieColor_V_we1(grp_solveStage2_fu_262_cubieColor_V_we1),
    .cubieColor_V_d1(grp_solveStage2_fu_262_cubieColor_V_d1),
    .cubieColor_V_q1(cubieColor_V_q1),
    .moveCounter_V_i(moveCounter_V),
    .moveCounter_V_o(grp_solveStage2_fu_262_moveCounter_V_o),
    .moveCounter_V_o_ap_vld(grp_solveStage2_fu_262_moveCounter_V_o_ap_vld),
    .moves_V_address0(grp_solveStage2_fu_262_moves_V_address0),
    .moves_V_ce0(grp_solveStage2_fu_262_moves_V_ce0),
    .moves_V_we0(grp_solveStage2_fu_262_moves_V_we0),
    .moves_V_d0(grp_solveStage2_fu_262_moves_V_d0)
);

solveStage5b grp_solveStage5b_fu_280(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_solveStage5b_fu_280_ap_start),
    .ap_done(grp_solveStage5b_fu_280_ap_done),
    .ap_idle(grp_solveStage5b_fu_280_ap_idle),
    .ap_ready(grp_solveStage5b_fu_280_ap_ready),
    .cubieColor_V_address0(grp_solveStage5b_fu_280_cubieColor_V_address0),
    .cubieColor_V_ce0(grp_solveStage5b_fu_280_cubieColor_V_ce0),
    .cubieColor_V_we0(grp_solveStage5b_fu_280_cubieColor_V_we0),
    .cubieColor_V_d0(grp_solveStage5b_fu_280_cubieColor_V_d0),
    .cubieColor_V_q0(cubieColor_V_q0),
    .cubieColor_V_address1(grp_solveStage5b_fu_280_cubieColor_V_address1),
    .cubieColor_V_ce1(grp_solveStage5b_fu_280_cubieColor_V_ce1),
    .cubieColor_V_we1(grp_solveStage5b_fu_280_cubieColor_V_we1),
    .cubieColor_V_d1(grp_solveStage5b_fu_280_cubieColor_V_d1),
    .cubieColor_V_q1(cubieColor_V_q1),
    .moveCounter_V_i(moveCounter_V),
    .moveCounter_V_o(grp_solveStage5b_fu_280_moveCounter_V_o),
    .moveCounter_V_o_ap_vld(grp_solveStage5b_fu_280_moveCounter_V_o_ap_vld),
    .moves_V_address0(grp_solveStage5b_fu_280_moves_V_address0),
    .moves_V_ce0(grp_solveStage5b_fu_280_moves_V_ce0),
    .moves_V_we0(grp_solveStage5b_fu_280_moves_V_we0),
    .moves_V_d0(grp_solveStage5b_fu_280_moves_V_d0)
);

solveStage5a grp_solveStage5a_fu_290(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_solveStage5a_fu_290_ap_start),
    .ap_done(grp_solveStage5a_fu_290_ap_done),
    .ap_idle(grp_solveStage5a_fu_290_ap_idle),
    .ap_ready(grp_solveStage5a_fu_290_ap_ready),
    .cubieColor_V_address0(grp_solveStage5a_fu_290_cubieColor_V_address0),
    .cubieColor_V_ce0(grp_solveStage5a_fu_290_cubieColor_V_ce0),
    .cubieColor_V_we0(grp_solveStage5a_fu_290_cubieColor_V_we0),
    .cubieColor_V_d0(grp_solveStage5a_fu_290_cubieColor_V_d0),
    .cubieColor_V_q0(cubieColor_V_q0),
    .cubieColor_V_address1(grp_solveStage5a_fu_290_cubieColor_V_address1),
    .cubieColor_V_ce1(grp_solveStage5a_fu_290_cubieColor_V_ce1),
    .cubieColor_V_we1(grp_solveStage5a_fu_290_cubieColor_V_we1),
    .cubieColor_V_d1(grp_solveStage5a_fu_290_cubieColor_V_d1),
    .cubieColor_V_q1(cubieColor_V_q1),
    .moveCounter_V_i(moveCounter_V),
    .moveCounter_V_o(grp_solveStage5a_fu_290_moveCounter_V_o),
    .moveCounter_V_o_ap_vld(grp_solveStage5a_fu_290_moveCounter_V_o_ap_vld),
    .moves_V_address0(grp_solveStage5a_fu_290_moves_V_address0),
    .moves_V_ce0(grp_solveStage5a_fu_290_moves_V_ce0),
    .moves_V_we0(grp_solveStage5a_fu_290_moves_V_we0),
    .moves_V_d0(grp_solveStage5a_fu_290_moves_V_d0)
);

solveStage4a grp_solveStage4a_fu_300(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_solveStage4a_fu_300_ap_start),
    .ap_done(grp_solveStage4a_fu_300_ap_done),
    .ap_idle(grp_solveStage4a_fu_300_ap_idle),
    .ap_ready(grp_solveStage4a_fu_300_ap_ready),
    .moveCounter_V_i(moveCounter_V),
    .moveCounter_V_o(grp_solveStage4a_fu_300_moveCounter_V_o),
    .moveCounter_V_o_ap_vld(grp_solveStage4a_fu_300_moveCounter_V_o_ap_vld),
    .moves_V_address0(grp_solveStage4a_fu_300_moves_V_address0),
    .moves_V_ce0(grp_solveStage4a_fu_300_moves_V_ce0),
    .moves_V_we0(grp_solveStage4a_fu_300_moves_V_we0),
    .moves_V_d0(grp_solveStage4a_fu_300_moves_V_d0),
    .cubieColor_V_address0(grp_solveStage4a_fu_300_cubieColor_V_address0),
    .cubieColor_V_ce0(grp_solveStage4a_fu_300_cubieColor_V_ce0),
    .cubieColor_V_we0(grp_solveStage4a_fu_300_cubieColor_V_we0),
    .cubieColor_V_d0(grp_solveStage4a_fu_300_cubieColor_V_d0),
    .cubieColor_V_q0(cubieColor_V_q0),
    .cubieColor_V_address1(grp_solveStage4a_fu_300_cubieColor_V_address1),
    .cubieColor_V_ce1(grp_solveStage4a_fu_300_cubieColor_V_ce1),
    .cubieColor_V_we1(grp_solveStage4a_fu_300_cubieColor_V_we1),
    .cubieColor_V_d1(grp_solveStage4a_fu_300_cubieColor_V_d1),
    .cubieColor_V_q1(cubieColor_V_q1)
);

solveStage4b grp_solveStage4b_fu_310(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_solveStage4b_fu_310_ap_start),
    .ap_done(grp_solveStage4b_fu_310_ap_done),
    .ap_idle(grp_solveStage4b_fu_310_ap_idle),
    .ap_ready(grp_solveStage4b_fu_310_ap_ready),
    .moveCounter_V_i(moveCounter_V),
    .moveCounter_V_o(grp_solveStage4b_fu_310_moveCounter_V_o),
    .moveCounter_V_o_ap_vld(grp_solveStage4b_fu_310_moveCounter_V_o_ap_vld),
    .moves_V_address0(grp_solveStage4b_fu_310_moves_V_address0),
    .moves_V_ce0(grp_solveStage4b_fu_310_moves_V_ce0),
    .moves_V_we0(grp_solveStage4b_fu_310_moves_V_we0),
    .moves_V_d0(grp_solveStage4b_fu_310_moves_V_d0),
    .cubieColor_V_address0(grp_solveStage4b_fu_310_cubieColor_V_address0),
    .cubieColor_V_ce0(grp_solveStage4b_fu_310_cubieColor_V_ce0),
    .cubieColor_V_we0(grp_solveStage4b_fu_310_cubieColor_V_we0),
    .cubieColor_V_d0(grp_solveStage4b_fu_310_cubieColor_V_d0),
    .cubieColor_V_q0(cubieColor_V_q0),
    .cubieColor_V_address1(grp_solveStage4b_fu_310_cubieColor_V_address1),
    .cubieColor_V_ce1(grp_solveStage4b_fu_310_cubieColor_V_ce1),
    .cubieColor_V_we1(grp_solveStage4b_fu_310_cubieColor_V_we1),
    .cubieColor_V_d1(grp_solveStage4b_fu_310_cubieColor_V_d1),
    .cubieColor_V_q1(cubieColor_V_q1)
);

turnCube grp_turnCube_fu_320(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_turnCube_fu_320_ap_start),
    .ap_done(grp_turnCube_fu_320_ap_done),
    .ap_idle(grp_turnCube_fu_320_ap_idle),
    .ap_ready(grp_turnCube_fu_320_ap_ready),
    .turn_V(4'd0),
    .moveCounter_V_i(moveCounter_V),
    .moveCounter_V_o(grp_turnCube_fu_320_moveCounter_V_o),
    .moveCounter_V_o_ap_vld(grp_turnCube_fu_320_moveCounter_V_o_ap_vld),
    .moves_V_address0(grp_turnCube_fu_320_moves_V_address0),
    .moves_V_ce0(grp_turnCube_fu_320_moves_V_ce0),
    .moves_V_we0(grp_turnCube_fu_320_moves_V_we0),
    .moves_V_d0(grp_turnCube_fu_320_moves_V_d0),
    .cubieColor_V_address0(grp_turnCube_fu_320_cubieColor_V_address0),
    .cubieColor_V_ce0(grp_turnCube_fu_320_cubieColor_V_ce0),
    .cubieColor_V_we0(grp_turnCube_fu_320_cubieColor_V_we0),
    .cubieColor_V_d0(grp_turnCube_fu_320_cubieColor_V_d0),
    .cubieColor_V_q0(cubieColor_V_q0),
    .cubieColor_V_address1(grp_turnCube_fu_320_cubieColor_V_address1),
    .cubieColor_V_ce1(grp_turnCube_fu_320_cubieColor_V_ce1),
    .cubieColor_V_we1(grp_turnCube_fu_320_cubieColor_V_we1),
    .cubieColor_V_d1(grp_turnCube_fu_320_cubieColor_V_d1)
);

solveStage1 grp_solveStage1_fu_332(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_solveStage1_fu_332_ap_start),
    .ap_done(grp_solveStage1_fu_332_ap_done),
    .ap_idle(grp_solveStage1_fu_332_ap_idle),
    .ap_ready(grp_solveStage1_fu_332_ap_ready),
    .edgeNumber_V(reg_431),
    .moveCounter_V_i(moveCounter_V),
    .moveCounter_V_o(grp_solveStage1_fu_332_moveCounter_V_o),
    .moveCounter_V_o_ap_vld(grp_solveStage1_fu_332_moveCounter_V_o_ap_vld),
    .moves_V_address0(grp_solveStage1_fu_332_moves_V_address0),
    .moves_V_ce0(grp_solveStage1_fu_332_moves_V_ce0),
    .moves_V_we0(grp_solveStage1_fu_332_moves_V_we0),
    .moves_V_d0(grp_solveStage1_fu_332_moves_V_d0),
    .cubieColor_V_address0(grp_solveStage1_fu_332_cubieColor_V_address0),
    .cubieColor_V_ce0(grp_solveStage1_fu_332_cubieColor_V_ce0),
    .cubieColor_V_we0(grp_solveStage1_fu_332_cubieColor_V_we0),
    .cubieColor_V_d0(grp_solveStage1_fu_332_cubieColor_V_d0),
    .cubieColor_V_q0(cubieColor_V_q0),
    .cubieColor_V_address1(grp_solveStage1_fu_332_cubieColor_V_address1),
    .cubieColor_V_ce1(grp_solveStage1_fu_332_cubieColor_V_ce1),
    .cubieColor_V_we1(grp_solveStage1_fu_332_cubieColor_V_we1),
    .cubieColor_V_d1(grp_solveStage1_fu_332_cubieColor_V_d1)
);

rotateCubeHorizontal grp_rotateCubeHorizontal_fu_343(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_rotateCubeHorizontal_fu_343_ap_start),
    .ap_done(grp_rotateCubeHorizontal_fu_343_ap_done),
    .ap_idle(grp_rotateCubeHorizontal_fu_343_ap_idle),
    .ap_ready(grp_rotateCubeHorizontal_fu_343_ap_ready),
    .moveCounter_V_i(moveCounter_V),
    .moveCounter_V_o(grp_rotateCubeHorizontal_fu_343_moveCounter_V_o),
    .moveCounter_V_o_ap_vld(grp_rotateCubeHorizontal_fu_343_moveCounter_V_o_ap_vld),
    .moves_V_address0(grp_rotateCubeHorizontal_fu_343_moves_V_address0),
    .moves_V_ce0(grp_rotateCubeHorizontal_fu_343_moves_V_ce0),
    .moves_V_we0(grp_rotateCubeHorizontal_fu_343_moves_V_we0),
    .moves_V_d0(grp_rotateCubeHorizontal_fu_343_moves_V_d0),
    .cubieColor_V_address0(grp_rotateCubeHorizontal_fu_343_cubieColor_V_address0),
    .cubieColor_V_ce0(grp_rotateCubeHorizontal_fu_343_cubieColor_V_ce0),
    .cubieColor_V_we0(grp_rotateCubeHorizontal_fu_343_cubieColor_V_we0),
    .cubieColor_V_d0(grp_rotateCubeHorizontal_fu_343_cubieColor_V_d0),
    .cubieColor_V_q0(cubieColor_V_q0),
    .cubieColor_V_address1(grp_rotateCubeHorizontal_fu_343_cubieColor_V_address1),
    .cubieColor_V_ce1(grp_rotateCubeHorizontal_fu_343_cubieColor_V_ce1),
    .cubieColor_V_we1(grp_rotateCubeHorizontal_fu_343_cubieColor_V_we1),
    .cubieColor_V_d1(grp_rotateCubeHorizontal_fu_343_cubieColor_V_d1)
);

rotateCubeVertical grp_rotateCubeVertical_fu_353(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_rotateCubeVertical_fu_353_ap_start),
    .ap_done(grp_rotateCubeVertical_fu_353_ap_done),
    .ap_idle(grp_rotateCubeVertical_fu_353_ap_idle),
    .ap_ready(grp_rotateCubeVertical_fu_353_ap_ready),
    .moveCounter_V_i(moveCounter_V),
    .moveCounter_V_o(grp_rotateCubeVertical_fu_353_moveCounter_V_o),
    .moveCounter_V_o_ap_vld(grp_rotateCubeVertical_fu_353_moveCounter_V_o_ap_vld),
    .moves_V_address0(grp_rotateCubeVertical_fu_353_moves_V_address0),
    .moves_V_ce0(grp_rotateCubeVertical_fu_353_moves_V_ce0),
    .moves_V_we0(grp_rotateCubeVertical_fu_353_moves_V_we0),
    .moves_V_d0(grp_rotateCubeVertical_fu_353_moves_V_d0),
    .cubieColor_V_address0(grp_rotateCubeVertical_fu_353_cubieColor_V_address0),
    .cubieColor_V_ce0(grp_rotateCubeVertical_fu_353_cubieColor_V_ce0),
    .cubieColor_V_we0(grp_rotateCubeVertical_fu_353_cubieColor_V_we0),
    .cubieColor_V_d0(grp_rotateCubeVertical_fu_353_cubieColor_V_d0),
    .cubieColor_V_q0(cubieColor_V_q0),
    .cubieColor_V_address1(grp_rotateCubeVertical_fu_353_cubieColor_V_address1),
    .cubieColor_V_ce1(grp_rotateCubeVertical_fu_353_cubieColor_V_ce1),
    .cubieColor_V_we1(grp_rotateCubeVertical_fu_353_cubieColor_V_we1),
    .cubieColor_V_d1(grp_rotateCubeVertical_fu_353_cubieColor_V_d1)
);

optimizeCube grp_optimizeCube_fu_363(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_optimizeCube_fu_363_ap_start),
    .ap_done(grp_optimizeCube_fu_363_ap_done),
    .ap_idle(grp_optimizeCube_fu_363_ap_idle),
    .ap_ready(grp_optimizeCube_fu_363_ap_ready),
    .moveCounter_V(moveCounter_V),
    .moves_V_address0(grp_optimizeCube_fu_363_moves_V_address0),
    .moves_V_ce0(grp_optimizeCube_fu_363_moves_V_ce0),
    .moves_V_we0(grp_optimizeCube_fu_363_moves_V_we0),
    .moves_V_d0(grp_optimizeCube_fu_363_moves_V_d0),
    .moves_V_q0(moves_V_q0),
    .ap_return(grp_optimizeCube_fu_363_ap_return)
);

findEdge grp_findEdge_fu_372(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_findEdge_fu_372_ap_start),
    .ap_done(grp_findEdge_fu_372_ap_done),
    .ap_idle(grp_findEdge_fu_372_ap_idle),
    .ap_ready(grp_findEdge_fu_372_ap_ready),
    .fEC_V(3'd0),
    .sEC_V(grp_findEdge_fu_372_sEC_V),
    .cubieColor_V_address0(grp_findEdge_fu_372_cubieColor_V_address0),
    .cubieColor_V_ce0(grp_findEdge_fu_372_cubieColor_V_ce0),
    .cubieColor_V_q0(cubieColor_V_q0),
    .cubieColor_V_address1(grp_findEdge_fu_372_cubieColor_V_address1),
    .cubieColor_V_ce1(grp_findEdge_fu_372_cubieColor_V_ce1),
    .cubieColor_V_q1(cubieColor_V_q1),
    .ap_return(grp_findEdge_fu_372_ap_return)
);

edgeCorrect grp_edgeCorrect_fu_385(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_edgeCorrect_fu_385_ap_start),
    .ap_done(grp_edgeCorrect_fu_385_ap_done),
    .ap_idle(grp_edgeCorrect_fu_385_ap_idle),
    .ap_ready(grp_edgeCorrect_fu_385_ap_ready),
    .edge_V(grp_edgeCorrect_fu_385_edge_V),
    .cubieColor_V_address0(grp_edgeCorrect_fu_385_cubieColor_V_address0),
    .cubieColor_V_ce0(grp_edgeCorrect_fu_385_cubieColor_V_ce0),
    .cubieColor_V_q0(cubieColor_V_q0),
    .cubieColor_V_address1(grp_edgeCorrect_fu_385_cubieColor_V_address1),
    .cubieColor_V_ce1(grp_edgeCorrect_fu_385_cubieColor_V_ce1),
    .cubieColor_V_q1(cubieColor_V_q1),
    .ap_return(grp_edgeCorrect_fu_385_ap_return)
);

cornerCorrect grp_cornerCorrect_fu_400(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_cornerCorrect_fu_400_ap_start),
    .ap_done(grp_cornerCorrect_fu_400_ap_done),
    .ap_idle(grp_cornerCorrect_fu_400_ap_idle),
    .ap_ready(grp_cornerCorrect_fu_400_ap_ready),
    .corner_V(grp_cornerCorrect_fu_400_corner_V),
    .cubieColor_V_address0(grp_cornerCorrect_fu_400_cubieColor_V_address0),
    .cubieColor_V_ce0(grp_cornerCorrect_fu_400_cubieColor_V_ce0),
    .cubieColor_V_q0(cubieColor_V_q0),
    .cubieColor_V_address1(grp_cornerCorrect_fu_400_cubieColor_V_address1),
    .cubieColor_V_ce1(grp_cornerCorrect_fu_400_cubieColor_V_ce1),
    .cubieColor_V_q1(cubieColor_V_q1),
    .ap_return(grp_cornerCorrect_fu_400_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_cornerCorrect_fu_400_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state129) | (1'b1 == ap_CS_fsm_state125) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state121) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37))) begin
            grp_cornerCorrect_fu_400_ap_start_reg <= 1'b1;
        end else if ((grp_cornerCorrect_fu_400_ap_ready == 1'b1)) begin
            grp_cornerCorrect_fu_400_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_edgeCorrect_fu_385_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state137) | (1'b1 == ap_CS_fsm_state135) | (1'b1 == ap_CS_fsm_state133) | (1'b1 == ap_CS_fsm_state131) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
            grp_edgeCorrect_fu_385_ap_start_reg <= 1'b1;
        end else if ((grp_edgeCorrect_fu_385_ap_ready == 1'b1)) begin
            grp_edgeCorrect_fu_385_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_findEdge_fu_372_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state13))) begin
            grp_findEdge_fu_372_ap_start_reg <= 1'b1;
        end else if ((grp_findEdge_fu_372_ap_ready == 1'b1)) begin
            grp_findEdge_fu_372_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_optimizeCube_fu_363_ap_start_reg <= 1'b0;
    end else begin
        if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state138))) begin
            grp_optimizeCube_fu_363_ap_start_reg <= 1'b1;
        end else if ((grp_optimizeCube_fu_363_ap_ready == 1'b1)) begin
            grp_optimizeCube_fu_363_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_rotateCubeHorizontal_fu_343_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state17))) begin
            grp_rotateCubeHorizontal_fu_343_ap_start_reg <= 1'b1;
        end else if ((grp_rotateCubeHorizontal_fu_343_ap_ready == 1'b1)) begin
            grp_rotateCubeHorizontal_fu_343_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_rotateCubeVertical_fu_353_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state69))) begin
            grp_rotateCubeVertical_fu_353_ap_start_reg <= 1'b1;
        end else if ((grp_rotateCubeVertical_fu_353_ap_ready == 1'b1)) begin
            grp_rotateCubeVertical_fu_353_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_solveStage1_fu_332_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state27))) begin
            grp_solveStage1_fu_332_ap_start_reg <= 1'b1;
        end else if ((grp_solveStage1_fu_332_ap_ready == 1'b1)) begin
            grp_solveStage1_fu_332_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_solveStage2_fu_262_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state47))) begin
            grp_solveStage2_fu_262_ap_start_reg <= 1'b1;
        end else if ((grp_solveStage2_fu_262_ap_ready == 1'b1)) begin
            grp_solveStage2_fu_262_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_solveStage3_fu_242_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state83))) begin
            grp_solveStage3_fu_242_ap_start_reg <= 1'b1;
        end else if ((grp_solveStage3_fu_242_ap_ready == 1'b1)) begin
            grp_solveStage3_fu_242_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_solveStage4a_fu_300_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state103)) begin
            grp_solveStage4a_fu_300_ap_start_reg <= 1'b1;
        end else if ((grp_solveStage4a_fu_300_ap_ready == 1'b1)) begin
            grp_solveStage4a_fu_300_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_solveStage4b_fu_310_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state109)) begin
            grp_solveStage4b_fu_310_ap_start_reg <= 1'b1;
        end else if ((grp_solveStage4b_fu_310_ap_ready == 1'b1)) begin
            grp_solveStage4b_fu_310_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_solveStage5a_fu_290_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state130)) begin
            grp_solveStage5a_fu_290_ap_start_reg <= 1'b1;
        end else if ((grp_solveStage5a_fu_290_ap_ready == 1'b1)) begin
            grp_solveStage5a_fu_290_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_solveStage5b_fu_280_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state139)) begin
            grp_solveStage5b_fu_280_ap_start_reg <= 1'b1;
        end else if ((grp_solveStage5b_fu_280_ap_ready == 1'b1)) begin
            grp_solveStage5b_fu_280_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_turnCube_fu_320_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state127)) begin
            grp_turnCube_fu_320_ap_start_reg <= 1'b1;
        end else if ((grp_turnCube_fu_320_ap_ready == 1'b1)) begin
            grp_turnCube_fu_320_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_445_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        moveCounter_V <= 8'd0;
    end else if ((((grp_rotateCubeVertical_fu_353_moveCounter_V_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state72)) | ((grp_rotateCubeVertical_fu_353_moveCounter_V_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state70)))) begin
        moveCounter_V <= grp_rotateCubeVertical_fu_353_moveCounter_V_o;
    end else if ((((grp_rotateCubeHorizontal_fu_343_moveCounter_V_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state98)) | ((grp_rotateCubeHorizontal_fu_343_moveCounter_V_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state94)) | ((grp_rotateCubeHorizontal_fu_343_moveCounter_V_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state90)) | ((grp_rotateCubeHorizontal_fu_343_moveCounter_V_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state86)) | ((grp_rotateCubeHorizontal_fu_343_moveCounter_V_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state74)) | ((grp_rotateCubeHorizontal_fu_343_moveCounter_V_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state68)) | ((grp_rotateCubeHorizontal_fu_343_moveCounter_V_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state62)) | ((grp_rotateCubeHorizontal_fu_343_moveCounter_V_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state56)) | ((grp_rotateCubeHorizontal_fu_343_moveCounter_V_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state50)) | ((grp_rotateCubeHorizontal_fu_343_moveCounter_V_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state36)) | ((grp_rotateCubeHorizontal_fu_343_moveCounter_V_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state30)) | ((grp_rotateCubeHorizontal_fu_343_moveCounter_V_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state24)) | ((grp_rotateCubeHorizontal_fu_343_moveCounter_V_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state18)))) begin
        moveCounter_V <= grp_rotateCubeHorizontal_fu_343_moveCounter_V_o;
    end else if ((((grp_solveStage1_fu_332_moveCounter_V_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state34)) | ((grp_solveStage1_fu_332_moveCounter_V_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state28)) | ((grp_solveStage1_fu_332_moveCounter_V_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state22)) | ((grp_solveStage1_fu_332_moveCounter_V_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state16)))) begin
        moveCounter_V <= grp_solveStage1_fu_332_moveCounter_V_o;
    end else if (((1'b1 == ap_CS_fsm_state128) & (grp_turnCube_fu_320_moveCounter_V_o_ap_vld == 1'b1) & (((p_29_reg_681 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_23_reg_669 == 1'd1) & (p_27_reg_689 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_22_reg_665 == 1'd1) & (p_26_reg_693 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0))))) begin
        moveCounter_V <= grp_turnCube_fu_320_moveCounter_V_o;
    end else if (((1'b1 == ap_CS_fsm_state110) & (grp_solveStage4b_fu_310_moveCounter_V_o_ap_vld == 1'b1))) begin
        moveCounter_V <= grp_solveStage4b_fu_310_moveCounter_V_o;
    end else if (((or_cond_reg_648 == 1'd0) & (1'b1 == ap_CS_fsm_state104) & (grp_solveStage4a_fu_300_moveCounter_V_o_ap_vld == 1'b1))) begin
        moveCounter_V <= grp_solveStage4a_fu_300_moveCounter_V_o;
    end else if (((1'b1 == ap_CS_fsm_state128) & (grp_solveStage5a_fu_290_moveCounter_V_o_ap_vld == 1'b1) & (((p_26_reg_693 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_24_reg_673 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0)) | ((p_24_reg_673 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_27_reg_689 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_23_reg_669 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_28_reg_677 == 1'd1) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0))))) begin
        moveCounter_V <= grp_solveStage5a_fu_290_moveCounter_V_o;
    end else if (((1'b1 == ap_CS_fsm_state140) & (grp_solveStage5b_fu_280_moveCounter_V_o_ap_vld == 1'b1))) begin
        moveCounter_V <= grp_solveStage5b_fu_280_moveCounter_V_o;
    end else if ((((1'b1 == ap_CS_fsm_state66) & (grp_solveStage2_fu_262_moveCounter_V_o_ap_vld == 1'b1)) | ((1'b1 == ap_CS_fsm_state60) & (grp_solveStage2_fu_262_moveCounter_V_o_ap_vld == 1'b1)) | ((1'b1 == ap_CS_fsm_state54) & (grp_solveStage2_fu_262_moveCounter_V_o_ap_vld == 1'b1)) | ((1'b1 == ap_CS_fsm_state48) & (grp_solveStage2_fu_262_moveCounter_V_o_ap_vld == 1'b1)))) begin
        moveCounter_V <= grp_solveStage2_fu_262_moveCounter_V_o;
    end else if ((((1'b1 == ap_CS_fsm_state96) & (grp_solveStage3_fu_242_moveCounter_V_o_ap_vld == 1'b1)) | ((1'b1 == ap_CS_fsm_state92) & (grp_solveStage3_fu_242_moveCounter_V_o_ap_vld == 1'b1)) | ((1'b1 == ap_CS_fsm_state88) & (grp_solveStage3_fu_242_moveCounter_V_o_ap_vld == 1'b1)) | ((1'b1 == ap_CS_fsm_state84) & (grp_solveStage3_fu_242_moveCounter_V_o_ap_vld == 1'b1)))) begin
        moveCounter_V <= grp_solveStage3_fu_242_moveCounter_V_o;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_445_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_2_reg_220 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_2_reg_220 <= j_V_reg_575;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_485_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        p_s_reg_209 <= i_V_reg_562;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_s_reg_209 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        reg_436 <= cubieColor_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        reg_436 <= cubieColor_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state143)) begin
        t_V_reg_231 <= i_V_1_reg_720;
    end else if (((grp_optimizeCube_fu_363_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state141))) begin
        t_V_reg_231 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state142)) begin
        i_V_1_reg_720 <= i_V_1_fu_548_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_562 <= i_V_fu_451_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_V_reg_575 <= j_V_fu_491_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_optimizeCube_fu_363_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state141))) begin
        op2_V_assign_reg_712 <= grp_optimizeCube_fu_363_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state102)) begin
        or_cond_reg_648 <= or_cond_fu_521_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state112))) begin
        p_22_reg_665 <= grp_cornerCorrect_fu_400_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state114))) begin
        p_23_reg_669 <= grp_cornerCorrect_fu_400_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state116))) begin
        p_24_reg_673 <= grp_cornerCorrect_fu_400_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state126_on_subcall_done) & (1'b1 == ap_CS_fsm_state126) & (ap_predicate_op373_call_state126 == 1'b1))) begin
        p_26_reg_693 <= grp_cornerCorrect_fu_400_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state124_on_subcall_done) & (p_24_reg_673 == 1'd0) & (1'b1 == ap_CS_fsm_state124))) begin
        p_27_reg_689 <= grp_cornerCorrect_fu_400_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state118))) begin
        p_28_reg_677 <= grp_cornerCorrect_fu_400_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state120))) begin
        p_29_reg_681 <= grp_cornerCorrect_fu_400_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state122))) begin
        p_30_reg_685 <= grp_cornerCorrect_fu_400_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_findEdge_fu_372_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32)) | ((grp_findEdge_fu_372_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26)) | ((grp_findEdge_fu_372_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20)) | ((grp_findEdge_fu_372_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14)))) begin
        reg_431 <= grp_findEdge_fu_372_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        tmp_53_reg_638 <= grp_fu_411_p2;
        tmp_54_reg_643 <= grp_fu_416_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        tmp_57_reg_652 <= grp_fu_421_p2;
        tmp_58_reg_657 <= grp_fu_426_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_543_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state142))) begin
        tmp_61_reg_725[7 : 0] <= tmp_61_fu_554_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_445_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_7_reg_567 <= tmp_7_fu_473_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_485_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_8_cast_reg_580[6 : 0] <= tmp_8_cast_fu_506_p1[6 : 0];
    end
end

always @ (*) begin
    if (((exitcond_fu_543_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state142))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_fu_543_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state142))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        cubieColor_V_address0 = 6'd8;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        cubieColor_V_address0 = 6'd2;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        cubieColor_V_address0 = 6'd7;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        cubieColor_V_address0 = 6'd1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        cubieColor_V_address0 = 6'd4;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        cubieColor_V_address0 = tmp_8_cast_reg_580;
    end else if (((1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state126) & (ap_predicate_op375_call_state126 == 1'b1)) | ((1'b1 == ap_CS_fsm_state126) & (ap_predicate_op373_call_state126 == 1'b1)) | ((p_24_reg_673 == 1'd0) & (1'b1 == ap_CS_fsm_state124)))) begin
        cubieColor_V_address0 = grp_cornerCorrect_fu_400_cubieColor_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state138))) begin
        cubieColor_V_address0 = grp_edgeCorrect_fu_385_cubieColor_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state14))) begin
        cubieColor_V_address0 = grp_findEdge_fu_372_cubieColor_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state70))) begin
        cubieColor_V_address0 = grp_rotateCubeVertical_fu_353_cubieColor_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18))) begin
        cubieColor_V_address0 = grp_rotateCubeHorizontal_fu_343_cubieColor_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state16))) begin
        cubieColor_V_address0 = grp_solveStage1_fu_332_cubieColor_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state128) & (((p_29_reg_681 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_23_reg_669 == 1'd1) & (p_27_reg_689 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_22_reg_665 == 1'd1) & (p_26_reg_693 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0))))) begin
        cubieColor_V_address0 = grp_turnCube_fu_320_cubieColor_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        cubieColor_V_address0 = grp_solveStage4b_fu_310_cubieColor_V_address0;
    end else if (((or_cond_reg_648 == 1'd0) & (1'b1 == ap_CS_fsm_state104))) begin
        cubieColor_V_address0 = grp_solveStage4a_fu_300_cubieColor_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state128) & (((p_26_reg_693 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_24_reg_673 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0)) | ((p_24_reg_673 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_27_reg_689 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_23_reg_669 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_28_reg_677 == 1'd1) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0))))) begin
        cubieColor_V_address0 = grp_solveStage5a_fu_290_cubieColor_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        cubieColor_V_address0 = grp_solveStage5b_fu_280_cubieColor_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state48))) begin
        cubieColor_V_address0 = grp_solveStage2_fu_262_cubieColor_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state84))) begin
        cubieColor_V_address0 = grp_solveStage3_fu_242_cubieColor_V_address0;
    end else begin
        cubieColor_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        cubieColor_V_address1 = 6'd6;
    end else if ((1'b1 == ap_CS_fsm_state106)) begin
        cubieColor_V_address1 = 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        cubieColor_V_address1 = 6'd4;
    end else if ((1'b1 == ap_CS_fsm_state101)) begin
        cubieColor_V_address1 = 6'd5;
    end else if ((1'b1 == ap_CS_fsm_state100)) begin
        cubieColor_V_address1 = 6'd3;
    end else if (((1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state126) & (ap_predicate_op375_call_state126 == 1'b1)) | ((1'b1 == ap_CS_fsm_state126) & (ap_predicate_op373_call_state126 == 1'b1)) | ((p_24_reg_673 == 1'd0) & (1'b1 == ap_CS_fsm_state124)))) begin
        cubieColor_V_address1 = grp_cornerCorrect_fu_400_cubieColor_V_address1;
    end else if (((1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state138))) begin
        cubieColor_V_address1 = grp_edgeCorrect_fu_385_cubieColor_V_address1;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state14))) begin
        cubieColor_V_address1 = grp_findEdge_fu_372_cubieColor_V_address1;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state70))) begin
        cubieColor_V_address1 = grp_rotateCubeVertical_fu_353_cubieColor_V_address1;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18))) begin
        cubieColor_V_address1 = grp_rotateCubeHorizontal_fu_343_cubieColor_V_address1;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state16))) begin
        cubieColor_V_address1 = grp_solveStage1_fu_332_cubieColor_V_address1;
    end else if (((1'b1 == ap_CS_fsm_state128) & (((p_29_reg_681 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_23_reg_669 == 1'd1) & (p_27_reg_689 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_22_reg_665 == 1'd1) & (p_26_reg_693 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0))))) begin
        cubieColor_V_address1 = grp_turnCube_fu_320_cubieColor_V_address1;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        cubieColor_V_address1 = grp_solveStage4b_fu_310_cubieColor_V_address1;
    end else if (((or_cond_reg_648 == 1'd0) & (1'b1 == ap_CS_fsm_state104))) begin
        cubieColor_V_address1 = grp_solveStage4a_fu_300_cubieColor_V_address1;
    end else if (((1'b1 == ap_CS_fsm_state128) & (((p_26_reg_693 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_24_reg_673 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0)) | ((p_24_reg_673 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_27_reg_689 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_23_reg_669 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_28_reg_677 == 1'd1) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0))))) begin
        cubieColor_V_address1 = grp_solveStage5a_fu_290_cubieColor_V_address1;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        cubieColor_V_address1 = grp_solveStage5b_fu_280_cubieColor_V_address1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state48))) begin
        cubieColor_V_address1 = grp_solveStage2_fu_262_cubieColor_V_address1;
    end else if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state84))) begin
        cubieColor_V_address1 = grp_solveStage3_fu_242_cubieColor_V_address1;
    end else begin
        cubieColor_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state99))) begin
        cubieColor_V_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state126) & (ap_predicate_op375_call_state126 == 1'b1)) | ((1'b1 == ap_CS_fsm_state126) & (ap_predicate_op373_call_state126 == 1'b1)) | ((p_24_reg_673 == 1'd0) & (1'b1 == ap_CS_fsm_state124)))) begin
        cubieColor_V_ce0 = grp_cornerCorrect_fu_400_cubieColor_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state138))) begin
        cubieColor_V_ce0 = grp_edgeCorrect_fu_385_cubieColor_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state14))) begin
        cubieColor_V_ce0 = grp_findEdge_fu_372_cubieColor_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state70))) begin
        cubieColor_V_ce0 = grp_rotateCubeVertical_fu_353_cubieColor_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18))) begin
        cubieColor_V_ce0 = grp_rotateCubeHorizontal_fu_343_cubieColor_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state16))) begin
        cubieColor_V_ce0 = grp_solveStage1_fu_332_cubieColor_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state128) & (((p_29_reg_681 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_23_reg_669 == 1'd1) & (p_27_reg_689 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_22_reg_665 == 1'd1) & (p_26_reg_693 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0))))) begin
        cubieColor_V_ce0 = grp_turnCube_fu_320_cubieColor_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        cubieColor_V_ce0 = grp_solveStage4b_fu_310_cubieColor_V_ce0;
    end else if (((or_cond_reg_648 == 1'd0) & (1'b1 == ap_CS_fsm_state104))) begin
        cubieColor_V_ce0 = grp_solveStage4a_fu_300_cubieColor_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state128) & (((p_26_reg_693 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_24_reg_673 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0)) | ((p_24_reg_673 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_27_reg_689 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_23_reg_669 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_28_reg_677 == 1'd1) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0))))) begin
        cubieColor_V_ce0 = grp_solveStage5a_fu_290_cubieColor_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        cubieColor_V_ce0 = grp_solveStage5b_fu_280_cubieColor_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state48))) begin
        cubieColor_V_ce0 = grp_solveStage2_fu_262_cubieColor_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state84))) begin
        cubieColor_V_ce0 = grp_solveStage3_fu_242_cubieColor_V_ce0;
    end else begin
        cubieColor_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state101) | (1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state105))) begin
        cubieColor_V_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state126) & (ap_predicate_op375_call_state126 == 1'b1)) | ((1'b1 == ap_CS_fsm_state126) & (ap_predicate_op373_call_state126 == 1'b1)) | ((p_24_reg_673 == 1'd0) & (1'b1 == ap_CS_fsm_state124)))) begin
        cubieColor_V_ce1 = grp_cornerCorrect_fu_400_cubieColor_V_ce1;
    end else if (((1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state138))) begin
        cubieColor_V_ce1 = grp_edgeCorrect_fu_385_cubieColor_V_ce1;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state14))) begin
        cubieColor_V_ce1 = grp_findEdge_fu_372_cubieColor_V_ce1;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state70))) begin
        cubieColor_V_ce1 = grp_rotateCubeVertical_fu_353_cubieColor_V_ce1;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18))) begin
        cubieColor_V_ce1 = grp_rotateCubeHorizontal_fu_343_cubieColor_V_ce1;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state16))) begin
        cubieColor_V_ce1 = grp_solveStage1_fu_332_cubieColor_V_ce1;
    end else if (((1'b1 == ap_CS_fsm_state128) & (((p_29_reg_681 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_23_reg_669 == 1'd1) & (p_27_reg_689 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_22_reg_665 == 1'd1) & (p_26_reg_693 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0))))) begin
        cubieColor_V_ce1 = grp_turnCube_fu_320_cubieColor_V_ce1;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        cubieColor_V_ce1 = grp_solveStage4b_fu_310_cubieColor_V_ce1;
    end else if (((or_cond_reg_648 == 1'd0) & (1'b1 == ap_CS_fsm_state104))) begin
        cubieColor_V_ce1 = grp_solveStage4a_fu_300_cubieColor_V_ce1;
    end else if (((1'b1 == ap_CS_fsm_state128) & (((p_26_reg_693 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_24_reg_673 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0)) | ((p_24_reg_673 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_27_reg_689 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_23_reg_669 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_28_reg_677 == 1'd1) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0))))) begin
        cubieColor_V_ce1 = grp_solveStage5a_fu_290_cubieColor_V_ce1;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        cubieColor_V_ce1 = grp_solveStage5b_fu_280_cubieColor_V_ce1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state48))) begin
        cubieColor_V_ce1 = grp_solveStage2_fu_262_cubieColor_V_ce1;
    end else if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state84))) begin
        cubieColor_V_ce1 = grp_solveStage3_fu_242_cubieColor_V_ce1;
    end else begin
        cubieColor_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        cubieColor_V_d0 = cubieColor_tb_V_q0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state70))) begin
        cubieColor_V_d0 = grp_rotateCubeVertical_fu_353_cubieColor_V_d0;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18))) begin
        cubieColor_V_d0 = grp_rotateCubeHorizontal_fu_343_cubieColor_V_d0;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state16))) begin
        cubieColor_V_d0 = grp_solveStage1_fu_332_cubieColor_V_d0;
    end else if (((1'b1 == ap_CS_fsm_state128) & (((p_29_reg_681 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_23_reg_669 == 1'd1) & (p_27_reg_689 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_22_reg_665 == 1'd1) & (p_26_reg_693 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0))))) begin
        cubieColor_V_d0 = grp_turnCube_fu_320_cubieColor_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        cubieColor_V_d0 = grp_solveStage4b_fu_310_cubieColor_V_d0;
    end else if (((or_cond_reg_648 == 1'd0) & (1'b1 == ap_CS_fsm_state104))) begin
        cubieColor_V_d0 = grp_solveStage4a_fu_300_cubieColor_V_d0;
    end else if (((1'b1 == ap_CS_fsm_state128) & (((p_26_reg_693 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_24_reg_673 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0)) | ((p_24_reg_673 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_27_reg_689 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_23_reg_669 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_28_reg_677 == 1'd1) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0))))) begin
        cubieColor_V_d0 = grp_solveStage5a_fu_290_cubieColor_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        cubieColor_V_d0 = grp_solveStage5b_fu_280_cubieColor_V_d0;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state48))) begin
        cubieColor_V_d0 = grp_solveStage2_fu_262_cubieColor_V_d0;
    end else if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state84))) begin
        cubieColor_V_d0 = grp_solveStage3_fu_242_cubieColor_V_d0;
    end else begin
        cubieColor_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state70))) begin
        cubieColor_V_d1 = grp_rotateCubeVertical_fu_353_cubieColor_V_d1;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18))) begin
        cubieColor_V_d1 = grp_rotateCubeHorizontal_fu_343_cubieColor_V_d1;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state16))) begin
        cubieColor_V_d1 = grp_solveStage1_fu_332_cubieColor_V_d1;
    end else if (((1'b1 == ap_CS_fsm_state128) & (((p_29_reg_681 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_23_reg_669 == 1'd1) & (p_27_reg_689 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_22_reg_665 == 1'd1) & (p_26_reg_693 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0))))) begin
        cubieColor_V_d1 = grp_turnCube_fu_320_cubieColor_V_d1;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        cubieColor_V_d1 = grp_solveStage4b_fu_310_cubieColor_V_d1;
    end else if (((or_cond_reg_648 == 1'd0) & (1'b1 == ap_CS_fsm_state104))) begin
        cubieColor_V_d1 = grp_solveStage4a_fu_300_cubieColor_V_d1;
    end else if (((1'b1 == ap_CS_fsm_state128) & (((p_26_reg_693 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_24_reg_673 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0)) | ((p_24_reg_673 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_27_reg_689 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_23_reg_669 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_28_reg_677 == 1'd1) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0))))) begin
        cubieColor_V_d1 = grp_solveStage5a_fu_290_cubieColor_V_d1;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        cubieColor_V_d1 = grp_solveStage5b_fu_280_cubieColor_V_d1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state48))) begin
        cubieColor_V_d1 = grp_solveStage2_fu_262_cubieColor_V_d1;
    end else if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state84))) begin
        cubieColor_V_d1 = grp_solveStage3_fu_242_cubieColor_V_d1;
    end else begin
        cubieColor_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        cubieColor_V_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state70))) begin
        cubieColor_V_we0 = grp_rotateCubeVertical_fu_353_cubieColor_V_we0;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18))) begin
        cubieColor_V_we0 = grp_rotateCubeHorizontal_fu_343_cubieColor_V_we0;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state16))) begin
        cubieColor_V_we0 = grp_solveStage1_fu_332_cubieColor_V_we0;
    end else if (((1'b1 == ap_CS_fsm_state128) & (((p_29_reg_681 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_23_reg_669 == 1'd1) & (p_27_reg_689 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_22_reg_665 == 1'd1) & (p_26_reg_693 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0))))) begin
        cubieColor_V_we0 = grp_turnCube_fu_320_cubieColor_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        cubieColor_V_we0 = grp_solveStage4b_fu_310_cubieColor_V_we0;
    end else if (((or_cond_reg_648 == 1'd0) & (1'b1 == ap_CS_fsm_state104))) begin
        cubieColor_V_we0 = grp_solveStage4a_fu_300_cubieColor_V_we0;
    end else if (((1'b1 == ap_CS_fsm_state128) & (((p_26_reg_693 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_24_reg_673 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0)) | ((p_24_reg_673 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_27_reg_689 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_23_reg_669 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_28_reg_677 == 1'd1) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0))))) begin
        cubieColor_V_we0 = grp_solveStage5a_fu_290_cubieColor_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        cubieColor_V_we0 = grp_solveStage5b_fu_280_cubieColor_V_we0;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state48))) begin
        cubieColor_V_we0 = grp_solveStage2_fu_262_cubieColor_V_we0;
    end else if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state84))) begin
        cubieColor_V_we0 = grp_solveStage3_fu_242_cubieColor_V_we0;
    end else begin
        cubieColor_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state70))) begin
        cubieColor_V_we1 = grp_rotateCubeVertical_fu_353_cubieColor_V_we1;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18))) begin
        cubieColor_V_we1 = grp_rotateCubeHorizontal_fu_343_cubieColor_V_we1;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state16))) begin
        cubieColor_V_we1 = grp_solveStage1_fu_332_cubieColor_V_we1;
    end else if (((1'b1 == ap_CS_fsm_state128) & (((p_29_reg_681 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_23_reg_669 == 1'd1) & (p_27_reg_689 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_22_reg_665 == 1'd1) & (p_26_reg_693 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0))))) begin
        cubieColor_V_we1 = grp_turnCube_fu_320_cubieColor_V_we1;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        cubieColor_V_we1 = grp_solveStage4b_fu_310_cubieColor_V_we1;
    end else if (((or_cond_reg_648 == 1'd0) & (1'b1 == ap_CS_fsm_state104))) begin
        cubieColor_V_we1 = grp_solveStage4a_fu_300_cubieColor_V_we1;
    end else if (((1'b1 == ap_CS_fsm_state128) & (((p_26_reg_693 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_24_reg_673 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0)) | ((p_24_reg_673 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_27_reg_689 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_23_reg_669 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_28_reg_677 == 1'd1) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0))))) begin
        cubieColor_V_we1 = grp_solveStage5a_fu_290_cubieColor_V_we1;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        cubieColor_V_we1 = grp_solveStage5b_fu_280_cubieColor_V_we1;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state48))) begin
        cubieColor_V_we1 = grp_solveStage2_fu_262_cubieColor_V_we1;
    end else if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state84))) begin
        cubieColor_V_we1 = grp_solveStage3_fu_242_cubieColor_V_we1;
    end else begin
        cubieColor_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cubieColor_tb_V_ce0 = 1'b1;
    end else begin
        cubieColor_tb_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state122) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | ((1'b1 == ap_CS_fsm_state126) & (ap_predicate_op375_call_state126 == 1'b1)) | ((1'b1 == ap_CS_fsm_state126) & (ap_predicate_op373_call_state126 == 1'b1)) | ((p_24_reg_673 == 1'd0) & (1'b1 == ap_CS_fsm_state124)))) begin
        grp_cornerCorrect_fu_400_corner_V = 3'd4;
    end else if (((1'b1 == ap_CS_fsm_state120) | (1'b1 == ap_CS_fsm_state116) | (1'b1 == ap_CS_fsm_state42))) begin
        grp_cornerCorrect_fu_400_corner_V = 3'd3;
    end else if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state40))) begin
        grp_cornerCorrect_fu_400_corner_V = 3'd2;
    end else if (((1'b1 == ap_CS_fsm_state112) | (1'b1 == ap_CS_fsm_state38))) begin
        grp_cornerCorrect_fu_400_corner_V = 3'd1;
    end else begin
        grp_cornerCorrect_fu_400_corner_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        grp_edgeCorrect_fu_385_edge_V = 4'd8;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_edgeCorrect_fu_385_edge_V = 4'd7;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        grp_edgeCorrect_fu_385_edge_V = 4'd6;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_edgeCorrect_fu_385_edge_V = 4'd5;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state138))) begin
        grp_edgeCorrect_fu_385_edge_V = 4'd4;
    end else if (((1'b1 == ap_CS_fsm_state136) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_edgeCorrect_fu_385_edge_V = 4'd3;
    end else if (((1'b1 == ap_CS_fsm_state134) | (1'b1 == ap_CS_fsm_state8))) begin
        grp_edgeCorrect_fu_385_edge_V = 4'd2;
    end else if (((1'b1 == ap_CS_fsm_state132) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_edgeCorrect_fu_385_edge_V = 4'd1;
    end else begin
        grp_edgeCorrect_fu_385_edge_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_findEdge_fu_372_sEC_V = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_findEdge_fu_372_sEC_V = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_findEdge_fu_372_sEC_V = 3'd2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_findEdge_fu_372_sEC_V = 3'd5;
    end else begin
        grp_findEdge_fu_372_sEC_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        grp_solveStage2_fu_262_sC_V = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_solveStage2_fu_262_sC_V = 3'd2;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state48))) begin
        grp_solveStage2_fu_262_sC_V = 3'd5;
    end else begin
        grp_solveStage2_fu_262_sC_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_solveStage2_fu_262_tC_V = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_solveStage2_fu_262_tC_V = 3'd2;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state48))) begin
        grp_solveStage2_fu_262_tC_V = 3'd3;
    end else begin
        grp_solveStage2_fu_262_tC_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_solveStage3_fu_242_fC_V = 3'd2;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        grp_solveStage3_fu_242_fC_V = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_solveStage3_fu_242_fC_V = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        grp_solveStage3_fu_242_fC_V = 3'd5;
    end else begin
        grp_solveStage3_fu_242_fC_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        grp_solveStage3_fu_242_sC_V = 3'd5;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        grp_solveStage3_fu_242_sC_V = 3'd2;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_solveStage3_fu_242_sC_V = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        grp_solveStage3_fu_242_sC_V = 3'd3;
    end else begin
        grp_solveStage3_fu_242_sC_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state142)) begin
        moves_V_address0 = tmp_61_fu_554_p1;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        moves_V_address0 = grp_optimizeCube_fu_363_moves_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state70))) begin
        moves_V_address0 = grp_rotateCubeVertical_fu_353_moves_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18))) begin
        moves_V_address0 = grp_rotateCubeHorizontal_fu_343_moves_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state16))) begin
        moves_V_address0 = grp_solveStage1_fu_332_moves_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state128) & (((p_29_reg_681 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_23_reg_669 == 1'd1) & (p_27_reg_689 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_22_reg_665 == 1'd1) & (p_26_reg_693 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0))))) begin
        moves_V_address0 = grp_turnCube_fu_320_moves_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        moves_V_address0 = grp_solveStage4b_fu_310_moves_V_address0;
    end else if (((or_cond_reg_648 == 1'd0) & (1'b1 == ap_CS_fsm_state104))) begin
        moves_V_address0 = grp_solveStage4a_fu_300_moves_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state128) & (((p_26_reg_693 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_24_reg_673 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0)) | ((p_24_reg_673 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_27_reg_689 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_23_reg_669 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_28_reg_677 == 1'd1) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0))))) begin
        moves_V_address0 = grp_solveStage5a_fu_290_moves_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        moves_V_address0 = grp_solveStage5b_fu_280_moves_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state48))) begin
        moves_V_address0 = grp_solveStage2_fu_262_moves_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state84))) begin
        moves_V_address0 = grp_solveStage3_fu_242_moves_V_address0;
    end else begin
        moves_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state142)) begin
        moves_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state141)) begin
        moves_V_ce0 = grp_optimizeCube_fu_363_moves_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state70))) begin
        moves_V_ce0 = grp_rotateCubeVertical_fu_353_moves_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18))) begin
        moves_V_ce0 = grp_rotateCubeHorizontal_fu_343_moves_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state16))) begin
        moves_V_ce0 = grp_solveStage1_fu_332_moves_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state128) & (((p_29_reg_681 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_23_reg_669 == 1'd1) & (p_27_reg_689 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_22_reg_665 == 1'd1) & (p_26_reg_693 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0))))) begin
        moves_V_ce0 = grp_turnCube_fu_320_moves_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        moves_V_ce0 = grp_solveStage4b_fu_310_moves_V_ce0;
    end else if (((or_cond_reg_648 == 1'd0) & (1'b1 == ap_CS_fsm_state104))) begin
        moves_V_ce0 = grp_solveStage4a_fu_300_moves_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state128) & (((p_26_reg_693 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_24_reg_673 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0)) | ((p_24_reg_673 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_27_reg_689 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_23_reg_669 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_28_reg_677 == 1'd1) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0))))) begin
        moves_V_ce0 = grp_solveStage5a_fu_290_moves_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        moves_V_ce0 = grp_solveStage5b_fu_280_moves_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state48))) begin
        moves_V_ce0 = grp_solveStage2_fu_262_moves_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state84))) begin
        moves_V_ce0 = grp_solveStage3_fu_242_moves_V_ce0;
    end else begin
        moves_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state141)) begin
        moves_V_d0 = grp_optimizeCube_fu_363_moves_V_d0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state70))) begin
        moves_V_d0 = grp_rotateCubeVertical_fu_353_moves_V_d0;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18))) begin
        moves_V_d0 = grp_rotateCubeHorizontal_fu_343_moves_V_d0;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state16))) begin
        moves_V_d0 = grp_solveStage1_fu_332_moves_V_d0;
    end else if (((1'b1 == ap_CS_fsm_state128) & (((p_29_reg_681 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_23_reg_669 == 1'd1) & (p_27_reg_689 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_22_reg_665 == 1'd1) & (p_26_reg_693 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0))))) begin
        moves_V_d0 = grp_turnCube_fu_320_moves_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        moves_V_d0 = grp_solveStage4b_fu_310_moves_V_d0;
    end else if (((or_cond_reg_648 == 1'd0) & (1'b1 == ap_CS_fsm_state104))) begin
        moves_V_d0 = grp_solveStage4a_fu_300_moves_V_d0;
    end else if (((1'b1 == ap_CS_fsm_state128) & (((p_26_reg_693 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_24_reg_673 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0)) | ((p_24_reg_673 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_27_reg_689 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_23_reg_669 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_28_reg_677 == 1'd1) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0))))) begin
        moves_V_d0 = grp_solveStage5a_fu_290_moves_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        moves_V_d0 = grp_solveStage5b_fu_280_moves_V_d0;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state48))) begin
        moves_V_d0 = grp_solveStage2_fu_262_moves_V_d0;
    end else if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state84))) begin
        moves_V_d0 = grp_solveStage3_fu_242_moves_V_d0;
    end else begin
        moves_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state141)) begin
        moves_V_we0 = grp_optimizeCube_fu_363_moves_V_we0;
    end else if (((1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state70))) begin
        moves_V_we0 = grp_rotateCubeVertical_fu_353_moves_V_we0;
    end else if (((1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18))) begin
        moves_V_we0 = grp_rotateCubeHorizontal_fu_343_moves_V_we0;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state16))) begin
        moves_V_we0 = grp_solveStage1_fu_332_moves_V_we0;
    end else if (((1'b1 == ap_CS_fsm_state128) & (((p_29_reg_681 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_23_reg_669 == 1'd1) & (p_27_reg_689 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_22_reg_665 == 1'd1) & (p_26_reg_693 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0))))) begin
        moves_V_we0 = grp_turnCube_fu_320_moves_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state110)) begin
        moves_V_we0 = grp_solveStage4b_fu_310_moves_V_we0;
    end else if (((or_cond_reg_648 == 1'd0) & (1'b1 == ap_CS_fsm_state104))) begin
        moves_V_we0 = grp_solveStage4a_fu_300_moves_V_we0;
    end else if (((1'b1 == ap_CS_fsm_state128) & (((p_26_reg_693 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_24_reg_673 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0)) | ((p_24_reg_673 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_27_reg_689 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_23_reg_669 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_28_reg_677 == 1'd1) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0))))) begin
        moves_V_we0 = grp_solveStage5a_fu_290_moves_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state140)) begin
        moves_V_we0 = grp_solveStage5b_fu_280_moves_V_we0;
    end else if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state48))) begin
        moves_V_we0 = grp_solveStage2_fu_262_moves_V_we0;
    end else if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state84))) begin
        moves_V_we0 = grp_solveStage3_fu_242_moves_V_we0;
    end else begin
        moves_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_optimizeCube_fu_363_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state141))) begin
        order_V_ap_vld = 1'b1;
    end else begin
        order_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state143)) begin
        rMoves_V_ce0 = 1'b1;
    end else begin
        rMoves_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state143)) begin
        rMoves_V_we0 = 1'b1;
    end else begin
        rMoves_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_fu_445_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((tmp_s_fu_485_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_findEdge_fu_372_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_solveStage1_fu_332_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((grp_rotateCubeHorizontal_fu_343_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((grp_findEdge_fu_372_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((grp_solveStage1_fu_332_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((grp_rotateCubeHorizontal_fu_343_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((grp_findEdge_fu_372_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            if (((grp_solveStage1_fu_332_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if (((grp_rotateCubeHorizontal_fu_343_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            if (((grp_findEdge_fu_372_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            if (((grp_solveStage1_fu_332_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((grp_rotateCubeHorizontal_fu_343_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (grp_cornerCorrect_fu_400_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (grp_cornerCorrect_fu_400_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (grp_cornerCorrect_fu_400_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (grp_cornerCorrect_fu_400_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (grp_cornerCorrect_fu_400_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (grp_cornerCorrect_fu_400_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (grp_cornerCorrect_fu_400_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (grp_cornerCorrect_fu_400_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (grp_cornerCorrect_fu_400_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state46))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (grp_cornerCorrect_fu_400_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state46))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            if (((grp_solveStage2_fu_262_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            if (((grp_rotateCubeHorizontal_fu_343_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (grp_cornerCorrect_fu_400_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (grp_cornerCorrect_fu_400_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            if (((grp_solveStage2_fu_262_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            if (((grp_rotateCubeHorizontal_fu_343_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state56))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (grp_cornerCorrect_fu_400_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state58))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (grp_cornerCorrect_fu_400_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state58))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            if (((grp_solveStage2_fu_262_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state60))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            if (((grp_rotateCubeHorizontal_fu_343_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state62))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (grp_cornerCorrect_fu_400_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state64))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (grp_cornerCorrect_fu_400_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state64))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            if (((grp_solveStage2_fu_262_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state66))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            if (((grp_rotateCubeHorizontal_fu_343_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state68))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            if (((grp_rotateCubeVertical_fu_353_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state70))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            if (((grp_rotateCubeVertical_fu_353_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state72))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            if (((grp_rotateCubeHorizontal_fu_343_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state74))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state76))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state78))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state78))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state80))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end else if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state82))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            if (((grp_solveStage3_fu_242_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state84))) begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            if (((grp_rotateCubeHorizontal_fu_343_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state86))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            if (((grp_solveStage3_fu_242_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state88))) begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            if (((grp_rotateCubeHorizontal_fu_343_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state90))) begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state90;
            end
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            if (((grp_solveStage3_fu_242_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state92))) begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state92;
            end
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            if (((grp_rotateCubeHorizontal_fu_343_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state94))) begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            if (((grp_solveStage3_fu_242_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state96))) begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            if (((grp_rotateCubeHorizontal_fu_343_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state98))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            if (((or_cond_fu_521_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state102))) begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            if (((1'b1 == ap_CS_fsm_state104) & (1'b0 == ap_block_state104_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state105;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            if (((or_cond5_fu_537_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state108))) begin
                ap_NS_fsm = ap_ST_fsm_state111;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            if (((grp_solveStage4b_fu_310_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state110))) begin
                ap_NS_fsm = ap_ST_fsm_state105;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state112))) begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state114))) begin
                ap_NS_fsm = ap_ST_fsm_state115;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state114;
            end
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            if (((p_23_reg_669 == 1'd1) & (grp_cornerCorrect_fu_400_ap_done == 1'b1) & (p_22_reg_665 == 1'd1) & (grp_cornerCorrect_fu_400_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state116))) begin
                ap_NS_fsm = ap_ST_fsm_state129;
            end else if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state116) & (((p_23_reg_669 == 1'd1) & (p_22_reg_665 == 1'd1) & (grp_cornerCorrect_fu_400_ap_return == 1'd0)) | ((p_22_reg_665 == 1'd1) & (grp_cornerCorrect_fu_400_ap_return == 1'd1) & (p_23_reg_669 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state126;
            end else if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (p_22_reg_665 == 1'd1) & (p_23_reg_669 == 1'd0) & (grp_cornerCorrect_fu_400_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state116))) begin
                ap_NS_fsm = ap_ST_fsm_state125;
            end else if (((p_23_reg_669 == 1'd1) & (grp_cornerCorrect_fu_400_ap_done == 1'b1) & (grp_cornerCorrect_fu_400_ap_return == 1'd1) & (p_22_reg_665 == 1'd0) & (1'b1 == ap_CS_fsm_state116))) begin
                ap_NS_fsm = ap_ST_fsm_state124;
            end else if (((p_23_reg_669 == 1'd1) & (grp_cornerCorrect_fu_400_ap_done == 1'b1) & (p_22_reg_665 == 1'd0) & (grp_cornerCorrect_fu_400_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state116))) begin
                ap_NS_fsm = ap_ST_fsm_state123;
            end else if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (grp_cornerCorrect_fu_400_ap_return == 1'd1) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0) & (1'b1 == ap_CS_fsm_state116))) begin
                ap_NS_fsm = ap_ST_fsm_state119;
            end else if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0) & (grp_cornerCorrect_fu_400_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state116))) begin
                ap_NS_fsm = ap_ST_fsm_state117;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state116;
            end
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (grp_cornerCorrect_fu_400_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state118))) begin
                ap_NS_fsm = ap_ST_fsm_state127;
            end else if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (grp_cornerCorrect_fu_400_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state118))) begin
                ap_NS_fsm = ap_ST_fsm_state119;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state118;
            end
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state120))) begin
                ap_NS_fsm = ap_ST_fsm_state121;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state120;
            end
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state122) & (((p_29_reg_681 == 1'd1) & (grp_cornerCorrect_fu_400_ap_return == 1'd1)) | ((p_29_reg_681 == 1'd0) & (grp_cornerCorrect_fu_400_ap_return == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state130;
            end else if (((grp_cornerCorrect_fu_400_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state122) & (((p_29_reg_681 == 1'd1) & (grp_cornerCorrect_fu_400_ap_return == 1'd0)) | ((grp_cornerCorrect_fu_400_ap_return == 1'd1) & (p_29_reg_681 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state127;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state122;
            end
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            if (((1'b0 == ap_block_state124_on_subcall_done) & (1'b1 == ap_CS_fsm_state124) & ((p_24_reg_673 == 1'd1) | (grp_cornerCorrect_fu_400_ap_return == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state130;
            end else if (((1'b0 == ap_block_state124_on_subcall_done) & (p_24_reg_673 == 1'd0) & (grp_cornerCorrect_fu_400_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state124))) begin
                ap_NS_fsm = ap_ST_fsm_state127;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state124;
            end
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            if (((1'b0 == ap_block_state126_on_subcall_done) & (p_24_reg_673 == 1'd1) & (p_23_reg_669 == 1'd1) & (grp_cornerCorrect_fu_400_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state126))) begin
                ap_NS_fsm = ap_ST_fsm_state131;
            end else if (((1'b0 == ap_block_state126_on_subcall_done) & (1'b1 == ap_CS_fsm_state126) & (((p_24_reg_673 == 1'd1) & (grp_cornerCorrect_fu_400_ap_return == 1'd0)) | ((p_24_reg_673 == 1'd1) & (p_23_reg_669 == 1'd0)) | ((p_23_reg_669 == 1'd1) & (p_24_reg_673 == 1'd0)) | ((grp_cornerCorrect_fu_400_ap_return == 1'd1) & (p_24_reg_673 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state130;
            end else if (((1'b0 == ap_block_state126_on_subcall_done) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0) & (grp_cornerCorrect_fu_400_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state126))) begin
                ap_NS_fsm = ap_ST_fsm_state127;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state126;
            end
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            if (((1'b0 == ap_block_state128_on_subcall_done) & (1'b1 == ap_CS_fsm_state128))) begin
                ap_NS_fsm = ap_ST_fsm_state111;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state128;
            end
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state132))) begin
                ap_NS_fsm = ap_ST_fsm_state139;
            end else if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state132))) begin
                ap_NS_fsm = ap_ST_fsm_state133;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state132;
            end
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state134))) begin
                ap_NS_fsm = ap_ST_fsm_state139;
            end else if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state134))) begin
                ap_NS_fsm = ap_ST_fsm_state135;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state134;
            end
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state136))) begin
                ap_NS_fsm = ap_ST_fsm_state139;
            end else if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state136))) begin
                ap_NS_fsm = ap_ST_fsm_state137;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state136;
            end
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd1) & (1'b1 == ap_CS_fsm_state138))) begin
                ap_NS_fsm = ap_ST_fsm_state141;
            end else if (((grp_edgeCorrect_fu_385_ap_done == 1'b1) & (grp_edgeCorrect_fu_385_ap_return == 1'd0) & (1'b1 == ap_CS_fsm_state138))) begin
                ap_NS_fsm = ap_ST_fsm_state139;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state138;
            end
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            if (((grp_solveStage5b_fu_280_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state140))) begin
                ap_NS_fsm = ap_ST_fsm_state131;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state140;
            end
        end
        ap_ST_fsm_state141 : begin
            if (((grp_optimizeCube_fu_363_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state141))) begin
                ap_NS_fsm = ap_ST_fsm_state142;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state141;
            end
        end
        ap_ST_fsm_state142 : begin
            if (((exitcond_fu_543_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state142))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state143;
            end
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd114];

assign ap_CS_fsm_state116 = ap_CS_fsm[32'd115];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state120 = ap_CS_fsm[32'd119];

assign ap_CS_fsm_state121 = ap_CS_fsm[32'd120];

assign ap_CS_fsm_state122 = ap_CS_fsm[32'd121];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state125 = ap_CS_fsm[32'd124];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd129];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd130];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd131];

assign ap_CS_fsm_state133 = ap_CS_fsm[32'd132];

assign ap_CS_fsm_state134 = ap_CS_fsm[32'd133];

assign ap_CS_fsm_state135 = ap_CS_fsm[32'd134];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd138];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state140 = ap_CS_fsm[32'd139];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_state142 = ap_CS_fsm[32'd141];

assign ap_CS_fsm_state143 = ap_CS_fsm[32'd142];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

always @ (*) begin
    ap_block_state104_on_subcall_done = ((grp_solveStage4a_fu_300_ap_done == 1'b0) & (or_cond_reg_648 == 1'd0));
end

always @ (*) begin
    ap_block_state124_on_subcall_done = ((grp_cornerCorrect_fu_400_ap_done == 1'b0) & (p_24_reg_673 == 1'd0));
end

always @ (*) begin
    ap_block_state126_on_subcall_done = (((grp_cornerCorrect_fu_400_ap_done == 1'b0) & (ap_predicate_op375_call_state126 == 1'b1)) | ((grp_cornerCorrect_fu_400_ap_done == 1'b0) & (ap_predicate_op373_call_state126 == 1'b1)));
end

always @ (*) begin
    ap_block_state128_on_subcall_done = (((grp_solveStage5a_fu_290_ap_done == 1'b0) & (ap_predicate_op383_call_state128 == 1'b1)) | ((grp_turnCube_fu_320_ap_done == 1'b0) & (ap_predicate_op381_call_state128 == 1'b1)));
end

always @ (*) begin
    ap_predicate_op373_call_state126 = ((p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0));
end

always @ (*) begin
    ap_predicate_op375_call_state126 = ((p_24_reg_673 == 1'd1) & (p_23_reg_669 == 1'd1));
end

always @ (*) begin
    ap_predicate_op381_call_state128 = (((p_29_reg_681 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_23_reg_669 == 1'd1) & (p_27_reg_689 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_22_reg_665 == 1'd1) & (p_26_reg_693 == 1'd0) & (p_24_reg_673 == 1'd0) & (p_23_reg_669 == 1'd0)));
end

always @ (*) begin
    ap_predicate_op383_call_state128 = (((p_26_reg_693 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_24_reg_673 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0)) | ((p_24_reg_673 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_27_reg_689 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_23_reg_669 == 1'd1) & (p_22_reg_665 == 1'd1)) | ((p_24_reg_673 == 1'd1) & (p_23_reg_669 == 1'd1)) | ((p_30_reg_685 == 1'd1) & (p_29_reg_681 == 1'd1) & (p_28_reg_677 == 1'd1) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)) | ((p_28_reg_677 == 1'd1) & (p_30_reg_685 == 1'd0) & (p_29_reg_681 == 1'd0) & (p_23_reg_669 == 1'd0) & (p_22_reg_665 == 1'd0)));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cubieColor_tb_V_address0 = tmp_8_cast_fu_506_p1;

assign exitcond_fu_543_p2 = ((t_V_reg_231 == op2_V_assign_reg_712) ? 1'b1 : 1'b0);

assign grp_cornerCorrect_fu_400_ap_start = grp_cornerCorrect_fu_400_ap_start_reg;

assign grp_edgeCorrect_fu_385_ap_start = grp_edgeCorrect_fu_385_ap_start_reg;

assign grp_findEdge_fu_372_ap_start = grp_findEdge_fu_372_ap_start_reg;

assign grp_fu_411_p2 = ((reg_436 == cubieColor_V_q0) ? 1'b1 : 1'b0);

assign grp_fu_416_p2 = ((reg_436 == cubieColor_V_q1) ? 1'b1 : 1'b0);

assign grp_fu_421_p2 = ((reg_436 == cubieColor_V_q1) ? 1'b1 : 1'b0);

assign grp_fu_426_p2 = ((reg_436 == cubieColor_V_q0) ? 1'b1 : 1'b0);

assign grp_optimizeCube_fu_363_ap_start = grp_optimizeCube_fu_363_ap_start_reg;

assign grp_rotateCubeHorizontal_fu_343_ap_start = grp_rotateCubeHorizontal_fu_343_ap_start_reg;

assign grp_rotateCubeVertical_fu_353_ap_start = grp_rotateCubeVertical_fu_353_ap_start_reg;

assign grp_solveStage1_fu_332_ap_start = grp_solveStage1_fu_332_ap_start_reg;

assign grp_solveStage2_fu_262_ap_start = grp_solveStage2_fu_262_ap_start_reg;

assign grp_solveStage3_fu_242_ap_start = grp_solveStage3_fu_242_ap_start_reg;

assign grp_solveStage4a_fu_300_ap_start = grp_solveStage4a_fu_300_ap_start_reg;

assign grp_solveStage4b_fu_310_ap_start = grp_solveStage4b_fu_310_ap_start_reg;

assign grp_solveStage5a_fu_290_ap_start = grp_solveStage5a_fu_290_ap_start_reg;

assign grp_solveStage5b_fu_280_ap_start = grp_solveStage5b_fu_280_ap_start_reg;

assign grp_turnCube_fu_320_ap_start = grp_turnCube_fu_320_ap_start_reg;

assign i_V_1_fu_548_p2 = (t_V_reg_231 + 8'd1);

assign i_V_fu_451_p2 = (p_s_reg_209 + 3'd1);

assign j_V_fu_491_p2 = (p_2_reg_220 + 4'd1);

assign or_cond5_fu_537_p2 = (tmp5_fu_531_p2 & tmp4_fu_527_p2);

assign or_cond_fu_521_p2 = (tmp3_fu_515_p2 & tmp2_fu_511_p2);

assign p_shl_cast_fu_469_p1 = tmp_6_fu_461_p3;

assign rMoves_V_address0 = tmp_61_reg_725;

assign tmp2_fu_511_p2 = (tmp_54_reg_643 & tmp_53_reg_638);

assign tmp3_fu_515_p2 = (grp_fu_416_p2 & grp_fu_411_p2);

assign tmp4_fu_527_p2 = (tmp_58_reg_657 & tmp_57_reg_652);

assign tmp5_fu_531_p2 = (grp_fu_426_p2 & grp_fu_421_p2);

assign tmp_54_cast_fu_497_p1 = p_2_reg_220;

assign tmp_61_fu_554_p1 = t_V_reg_231;

assign tmp_6_fu_461_p3 = {{p_s_reg_209}, {3'd0}};

assign tmp_7_fu_473_p2 = (tmp_cast_fu_457_p1 + p_shl_cast_fu_469_p1);

assign tmp_8_cast_fu_506_p1 = tmp_8_fu_501_p2;

assign tmp_8_fu_501_p2 = (tmp_7_reg_567 + tmp_54_cast_fu_497_p1);

assign tmp_cast_fu_457_p1 = p_s_reg_209;

assign tmp_fu_445_p2 = ((p_s_reg_209 == 3'd6) ? 1'b1 : 1'b0);

assign tmp_s_fu_485_p2 = ((p_2_reg_220 == 4'd9) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_8_cast_reg_580[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    tmp_61_reg_725[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //solveCube
