-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity stage3Prepare is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fC_V : IN STD_LOGIC_VECTOR (2 downto 0);
    sC_V : IN STD_LOGIC_VECTOR (2 downto 0);
    cubieColor_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cubieColor_V_ce0 : OUT STD_LOGIC;
    cubieColor_V_we0 : OUT STD_LOGIC;
    cubieColor_V_d0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    cubieColor_V_q0 : IN STD_LOGIC_VECTOR (2 downto 0);
    cubieColor_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cubieColor_V_ce1 : OUT STD_LOGIC;
    cubieColor_V_we1 : OUT STD_LOGIC;
    cubieColor_V_d1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    cubieColor_V_q1 : IN STD_LOGIC_VECTOR (2 downto 0);
    moveCounter_V_i : IN STD_LOGIC_VECTOR (7 downto 0);
    moveCounter_V_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    moveCounter_V_o_ap_vld : OUT STD_LOGIC;
    moves_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    moves_V_ce0 : OUT STD_LOGIC;
    moves_V_we0 : OUT STD_LOGIC;
    moves_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of stage3Prepare is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (43 downto 0) := "00000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (43 downto 0) := "00000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (43 downto 0) := "00000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (43 downto 0) := "00000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (43 downto 0) := "00000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (43 downto 0) := "00000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (43 downto 0) := "00001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (43 downto 0) := "00010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (43 downto 0) := "00100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (43 downto 0) := "01000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (43 downto 0) := "10000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv6_1F : STD_LOGIC_VECTOR (5 downto 0) := "011111";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_findEdge_fu_88_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal p_0_reg_114 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_findEdge_fu_88_ap_idle : STD_LOGIC;
    signal grp_findEdge_fu_88_ap_ready : STD_LOGIC;
    signal grp_findEdge_fu_88_ap_done : STD_LOGIC;
    signal tmp_s_fu_98_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_118 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_turnCube_fu_61_ap_start : STD_LOGIC;
    signal grp_turnCube_fu_61_ap_done : STD_LOGIC;
    signal grp_turnCube_fu_61_ap_idle : STD_LOGIC;
    signal grp_turnCube_fu_61_ap_ready : STD_LOGIC;
    signal grp_turnCube_fu_61_turn_V : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_turnCube_fu_61_moveCounter_V_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_turnCube_fu_61_moveCounter_V_o_ap_vld : STD_LOGIC;
    signal grp_turnCube_fu_61_moves_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_turnCube_fu_61_moves_V_ce0 : STD_LOGIC;
    signal grp_turnCube_fu_61_moves_V_we0 : STD_LOGIC;
    signal grp_turnCube_fu_61_moves_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_turnCube_fu_61_cubieColor_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_turnCube_fu_61_cubieColor_V_ce0 : STD_LOGIC;
    signal grp_turnCube_fu_61_cubieColor_V_we0 : STD_LOGIC;
    signal grp_turnCube_fu_61_cubieColor_V_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_turnCube_fu_61_cubieColor_V_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_turnCube_fu_61_cubieColor_V_ce1 : STD_LOGIC;
    signal grp_turnCube_fu_61_cubieColor_V_we1 : STD_LOGIC;
    signal grp_turnCube_fu_61_cubieColor_V_d1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_rotateCubeHorizontal_fu_78_ap_start : STD_LOGIC;
    signal grp_rotateCubeHorizontal_fu_78_ap_done : STD_LOGIC;
    signal grp_rotateCubeHorizontal_fu_78_ap_idle : STD_LOGIC;
    signal grp_rotateCubeHorizontal_fu_78_ap_ready : STD_LOGIC;
    signal grp_rotateCubeHorizontal_fu_78_moveCounter_V_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rotateCubeHorizontal_fu_78_moveCounter_V_o_ap_vld : STD_LOGIC;
    signal grp_rotateCubeHorizontal_fu_78_moves_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rotateCubeHorizontal_fu_78_moves_V_ce0 : STD_LOGIC;
    signal grp_rotateCubeHorizontal_fu_78_moves_V_we0 : STD_LOGIC;
    signal grp_rotateCubeHorizontal_fu_78_moves_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rotateCubeHorizontal_fu_78_cubieColor_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_rotateCubeHorizontal_fu_78_cubieColor_V_ce0 : STD_LOGIC;
    signal grp_rotateCubeHorizontal_fu_78_cubieColor_V_we0 : STD_LOGIC;
    signal grp_rotateCubeHorizontal_fu_78_cubieColor_V_d0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_rotateCubeHorizontal_fu_78_cubieColor_V_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_rotateCubeHorizontal_fu_78_cubieColor_V_ce1 : STD_LOGIC;
    signal grp_rotateCubeHorizontal_fu_78_cubieColor_V_we1 : STD_LOGIC;
    signal grp_rotateCubeHorizontal_fu_78_cubieColor_V_d1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_findEdge_fu_88_ap_start : STD_LOGIC;
    signal grp_findEdge_fu_88_cubieColor_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_findEdge_fu_88_cubieColor_V_ce0 : STD_LOGIC;
    signal grp_findEdge_fu_88_cubieColor_V_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_findEdge_fu_88_cubieColor_V_ce1 : STD_LOGIC;
    signal grp_turnCube_fu_61_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal grp_rotateCubeHorizontal_fu_78_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal grp_findEdge_fu_88_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_state44_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (43 downto 0);
    signal ap_block_state20_on_subcall_done : BOOLEAN;
    signal ap_block_state22_on_subcall_done : BOOLEAN;
    signal ap_block_state24_on_subcall_done : BOOLEAN;
    signal ap_block_state26_on_subcall_done : BOOLEAN;
    signal ap_block_state28_on_subcall_done : BOOLEAN;
    signal ap_block_state30_on_subcall_done : BOOLEAN;
    signal ap_block_state32_on_subcall_done : BOOLEAN;
    signal ap_block_state34_on_subcall_done : BOOLEAN;
    signal ap_block_state36_on_subcall_done : BOOLEAN;
    signal ap_block_state38_on_subcall_done : BOOLEAN;
    signal ap_block_state40_on_subcall_done : BOOLEAN;
    signal ap_block_state42_on_subcall_done : BOOLEAN;

    component turnCube IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        turn_V : IN STD_LOGIC_VECTOR (3 downto 0);
        moveCounter_V_i : IN STD_LOGIC_VECTOR (7 downto 0);
        moveCounter_V_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        moveCounter_V_o_ap_vld : OUT STD_LOGIC;
        moves_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        moves_V_ce0 : OUT STD_LOGIC;
        moves_V_we0 : OUT STD_LOGIC;
        moves_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        cubieColor_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cubieColor_V_ce0 : OUT STD_LOGIC;
        cubieColor_V_we0 : OUT STD_LOGIC;
        cubieColor_V_d0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        cubieColor_V_q0 : IN STD_LOGIC_VECTOR (2 downto 0);
        cubieColor_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cubieColor_V_ce1 : OUT STD_LOGIC;
        cubieColor_V_we1 : OUT STD_LOGIC;
        cubieColor_V_d1 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component rotateCubeHorizontal IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        moveCounter_V_i : IN STD_LOGIC_VECTOR (7 downto 0);
        moveCounter_V_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        moveCounter_V_o_ap_vld : OUT STD_LOGIC;
        moves_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        moves_V_ce0 : OUT STD_LOGIC;
        moves_V_we0 : OUT STD_LOGIC;
        moves_V_d0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        cubieColor_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cubieColor_V_ce0 : OUT STD_LOGIC;
        cubieColor_V_we0 : OUT STD_LOGIC;
        cubieColor_V_d0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        cubieColor_V_q0 : IN STD_LOGIC_VECTOR (2 downto 0);
        cubieColor_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cubieColor_V_ce1 : OUT STD_LOGIC;
        cubieColor_V_we1 : OUT STD_LOGIC;
        cubieColor_V_d1 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component findEdge IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fEC_V : IN STD_LOGIC_VECTOR (2 downto 0);
        sEC_V : IN STD_LOGIC_VECTOR (2 downto 0);
        cubieColor_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cubieColor_V_ce0 : OUT STD_LOGIC;
        cubieColor_V_q0 : IN STD_LOGIC_VECTOR (2 downto 0);
        cubieColor_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cubieColor_V_ce1 : OUT STD_LOGIC;
        cubieColor_V_q1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;



begin
    grp_turnCube_fu_61 : component turnCube
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_turnCube_fu_61_ap_start,
        ap_done => grp_turnCube_fu_61_ap_done,
        ap_idle => grp_turnCube_fu_61_ap_idle,
        ap_ready => grp_turnCube_fu_61_ap_ready,
        turn_V => grp_turnCube_fu_61_turn_V,
        moveCounter_V_i => moveCounter_V_i,
        moveCounter_V_o => grp_turnCube_fu_61_moveCounter_V_o,
        moveCounter_V_o_ap_vld => grp_turnCube_fu_61_moveCounter_V_o_ap_vld,
        moves_V_address0 => grp_turnCube_fu_61_moves_V_address0,
        moves_V_ce0 => grp_turnCube_fu_61_moves_V_ce0,
        moves_V_we0 => grp_turnCube_fu_61_moves_V_we0,
        moves_V_d0 => grp_turnCube_fu_61_moves_V_d0,
        cubieColor_V_address0 => grp_turnCube_fu_61_cubieColor_V_address0,
        cubieColor_V_ce0 => grp_turnCube_fu_61_cubieColor_V_ce0,
        cubieColor_V_we0 => grp_turnCube_fu_61_cubieColor_V_we0,
        cubieColor_V_d0 => grp_turnCube_fu_61_cubieColor_V_d0,
        cubieColor_V_q0 => cubieColor_V_q0,
        cubieColor_V_address1 => grp_turnCube_fu_61_cubieColor_V_address1,
        cubieColor_V_ce1 => grp_turnCube_fu_61_cubieColor_V_ce1,
        cubieColor_V_we1 => grp_turnCube_fu_61_cubieColor_V_we1,
        cubieColor_V_d1 => grp_turnCube_fu_61_cubieColor_V_d1);

    grp_rotateCubeHorizontal_fu_78 : component rotateCubeHorizontal
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rotateCubeHorizontal_fu_78_ap_start,
        ap_done => grp_rotateCubeHorizontal_fu_78_ap_done,
        ap_idle => grp_rotateCubeHorizontal_fu_78_ap_idle,
        ap_ready => grp_rotateCubeHorizontal_fu_78_ap_ready,
        moveCounter_V_i => moveCounter_V_i,
        moveCounter_V_o => grp_rotateCubeHorizontal_fu_78_moveCounter_V_o,
        moveCounter_V_o_ap_vld => grp_rotateCubeHorizontal_fu_78_moveCounter_V_o_ap_vld,
        moves_V_address0 => grp_rotateCubeHorizontal_fu_78_moves_V_address0,
        moves_V_ce0 => grp_rotateCubeHorizontal_fu_78_moves_V_ce0,
        moves_V_we0 => grp_rotateCubeHorizontal_fu_78_moves_V_we0,
        moves_V_d0 => grp_rotateCubeHorizontal_fu_78_moves_V_d0,
        cubieColor_V_address0 => grp_rotateCubeHorizontal_fu_78_cubieColor_V_address0,
        cubieColor_V_ce0 => grp_rotateCubeHorizontal_fu_78_cubieColor_V_ce0,
        cubieColor_V_we0 => grp_rotateCubeHorizontal_fu_78_cubieColor_V_we0,
        cubieColor_V_d0 => grp_rotateCubeHorizontal_fu_78_cubieColor_V_d0,
        cubieColor_V_q0 => cubieColor_V_q0,
        cubieColor_V_address1 => grp_rotateCubeHorizontal_fu_78_cubieColor_V_address1,
        cubieColor_V_ce1 => grp_rotateCubeHorizontal_fu_78_cubieColor_V_ce1,
        cubieColor_V_we1 => grp_rotateCubeHorizontal_fu_78_cubieColor_V_we1,
        cubieColor_V_d1 => grp_rotateCubeHorizontal_fu_78_cubieColor_V_d1);

    grp_findEdge_fu_88 : component findEdge
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_findEdge_fu_88_ap_start,
        ap_done => grp_findEdge_fu_88_ap_done,
        ap_idle => grp_findEdge_fu_88_ap_idle,
        ap_ready => grp_findEdge_fu_88_ap_ready,
        fEC_V => fC_V,
        sEC_V => sC_V,
        cubieColor_V_address0 => grp_findEdge_fu_88_cubieColor_V_address0,
        cubieColor_V_ce0 => grp_findEdge_fu_88_cubieColor_V_ce0,
        cubieColor_V_q0 => cubieColor_V_q0,
        cubieColor_V_address1 => grp_findEdge_fu_88_cubieColor_V_address1,
        cubieColor_V_ce1 => grp_findEdge_fu_88_cubieColor_V_ce1,
        cubieColor_V_q1 => cubieColor_V_q1,
        ap_return => grp_findEdge_fu_88_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_findEdge_fu_88_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_findEdge_fu_88_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_findEdge_fu_88_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_findEdge_fu_88_ap_ready = ap_const_logic_1)) then 
                    grp_findEdge_fu_88_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_rotateCubeHorizontal_fu_78_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rotateCubeHorizontal_fu_78_ap_start_reg <= ap_const_logic_0;
            else
                if ((((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state41)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state43)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state41)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state39)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state23)))) then 
                    grp_rotateCubeHorizontal_fu_78_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rotateCubeHorizontal_fu_78_ap_ready = ap_const_logic_1)) then 
                    grp_rotateCubeHorizontal_fu_78_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_turnCube_fu_61_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_turnCube_fu_61_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state41)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state39)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state37)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state35)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state39)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state37)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state35)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state37)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state35)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state33)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state23)))) then 
                    grp_turnCube_fu_61_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_turnCube_fu_61_ap_ready = ap_const_logic_1)) then 
                    grp_turnCube_fu_61_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_findEdge_fu_88_ap_done = ap_const_logic_1))) then
                p_0_reg_114 <= grp_findEdge_fu_88_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                tmp_s_reg_118 <= tmp_s_fu_98_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_findEdge_fu_88_ap_return, p_0_reg_114, ap_CS_fsm_state2, grp_findEdge_fu_88_ap_done, tmp_s_fu_98_p2, ap_CS_fsm_state4, grp_turnCube_fu_61_ap_done, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state40, ap_CS_fsm_state42, ap_CS_fsm_state22, ap_CS_fsm_state44, ap_block_state44_on_subcall_done, ap_block_state20_on_subcall_done, ap_block_state22_on_subcall_done, ap_block_state24_on_subcall_done, ap_block_state26_on_subcall_done, ap_block_state28_on_subcall_done, ap_block_state30_on_subcall_done, ap_block_state32_on_subcall_done, ap_block_state34_on_subcall_done, ap_block_state36_on_subcall_done, ap_block_state38_on_subcall_done, ap_block_state40_on_subcall_done, ap_block_state42_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not((grp_findEdge_fu_88_ap_return = ap_const_lv4_7)) and not((grp_findEdge_fu_88_ap_return = ap_const_lv4_6)) and not((grp_findEdge_fu_88_ap_return = ap_const_lv4_5)) and not((grp_findEdge_fu_88_ap_return = ap_const_lv4_8)) and (ap_const_logic_1 = ap_CS_fsm_state2) and (grp_findEdge_fu_88_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_findEdge_fu_88_ap_done = ap_const_logic_1) and ((grp_findEdge_fu_88_ap_return = ap_const_lv4_5) or (grp_findEdge_fu_88_ap_return = ap_const_lv4_6) or (grp_findEdge_fu_88_ap_return = ap_const_lv4_7)))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                elsif (((grp_findEdge_fu_88_ap_return = ap_const_lv4_8) and (ap_const_logic_1 = ap_CS_fsm_state2) and (grp_findEdge_fu_88_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_s_fu_98_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_turnCube_fu_61_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_turnCube_fu_61_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_turnCube_fu_61_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_turnCube_fu_61_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (grp_turnCube_fu_61_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_turnCube_fu_61_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state18) and (grp_turnCube_fu_61_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if (((ap_const_boolean_0 = ap_block_state22_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state22) and ((p_0_reg_114 = ap_const_lv4_5) or (p_0_reg_114 = ap_const_lv4_6) or (p_0_reg_114 = ap_const_lv4_7)))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((ap_const_boolean_0 = ap_block_state24_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state24) and ((p_0_reg_114 = ap_const_lv4_5) or (p_0_reg_114 = ap_const_lv4_6) or (p_0_reg_114 = ap_const_lv4_7)))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                if (((ap_const_boolean_0 = ap_block_state26_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state26) and ((p_0_reg_114 = ap_const_lv4_5) or (p_0_reg_114 = ap_const_lv4_6) or (p_0_reg_114 = ap_const_lv4_7)))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                if (((ap_const_boolean_0 = ap_block_state28_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state28) and ((p_0_reg_114 = ap_const_lv4_5) or (p_0_reg_114 = ap_const_lv4_6) or (p_0_reg_114 = ap_const_lv4_7)))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                if (((ap_const_boolean_0 = ap_block_state30_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state30) and ((p_0_reg_114 = ap_const_lv4_5) or (p_0_reg_114 = ap_const_lv4_6) or (p_0_reg_114 = ap_const_lv4_7)))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                if (((ap_const_boolean_0 = ap_block_state32_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state32) and ((p_0_reg_114 = ap_const_lv4_5) or (p_0_reg_114 = ap_const_lv4_6) or (p_0_reg_114 = ap_const_lv4_7)))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                if (((ap_const_boolean_0 = ap_block_state34_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state34) and ((p_0_reg_114 = ap_const_lv4_5) or (p_0_reg_114 = ap_const_lv4_6) or (p_0_reg_114 = ap_const_lv4_7)))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                if (((ap_const_boolean_0 = ap_block_state36_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state36) and ((p_0_reg_114 = ap_const_lv4_5) or (p_0_reg_114 = ap_const_lv4_6) or (p_0_reg_114 = ap_const_lv4_7)))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                if (((ap_const_boolean_0 = ap_block_state38_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state38) and ((p_0_reg_114 = ap_const_lv4_5) or (p_0_reg_114 = ap_const_lv4_6) or (p_0_reg_114 = ap_const_lv4_7)))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                if (((ap_const_boolean_0 = ap_block_state40_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state40) and ((p_0_reg_114 = ap_const_lv4_5) or (p_0_reg_114 = ap_const_lv4_6) or (p_0_reg_114 = ap_const_lv4_7)))) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                if (((ap_const_boolean_0 = ap_block_state42_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state42) and ((p_0_reg_114 = ap_const_lv4_5) or (p_0_reg_114 = ap_const_lv4_6) or (p_0_reg_114 = ap_const_lv4_7)))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                if (((ap_const_boolean_0 = ap_block_state44_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state44))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state20_on_subcall_done_assign_proc : process(tmp_s_reg_118, grp_turnCube_fu_61_ap_done)
    begin
                ap_block_state20_on_subcall_done <= ((grp_turnCube_fu_61_ap_done = ap_const_logic_0) and (tmp_s_reg_118 = ap_const_lv1_0));
    end process;


    ap_block_state22_on_subcall_done_assign_proc : process(p_0_reg_114, grp_rotateCubeHorizontal_fu_78_ap_done)
    begin
                ap_block_state22_on_subcall_done <= (((p_0_reg_114 = ap_const_lv4_5) and (grp_rotateCubeHorizontal_fu_78_ap_done = ap_const_logic_0)) or ((p_0_reg_114 = ap_const_lv4_6) and (grp_rotateCubeHorizontal_fu_78_ap_done = ap_const_logic_0)) or ((p_0_reg_114 = ap_const_lv4_7) and (grp_rotateCubeHorizontal_fu_78_ap_done = ap_const_logic_0)));
    end process;


    ap_block_state24_on_subcall_done_assign_proc : process(p_0_reg_114, grp_turnCube_fu_61_ap_done, grp_rotateCubeHorizontal_fu_78_ap_done)
    begin
                ap_block_state24_on_subcall_done <= (((p_0_reg_114 = ap_const_lv4_5) and (grp_rotateCubeHorizontal_fu_78_ap_done = ap_const_logic_0)) or ((p_0_reg_114 = ap_const_lv4_6) and (grp_rotateCubeHorizontal_fu_78_ap_done = ap_const_logic_0)) or ((p_0_reg_114 = ap_const_lv4_7) and (grp_turnCube_fu_61_ap_done = ap_const_logic_0)));
    end process;


    ap_block_state26_on_subcall_done_assign_proc : process(p_0_reg_114, grp_turnCube_fu_61_ap_done, grp_rotateCubeHorizontal_fu_78_ap_done)
    begin
                ap_block_state26_on_subcall_done <= (((p_0_reg_114 = ap_const_lv4_5) and (grp_rotateCubeHorizontal_fu_78_ap_done = ap_const_logic_0)) or ((p_0_reg_114 = ap_const_lv4_6) and (grp_turnCube_fu_61_ap_done = ap_const_logic_0)) or ((p_0_reg_114 = ap_const_lv4_7) and (grp_turnCube_fu_61_ap_done = ap_const_logic_0)));
    end process;


    ap_block_state28_on_subcall_done_assign_proc : process(p_0_reg_114, grp_turnCube_fu_61_ap_done)
    begin
                ap_block_state28_on_subcall_done <= (((p_0_reg_114 = ap_const_lv4_5) and (grp_turnCube_fu_61_ap_done = ap_const_logic_0)) or ((p_0_reg_114 = ap_const_lv4_6) and (grp_turnCube_fu_61_ap_done = ap_const_logic_0)) or ((p_0_reg_114 = ap_const_lv4_7) and (grp_turnCube_fu_61_ap_done = ap_const_logic_0)));
    end process;


    ap_block_state30_on_subcall_done_assign_proc : process(p_0_reg_114, grp_turnCube_fu_61_ap_done)
    begin
                ap_block_state30_on_subcall_done <= (((p_0_reg_114 = ap_const_lv4_5) and (grp_turnCube_fu_61_ap_done = ap_const_logic_0)) or ((p_0_reg_114 = ap_const_lv4_6) and (grp_turnCube_fu_61_ap_done = ap_const_logic_0)) or ((p_0_reg_114 = ap_const_lv4_7) and (grp_turnCube_fu_61_ap_done = ap_const_logic_0)));
    end process;


    ap_block_state32_on_subcall_done_assign_proc : process(p_0_reg_114, grp_turnCube_fu_61_ap_done)
    begin
                ap_block_state32_on_subcall_done <= (((p_0_reg_114 = ap_const_lv4_5) and (grp_turnCube_fu_61_ap_done = ap_const_logic_0)) or ((p_0_reg_114 = ap_const_lv4_6) and (grp_turnCube_fu_61_ap_done = ap_const_logic_0)) or ((p_0_reg_114 = ap_const_lv4_7) and (grp_turnCube_fu_61_ap_done = ap_const_logic_0)));
    end process;


    ap_block_state34_on_subcall_done_assign_proc : process(p_0_reg_114, grp_turnCube_fu_61_ap_done)
    begin
                ap_block_state34_on_subcall_done <= (((p_0_reg_114 = ap_const_lv4_5) and (grp_turnCube_fu_61_ap_done = ap_const_logic_0)) or ((p_0_reg_114 = ap_const_lv4_6) and (grp_turnCube_fu_61_ap_done = ap_const_logic_0)) or ((p_0_reg_114 = ap_const_lv4_7) and (grp_turnCube_fu_61_ap_done = ap_const_logic_0)));
    end process;


    ap_block_state36_on_subcall_done_assign_proc : process(p_0_reg_114, grp_turnCube_fu_61_ap_done)
    begin
                ap_block_state36_on_subcall_done <= (((p_0_reg_114 = ap_const_lv4_5) and (grp_turnCube_fu_61_ap_done = ap_const_logic_0)) or ((p_0_reg_114 = ap_const_lv4_6) and (grp_turnCube_fu_61_ap_done = ap_const_logic_0)) or ((p_0_reg_114 = ap_const_lv4_7) and (grp_turnCube_fu_61_ap_done = ap_const_logic_0)));
    end process;


    ap_block_state38_on_subcall_done_assign_proc : process(p_0_reg_114, grp_turnCube_fu_61_ap_done)
    begin
                ap_block_state38_on_subcall_done <= (((p_0_reg_114 = ap_const_lv4_5) and (grp_turnCube_fu_61_ap_done = ap_const_logic_0)) or ((p_0_reg_114 = ap_const_lv4_6) and (grp_turnCube_fu_61_ap_done = ap_const_logic_0)) or ((p_0_reg_114 = ap_const_lv4_7) and (grp_turnCube_fu_61_ap_done = ap_const_logic_0)));
    end process;


    ap_block_state40_on_subcall_done_assign_proc : process(p_0_reg_114, grp_turnCube_fu_61_ap_done, grp_rotateCubeHorizontal_fu_78_ap_done)
    begin
                ap_block_state40_on_subcall_done <= (((p_0_reg_114 = ap_const_lv4_5) and (grp_turnCube_fu_61_ap_done = ap_const_logic_0)) or ((p_0_reg_114 = ap_const_lv4_6) and (grp_turnCube_fu_61_ap_done = ap_const_logic_0)) or ((p_0_reg_114 = ap_const_lv4_7) and (grp_rotateCubeHorizontal_fu_78_ap_done = ap_const_logic_0)));
    end process;


    ap_block_state42_on_subcall_done_assign_proc : process(p_0_reg_114, grp_turnCube_fu_61_ap_done, grp_rotateCubeHorizontal_fu_78_ap_done)
    begin
                ap_block_state42_on_subcall_done <= (((p_0_reg_114 = ap_const_lv4_5) and (grp_turnCube_fu_61_ap_done = ap_const_logic_0)) or ((p_0_reg_114 = ap_const_lv4_6) and (grp_rotateCubeHorizontal_fu_78_ap_done = ap_const_logic_0)) or ((p_0_reg_114 = ap_const_lv4_7) and (grp_rotateCubeHorizontal_fu_78_ap_done = ap_const_logic_0)));
    end process;


    ap_block_state44_on_subcall_done_assign_proc : process(p_0_reg_114, grp_rotateCubeHorizontal_fu_78_ap_done)
    begin
                ap_block_state44_on_subcall_done <= (((p_0_reg_114 = ap_const_lv4_5) and (grp_rotateCubeHorizontal_fu_78_ap_done = ap_const_logic_0)) or ((p_0_reg_114 = ap_const_lv4_6) and (grp_rotateCubeHorizontal_fu_78_ap_done = ap_const_logic_0)) or ((p_0_reg_114 = ap_const_lv4_7) and (grp_rotateCubeHorizontal_fu_78_ap_done = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state44, ap_block_state44_on_subcall_done)
    begin
        if ((((ap_const_boolean_0 = ap_block_state44_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state44, ap_block_state44_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state44_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    cubieColor_V_address0_assign_proc : process(p_0_reg_114, ap_CS_fsm_state2, tmp_s_reg_118, grp_turnCube_fu_61_cubieColor_V_address0, grp_rotateCubeHorizontal_fu_78_cubieColor_V_address0, grp_findEdge_fu_88_cubieColor_V_address0, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state40, ap_CS_fsm_state42, ap_CS_fsm_state22, ap_CS_fsm_state44, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            cubieColor_V_address0 <= ap_const_lv6_1F;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            cubieColor_V_address0 <= grp_findEdge_fu_88_cubieColor_V_address0;
        elsif ((((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state40)))) then 
            cubieColor_V_address0 <= grp_rotateCubeHorizontal_fu_78_cubieColor_V_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_s_reg_118 = ap_const_lv1_0)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
            cubieColor_V_address0 <= grp_turnCube_fu_61_cubieColor_V_address0;
        else 
            cubieColor_V_address0 <= "XXXXXX";
        end if; 
    end process;


    cubieColor_V_address1_assign_proc : process(p_0_reg_114, ap_CS_fsm_state2, tmp_s_reg_118, grp_turnCube_fu_61_cubieColor_V_address1, grp_rotateCubeHorizontal_fu_78_cubieColor_V_address1, grp_findEdge_fu_88_cubieColor_V_address1, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state40, ap_CS_fsm_state42, ap_CS_fsm_state22, ap_CS_fsm_state44, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            cubieColor_V_address1 <= ap_const_lv6_20;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            cubieColor_V_address1 <= grp_findEdge_fu_88_cubieColor_V_address1;
        elsif ((((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state40)))) then 
            cubieColor_V_address1 <= grp_rotateCubeHorizontal_fu_78_cubieColor_V_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_s_reg_118 = ap_const_lv1_0)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
            cubieColor_V_address1 <= grp_turnCube_fu_61_cubieColor_V_address1;
        else 
            cubieColor_V_address1 <= "XXXXXX";
        end if; 
    end process;


    cubieColor_V_ce0_assign_proc : process(p_0_reg_114, ap_CS_fsm_state2, tmp_s_reg_118, grp_turnCube_fu_61_cubieColor_V_ce0, grp_rotateCubeHorizontal_fu_78_cubieColor_V_ce0, grp_findEdge_fu_88_cubieColor_V_ce0, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state40, ap_CS_fsm_state42, ap_CS_fsm_state22, ap_CS_fsm_state44, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            cubieColor_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            cubieColor_V_ce0 <= grp_findEdge_fu_88_cubieColor_V_ce0;
        elsif ((((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state40)))) then 
            cubieColor_V_ce0 <= grp_rotateCubeHorizontal_fu_78_cubieColor_V_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_s_reg_118 = ap_const_lv1_0)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
            cubieColor_V_ce0 <= grp_turnCube_fu_61_cubieColor_V_ce0;
        else 
            cubieColor_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cubieColor_V_ce1_assign_proc : process(p_0_reg_114, ap_CS_fsm_state2, tmp_s_reg_118, grp_turnCube_fu_61_cubieColor_V_ce1, grp_rotateCubeHorizontal_fu_78_cubieColor_V_ce1, grp_findEdge_fu_88_cubieColor_V_ce1, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state40, ap_CS_fsm_state42, ap_CS_fsm_state22, ap_CS_fsm_state44, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            cubieColor_V_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            cubieColor_V_ce1 <= grp_findEdge_fu_88_cubieColor_V_ce1;
        elsif ((((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state40)))) then 
            cubieColor_V_ce1 <= grp_rotateCubeHorizontal_fu_78_cubieColor_V_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_s_reg_118 = ap_const_lv1_0)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
            cubieColor_V_ce1 <= grp_turnCube_fu_61_cubieColor_V_ce1;
        else 
            cubieColor_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    cubieColor_V_d0_assign_proc : process(p_0_reg_114, tmp_s_reg_118, grp_turnCube_fu_61_cubieColor_V_d0, grp_rotateCubeHorizontal_fu_78_cubieColor_V_d0, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state40, ap_CS_fsm_state42, ap_CS_fsm_state22, ap_CS_fsm_state44)
    begin
        if ((((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state40)))) then 
            cubieColor_V_d0 <= grp_rotateCubeHorizontal_fu_78_cubieColor_V_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_s_reg_118 = ap_const_lv1_0)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
            cubieColor_V_d0 <= grp_turnCube_fu_61_cubieColor_V_d0;
        else 
            cubieColor_V_d0 <= "XXX";
        end if; 
    end process;


    cubieColor_V_d1_assign_proc : process(p_0_reg_114, tmp_s_reg_118, grp_turnCube_fu_61_cubieColor_V_d1, grp_rotateCubeHorizontal_fu_78_cubieColor_V_d1, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state40, ap_CS_fsm_state42, ap_CS_fsm_state22, ap_CS_fsm_state44)
    begin
        if ((((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state40)))) then 
            cubieColor_V_d1 <= grp_rotateCubeHorizontal_fu_78_cubieColor_V_d1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_s_reg_118 = ap_const_lv1_0)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
            cubieColor_V_d1 <= grp_turnCube_fu_61_cubieColor_V_d1;
        else 
            cubieColor_V_d1 <= "XXX";
        end if; 
    end process;


    cubieColor_V_we0_assign_proc : process(p_0_reg_114, tmp_s_reg_118, grp_turnCube_fu_61_cubieColor_V_we0, grp_rotateCubeHorizontal_fu_78_cubieColor_V_we0, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state40, ap_CS_fsm_state42, ap_CS_fsm_state22, ap_CS_fsm_state44)
    begin
        if ((((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state40)))) then 
            cubieColor_V_we0 <= grp_rotateCubeHorizontal_fu_78_cubieColor_V_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_s_reg_118 = ap_const_lv1_0)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
            cubieColor_V_we0 <= grp_turnCube_fu_61_cubieColor_V_we0;
        else 
            cubieColor_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cubieColor_V_we1_assign_proc : process(p_0_reg_114, tmp_s_reg_118, grp_turnCube_fu_61_cubieColor_V_we1, grp_rotateCubeHorizontal_fu_78_cubieColor_V_we1, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state40, ap_CS_fsm_state42, ap_CS_fsm_state22, ap_CS_fsm_state44)
    begin
        if ((((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state40)))) then 
            cubieColor_V_we1 <= grp_rotateCubeHorizontal_fu_78_cubieColor_V_we1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_s_reg_118 = ap_const_lv1_0)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
            cubieColor_V_we1 <= grp_turnCube_fu_61_cubieColor_V_we1;
        else 
            cubieColor_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_findEdge_fu_88_ap_start <= grp_findEdge_fu_88_ap_start_reg;
    grp_rotateCubeHorizontal_fu_78_ap_start <= grp_rotateCubeHorizontal_fu_78_ap_start_reg;
    grp_turnCube_fu_61_ap_start <= grp_turnCube_fu_61_ap_start_reg;

    grp_turnCube_fu_61_turn_V_assign_proc : process(p_0_reg_114, tmp_s_reg_118, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state40, ap_CS_fsm_state42)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_s_reg_118 = ap_const_lv1_0)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state38)))) then 
            grp_turnCube_fu_61_turn_V <= ap_const_lv4_6;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state34)))) then 
            grp_turnCube_fu_61_turn_V <= ap_const_lv4_7;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state30)))) then 
            grp_turnCube_fu_61_turn_V <= ap_const_lv4_B;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state10) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state28)))) then 
            grp_turnCube_fu_61_turn_V <= ap_const_lv4_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state26)))) then 
            grp_turnCube_fu_61_turn_V <= ap_const_lv4_A;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
            grp_turnCube_fu_61_turn_V <= ap_const_lv4_0;
        else 
            grp_turnCube_fu_61_turn_V <= "XXXX";
        end if; 
    end process;


    moveCounter_V_o_assign_proc : process(moveCounter_V_i, p_0_reg_114, tmp_s_reg_118, grp_turnCube_fu_61_moveCounter_V_o, grp_turnCube_fu_61_moveCounter_V_o_ap_vld, grp_rotateCubeHorizontal_fu_78_moveCounter_V_o, grp_rotateCubeHorizontal_fu_78_moveCounter_V_o_ap_vld, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state40, ap_CS_fsm_state42, ap_CS_fsm_state22, ap_CS_fsm_state44)
    begin
        if ((((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state44) and (grp_rotateCubeHorizontal_fu_78_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state22) and (grp_rotateCubeHorizontal_fu_78_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state26) and (grp_rotateCubeHorizontal_fu_78_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state24) and (grp_rotateCubeHorizontal_fu_78_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state44) and (grp_rotateCubeHorizontal_fu_78_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state22) and (grp_rotateCubeHorizontal_fu_78_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state42) and (grp_rotateCubeHorizontal_fu_78_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state24) and (grp_rotateCubeHorizontal_fu_78_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state44) and (grp_rotateCubeHorizontal_fu_78_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state22) and (grp_rotateCubeHorizontal_fu_78_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state42) and (grp_rotateCubeHorizontal_fu_78_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state40) and (grp_rotateCubeHorizontal_fu_78_moveCounter_V_o_ap_vld = ap_const_logic_1)))) then 
            moveCounter_V_o <= grp_rotateCubeHorizontal_fu_78_moveCounter_V_o;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state20) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1) and (tmp_s_reg_118 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state18) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state42) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state40) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state38) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state36) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state34) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state32) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state30) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state28) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state40) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state38) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state36) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state34) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state32) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state30) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state28) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state26) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state38) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state36) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state34) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state32) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state30) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state28) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state26) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state24) and (grp_turnCube_fu_61_moveCounter_V_o_ap_vld = ap_const_logic_1)))) then 
            moveCounter_V_o <= grp_turnCube_fu_61_moveCounter_V_o;
        else 
            moveCounter_V_o <= moveCounter_V_i;
        end if; 
    end process;


    moveCounter_V_o_ap_vld_assign_proc : process(p_0_reg_114, tmp_s_reg_118, grp_turnCube_fu_61_moveCounter_V_o_ap_vld, grp_rotateCubeHorizontal_fu_78_moveCounter_V_o_ap_vld, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state40, ap_CS_fsm_state42, ap_CS_fsm_state22, ap_CS_fsm_state44)
    begin
        if ((((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state40)))) then 
            moveCounter_V_o_ap_vld <= grp_rotateCubeHorizontal_fu_78_moveCounter_V_o_ap_vld;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_s_reg_118 = ap_const_lv1_0)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
            moveCounter_V_o_ap_vld <= grp_turnCube_fu_61_moveCounter_V_o_ap_vld;
        else 
            moveCounter_V_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    moves_V_address0_assign_proc : process(p_0_reg_114, tmp_s_reg_118, grp_turnCube_fu_61_moves_V_address0, grp_rotateCubeHorizontal_fu_78_moves_V_address0, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state40, ap_CS_fsm_state42, ap_CS_fsm_state22, ap_CS_fsm_state44)
    begin
        if ((((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state40)))) then 
            moves_V_address0 <= grp_rotateCubeHorizontal_fu_78_moves_V_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_s_reg_118 = ap_const_lv1_0)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
            moves_V_address0 <= grp_turnCube_fu_61_moves_V_address0;
        else 
            moves_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    moves_V_ce0_assign_proc : process(p_0_reg_114, tmp_s_reg_118, grp_turnCube_fu_61_moves_V_ce0, grp_rotateCubeHorizontal_fu_78_moves_V_ce0, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state40, ap_CS_fsm_state42, ap_CS_fsm_state22, ap_CS_fsm_state44)
    begin
        if ((((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state40)))) then 
            moves_V_ce0 <= grp_rotateCubeHorizontal_fu_78_moves_V_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_s_reg_118 = ap_const_lv1_0)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
            moves_V_ce0 <= grp_turnCube_fu_61_moves_V_ce0;
        else 
            moves_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    moves_V_d0_assign_proc : process(p_0_reg_114, tmp_s_reg_118, grp_turnCube_fu_61_moves_V_d0, grp_rotateCubeHorizontal_fu_78_moves_V_d0, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state40, ap_CS_fsm_state42, ap_CS_fsm_state22, ap_CS_fsm_state44)
    begin
        if ((((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state40)))) then 
            moves_V_d0 <= grp_rotateCubeHorizontal_fu_78_moves_V_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_s_reg_118 = ap_const_lv1_0)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
            moves_V_d0 <= grp_turnCube_fu_61_moves_V_d0;
        else 
            moves_V_d0 <= "XXXX";
        end if; 
    end process;


    moves_V_we0_assign_proc : process(p_0_reg_114, tmp_s_reg_118, grp_turnCube_fu_61_moves_V_we0, grp_rotateCubeHorizontal_fu_78_moves_V_we0, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state30, ap_CS_fsm_state32, ap_CS_fsm_state34, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_CS_fsm_state40, ap_CS_fsm_state42, ap_CS_fsm_state22, ap_CS_fsm_state44)
    begin
        if ((((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state44)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state40)))) then 
            moves_V_we0 <= grp_rotateCubeHorizontal_fu_78_moves_V_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (tmp_s_reg_118 = ap_const_lv1_0)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_5) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state40)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_6) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state34)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state32)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state28)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((p_0_reg_114 = ap_const_lv4_7) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
            moves_V_we0 <= grp_turnCube_fu_61_moves_V_we0;
        else 
            moves_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_s_fu_98_p2 <= "1" when (cubieColor_V_q0 = cubieColor_V_q1) else "0";
end behav;
